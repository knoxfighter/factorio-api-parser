{
  "Prototype/PlayerPort": {
    "name": "Prototype/PlayerPort",
    "link": "/Prototype/PlayerPort",
    "id": "player-port",
    "parent": "Prototype/EntityWithHealth",
    "description": "When a character dies, this entity will immediately respawn the character at the entities location, so there is no respawn time. If there are multiple player ports in the world, the character will respawn at the nearest player port to their death location.",
    "properties": [
      {
        "name": "animation",
        "type": "Animation",
        "optional": false
      }
    ]
  },
  "Prototype/Fish": {
    "name": "Prototype/Fish",
    "link": "/Prototype/Fish",
    "id": "fish",
    "parent": "Prototype/EntityWithHealth",
    "description": "Entity that spawns in water tiles, which can be mined. Moves around unless deactived with entity.active \u003d false.",
    "properties": [
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "optional": false
      }
    ]
  },
  "Prototype/LegacyDecorative": {
    "name": "Prototype/LegacyDecorative",
    "link": "/Prototype/LegacyDecorative",
    "id": "decorative",
    "parent": "Prototype/Entity",
    "description": "\u003cb\u003eDeprecated in 0.15.\u003c/b\u003e Simple decorative purpose entities on the map, they have no health and some of them are removed when the player builds over. \u003cb\u003eThe type \"decorative\" has been obsoleted and cannot be created.\u003c/b\u003e",
    "properties": []
  },
  "Prototype/ItemWithTags": {
    "name": "Prototype/ItemWithTags",
    "link": "/Prototype/ItemWithTags",
    "id": "item-with-tags",
    "parent": "Prototype/ItemWithLabel",
    "description": "null",
    "properties": []
  },
  "Prototype/Pump": {
    "name": "Prototype/Pump",
    "link": "/Prototype/Pump",
    "id": "pump",
    "parent": "Prototype/EntityWithHealth",
    "description": "The Pump is used to transfer liquids or gas between tanks, and pipes.",
    "properties": [
      {
        "name": "animations",
        "type": "Animation4Way",
        "description": "The animation for the pump.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "The type of energy the pump uses.",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "description": "The amount of energy the pump uses.",
        "optional": false
      },
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "description": "The area of the entity where fluid inputs and outputs.",
        "optional": false
      },
      {
        "name": "pumping_speed",
        "type": "double",
        "description": "The amount of fluid this pump transfers per tick.",
        "optional": false
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "fluid_animation",
        "type": "Animation4Way",
        "optional": true
      },
      {
        "name": "fluid_wagon_connector_alignment_tolerance",
        "type": "double",
        "_default": "0.0625",
        "optional": true
      },
      {
        "name": "fluid_wagon_connector_frame_count",
        "type": "uint8",
        "_default": "1",
        "optional": true
      },
      {
        "name": "fluid_wagon_connector_graphics",
        "type": "PumpConnectorGraphics[]",
        "description": "Needs \u003ccode\u003eload_animations\u003c/code\u003e and \u003ccode\u003eunload_animations\u003c/code\u003e keys, both with a \u003ca href\u003d\"/Types/PumpConnectorGraphics\" title\u003d\"Types/PumpConnectorGraphics\"\u003ePumpConnectorGraphics\u003c/a\u003e as the value.",
        "optional": true
      },
      {
        "name": "fluid_wagon_connector_speed",
        "type": "double",
        "_default": "0.015625",
        "optional": true
      },
      {
        "name": "glass_pictures",
        "type": "Sprite4Way",
        "optional": true
      }
    ]
  },
  "Prototype/WindSound": {
    "name": "Prototype/WindSound",
    "link": "/Prototype/WindSound",
    "id": "wind-sound",
    "description": "A wind sound.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "Unique textual identification of the prototype.",
        "optional": false
      },
      {
        "name": "sound",
        "type": "Sound",
        "description": "The sound file and volume.",
        "optional": false
      }
    ]
  },
  "Prototype/FluidTurret": {
    "name": "Prototype/FluidTurret",
    "link": "/Prototype/FluidTurret",
    "id": "fluid-turret",
    "parent": "Prototype/Turret",
    "description": "A turret that consumes fluid as ammo.",
    "properties": [
      {
        "name": "activation_buffer_ratio",
        "type": "float",
        "optional": false
      },
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "fluid_buffer_input_flow",
        "type": "float",
        "optional": false
      },
      {
        "name": "fluid_buffer_size",
        "type": "float",
        "optional": false
      },
      {
        "name": "attacking_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      },
      {
        "name": "ending_attack_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      },
      {
        "name": "enough_fuel_indicator_picture",
        "type": "Sprite4Way",
        "optional": true
      },
      {
        "name": "folded_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      },
      {
        "name": "folding_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      },
      {
        "name": "indicator_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "muzzle_animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "muzzle_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "not_enough_fuel_indicator_picture",
        "type": "Sprite4Way",
        "optional": true
      },
      {
        "name": "out_of_ammo_alert_icon",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "prepared_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      },
      {
        "name": "preparing_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      },
      {
        "name": "starting_attack_muzzle_animation_shift",
        "type": "AnimatedVector",
        "optional": true
      }
    ]
  },
  "Prototype/ResourceCategory": {
    "name": "Prototype/ResourceCategory",
    "link": "/Prototype/ResourceCategory",
    "id": "resource-category",
    "parent": "PrototypeBase",
    "description": "A resource category. The built-in categories can be found \u003ca href\u003d\"/Data.raw#resource-category\" title\u003d\"Data.raw\"\u003ehere\u003c/a\u003e. See \u003ca href\u003d\"/Prototype/ResourceEntity#category\" title\u003d\"Prototype/ResourceEntity\"\u003ePrototype/ResourceEntity#category\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/LandMine": {
    "name": "Prototype/LandMine",
    "link": "/Prototype/LandMine",
    "id": "land-mine",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Land_mine\" title\u003d\"Land mine\"\u003eland mine\u003c/a\u003e.",
    "properties": [
      {
        "name": "picture_safe",
        "type": "Sprite",
        "description": "The sprite of the landmine before it is armed (just after placing).",
        "optional": false
      },
      {
        "name": "picture_set",
        "type": "Sprite",
        "description": "The sprite of the landmine of a friendly force when it is armed.",
        "optional": false
      },
      {
        "name": "trigger_radius",
        "type": "double",
        "optional": false
      },
      {
        "name": "action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "ammo_category",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/AmmoCategory\" title\u003d\"Prototype/AmmoCategory\"\u003ePrototype/AmmoCategory\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "force_die_on_attack",
        "type": "bool",
        "description": "Force the landmine to kill itself when exploding.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "picture_set_enemy",
        "type": "Sprite",
        "description": "The sprite of the landmine of an enemy force when it is armed.",
        "optional": true
      },
      {
        "name": "timeout",
        "type": "uint32",
        "description": "Time between placing and the landmine being armed, in ticks.",
        "_default": "120",
        "optional": true
      },
      {
        "name": "trigger_force",
        "type": "ForceCondition",
        "_default": "enemy",
        "optional": true
      }
    ]
  },
  "Prototype/Sound": {
    "name": "Prototype/Sound",
    "link": "/Prototype/Sound",
    "id": "sound",
    "description": "Specifies a sound that can be used with \u003ca rel\u003d\"nofollow\" class\u003d\"external free\" href\u003d\"https://lua-api.factorio.com/latest/Concepts.html#SoundPath\"\u003ehttps://lua-api.factorio.com/latest/Concepts.html#SoundPath\u003c/a\u003e during runtime.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "Name of the sound. Must be unique. Used as a \u003ca rel\u003d\"nofollow\" class\u003d\"external free\" href\u003d\"https://lua-api.factorio.com/latest/Concepts.html#SoundPath\"\u003ehttps://lua-api.factorio.com/latest/Concepts.html#SoundPath\u003c/a\u003e.",
        "optional": false
      },
      {
        "name": "aggregation",
        "type": "table",
        "optional": true
      },
      {
        "name": "allow_random_repeat",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "audible_distance_modifier",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "category",
        "type": "string",
        "description": "One of \"game-effect\", \"gui-effect\", \"ambient\", \"environment\", \"walking\", \"alert\" and \"wind\".",
        "_default": "game-effect",
        "optional": true
      },
      {
        "name": "filename",
        "type": "FileName",
        "description": "Mandatory if \u003ccode\u003evariations\u003c/code\u003e is not given.",
        "optional": true
      },
      {
        "name": "max_speed",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given. Mandatory if min_speed is present, otherwise not loaded. Must be \u003e\u003d min_speed.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "min_speed",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given. Not loaded if speed is present. Speed must be \u003e\u003d 1 / 64.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "preload",
        "type": "bool",
        "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given.",
        "optional": true
      },
      {
        "name": "speed",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given. Speed must be \u003e\u003d 1 / 64. This sets both min and max speed.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "variations",
        "type": "table[]",
        "optional": true
      },
      {
        "name": "volume",
        "type": "float",
        "description": "Mandatory if \u003ccode\u003evariations\u003c/code\u003e is not given.",
        "_default": "1.0",
        "optional": true
      }
    ]
  },
  "Prototype/DeliverByRobotsAchievement": {
    "name": "Prototype/DeliverByRobotsAchievement",
    "link": "/Prototype/DeliverByRobotsAchievement",
    "id": "deliver-by-robots-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement, when the player requests — and receives — enough items using logistic robots.",
    "properties": [
      {
        "name": "amount",
        "type": "MaterialAmountType",
        "description": "This will trigger the achievement, when the player receives enough items through logistic robots.",
        "optional": false
      }
    ]
  },
  "Prototype/DontUseEntityInEnergyProductionAchievement": {
    "name": "Prototype/DontUseEntityInEnergyProductionAchievement",
    "link": "/Prototype/DontUseEntityInEnergyProductionAchievement",
    "id": "dont-use-entity-in-energy-production-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player finishes the game without receiving energy from a specific energy source.",
    "properties": [
      {
        "name": "excluded",
        "type": "string|string[]",
        "description": "This will \u003cb\u003enot\u003c/b\u003e disable the achievement, if this entity is placed, and you have received any amount of power from it.",
        "optional": false
      },
      {
        "name": "included",
        "type": "string|string[]",
        "description": "This will disable the achievement, if this entity is placed, and you have received any amount of power from it. If you finish the game without receiving power from this entity, you receive the achievement.",
        "optional": false
      },
      {
        "name": "last_hour_only",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "minimum_energy_produced",
        "type": "Energy",
        "_default": "0W",
        "optional": true
      }
    ]
  },
  "Prototype/MiningTool": {
    "name": "Prototype/MiningTool",
    "link": "/Prototype/MiningTool",
    "id": "mining-tool",
    "parent": "Prototype/Tool",
    "description": "Exists only for migration, cannot be used by mods.",
    "properties": []
  },
  "Prototype/Roboport": {
    "name": "Prototype/Roboport",
    "link": "/Prototype/Roboport",
    "id": "roboport",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Roboport\" title\u003d\"Roboport\"\u003eroboport\u003c/a\u003e.",
    "properties": [
      {
        "name": "base",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "base_animation",
        "type": "Animation",
        "description": "The animation played when the roboport is idle.",
        "optional": false
      },
      {
        "name": "base_patch",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "charge_approach_distance",
        "type": "float",
        "description": "Presumably, the distance from the roboport at which robots will wait to charge.",
        "optional": false
      },
      {
        "name": "charging_energy",
        "type": "Energy",
        "description": "The amount of energy that is given to a robot per tick.",
        "optional": false
      },
      {
        "name": "construction_radius",
        "type": "float",
        "description": "Can\u0027t be negative.",
        "optional": false
      },
      {
        "name": "door_animation_down",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "door_animation_up",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "The roboport\u0027s energy source. Must be an electric or void energy source.",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "description": "The amount of energy the roboport uses when idle.",
        "optional": false
      },
      {
        "name": "logistics_radius",
        "type": "float",
        "description": "Can\u0027t be negative.",
        "optional": false
      },
      {
        "name": "material_slots_count",
        "type": "ItemStackIndex",
        "description": "The number of repair pack slots in the roboport.",
        "optional": false
      },
      {
        "name": "recharge_minimum",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "recharging_animation",
        "type": "Animation",
        "description": "The animation played at each charging point when a robot is charging there.",
        "optional": false
      },
      {
        "name": "request_to_open_door_timeout",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "robot_slots_count",
        "type": "ItemStackIndex",
        "description": "The number of robot slots in the roboport.",
        "optional": false
      },
      {
        "name": "spawn_and_station_height",
        "type": "float",
        "description": "Presumably states the height of the charging stations and thus an additive offset for the charging_offsets.",
        "optional": false
      },
      {
        "name": "charging_distance",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "charging_offsets",
        "type": "vector[]",
        "description": "The offsets from the centre of the roboport at which robots will charge.",
        "optional": true
      },
      {
        "name": "charging_station_count",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "charging_station_shift",
        "type": "vector",
        "optional": true
      },
      {
        "name": "charging_threshold_distance",
        "type": "float",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "close_door_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "default_available_construction_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "default_available_logistic_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "default_total_construction_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "default_total_logistic_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_construction_radius_visualization",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_logistic_radius_visualization",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "logistics_connection_distance",
        "type": "float",
        "description": "Must be \u003e\u003d \u003ccode\u003elogistics_radius\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "open_door_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "recharging_light",
        "type": "LightDefinition",
        "description": "The light emitted when charging a robot.",
        "optional": true
      },
      {
        "name": "robot_limit",
        "type": "ItemCountType",
        "description": "How many robots can exist in the network (cumulative).",
        "optional": true
      },
      {
        "name": "robot_vertical_acceleration",
        "type": "float",
        "_default": "0.01",
        "optional": true
      },
      {
        "name": "robots_shrink_when_entering_and_exiting",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "spawn_and_station_shadow_height_offset",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "stationing_offset",
        "type": "vector",
        "description": "The offset from the centre of the roboport at which robots will enter and exit.",
        "optional": true
      }
    ]
  },
  "Prototype/ElectricTurret": {
    "name": "Prototype/ElectricTurret",
    "link": "/Prototype/ElectricTurret",
    "id": "electric-turret",
    "parent": "Prototype/Turret",
    "description": "A turret that consumes electricity as ammo.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric or void energy source.",
        "optional": false
      }
    ]
  },
  "Prototype/FuelCategory": {
    "name": "Prototype/FuelCategory",
    "link": "/Prototype/FuelCategory",
    "id": "fuel-category",
    "parent": "PrototypeBase",
    "description": "Each item which has a fuel_value must have a fuel category. The fuel categories are used to allow only certain fuels to be used in \u003ca href\u003d\"/Types/EnergySource\" title\u003d\"Types/EnergySource\"\u003eTypes/EnergySource\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/ProducePerHourAchievement": {
    "name": "Prototype/ProducePerHourAchievement",
    "link": "/Prototype/ProducePerHourAchievement",
    "id": "produce-per-hour-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player crafts a specified item a certain amount, in an hour.",
    "properties": [
      {
        "name": "amount",
        "type": "MaterialAmountType",
        "description": "This is how much the player has to craft in an hour, to receive the achievement.",
        "optional": false
      },
      {
        "name": "fluid_product",
        "type": "string",
        "description": "This will tell the achievement what fluid the player needs to craft, to get the achievement.",
        "optional": true
      },
      {
        "name": "item_product",
        "type": "string",
        "description": "This will tell the achievement what item the player needs to craft, to get the achievement.",
        "optional": true
      }
    ]
  },
  "Prototype/InfinityPipe": {
    "name": "Prototype/InfinityPipe",
    "link": "/Prototype/InfinityPipe",
    "id": "infinity-pipe",
    "parent": "Prototype/Pipe",
    "description": "This entity produces or consumes fluids. Its fluid settings can be changed runtime.",
    "properties": [
      {
        "name": "gui_mode",
        "type": "string",
        "description": "\"none\", \"all\" or \"admins\"",
        "_default": "all",
        "optional": true
      }
    ]
  },
  "Prototype/SimpleEntity": {
    "name": "Prototype/SimpleEntity",
    "link": "/Prototype/SimpleEntity",
    "id": "simple-entity",
    "parent": "Prototype/EntityWithHealth",
    "description": "An extremely basic entity with no special functionality. Used for minable rocks.",
    "properties": [
      {
        "name": "animations",
        "type": "AnimationVariations",
        "description": "Simple entity must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "count_as_rock_for_filtered_deconstruction",
        "type": "bool",
        "description": "Whether this entity should be treated as a rock for the purpose of deconstruction and for \u003ca href\u003d\"/Prototype/Car#immune_to_rock_impacts\" title\u003d\"Prototype/Car\"\u003ePrototype/Car#immune_to_rock_impacts\u003c/a\u003e.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "description": "Simple entity must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "description": "Simple entity must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "random_animation_offset",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "random_variation_on_create",
        "type": "bool",
        "description": "Whether a random graphics variation is chosen when placing the entity/creating it via script/creating it via map generation. If this is false, the entity will use the first variation instead of a random one.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "secondary_draw_order",
        "type": "int8",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Radar": {
    "name": "Prototype/Radar",
    "link": "/Prototype/Radar",
    "id": "radar",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Radar\" title\u003d\"Radar\"\u003eradar\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_per_nearby_scan",
        "type": "Energy",
        "description": "The amount of energy the radar has to consume for nearby scan to be performed. Performance warning: nearby scan causes recharting of many chunks, which is expensive operation. If you want to make a radar that updates map more in real time, you should keep its range low. If you are making radar with high range, you should set this value such that nearby scan is performed once a second or so. For example if you set energy_usage to 100kW, setting energy_per_nearby_scan to 100kJ will cause nearby scan happen once per second. This value doesn\u0027t have any effect on sector scanning.",
        "optional": false
      },
      {
        "name": "energy_per_sector",
        "type": "Energy",
        "description": "The amount of energy it takes to scan a sector. This value doesn\u0027t have any effect on nearby scanning.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "The amount of energy this radar uses.",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "description": "The amount of energy this radar uses.",
        "optional": false
      },
      {
        "name": "max_distance_of_nearby_sector_revealed",
        "type": "uint32",
        "description": "The radius of the area constantly revealed by this radar, in chunks.",
        "optional": false
      },
      {
        "name": "max_distance_of_sector_revealed",
        "type": "uint32",
        "description": "The radius of the area this radar can chart, in chunks.",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "RotatedSprite",
        "optional": false
      },
      {
        "name": "radius_minimap_visualisation_color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "rotation_speed",
        "type": "double",
        "_default": "0.01",
        "optional": true
      }
    ]
  },
  "Prototype/RailSignal": {
    "name": "Prototype/RailSignal",
    "link": "/Prototype/RailSignal",
    "id": "rail-signal",
    "parent": "Prototype/RailSignalBase",
    "description": "A \u003ca href\u003d\"/Rail_signal\" title\u003d\"Rail signal\"\u003erail signal\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/Font": {
    "name": "Prototype/Font",
    "link": "/Prototype/Font",
    "id": "font",
    "description": "Fonts are used in all gui in the game.",
    "properties": [
      {
        "name": "from",
        "type": "string",
        "description": "The name of the fonts .ttf descriptor. This descriptor must be defined in the locale info.json. Refer to data/core/locale/_language_/info.json for examples.",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the font.",
        "optional": false
      },
      {
        "name": "size",
        "type": "int32",
        "description": "Size of the font.",
        "optional": false
      },
      {
        "name": "border",
        "type": "bool",
        "description": "Whether the font has a border.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "border_color",
        "type": "Color",
        "description": "The color of the border, if enabled.",
        "optional": true
      },
      {
        "name": "filtered",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "spacing",
        "type": "float",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/ResearchAchievement": {
    "name": "Prototype/ResearchAchievement",
    "link": "/Prototype/ResearchAchievement",
    "id": "research-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player completes a specific research.",
    "properties": [
      {
        "name": "research_all",
        "type": "bool",
        "description": "This will only trigger if the player has learned every research in the game.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "technology",
        "type": "string",
        "description": "Researching this technology will trigger the achievement.",
        "optional": true
      }
    ]
  },
  "Prototype/ItemEntity": {
    "name": "Prototype/ItemEntity",
    "link": "/Prototype/ItemEntity",
    "id": "item-entity",
    "parent": "Prototype/Entity",
    "description": "The entity used for items on the ground.",
    "properties": []
  },
  "Prototype/Loader1x1": {
    "name": "Prototype/Loader1x1",
    "link": "/Prototype/Loader1x1",
    "id": "loader-1x1",
    "parent": "Prototype/TransportBeltConnectable",
    "description": "\u003cp\u003eContinuously loads and unloads machines, as an alternative to inserters.\u003cbr\u003eThis loader type is identical to \u003ca href\u003d\"/Prototype/Loader1x2\" title\u003d\"Prototype/Loader1x2\"\u003ePrototype/Loader1x2\u003c/a\u003e with the exception of its hardcoded belt_distance:\u003c/p\u003e\u003cul\u003e\u003cli\u003eThe belt_distance of the loader determines the distance between the position of this loader and the tile of the loader\u0027s belt target.\u003c/li\u003e\u003cli\u003eThis loader type always has a belt_distance of 0, meaning by default it is 1 tile long in total.\u003c/li\u003e\u003cli\u003eFor a loader type with a belt_distance of 0.5, see \u003ca href\u003d\"/Prototype/Loader1x2\" title\u003d\"Prototype/Loader1x2\"\u003ePrototype/Loader1x2\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e",
    "properties": [
      {
        "name": "filter_count",
        "type": "uint8",
        "description": "How many item filters this loader has. Maximum count of filtered items in loader is 5.",
        "optional": false
      },
      {
        "name": "structure",
        "type": "table",
        "optional": false
      },
      {
        "name": "belt_length",
        "type": "double",
        "description": "How long this loader\u0027s belt is. Should be the same as belt_distance, which is hardcoded to 0 for this loader type. \u003ca href\u003d\"/Prototype/Loader1x2\" title\u003d\"Prototype/Loader1x2\"\u003ePrototype/Loader1x2\u003c/a\u003e can be used if a belt_distance of 0.5 is desired.",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "container_distance",
        "type": "double",
        "description": "The distance between the position of this loader and the tile of the loader\u0027s container target.",
        "_default": "1.5",
        "optional": true
      },
      {
        "name": "structure_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      }
    ]
  },
  "Prototype/Loader1x2": {
    "name": "Prototype/Loader1x2",
    "link": "/Prototype/Loader1x2",
    "id": "loader",
    "parent": "Prototype/TransportBeltConnectable",
    "description": "\u003cp\u003eContinuously loads and unloads machines, as an alternative to inserters.\u003cbr\u003eThis loader type is identical to \u003ca href\u003d\"/Prototype/Loader1x1\" title\u003d\"Prototype/Loader1x1\"\u003ePrototype/Loader1x1\u003c/a\u003e with the exception of its hardcoded belt_distance:\u003c/p\u003e\u003cul\u003e\u003cli\u003eThe belt_distance of the loader determines the distance between the position of this loader and the tile of the loader\u0027s belt target.\u003c/li\u003e\u003cli\u003eThis loader type always has a belt_distance of 0.5, meaning by default it is 2 tiles long in total.\u003c/li\u003e\u003cli\u003eFor a loader type with a belt_distance of 0, see \u003ca href\u003d\"/Prototype/Loader1x1\" title\u003d\"Prototype/Loader1x1\"\u003ePrototype/Loader1x1\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e",
    "properties": [
      {
        "name": "filter_count",
        "type": "uint8",
        "description": "How many item filters this loader has. Maximum count of filtered items in loader is 5.",
        "optional": false
      },
      {
        "name": "structure",
        "type": "table",
        "optional": false
      },
      {
        "name": "belt_length",
        "type": "double",
        "description": "How long this loader\u0027s belt is. Should be the same as belt_distance, which is hardcoded to 0.5 for this loader type. \u003ca href\u003d\"/Prototype/Loader1x1\" title\u003d\"Prototype/Loader1x1\"\u003ePrototype/Loader1x1\u003c/a\u003e can be used if a belt_distance of 0 is desired.",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "container_distance",
        "type": "double",
        "description": "The distance between the position of this loader and the tile of the loader\u0027s container target.",
        "_default": "1.5",
        "optional": true
      },
      {
        "name": "structure_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      }
    ]
  },
  "Prototype/ItemGroup": {
    "name": "Prototype/ItemGroup",
    "link": "/Prototype/ItemGroup",
    "id": "item-group",
    "parent": "PrototypeBase",
    "description": "An item group. Item groups are shown above the list of craftable items in the player\u0027s inventory. The built-in groups are \"logistics\", \"production\", \"intermediate-products\" and \"combat\" but mods can define their own. See also \u003ca href\u003d\"/Prototype/Item#group\" title\u003d\"Prototype/Item\"\u003ePrototype/Item#group\u003c/a\u003e.",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "description": "The icon that is shown to represent this item group.",
        "optional": false
      },
      {
        "name": "order_in_recipe",
        "type": "Order",
        "description": "Items in recipes are ordered by item group. The \u003ccode\u003eorder_in_recipe\u003c/code\u003e property can be used to specify the ordering in recipes without affecting the inventory order.",
        "optional": true
      }
    ]
  },
  "Prototype/Splitter": {
    "name": "Prototype/Splitter",
    "link": "/Prototype/Splitter",
    "id": "splitter",
    "parent": "Prototype/TransportBeltConnectable",
    "description": "A \u003ca href\u003d\"/Splitter\" title\u003d\"Splitter\"\u003esplitter\u003c/a\u003e.",
    "properties": [
      {
        "name": "structure",
        "type": "Animation4Way",
        "optional": false
      },
      {
        "name": "structure_animation_movement_cooldown",
        "type": "uint32",
        "_default": "10",
        "optional": true
      },
      {
        "name": "structure_animation_speed_coefficient",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "structure_patch",
        "type": "Animation4Way",
        "description": "Drawn 1 tile north of \u003ccode\u003estructure\u003c/code\u003e when the splitter is facing east or west.",
        "optional": true
      }
    ]
  },
  "Prototype/FinishTheGameAchievement": {
    "name": "Prototype/FinishTheGameAchievement",
    "link": "/Prototype/FinishTheGameAchievement",
    "id": "finish-the-game-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player finishes the game.",
    "properties": [
      {
        "name": "until_second",
        "type": "uint32",
        "description": "This lets the game know how long into a game, before you can no longer complete the achievement.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/ArtilleryWagon": {
    "name": "Prototype/ArtilleryWagon",
    "link": "/Prototype/ArtilleryWagon",
    "id": "artillery-wagon",
    "parent": "Prototype/RollingStock",
    "description": "An \u003ca href\u003d\"/Artillery_wagon\" title\u003d\"Artillery wagon\"\u003eartillery wagon\u003c/a\u003e.",
    "properties": [
      {
        "name": "ammo_stack_limit",
        "type": "ItemCountType",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "gun",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/Gun\" title\u003d\"Prototype/Gun\"\u003ePrototype/Gun\u003c/a\u003e.",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "manual_range_modifier",
        "type": "double",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "turret_rotation_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "cannon_barrel_light_direction",
        "type": "Vector3D",
        "description": "Only loaded if \u003ccode\u003ecannon_barrel_recoil_shiftings\u003c/code\u003e is loaded.",
        "optional": true
      },
      {
        "name": "cannon_barrel_pictures",
        "type": "RotatedSprite",
        "optional": true
      },
      {
        "name": "cannon_barrel_recoil_shiftings",
        "type": "Vector3D[]",
        "optional": true
      },
      {
        "name": "cannon_barrel_recoil_shiftings_load_correction_matrix",
        "type": "Vector3D[]",
        "description": "Only loaded if \u003ccode\u003ecannon_barrel_recoil_shiftings\u003c/code\u003e is loaded.",
        "optional": true
      },
      {
        "name": "cannon_base_pictures",
        "type": "RotatedSprite",
        "optional": true
      },
      {
        "name": "cannon_base_shiftings",
        "type": "vector[]",
        "description": "Must match \u003ccode\u003ecannon_base_pictures\u003c/code\u003e frame count.",
        "optional": true
      },
      {
        "name": "cannon_parking_frame_count",
        "type": "uint16",
        "_default": "0",
        "optional": true
      },
      {
        "name": "cannon_parking_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "disable_automatic_firing",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "rotating_sound",
        "type": "InterruptibleSound",
        "optional": true
      },
      {
        "name": "rotating_stopped_sound",
        "type": "Sound",
        "description": "l",
        "optional": true
      },
      {
        "name": "turn_after_shooting_cooldown",
        "type": "uint16",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/NightVisionEquipment": {
    "name": "Prototype/NightVisionEquipment",
    "link": "/Prototype/NightVisionEquipment",
    "id": "night-vision-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Nightvision\" title\u003d\"Nightvision\"\u003enightvision\u003c/a\u003e.",
    "properties": [
      {
        "name": "color_lookup",
        "type": "DaytimeColorLookupTable",
        "optional": false
      },
      {
        "name": "energy_input",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "activate_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "darkness_to_turn_on",
        "type": "float",
        "description": "Must be \u003e\u003d 0 and \u003c\u003d 1.",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "deactivate_sound",
        "type": "Sound",
        "optional": true
      }
    ]
  },
  "Prototype/Arrow": {
    "name": "Prototype/Arrow",
    "link": "/Prototype/Arrow",
    "id": "arrow",
    "parent": "Prototype/Entity",
    "description": "The arrows used for example in the campaign, they are literally just arrows.",
    "properties": [
      {
        "name": "arrow_picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "blinking",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "circle_picture",
        "type": "Sprite",
        "optional": true
      }
    ]
  },
  "Prototype/Reactor": {
    "name": "Prototype/Reactor",
    "link": "/Prototype/Reactor",
    "id": "reactor",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Nuclear_reactor\" title\u003d\"Nuclear reactor\"\u003ereactor\u003c/a\u003e.",
    "properties": [
      {
        "name": "consumption",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "May not be a heat energy source.",
        "optional": false
      },
      {
        "name": "heat_buffer",
        "type": "HeatBuffer",
        "optional": false
      },
      {
        "name": "working_light_picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "connection_patches_connected",
        "type": "SpriteVariations",
        "description": "If defined, number of variations must be at least equal to count of \u003ca href\u003d\"/Types/HeatBuffer#connections\" title\u003d\"Types/HeatBuffer\"\u003econnections\u003c/a\u003e defined in \u003ccode\u003eheat_buffer\u003c/code\u003e. Each variation represents connected heat buffer connection of corresponding index.",
        "optional": true
      },
      {
        "name": "connection_patches_disconnected",
        "type": "SpriteVariations",
        "description": "If defined, number of variations must be at least equal to count of \u003ca href\u003d\"/Types/HeatBuffer#connections\" title\u003d\"Types/HeatBuffer\"\u003econnections\u003c/a\u003e defined in \u003ccode\u003eheat_buffer\u003c/code\u003e. Each variation represents unconnected heat buffer connection of corresponding index.",
        "optional": true
      },
      {
        "name": "default_fuel_glow_color",
        "type": "Color",
        "description": "When \u003ccode\u003euse_fuel_glow_color\u003c/code\u003e is true, this is the color used as \u003ccode\u003eworking_light_picture\u003c/code\u003e tint for fuels that don\u0027t have glow color defined.",
        "_default": "{1,1,1,1}",
        "optional": true
      },
      {
        "name": "heat_connection_patches_connected",
        "type": "SpriteVariations",
        "description": "If defined, number of variations must be at least equal to count of \u003ca href\u003d\"/Types/HeatBuffer#connections\" title\u003d\"Types/HeatBuffer\"\u003econnections\u003c/a\u003e defined in \u003ccode\u003eheat_buffer\u003c/code\u003e. When reactor is heated, corresponding variations are drawn over \u003ccode\u003econnection_patches_connected\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "heat_connection_patches_disconnected",
        "type": "SpriteVariations",
        "description": "If defined, number of variations must be at least equal to count of \u003ca href\u003d\"/Types/HeatBuffer#connections\" title\u003d\"Types/HeatBuffer\"\u003econnections\u003c/a\u003e defined in \u003ccode\u003eheat_buffer\u003c/code\u003e. When reactor is heated, corresponding variations are drawn over \u003ccode\u003econnection_patches_disconnected\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "heat_lower_layer_picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "lower_layer_picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "meltdown_action",
        "type": "Trigger",
        "description": "The action is triggered when the reactor dies (is destroyed) at over 90% of max temperature.",
        "optional": true
      },
      {
        "name": "neighbour_bonus",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "neighbour_collision_increase",
        "type": "double",
        "description": "The collision box of a reactor is increased by this on the sides where it connects to another reactor. Cannot be negative.",
        "_default": "0.25",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "scale_energy_usage",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "use_fuel_glow_color",
        "type": "bool",
        "description": "Whether the reactor should use \u003ca href\u003d\"/Prototype/Item#fuel_glow_color\" title\u003d\"Prototype/Item\"\u003efuel_glow_color\u003c/a\u003e from the fuel item prototype as light color and tint for \u003ccode\u003eworking_light_picture\u003c/code\u003e.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/71121\"\u003e[1]\u003c/a\u003e",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/SpeechBubble": {
    "name": "Prototype/SpeechBubble",
    "link": "/Prototype/SpeechBubble",
    "id": "speech-bubble",
    "parent": "Prototype/Entity",
    "description": "A speech bubble. It floats in the world and can display text.",
    "properties": [
      {
        "name": "style",
        "type": "string",
        "description": "Needs a style of the type \"speech_bubble_style\", defined inside the gui styles.",
        "optional": false
      },
      {
        "name": "fade_in_out_ticks",
        "type": "uint32",
        "_default": "60",
        "optional": true
      },
      {
        "name": "wrapper_flow_style",
        "type": "string",
        "description": "Needs a style of the type \"flow_style\", defined inside the gui styles.",
        "_default": "flow_style",
        "optional": true
      },
      {
        "name": "y_offset",
        "type": "double",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/RepairTool": {
    "name": "Prototype/RepairTool",
    "link": "/Prototype/RepairTool",
    "id": "repair-tool",
    "parent": "Prototype/Tool",
    "description": "A \u003ca href\u003d\"/Repair_pack\" title\u003d\"Repair pack\"\u003erepair pack\u003c/a\u003e.",
    "properties": [
      {
        "name": "speed",
        "type": "float",
        "optional": false
      },
      {
        "name": "repair_result",
        "type": "Trigger",
        "optional": true
      }
    ]
  },
  "Prototype/RollingStock": {
    "name": "Prototype/RollingStock",
    "link": "/Prototype/RollingStock",
    "parent": "Prototype/Vehicle",
    "description": "The abstract base of all rolling stock.",
    "properties": [
      {
        "name": "air_resistance",
        "type": "double",
        "optional": false
      },
      {
        "name": "connection_distance",
        "type": "double",
        "description": "The distance between the joint of this rolling stock and its connected rolling stocks joint.",
        "optional": false
      },
      {
        "name": "joint_distance",
        "type": "double",
        "description": "\u003cp\u003eThe length between this rolling stocks front and rear joints. Joints are the point where connection_distance is measured from when rolling stock are connected to one another. Wheels sprite are placed based on the joint position.\u003c/p\u003e\u003cp\u003eMaximum joint distance is 15.\u003c/p\u003e\u003cp\u003eNote: There needs to be border at least 0.2 between the bounding box edge and joint.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "max_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "RotatedSprite",
        "optional": false
      },
      {
        "name": "vertical_selection_shift",
        "type": "double",
        "optional": false
      },
      {
        "name": "allow_manual_color",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "allow_robot_dispatch_in_automatic_mode",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "back_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "drive_over_tie_trigger",
        "type": "TriggerEffect",
        "description": "Usually a sound to play when the rolling stock drives over a tie.",
        "optional": true
      },
      {
        "name": "horizontal_doors",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "stand_by_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "tie_distance",
        "type": "double",
        "_default": "10.0",
        "optional": true
      },
      {
        "name": "vertical_doors",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "wheels",
        "type": "RotatedSprite",
        "optional": true
      }
    ]
  },
  "Prototype/MapSettings": {
    "name": "Prototype/MapSettings",
    "link": "/Prototype/MapSettings",
    "id": "map-settings",
    "description": "The default map settings. Only 1 instance of this prototype can exist.",
    "properties": [
      {
        "name": "difficulty_settings",
        "type": "table",
        "optional": false
      },
      {
        "name": "enemy_evolution",
        "type": "table",
        "optional": false
      },
      {
        "name": "enemy_expansion",
        "type": "table",
        "optional": false
      },
      {
        "name": "max_failed_behavior_count",
        "type": "uint32",
        "description": "If a behavior fails this many times, the enemy (or enemy group) is destroyed. This solves biters stuck within their own base.",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the map-settings. Must be \"map-settings\" since only one instances of this prototype can be defined.",
        "optional": false
      },
      {
        "name": "path_finder",
        "type": "table",
        "optional": false
      },
      {
        "name": "pollution",
        "type": "table",
        "description": "The pollution settings, the values are for 60 ticks (1 second).",
        "optional": false
      },
      {
        "name": "steering",
        "type": "table",
        "optional": false
      },
      {
        "name": "unit_group",
        "type": "table",
        "optional": false
      }
    ]
  },
  "Prototype/StraightRail": {
    "name": "Prototype/StraightRail",
    "link": "/Prototype/StraightRail",
    "id": "straight-rail",
    "parent": "Prototype/Rail",
    "description": "A straight rail.",
    "properties": [
      {
        "name": "bending_type",
        "type": "string",
        "description": "Must be \"straight\".",
        "_default": "straight",
        "optional": true
      }
    ]
  },
  "Prototype/FluidWagon": {
    "name": "Prototype/FluidWagon",
    "link": "/Prototype/FluidWagon",
    "id": "fluid-wagon",
    "parent": "Prototype/RollingStock",
    "description": "A \u003ca href\u003d\"/Fluid_wagon\" title\u003d\"Fluid wagon\"\u003efluid wagon\u003c/a\u003e.",
    "properties": [
      {
        "name": "capacity",
        "type": "double",
        "optional": false
      },
      {
        "name": "tank_count",
        "type": "uint8",
        "description": "Must be 1, 2 or 3.",
        "_default": "3",
        "optional": true
      }
    ]
  },
  "Prototype/ParticleSource": {
    "name": "Prototype/ParticleSource",
    "link": "/Prototype/ParticleSource",
    "id": "particle-source",
    "parent": "Prototype/Entity",
    "description": "Creates particles.",
    "properties": [
      {
        "name": "height",
        "type": "float",
        "optional": false
      },
      {
        "name": "horizontal_speed",
        "type": "float",
        "optional": false
      },
      {
        "name": "particle",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/Particle\" title\u003d\"Prototype/Particle\"\u003ePrototype/Particle\u003c/a\u003e. Either this or \u003ccode\u003esmoke\u003c/code\u003e must be defined.",
        "optional": false
      },
      {
        "name": "time_before_start",
        "type": "float",
        "optional": false
      },
      {
        "name": "time_to_live",
        "type": "float",
        "optional": false
      },
      {
        "name": "vertical_speed",
        "type": "float",
        "optional": false
      },
      {
        "name": "height_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "horizontal_speed_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "time_before_start_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "time_to_live_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "vertical_speed_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Combinator": {
    "name": "Prototype/Combinator",
    "link": "/Prototype/Combinator",
    "parent": "Prototype/EntityWithHealth",
    "description": "Abstract base type for decider and arithmetic combinators.",
    "properties": [
      {
        "name": "active_energy_usage",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "activity_led_light_offsets",
        "type": "vector[]",
        "description": "Array of 4 vectors.",
        "optional": false
      },
      {
        "name": "activity_led_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric or void energy source.",
        "optional": false
      },
      {
        "name": "input_connection_bounding_box",
        "type": "BoundingBox",
        "optional": false
      },
      {
        "name": "input_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Array of 4 WireConnectionPoints.",
        "optional": false
      },
      {
        "name": "output_connection_bounding_box",
        "type": "BoundingBox",
        "optional": false
      },
      {
        "name": "output_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Array of 4 WireConnectionPoints.",
        "optional": false
      },
      {
        "name": "screen_light_offsets",
        "type": "vector[]",
        "description": "Array of 4 vectors.",
        "optional": false
      },
      {
        "name": "sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "activity_led_hold_time",
        "type": "uint8",
        "_default": "5",
        "optional": true
      },
      {
        "name": "activity_led_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "screen_light",
        "type": "LightDefinition",
        "optional": true
      }
    ]
  },
  "Prototype/RocketSilo": {
    "name": "Prototype/RocketSilo",
    "link": "/Prototype/RocketSilo",
    "id": "rocket-silo",
    "parent": "Prototype/AssemblingMachine",
    "description": "A \u003ca href\u003d\"/Rocket_silo\" title\u003d\"Rocket silo\"\u003erocket silo\u003c/a\u003e.",
    "properties": [
      {
        "name": "active_energy_usage",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "arm_01_back_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "arm_02_right_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "arm_03_front_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "base_day_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "base_front_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "door_back_open_offset",
        "type": "vector",
        "optional": false
      },
      {
        "name": "door_back_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "door_front_open_offset",
        "type": "vector",
        "optional": false
      },
      {
        "name": "door_front_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "door_opening_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "hole_clipping_box",
        "type": "BoundingBox",
        "optional": false
      },
      {
        "name": "hole_light_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hole_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "idle_energy_usage",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "lamp_energy_usage",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "light_blinking_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "red_lights_back_sprites",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "red_lights_front_sprites",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rocket_entity",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/RocketSiloRocket\" title\u003d\"Prototype/RocketSiloRocket\"\u003ePrototype/RocketSiloRocket\u003c/a\u003e.",
        "optional": false
      },
      {
        "name": "rocket_glow_overlay_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rocket_parts_required",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "rocket_shadow_overlay_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "satellite_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "satellite_shadow_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "shadow_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "silo_fade_out_end_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "silo_fade_out_start_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "times_to_blink",
        "type": "uint8",
        "optional": false
      },
      {
        "name": "alarm_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "alarm_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "base_engine_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "base_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "base_night_sprite",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "clamps_off_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "clamps_off_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "clamps_on_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "clamps_on_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "doors_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "doors_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "flying_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "raise_rocket_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "raise_rocket_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "rocket_result_inventory_size",
        "type": "ItemStackIndex",
        "optional": true
      }
    ]
  },
  "Prototype/BuildEntityAchievement": {
    "name": "Prototype/BuildEntityAchievement",
    "link": "/Prototype/BuildEntityAchievement",
    "id": "build-entity-achievement",
    "parent": "Prototype/Achievement",
    "description": "This Prototype definition is used for receiving an achievement when you build an entity.",
    "properties": [
      {
        "name": "to_build",
        "type": "string",
        "description": "This will trigger the achievement, if this entity is placed.",
        "optional": false
      },
      {
        "name": "amount",
        "type": "uint32",
        "description": "How many entities need to be built.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "limited_to_one_game",
        "type": "bool",
        "description": "If this is false, the player carries over their statistics from this achievement through all their saves.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "until_second",
        "type": "uint32",
        "description": "This lets the game know how long into a game, before you can no longer complete the achievement.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/SelectionTool": {
    "name": "Prototype/SelectionTool",
    "link": "/Prototype/SelectionTool",
    "id": "selection-tool",
    "parent": "Prototype/ItemWithLabel",
    "description": "Used in the base game as a base for the blueprint item and the deconstruction item.",
    "properties": [
      {
        "name": "alt_selection_color",
        "type": "Color",
        "description": "The color of the rectangle used when alt-selection is done in-game.",
        "optional": false
      },
      {
        "name": "alt_selection_cursor_box_type",
        "type": "string",
        "description": "The type of cursor box used to render selection of entities/tiles when alt selecting. Possible values are identical to normal selection_cursor_box_type.",
        "optional": false
      },
      {
        "name": "alt_selection_mode",
        "type": "string[]",
        "description": "A list of selection mode flags that define how the selection tool alt-selects things in-game. Possible values are identical to normal selection_mode.",
        "optional": false
      },
      {
        "name": "selection_color",
        "type": "Color",
        "description": "The color of the rectangle used when standard selection is done in-game.",
        "optional": false
      },
      {
        "name": "selection_cursor_box_type",
        "type": "string",
        "description": "The type of cursor box used to render selection of entities/tiles when standard selecting.",
        "optional": false
      },
      {
        "name": "selection_mode",
        "type": "string[]",
        "description": "A list of selection mode flags that define how the selection tool selects things in-game.",
        "optional": false
      },
      {
        "name": "alt_entity_filter_mode",
        "type": "string",
        "description": "One of \"whitelist\" and \"blacklist\".",
        "_default": "whitelist",
        "optional": true
      },
      {
        "name": "alt_entity_filters",
        "type": "string[]",
        "description": "Array of \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003ePrototype/Entity\u003c/a\u003e names.",
        "optional": true
      },
      {
        "name": "alt_entity_type_filters",
        "type": "string[]",
        "optional": true
      },
      {
        "name": "alt_tile_filter_mode",
        "type": "string",
        "description": "One of \"whitelist\" and \"blacklist\".",
        "_default": "whitelist",
        "optional": true
      },
      {
        "name": "alt_tile_filters",
        "type": "string[]",
        "description": "Array of \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e names.",
        "optional": true
      },
      {
        "name": "always_include_tiles",
        "type": "bool",
        "description": "If tiles should be included in the selection regardless of entities also being in the selection. This is a visual only setting.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "entity_filter_mode",
        "type": "string",
        "description": "One of \"whitelist\" and \"blacklist\".",
        "_default": "whitelist",
        "optional": true
      },
      {
        "name": "entity_filters",
        "type": "string[]",
        "description": "Array of \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003ePrototype/Entity\u003c/a\u003e names.",
        "optional": true
      },
      {
        "name": "entity_type_filters",
        "type": "string[]",
        "optional": true
      },
      {
        "name": "mouse_cursor",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/MouseCursor\" title\u003d\"Prototype/MouseCursor\"\u003ePrototype/MouseCursor\u003c/a\u003e.",
        "_default": "selection-tool-cursor",
        "optional": true
      },
      {
        "name": "show_in_library",
        "type": "bool",
        "description": "Whether this is shown in the blueprint library. Unused as of 0.18.13 as the ability to show any selection tools in the blueprint library was removed.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "tile_filter_mode",
        "type": "string",
        "description": "One of \"whitelist\" and \"blacklist\".",
        "_default": "whitelist",
        "optional": true
      },
      {
        "name": "tile_filters",
        "type": "string[]",
        "description": "Array of \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e names.",
        "optional": true
      }
    ]
  },
  "Prototype/TrainStop": {
    "name": "Prototype/TrainStop",
    "link": "/Prototype/TrainStop",
    "id": "train-stop",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Train_stop\" title\u003d\"Train stop\"\u003etrain stop\u003c/a\u003e.",
    "properties": [
      {
        "name": "animation_ticks_per_frame",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "animations",
        "type": "Animation4Way",
        "optional": true
      },
      {
        "name": "chart_name",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "Array of 4 CircuitConnectorSpritess. Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Array of 4 WireConnectionPoints. Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "default_train_stopped_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "drawing_boxes",
        "type": "table",
        "optional": true
      },
      {
        "name": "light1",
        "type": "table",
        "optional": true
      },
      {
        "name": "light2",
        "type": "table",
        "optional": true
      },
      {
        "name": "rail_overlay_animations",
        "type": "Animation4Way",
        "optional": true
      },
      {
        "name": "top_animations",
        "type": "Animation4Way",
        "optional": true
      }
    ]
  },
  "Prototype/UtilitySprites": {
    "name": "Prototype/UtilitySprites",
    "link": "/Prototype/UtilitySprites",
    "id": "utility-sprites",
    "parent": "PrototypeBase",
    "description": "Sprites used by the game that are not specific to certain prototypes. Only one instance of UtilityConstants can be defined, the base uses \u003ccode\u003e\"default\"\u003c/code\u003e as the name, so unless the base game definition is completely removed, \u003ccode\u003ename\u003c/code\u003e will have to be \u003ccode\u003e\"default\"\u003c/code\u003e.",
    "properties": [
      {
        "name": "achievement_label_failed",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "achievement_label_locked",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "achievement_label_unlocked",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "achievement_label_unlocked_off",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "add",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "ammo_damage_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "ammo_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "and_or",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "area_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "arrow_button",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "artillery_range_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "auto_character_logistic_trash_slots_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "bar_gray_pip",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "battery",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "battery_indicator",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "battery_indicator_bar",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "brush_circle_shape",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "brush_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "brush_square_shape",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "cable_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "center",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "change_recipe",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_additional_mining_categories_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_build_distance_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_crafting_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_health_bonus_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_inventory_slots_bonus_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_item_drop_distance_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_item_pickup_distance_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_logistic_requests_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_logistic_slots_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_logistic_trash_slots_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_loot_pickup_distance_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_mining_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_reach_distance_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_resource_reach_distance_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "character_running_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "check_mark",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "check_mark_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "circuit_network_panel_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "circuit_network_panel_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "cliff_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "clock",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "clone",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "clone_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "close_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "close_fat",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "close_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "clouds",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "collapse",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "collapse_dark",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "color_effect",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "color_picker",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "confirm_slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "construction_radius_visualization",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "copper_wire",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "covered_chunk",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "crafting_machine_recipe_not_unlocked",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "cursor_box",
        "type": "table",
        "optional": false
      },
      {
        "name": "cursor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "custom_tag_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "danger_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "deconstruction_mark",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "deconstruction_time_to_live_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "decorative_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "default_ammo_damage_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "default_gun_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "default_turret_attack_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "destroyed_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "down_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "downloaded",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "downloaded_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "downloading",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "downloading_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "dropdown",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "editor_pause",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "editor_play",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "editor_selection",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "editor_speed_down",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "editor_speed_up",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "electricity_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "electricity_icon_unplugged",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "enemy_force_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "enter",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "entity_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "entity_info_dark_background",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "equipment_collision",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "equipment_grid",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "equipment_slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "expand",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "expand_dark",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "expand_dots",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "expand_dots_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "explosion_chart_visualization",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "export",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "export_slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "favourite_server_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "fluid_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "fluid_indication_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "fluid_indication_arrow_both_ways",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "follower_robot_lifetime_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "force_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "fuel_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "game_stopped_visualization",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "ghost_bar_pip",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "ghost_cursor",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "ghost_time_to_live_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "give_item_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "go_to_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "gps_map_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "green_circle",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "green_dot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "green_wire",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "green_wire_hightlight",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "grey_placement_indicator_leg",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "grey_rail_signal_placement_indicator",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "gun_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hand",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "health_bar_green_pip",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "health_bar_red_pip",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "health_bar_yellow_pip",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "heat_exchange_indication",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hint_arrow_down",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hint_arrow_left",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hint_arrow_right",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hint_arrow_up",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "import",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "import_slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "indication_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "indication_line",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "inserter_stack_size_bonus_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "item_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "laboratory_productivity_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "laboratory_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "left_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "light_cone",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "light_medium",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "light_small",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "line_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "logistic_network_panel_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "logistic_network_panel_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "logistic_radius_visualization",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "lua_snippet_tool_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "map",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "map_exchange_string",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "max_failed_attempts_per_tick_per_construction_queue_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "max_successful_attempts_per_tick_per_construction_queue_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "maximum_following_robots_count_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "medium_gui_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "mining_drill_productivity_bonus_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "missing_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "missing_mod_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "mod_dependency_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "multiplayer_waiting_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "nature_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "neutral_force_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "no_building_material_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "no_nature_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "no_storage_space_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "none_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "not_available",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "not_enough_construction_robots_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "not_enough_repair_packs_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "nothing_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "paint_bucket_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "pause",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "placement_indicator_leg",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "play",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "player_force_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "pollution_visualization",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "preset",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "pump_cannot_connect_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "questionmark",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "quick_bar_count_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rail_path_not_possible",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rail_planner_indication_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rail_planner_indication_arrow_too_far",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rail_signal_placement_indicator",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "recharge_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "red_wire",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "red_wire_hightlight",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "refresh",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "refresh_white",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rename_icon_normal",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rename_icon_small_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rename_icon_small_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "reset",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "reset_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "resource_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "right_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "robot_slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "scripting_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "search_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "search_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "search_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "set_bar_slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "shield_bar_pip",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "shoot_cursor_green",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "shoot_cursor_red",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "short_indication_line",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_electric_network_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_electric_network_in_map_view_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_logistics_network_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_logistics_network_in_map_view_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_player_names_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_player_names_in_map_view_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_pollution_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_pollution_in_map_view_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_train_station_names_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_train_station_names_in_map_view_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_turret_range_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "show_turret_range_in_map_view_black",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "shuffle",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_achievements_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_achievements_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_blueprint_library_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_blueprint_library_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_bonus_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_bonus_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_map_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_map_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_menu_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_menu_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_production_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_production_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_train_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_train_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_tutorials_hover_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "side_menu_tutorials_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_ammo",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_armor",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_fuel",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_gun",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_module",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_resource",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_result",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_robot",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "slot_icon_robot_material",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "small_gui_arrow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "spawn_flag",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "speed_down",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "speed_up",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "spray_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "stack_inserter_capacity_bonus_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "station_name",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "stop",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "surface_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "sync_mods",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "tick_custom",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "tick_once",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "tick_sixty",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "tile_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "tile_ghost_cursor",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "time_editor_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "too_far",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "too_far_from_roboport_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "track_button",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "train_braking_force_bonus_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "train_stop_disabled_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "train_stop_in_map_view",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "train_stop_placement_indicator",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "trash",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "trash_bin",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "trash_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "turret_attack_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "underground_pipe_connection",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "underground_remove_belts",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "underground_remove_pipes",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "unlock_recipe_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "upgrade_blueprint",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "upgrade_mark",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "variations_tool_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "warning",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "warning_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "warning_white",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "white_mask",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "white_square",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "wire_shadow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "worker_robot_battery_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "worker_robot_speed_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "worker_robot_storage_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "zoom_to_world_blueprint_enabled_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "zoom_to_world_deconstruction_planner_enabled_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "zoom_to_world_enabled_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "zoom_to_world_ghost_building_enabled_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "zoom_to_world_selection_tool_enabled_modifier_icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "zoom_to_world_upgrade_planner_enabled_modifier_icon",
        "type": "Sprite",
        "optional": false
      }
    ]
  },
  "Prototype/SmokeWithTrigger": {
    "name": "Prototype/SmokeWithTrigger",
    "link": "/Prototype/SmokeWithTrigger",
    "id": "smoke-with-trigger",
    "parent": "Prototype/Smoke",
    "description": "An entity with animation and a trigger.",
    "properties": [
      {
        "name": "action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "action_cooldown",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "particle_count",
        "type": "uint8",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_distance_scale_factor",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "particle_duration_variation",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "particle_scale_factor",
        "type": "vector",
        "optional": true
      },
      {
        "name": "particle_spread",
        "type": "vector",
        "optional": true
      },
      {
        "name": "spread_duration_variation",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "wave_distance",
        "type": "vector",
        "optional": true
      },
      {
        "name": "wave_speed",
        "type": "vector",
        "optional": true
      }
    ]
  },
  "Prototype/LogisticContainer": {
    "name": "Prototype/LogisticContainer",
    "link": "/Prototype/LogisticContainer",
    "id": "logistic-container",
    "parent": "Prototype/Container",
    "description": "A generic container, such as a chest, that interacts with the logistics network.",
    "properties": [
      {
        "name": "logistic_mode",
        "type": "string",
        "description": "The way this chest interacts with the logistic network. Valid values are \"passive-provider\", \"active-provider\", \"storage\", \"buffer\" and \"requester\".",
        "optional": false
      },
      {
        "name": "animation",
        "type": "Animation",
        "description": "Drawn when a robot brings/takes items from this container.",
        "optional": true
      },
      {
        "name": "animation_sound",
        "type": "Sound",
        "description": "Played when a robot brings/takes items from this container. Ignored if \u003ccode\u003eanimation\u003c/code\u003e is not defined.",
        "optional": true
      },
      {
        "name": "landing_location_offset",
        "type": "vector",
        "description": "The offset from the center of this container where a robot visually brings/takes items.",
        "optional": true
      },
      {
        "name": "logistic_slots_count",
        "type": "uint32",
        "description": "The number of request slots this logistics container has. Requester-type containers must have \u003e 0 slots. Storage-type containers must have \u003c\u003d 1 slot.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "opened_duration",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "render_not_in_network_icon",
        "type": "bool",
        "description": "Whether the Too-far-from-roboport-icon.png icon should be rendered on this entity if the entity is not within a logistics network.",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/HeatPipe": {
    "name": "Prototype/HeatPipe",
    "link": "/Prototype/HeatPipe",
    "id": "heat-pipe",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Heat_pipe\" title\u003d\"Heat pipe\"\u003eheat pipe\u003c/a\u003e.",
    "properties": [
      {
        "name": "connection_sprites",
        "type": "ConnectableEntityGraphics",
        "optional": false
      },
      {
        "name": "heat_buffer",
        "type": "HeatBuffer",
        "optional": false
      },
      {
        "name": "heat_glow_sprites",
        "type": "ConnectableEntityGraphics",
        "optional": false
      }
    ]
  },
  "Prototype/BurnerGenerator": {
    "name": "Prototype/BurnerGenerator",
    "link": "/Prototype/BurnerGenerator",
    "id": "burner-generator",
    "parent": "Prototype/EntityWithHealth",
    "description": "An entity that produces power from a burner energy source.",
    "properties": [
      {
        "name": "animation",
        "type": "Animation4Way",
        "description": "Plays when the generator is active. Idle animation must have the same frame count as animation.",
        "optional": false
      },
      {
        "name": "burner",
        "type": "EnergySource",
        "description": "The input energy source of the generator. Must be a burner energy source.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "The output energy source of the generator. Any emissions specified on this energy source are ignored, they must be specified on \u003ccode\u003eburner\u003c/code\u003e. Must be an electric energy source.",
        "optional": false
      },
      {
        "name": "max_power_output",
        "type": "Energy",
        "description": "How much energy this generator can produce.",
        "optional": false
      },
      {
        "name": "always_draw_idle_animation",
        "type": "bool",
        "description": "Whether the \u003ccode\u003eidle_animation\u003c/code\u003e should also play when the generator is active.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "idle_animation",
        "type": "Animation4Way",
        "description": "Plays when the generator is inactive. Idle animation must have the same frame count as animation.",
        "optional": true
      },
      {
        "name": "min_perceived_performance",
        "type": "double",
        "description": "Animation runs at least this fast.",
        "_default": "0.25",
        "optional": true
      },
      {
        "name": "performance_to_sound_speedup",
        "type": "double",
        "_default": "0.5",
        "optional": true
      }
    ]
  },
  "Prototype/RailRemnants": {
    "name": "Prototype/RailRemnants",
    "link": "/Prototype/RailRemnants",
    "id": "rail-remnants",
    "parent": "Prototype/Corpse",
    "description": "Used for rail corpses.",
    "properties": [
      {
        "name": "bending_type",
        "type": "string",
        "description": "Either \"straight\" or \"turn\".",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "table",
        "optional": false
      }
    ]
  },
  "Prototype/CraftingMachine": {
    "name": "Prototype/CraftingMachine",
    "link": "/Prototype/CraftingMachine",
    "parent": "Prototype/EntityWithHealth",
    "description": "\u003cp\u003eThe abstract basis of the assembling machines and furnaces. Contains the properties that both of them have.\u003c/p\u003e\u003cp\u003eNote that a crafting machine cannot be rotated unless it has at least one of the following: a fluid box, a heat energy source, a fluid energy source, or a non-square collision box. Crafting machines with non-square collision boxes can only be rotated before placement, not after.\u003c/p\u003e",
    "properties": [
      {
        "name": "crafting_categories",
        "type": "strings[]",
        "description": "A list of recipe categories this crafting machine can use.",
        "optional": false
      },
      {
        "name": "crafting_speed",
        "type": "double",
        "description": "\u003cp\u003eHow fast this crafting machine can craft. 1 means that for example a 1 second long recipe take 1 second to craft. 0.5 means it takes 2 seconds, and 2 means it takes 0.5 seconds.\u003c/p\u003e\u003cp\u003eCrafting speed has to be positive.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "\u003cp\u003eDefines how the crafting machine is powered.\u003c/p\u003e\u003cp\u003eWhen using an electric energy source and \u003ccode\u003edrain\u003c/code\u003e is not specified, it will be set to \u003ccode\u003eenergy_usage ÷ 30\u003c/code\u003e automatically.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "description": "Sets how much energy this machine uses while crafting. Energy usage has to be positive.",
        "optional": false
      },
      {
        "name": "allowed_effects",
        "type": "EffectTypeLimitation",
        "description": "Sets the module effects that are allowed to be used on this machine.",
        "optional": true
      },
      {
        "name": "always_draw_idle_animation",
        "type": "bool",
        "description": "Only loaded if \u003ccode\u003eidle_animation\u003c/code\u003e is present.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "animation",
        "type": "Animation4Way",
        "description": "\u003cp\u003eThe animation played when crafting. When the crafting machine is idle, the animation will be paused.\u003c/p\u003e\u003cp\u003eWhen a crafting machine cannot be rotated, only the north rotation of the animation will be used.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "base_productivity",
        "type": "float",
        "description": "Productivity bonus that this machine always has.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "default_recipe_tint",
        "type": "Color[]",
        "description": "Each key/value pair is optional and defaults to the above value.",
        "optional": true
      },
      {
        "name": "draw_entity_info_icon_background",
        "type": "bool",
        "description": "Whether the \"alt-mode icon\" should have a black background.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "entity_info_icon_shift",
        "type": "vector",
        "description": "Shift of the \"alt-mode icon\" relative to the machine\u0027s center.",
        "optional": true
      },
      {
        "name": "fluid_boxes",
        "type": "FluidBox[]",
        "description": "\u003cp\u003eCan have off_when_no_fluid_recipe key that has a \u003ca href\u003d\"/Types/bool\" title\u003d\"Types/bool\"\u003ebool\u003c/a\u003e value. off_when_no_fluid_recipe defaults to false. off_when_no_fluid_recipe is ignored by \u003ca href\u003d\"/Prototype/Furnace\" title\u003d\"Prototype/Furnace\"\u003ePrototype/Furnaces\u003c/a\u003e and considered to always be false.\u003c/p\u003e\u003cp\u003eIf a crafting machine has fluid boxes and off_when_no_fluid_recipe is true, the crafting machine can only be rotated when a recipe consuming or producing fluid is set, or it has one of the other properties listed at the top of the page.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "idle_animation",
        "type": "Animation4Way",
        "description": "\u003cp\u003eIdle animation must have the same frame count as animation. It is used for drawing the machine in idle state, but the is animation frozen on a single frame when the machine is idle.\u003c/p\u003e\u003cp\u003eThis is an animation and not just sprite to make it possible for idle state and working state to match their visuals when the machine switches from one state to another.\u003c/p\u003e\u003cp\u003eWhen a crafting machine cannot be rotated, only the north rotation of the idle animation will be used.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "match_animation_speed_to_activity",
        "type": "bool",
        "description": "Whether the speed of the animation and working visualization should be based on the machine\u0027s speed (boosted or slowed by modules).",
        "_default": "false",
        "optional": true
      },
      {
        "name": "module_specification",
        "type": "ModuleSpecification",
        "description": "The number of module slots in this machine, and their icon positions.",
        "optional": true
      },
      {
        "name": "return_ingredients_on_change",
        "type": "bool",
        "description": "Controls whether the ingredients of an in-progress recipe are destroyed when mining the machine/changing the recipe. If set to true, the ingredients do not get destroyed. This affects only the ingredients of the recipe that is currently in progress, so those that visually have already been consumed while their resulting product has not yet been produced.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "scale_entity_info_icon",
        "type": "bool",
        "description": "Whether the \"alt-mode icon\" should be scaled to the size of the machine.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "shift_animation_transition_duration",
        "type": "uint16",
        "description": "Only loaded if \u003ccode\u003eshift_animation_waypoints\u003c/code\u003e is present.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "shift_animation_waypoint_stop_duration",
        "type": "uint16",
        "description": "Only loaded if \u003ccode\u003eshift_animation_waypoints\u003c/code\u003e is present.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "shift_animation_waypoints",
        "type": "table[] (array) of vector",
        "description": "Only loaded if one of \u003ccode\u003eshift_animation_waypoint_stop_duration\u003c/code\u003e or \u003ccode\u003eshift_animation_transition_duration\u003c/code\u003e is not 0.",
        "optional": true
      },
      {
        "name": "show_recipe_icon",
        "type": "bool",
        "description": "Whether the \"alt-mode icon\" should be drawn at all.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "status_colors",
        "type": "Color[]",
        "optional": true
      },
      {
        "name": "working_visualisations",
        "type": "WorkingVisualisation[]",
        "optional": true
      }
    ]
  },
  "Prototype/Animation": {
    "name": "Prototype/Animation",
    "link": "/Prototype/Animation",
    "id": "animation",
    "description": "Specifies a animation that can be used by \u003ca rel\u003d\"nofollow\" class\u003d\"external free\" href\u003d\"https://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation\"\u003ehttps://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation\u003c/a\u003e during runtime.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "Name of the animation. Must be unique. Used in \u003ca rel\u003d\"nofollow\" class\u003d\"external free\" href\u003d\"https://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation\"\u003ehttps://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation\u003c/a\u003e.",
        "optional": false
      },
      {
        "name": "animation_speed",
        "type": "float",
        "description": "Modifier of the animation playing speed, the default is 1, which means one animation frame per tick (60 fps). The speed of playing can often vary depending on the usage (output of steam engine for example). Has to be greater than 0.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "apply_runtime_tint",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "blend_mode",
        "type": "BlendMode",
        "_default": "normal",
        "optional": true
      },
      {
        "name": "draw_as_shadow",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "filename",
        "type": "FileName",
        "description": "Mandatory if \u003ccode\u003estripes\u003c/code\u003e is not specified.",
        "optional": true
      },
      {
        "name": "flags",
        "type": "SpriteFlags",
        "optional": true
      },
      {
        "name": "frame_count",
        "type": "uint32",
        "description": "Can\u0027t be 0.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "frame_sequence",
        "type": "AnimationFrameSequence",
        "optional": true
      },
      {
        "name": "generate_sdf",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "height",
        "type": "SpriteSizeType",
        "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Height of one frame in pixels, from 0-8192.",
        "optional": true
      },
      {
        "name": "hr_version",
        "type": "Animation",
        "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the Animation.",
        "optional": true
      },
      {
        "name": "layers",
        "type": "Animation[]",
        "description": "\u003cp\u003eIf this property is present, all Animation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Animation definition) in the array may also have the layers property.\u003c/p\u003e\u003cp\u003eIf this property is present, all other properties are ignored and the mandatory properties do not have to be defined.\u003c/p\u003e\u003cp\u003eLayers may not be an empty table.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "line_length",
        "type": "uint32",
        "description": "Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "load_in_minimal_mode",
        "type": "bool",
        "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "max_advance",
        "type": "float",
        "optional": true
      },
      {
        "name": "mipmap_count",
        "type": "uint8",
        "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
        "_default": "0",
        "optional": true
      },
      {
        "name": "position",
        "type": "SpriteSizeType[]",
        "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
        "optional": true
      },
      {
        "name": "premul_alpha",
        "type": "bool",
        "description": "Whether alpha should be premultiplied.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "priority",
        "type": "SpritePriority",
        "_default": "medium",
        "optional": true
      },
      {
        "name": "repeat_count",
        "type": "uint8",
        "description": "Can\u0027t be 0.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "run_mode",
        "type": "string",
        "_default": "forward",
        "optional": true
      },
      {
        "name": "scale",
        "type": "double",
        "description": "Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
        "_default": "1",
        "optional": true
      },
      {
        "name": "shift",
        "type": "vector",
        "_default": "{0, 0}",
        "optional": true
      },
      {
        "name": "size",
        "type": "SpriteSizeType|SpriteSizeType[]",
        "description": "\u003cp\u003eThe width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "stripes",
        "type": "Stripe[]",
        "optional": true
      },
      {
        "name": "tint",
        "type": "Color",
        "optional": true
      },
      {
        "name": "width",
        "type": "SpriteSizeType",
        "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Width of one frame in pixels, from 0-8192.",
        "optional": true
      },
      {
        "name": "x",
        "type": "SpriteSizeType",
        "description": "Horizontal position of the animation in the source file in pixels.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "y",
        "type": "SpriteSizeType",
        "description": "Vertical position of the animation in the source file in pixels.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Turret": {
    "name": "Prototype/Turret",
    "link": "/Prototype/Turret",
    "id": "turret",
    "parent": "Prototype/EntityWithHealth",
    "description": "A turret that needs no extra ammunition. See the extensions for turrets that need some kind of ammunition.",
    "properties": [
      {
        "name": "attack_parameters",
        "type": "AttackParameters",
        "description": "Requires ammo_type in attack_parameters.",
        "optional": false
      },
      {
        "name": "call_for_help_radius",
        "type": "double",
        "optional": false
      },
      {
        "name": "folded_animation",
        "type": "RotatedAnimation4Way",
        "optional": false
      },
      {
        "name": "alert_when_attacking",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "allow_turning_when_starting_attack",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "attack_from_start_frame",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "attack_target_mask",
        "type": "TriggerTargetMask",
        "optional": true
      },
      {
        "name": "attacking_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "attacking_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "base_picture",
        "type": "Animation4Way",
        "optional": true
      },
      {
        "name": "base_picture_render_layer",
        "type": "RenderLayer",
        "_default": "lower-object",
        "optional": true
      },
      {
        "name": "base_picture_secondary_draw_order",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "corpse",
        "type": "string",
        "description": "The name of an entity. Note that this overrides how EntityWithHealth loads the corpse, forcing it to be a string instead of an array of strings.",
        "optional": true
      },
      {
        "name": "dying_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "ending_attack_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "ending_attack_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "energy_glow_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "folded_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "folded_speed_secondary",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "folding_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "folding_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "folding_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "glow_light_intensity",
        "type": "float",
        "description": "The intensity of light in the form of \u003ccode\u003eenergy_glow_animation\u003c/code\u003e drawn on top of \u003ccode\u003eenergy_glow_animation\u003c/code\u003e.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "gun_animation_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "gun_animation_secondary_draw_order",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "ignore_target_mask",
        "type": "TriggerTargetMask",
        "optional": true
      },
      {
        "name": "integration",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "prepare_range",
        "type": "double",
        "description": "Default: The range defined in the \u003ccode\u003eattack_parameters\u003c/code\u003e",
        "optional": true
      },
      {
        "name": "prepared_alternative_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "prepared_alternative_chance",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "prepared_alternative_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "prepared_alternative_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "prepared_alternative_speed_secondary",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "prepared_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "prepared_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "prepared_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "prepared_speed_secondary",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "preparing_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "preparing_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "preparing_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "random_animation_offset",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "rotation_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "secondary_animation",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "shoot_in_prepare_state",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "starting_attack_animation",
        "type": "RotatedAnimation4Way",
        "optional": true
      },
      {
        "name": "starting_attack_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "starting_attack_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "turret_base_has_direction",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/DeconstructionItem": {
    "name": "Prototype/DeconstructionItem",
    "link": "/Prototype/DeconstructionItem",
    "id": "deconstruction-item",
    "parent": "Prototype/SelectionTool",
    "description": "A \u003ca href\u003d\"/Deconstruction_planner\" title\u003d\"Deconstruction planner\"\u003edeconstruction planner\u003c/a\u003e.",
    "properties": [
      {
        "name": "entity_filter_count",
        "type": "Types/ItemStackIndex",
        "_default": "0",
        "optional": true
      },
      {
        "name": "tile_filter_count",
        "type": "Types/ItemStackIndex",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Beacon": {
    "name": "Prototype/Beacon",
    "link": "/Prototype/Beacon",
    "id": "beacon",
    "parent": "Prototype/EntityWithHealth",
    "description": "Entity with the ability to transfer module\u0027s effects to its neighboring entities.",
    "properties": [
      {
        "name": "distribution_effectivity",
        "type": "double",
        "description": "The multiplier of the module\u0027s effects, when shared between neighbors.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric or void energy source.",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "module_specification",
        "type": "ModuleSpecification",
        "description": "The number of module slots in this beacon, and their icon positions.",
        "optional": false
      },
      {
        "name": "supply_area_distance",
        "type": "double",
        "description": "The maximum distance that this Beacon can supply it\u0027s neighbors with it\u0027s module\u0027s effects. Max distance is 64.",
        "optional": false
      },
      {
        "name": "allowed_effects",
        "type": "EffectTypeLimitation",
        "description": "The types of modules that a player can place inside of the Beacon.",
        "optional": true
      },
      {
        "name": "animation",
        "type": "Animation",
        "description": "The animation for the beacon, when in use. Loaded only if \u003ccode\u003egraphics_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "base_picture",
        "type": "Sprite",
        "description": "The picture of the beacon when it is not on. Loaded only if \u003ccode\u003egraphics_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "graphics_set",
        "type": "BeaconGraphicsSet",
        "description": "The graphics for the beacon.",
        "optional": true
      },
      {
        "name": "radius_visualisation_picture",
        "type": "Sprite",
        "optional": true
      }
    ]
  },
  "Prototype/OffshorePump": {
    "name": "Prototype/OffshorePump",
    "link": "/Prototype/OffshorePump",
    "id": "offshore-pump",
    "parent": "Prototype/EntityWithHealth",
    "description": "An \u003ca href\u003d\"/Offshore_pump\" title\u003d\"Offshore pump\"\u003eoffshore pump\u003c/a\u003e.",
    "properties": [
      {
        "name": "fluid",
        "type": "string",
        "description": "The name of the fluid that is produced by the pump.",
        "optional": false
      },
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "pumping_speed",
        "type": "float",
        "description": "How many units of fluid are produced per tick. Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "adjacent_tile_collision_box",
        "type": "BoundingBox",
        "optional": true
      },
      {
        "name": "adjacent_tile_collision_mask",
        "type": "CollisionMask",
        "description": "Tiles colliding with adjacent_tile_collision_box must NOT collide with this collision mask.",
        "_default": "none",
        "optional": true
      },
      {
        "name": "adjacent_tile_collision_test",
        "type": "CollisionMask",
        "description": "Tiles colliding with adjacent_tile_collision_box must collide with this collision mask (unless it\u0027s empty).",
        "_default": "water-tile",
        "optional": true
      },
      {
        "name": "always_draw_fluid",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "center_collision_mask",
        "type": "CollisionMask",
        "description": "Tile at placement position must NOT collide with this collision mask.",
        "_default": "none",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "fluid_box_tile_collision_test",
        "type": "CollisionMask",
        "_default": "ground-tile",
        "optional": true
      },
      {
        "name": "graphics_set",
        "type": "table",
        "description": "Mandatory if \u003ccode\u003epicture\u003c/code\u003e is not defined.",
        "optional": true
      },
      {
        "name": "min_perceived_performance",
        "type": "float",
        "description": "Animation runs at least this fast.",
        "_default": "0.25",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite4Way",
        "description": "Deprecated, use \u003ccode\u003egraphics_set\u003c/code\u003e instead. Ignored if \u003ccode\u003egraphics_set\u003c/code\u003e is defined.",
        "optional": true
      },
      {
        "name": "placeable_position_visualization",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "remove_on_tile_collision",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/Accumulator": {
    "name": "Prototype/Accumulator",
    "link": "/Prototype/Accumulator",
    "id": "accumulator",
    "parent": "Prototype/EntityWithHealth",
    "description": "Entity with energy source with specialised animation for charging/decharging.",
    "properties": [
      {
        "name": "charge_cooldown",
        "type": "uint16",
        "description": "Count of ticks to preserve the animation even when the charging ends. Used to prevent rapid blinking of the accumulator with unstable need to use it.",
        "optional": false
      },
      {
        "name": "discharge_cooldown",
        "type": "uint16",
        "description": "How long (in ticks) the animation will last after discharge has been initialized.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "The capacity of the energy source buffer specifies the capacity of the accumulator. Must be an electric energy source.",
        "optional": false
      },
      {
        "name": "picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "charge_animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "charge_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites",
        "description": "The pictures displayed for circuit connections to this accumulator.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "description": "Defines how wires visually connect to this accumulator.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "default_output_signal",
        "type": "SignalIDConnector",
        "description": "The name of the signal that is the default for when an accumulator is connected to the circuit network.",
        "optional": true
      },
      {
        "name": "discharge_animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "discharge_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/AutoplaceControl": {
    "name": "Prototype/AutoplaceControl",
    "link": "/Prototype/AutoplaceControl",
    "id": "autoplace-control",
    "parent": "PrototypeBase",
    "description": "A setting in the map creation GUI. Used by the \u003ca href\u003d\"/Types/AutoplaceSpecification#control\" title\u003d\"Types/AutoplaceSpecification\"\u003eautoplace system\u003c/a\u003e.",
    "properties": [
      {
        "name": "category",
        "type": "string",
        "description": "Either \"resource\", \"terrain\" or \"enemy\". Controls in what tab the autoplace is shown in the map generator GUI.",
        "optional": false
      },
      {
        "name": "richness",
        "type": "bool",
        "description": "\u003cp\u003eSets whether this control\u0027s richness can be set by the player or not.\u003c/p\u003e\u003cp\u003eIf your autoplace control is used to generate ores, you probably want this to be true.\u003c/p\u003e",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/CopyPasteTool": {
    "name": "Prototype/CopyPasteTool",
    "link": "/Prototype/CopyPasteTool",
    "id": "copy-paste-tool",
    "parent": "Prototype/SelectionTool",
    "description": "A copy-paste or cut-paste tool.",
    "properties": [
      {
        "name": "cuts",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/BeltImmunityEquipment": {
    "name": "Prototype/BeltImmunityEquipment",
    "link": "/Prototype/BeltImmunityEquipment",
    "id": "belt-immunity-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Belt_immunity_equipment\" title\u003d\"Belt immunity equipment\"\u003ebelt immunity equipment\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_consumption",
        "type": "Energy",
        "description": "The continuous power consumption of the belt immunity equipment.",
        "optional": false
      }
    ]
  },
  "Prototype/Character": {
    "name": "Prototype/Character",
    "link": "/Prototype/Character",
    "id": "character",
    "parent": "Prototype/EntityWithHealth",
    "description": "Entity that you move around on the screen during the campaign and freeplay.",
    "properties": [
      {
        "name": "animations",
        "type": "CharacterArmorAnimation[]",
        "optional": false
      },
      {
        "name": "build_distance",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "damage_hit_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "distance_per_frame",
        "type": "double",
        "optional": false
      },
      {
        "name": "drop_item_distance",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "eat",
        "type": "Sound",
        "description": "The sound file played when the character eats (fish for example).",
        "optional": false
      },
      {
        "name": "heartbeat",
        "type": "Sound",
        "description": "The sound file played when the character\u0027s health is low.",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      },
      {
        "name": "item_pickup_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "loot_pickup_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "maximum_corner_sliding_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "mining_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "mining_with_tool_particles_animation_positions",
        "type": "float[]",
        "description": "List of positions in the mining with tool animation when the mining sound and mining particles are created.",
        "optional": false
      },
      {
        "name": "reach_distance",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "reach_resource_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "running_sound_animation_positions",
        "type": "float[]",
        "description": "List of positions in the running animation when the walking sound is played.",
        "optional": false
      },
      {
        "name": "running_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "ticks_to_keep_aiming_direction",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "ticks_to_keep_gun",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "ticks_to_stay_in_combat",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "character_corpse",
        "type": "string",
        "description": "Name of the character corpse that is spawned when this character dies.",
        "optional": true
      },
      {
        "name": "crafting_categories",
        "type": "string[]",
        "description": "Names of the crafting categories the character can craft recipes from. The built-in categories can be found \u003ca href\u003d\"/Data.raw#recipe-category\" title\u003d\"Data.raw\"\u003ehere\u003c/a\u003e. See also \u003ca href\u003d\"/Prototype/RecipeCategory\" title\u003d\"Prototype/RecipeCategory\"\u003ePrototype/RecipeCategory\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "enter_vehicle_distance",
        "type": "double",
        "description": "Must be \u003e\u003d 0.",
        "_default": "3.0",
        "optional": true
      },
      {
        "name": "footprint_particles",
        "type": "FootprintParticle[]",
        "description": "Array of footprint particles. Triggered when the running animation (#animations) rolls over the frames defined in \u003ccode\u003eright_footprint_frames\u003c/code\u003e and \u003ccode\u003eleft_footprint_frames\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "footstep_particle_triggers",
        "type": "FootstepTriggerEffectList",
        "description": "Triggered every tick of the running animation.",
        "optional": true
      },
      {
        "name": "has_belt_immunity",
        "type": "bool",
        "description": "Whether this character is moved by belts when standing on them.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "left_footprint_frames",
        "type": "float[]",
        "description": "An array of float. The frames in the running animation (#animations) where the left foot touches the ground.",
        "optional": true
      },
      {
        "name": "left_footprint_offset",
        "type": "vector",
        "description": "Offset from the center of the entity for the left footprint. Used by \u003ccode\u003efootprint_particles\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "mining_categories",
        "type": "string[]",
        "description": "Names of the resource categories the character can mine resources from.",
        "optional": true
      },
      {
        "name": "respawn_time",
        "type": "uint32",
        "description": "Time in seconds. Must be positive",
        "_default": "10",
        "optional": true
      },
      {
        "name": "right_footprint_frames",
        "type": "float[]",
        "description": "An array of float. The frames in the running animation (#animations) where the right foot touches the ground.",
        "optional": true
      },
      {
        "name": "right_footprint_offset",
        "type": "vector",
        "description": "Offset from the center of the entity for the right footprint. Used by \u003ccode\u003efootprint_particles\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "synced_footstep_particle_triggers",
        "type": "FootstepTriggerEffectList",
        "description": "Triggered when the running animation (#animations) rolls over the frames defined in \u003ccode\u003eright_footprint_frames\u003c/code\u003e and \u003ccode\u003eleft_footprint_frames\u003c/code\u003e.",
        "optional": true
      },
      {
        "name": "tool_attack_distance",
        "type": "double",
        "_default": "1.5",
        "optional": true
      },
      {
        "name": "tool_attack_result",
        "type": "Trigger",
        "optional": true
      }
    ]
  },
  "Prototype/InfinityContainer": {
    "name": "Prototype/InfinityContainer",
    "link": "/Prototype/InfinityContainer",
    "id": "infinity-container",
    "parent": "Prototype/LogisticContainer",
    "description": "A generic container, such as a chest, that can spawn or void items and interact with the logistics network.",
    "properties": [
      {
        "name": "erase_contents_when_mined",
        "type": "bool",
        "optional": false
      },
      {
        "name": "gui_mode",
        "type": "string",
        "description": "Controls which players can control what the chest spawns. Possible options: \"all\", \"none\", \"admins\".",
        "_default": "all",
        "optional": true
      }
    ]
  },
  "Prototype/RocketSiloRocket": {
    "name": "Prototype/RocketSiloRocket",
    "link": "/Prototype/RocketSiloRocket",
    "id": "rocket-silo-rocket",
    "parent": "Prototype/Entity",
    "description": "The rocket inside the rocket silo.",
    "properties": [
      {
        "name": "effects_fade_in_end_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "effects_fade_in_start_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "engine_starting_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "flying_acceleration",
        "type": "double",
        "optional": false
      },
      {
        "name": "flying_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "full_render_layer_switch_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      },
      {
        "name": "rising_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "rocket_flame_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_flame_left_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_flame_left_rotation",
        "type": "float",
        "optional": false
      },
      {
        "name": "rocket_flame_right_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_flame_right_rotation",
        "type": "float",
        "optional": false
      },
      {
        "name": "rocket_glare_overlay_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rocket_launch_offset",
        "type": "vector",
        "optional": false
      },
      {
        "name": "rocket_render_layer_switch_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "rocket_rise_offset",
        "type": "vector",
        "optional": false
      },
      {
        "name": "rocket_shadow_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rocket_smoke_bottom1_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_smoke_bottom2_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_smoke_top1_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_smoke_top2_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_smoke_top3_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "rocket_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "rocket_visible_distance_from_center",
        "type": "double",
        "optional": false
      },
      {
        "name": "shadow_fade_out_end_ratio",
        "type": "double",
        "optional": false
      },
      {
        "name": "shadow_fade_out_start_ratio",
        "type": "double",
        "optional": false
      },
      {
        "name": "shadow_slave_entity",
        "type": "string",
        "description": "Name of an entity.",
        "optional": false
      },
      {
        "name": "dying_explosion",
        "type": "string",
        "description": "Name of an entity.",
        "optional": true
      },
      {
        "name": "flying_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "glow_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "result_items",
        "type": "table[]",
        "description": "Unused in base game.",
        "optional": true
      },
      {
        "name": "rocket_initial_offset",
        "type": "vector",
        "optional": true
      }
    ]
  },
  "Prototype/CurvedRail": {
    "name": "Prototype/CurvedRail",
    "link": "/Prototype/CurvedRail",
    "id": "curved-rail",
    "parent": "Prototype/Rail",
    "description": "A curved rail.",
    "properties": [
      {
        "name": "bending_type",
        "type": "string",
        "description": "Must be \"turn\".",
        "_default": "turn",
        "optional": true
      }
    ]
  },
  "Prototype/EntityGhost": {
    "name": "Prototype/EntityGhost",
    "link": "/Prototype/EntityGhost",
    "id": "entity-ghost",
    "parent": "Prototype/Entity",
    "description": "The entity used for ghosts of entities.",
    "properties": [
      {
        "name": "large_build_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "medium_build_sound",
        "type": "Sound",
        "optional": true
      }
    ]
  },
  "Prototype/ItemSubGroup": {
    "name": "Prototype/ItemSubGroup",
    "link": "/Prototype/ItemSubGroup",
    "id": "item-subgroup",
    "parent": "PrototypeBase",
    "description": "An item subgroup. The built-in subgroups can be found \u003ca href\u003d\"/Data.raw#item-subgroup\" title\u003d\"Data.raw\"\u003ehere\u003c/a\u003e. See \u003ca href\u003d\"/Prototype/Item#subgroup\" title\u003d\"Prototype/Item\"\u003ePrototype/Item#subgroup\u003c/a\u003e.",
    "properties": [
      {
        "name": "group",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/ItemGroup\" title\u003d\"Prototype/ItemGroup\"\u003ePrototype/ItemGroup\u003c/a\u003e. The item group this subgroup is located in.",
        "optional": false
      }
    ]
  },
  "Prototype/ItemWithInventory": {
    "name": "Prototype/ItemWithInventory",
    "link": "/Prototype/ItemWithInventory",
    "id": "item-with-inventory",
    "parent": "Prototype/ItemWithLabel",
    "description": "The inventory allows setting player defined filters similar to the quickbar and cargo wagon inventories.",
    "properties": [
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "description": "The inventory size of the item.",
        "optional": false
      },
      {
        "name": "extends_inventory_by_default",
        "type": "bool",
        "description": "When true, this item-with-inventory will extend the inventory it sits in by default. This is a runtime property on the result item that can be changed through the Lua interface and only determines the initial value.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "filter_message_key",
        "type": "string",
        "description": "The locale key used when the player attempts to put an item that doesn\u0027t match the filter rules into the item-with-inventory.",
        "_default": "item-limitation.item-not-allowed-in-this-container-item",
        "optional": true
      },
      {
        "name": "filter_mode",
        "type": "string",
        "description": "This determines how filters are applied. If no filters are defined this is automatically set to \"none\".",
        "_default": "whitelist",
        "optional": true
      },
      {
        "name": "insertion_priority_mode",
        "type": "string",
        "description": "The insertion priority mode for this item. This determines if items are first attempted to be put into this items inventory if the item extends the inventory it sits in when items are put into the parent inventory.",
        "_default": "default",
        "optional": true
      },
      {
        "name": "item_filters",
        "type": "string[]",
        "description": "A list of explicit item names to be used as filters.",
        "optional": true
      },
      {
        "name": "item_group_filters",
        "type": "string[]",
        "description": "A list of explicit item group names to be used as filters.",
        "optional": true
      },
      {
        "name": "item_subgroup_filters",
        "type": "string[]",
        "description": "A list of explicit item subgroup names to be used as filters.",
        "optional": true
      }
    ]
  },
  "Prototype/ArithmeticCombinator": {
    "name": "Prototype/ArithmeticCombinator",
    "link": "/Prototype/ArithmeticCombinator",
    "id": "arithmetic-combinator",
    "parent": "Prototype/Combinator",
    "description": "An \u003ca href\u003d\"/Arithmetic_combinator\" title\u003d\"Arithmetic combinator\"\u003earithmetic combinator\u003c/a\u003e.",
    "properties": [
      {
        "name": "and_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "divide_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "left_shift_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "minus_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "modulo_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "multiply_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "or_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "plus_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "power_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "right_shift_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "xor_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      }
    ]
  },
  "Prototype/Cliff": {
    "name": "Prototype/Cliff",
    "link": "/Prototype/Cliff",
    "id": "cliff",
    "parent": "Prototype/Entity",
    "description": "A \u003ca href\u003d\"/Cliff\" title\u003d\"Cliff\"\u003ecliff\u003c/a\u003e.",
    "properties": [
      {
        "name": "grid_offset",
        "type": "vector",
        "optional": false
      },
      {
        "name": "grid_size",
        "type": "vector",
        "optional": false
      },
      {
        "name": "orientations",
        "type": "OrientedCliffPrototype[]",
        "optional": false
      },
      {
        "name": "cliff_explosive",
        "type": "string",
        "description": "Name of a capsule that has a robot_action to explode cliffs.",
        "optional": true
      },
      {
        "name": "cliff_height",
        "type": "float",
        "_default": "4",
        "optional": true
      }
    ]
  },
  "Prototype/Recipe": {
    "name": "Prototype/Recipe",
    "link": "/Prototype/Recipe",
    "id": "recipe",
    "parent": "PrototypeBase",
    "description": "A recipe. It can be a crafting recipe, a smelting recipe, or a custom type of recipe (see Prototype/RecipeCategory).",
    "properties": [
      {
        "name": "ingredients",
        "type": "IngredientPrototype[]",
        "description": "\u003cp\u003eA table containing ingredient names and counts. Can also contain information about fluid temperature and catalyst amounts.\u003c/p\u003e\u003cp\u003eMaximal ingredient amount is 65535. The catalyst amounts are automatically calculated from the recipe, or can be set manually.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://factorio.com/blog/post/fff-256\"\u003e[1]\u003c/a\u003e\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "allow_as_intermediate",
        "type": "bool",
        "description": "Optional. Whether the recipe can be used as an intermediate recipe in hand-crafting.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "allow_decomposition",
        "type": "bool",
        "description": "Optional. Whether this recipe is allowed to be broken down for the recipe tooltip \"Total raw\" calculations.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "allow_intermediates",
        "type": "bool",
        "description": "Optional. Whether the recipe is allowed to use intermediate recipes when hand-crafting.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "always_show_made_in",
        "type": "bool",
        "description": "Optional. Whether the \"Made in: {Machine}\" part of the tool-tip should always be present, not only when the recipe can not be hand-crafted.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "always_show_products",
        "type": "bool",
        "description": "Optional. Whether the products are always shown in the recipe tool-tip.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "category",
        "type": "string",
        "description": "Optional. The category of this recipe. The built-in categories can be found \u003ca href\u003d\"/Data.raw#recipe-category\" title\u003d\"Data.raw\"\u003ehere\u003c/a\u003e. See also \u003ca href\u003d\"/Prototype/RecipeCategory\" title\u003d\"Prototype/RecipeCategory\"\u003ePrototype/RecipeCategory\u003c/a\u003e.",
        "_default": "crafting",
        "optional": true
      },
      {
        "name": "crafting_machine_tint",
        "type": "Color[]",
        "description": "Optional. Used by crafting machine \u003ccode\u003e\u003ca href\u003d\"/Prototype/CraftingMachine#working_visualisations\" title\u003d\"Prototype/CraftingMachine\"\u003eworking_visualisations\u003c/a\u003e\u003c/code\u003e to tint certain layers with the recipe color. \u003ca href\u003d\"/Types/WorkingVisualisation#apply_recipe_tint\" title\u003d\"Types/WorkingVisualisation\"\u003eapply_recipe_tint\u003c/a\u003e on the working visualisation determines which of the 4 colors is used for that layer (if any).",
        "optional": true
      },
      {
        "name": "emissions_multiplier",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "enabled",
        "type": "bool",
        "description": "\u003cp\u003eOptional. This can be false to disable the recipe at the start of the game, or \"true\" to leave it enabled.\u003c/p\u003e\u003cp\u003eIf your recipe is unlocked by a technology, you should set this to \"false\".\u003c/p\u003e",
        "_default": "true",
        "optional": true
      },
      {
        "name": "energy_required",
        "type": "double",
        "description": "\u003cp\u003eOptional. The amount of time it takes to make this recipe.\u003c/p\u003e\u003cp\u003eThis is the number of seconds it takes to craft at crafting speed 1.\u003c/p\u003e",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "expensive",
        "type": "Recipe data|bool",
        "optional": true
      },
      {
        "name": "hidden",
        "type": "bool",
        "description": "Optional. Hides the recipe from crafting menus.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "hide_from_player_crafting",
        "type": "bool",
        "description": "Optional. Hides the recipe from the player\u0027s crafting screen. The recipe will still show up for selection in machines.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "hide_from_stats",
        "type": "bool",
        "description": "Optional. Hides the recipe from flow stats (item/fluid production statistics).",
        "_default": "false",
        "optional": true
      },
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": true
      },
      {
        "name": "main_product",
        "type": "string",
        "description": "\u003cp\u003eFor recipes with more than one product: This defines of which result the icon, subgroup and name is used. If it is not set and the recipe has more than 1 result the recipe will use the recipe-name and recipe-description locale and its own subgroup and icon.\u003c/p\u003e\u003cp\u003eFor recipes with 1 result: The recipe uses the icon, subgroup and name of the result by default. If set this property is set to an empty string, the recipe will use the properties of the recipe instead of the result.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "normal",
        "type": "Recipe data|bool",
        "optional": true
      },
      {
        "name": "overload_multiplier",
        "type": "uint32",
        "description": "\u003cp\u003eUsed to determine how many extra items are put into an assembling machine before it\u0027s considered \"full enough\". See Inserters#Insertion_limits.\u003c/p\u003e\u003cp\u003eIf set to 0, it instead uses the following formula: 1.166 / (energy_required / the assembler\u0027s crafting_speed), rounded up, and clamped between 2 and 100.\u003c/p\u003e",
        "_default": "0",
        "optional": true
      },
      {
        "name": "requester_paste_multiplier",
        "type": "uint32",
        "_default": "30",
        "optional": true
      },
      {
        "name": "result",
        "type": "string",
        "description": "Can be replaced with the results parameter. The item created by this recipe. Must be the name of an item, such as \"iron-gear-wheel\".",
        "optional": true
      },
      {
        "name": "result_count",
        "type": "uint32",
        "description": "Optional. The number of items created by this recipe.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "results",
        "type": "ProductPrototype[]",
        "description": "A table containing result names and counts. Can also contain information about fluid temperature and catalyst amounts. The catalyst amounts are automatically calculated from the recipe, or can be set manually.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://factorio.com/blog/post/fff-256\"\u003e[2]\u003c/a\u003e",
        "optional": true
      },
      {
        "name": "show_amount_in_title",
        "type": "bool",
        "description": "Optional. Whether the recipe name should have the product amount in front of it, e.g. \"2 \u003ca href\u003d\"/Transport_belt\" title\u003d\"Transport belt\"\u003etransport belt\u003c/a\u003e\"",
        "_default": "true",
        "optional": true
      },
      {
        "name": "subgroup",
        "type": "string",
        "description": "Optional. The subgroup of this recipe. If not specified, defaults to the subgroup of the product if there is only 1, or main_product if multiple products exist. If multiple products exist and no main_product is specified, the subgroup is required.",
        "optional": true
      },
      {
        "name": "unlock_results",
        "type": "bool",
        "description": "Optional. Whether enabling this recipe unlocks its item products to show in selection lists (item filter, logistic request etc.).",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/Tutorial": {
    "name": "Prototype/Tutorial",
    "link": "/Prototype/Tutorial",
    "id": "tutorial",
    "parent": "PrototypeBase",
    "description": "The definition of the tutorial as shown in the tutorial selection in-game. The actual tutorial code is defined in the tutorials folder, in the folder that has the name of the scenario property.",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": false
      },
      {
        "name": "scenario",
        "type": "string",
        "description": "Name of the folder for this tutorial in the tutorials folder.",
        "optional": false
      },
      {
        "name": "trigger",
        "type": "table",
        "optional": false
      },
      {
        "name": "dependencies",
        "type": "string[]",
        "description": "Names of the tutorials this one depends on. If those are not unlocked yet, the tutorial will show in a different color in the tutorial gui.",
        "optional": true
      },
      {
        "name": "locked_when_dependencies_not_completed",
        "type": "bool",
        "description": "Whether the tutorial should be locked when the #dependencies tutorials have not yet been completed.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "related_items",
        "type": "string[]",
        "description": "Items that are related to this tutorial, are shown below the tutorial icon in the tutorial list. Max number of related_items is 9.",
        "optional": true
      },
      {
        "name": "unlocked",
        "type": "bool",
        "description": "Whether the tutorial is always unlocked, regardless of dependency tutorials.",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/UpgradeItem": {
    "name": "Prototype/UpgradeItem",
    "link": "/Prototype/UpgradeItem",
    "id": "upgrade-item",
    "parent": "Prototype/SelectionTool",
    "description": "A \u003ca href\u003d\"/Upgrade_planner\" title\u003d\"Upgrade planner\"\u003eupgrade planner\u003c/a\u003e.",
    "properties": [
      {
        "name": "mapper_count",
        "type": "ItemStackIndex",
        "description": "Can\u0027t be \u003e 255.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Achievement": {
    "name": "Prototype/Achievement",
    "link": "/Prototype/Achievement",
    "id": "achievement",
    "parent": "PrototypeBase",
    "description": "This prototype definition is used for the in-game achievements.",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": false
      },
      {
        "name": "allowed_without_fight",
        "type": "bool",
        "description": "If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "hidden",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "steam_stats_name",
        "type": "string",
        "description": "Unusable by mods, as this refers to unlocking the achievement through Steam.",
        "optional": true
      }
    ]
  },
  "Prototype/Gate": {
    "name": "Prototype/Gate",
    "link": "/Prototype/Gate",
    "id": "gate",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Gate\" title\u003d\"Gate\"\u003egate\u003c/a\u003e.",
    "properties": [
      {
        "name": "activation_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "close_sound",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "horizontal_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "horizontal_rail_animation_left",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "horizontal_rail_animation_right",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "horizontal_rail_base",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "open_sound",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "opening_speed",
        "type": "float",
        "optional": false
      },
      {
        "name": "timeout_to_close",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "vertical_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "vertical_rail_animation_left",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "vertical_rail_animation_right",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "vertical_rail_base",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "wall_patch",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "fadeout_interval",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "opened_collision_mask",
        "type": "CollisionMask",
        "description": "This collision mask is used when the gate is open.",
        "_default": "{\"object-layer\", \"item-layer\", \"floor-layer\", \"water-tile\"}",
        "optional": true
      }
    ]
  },
  "Prototype/CombatRobot": {
    "name": "Prototype/CombatRobot",
    "link": "/Prototype/CombatRobot",
    "id": "combat-robot",
    "parent": "Prototype/FlyingRobot",
    "description": "A combat robot. Can attack enemies.",
    "properties": [
      {
        "name": "attack_parameters",
        "type": "AttackParameters",
        "optional": false
      },
      {
        "name": "idle",
        "type": "RotatedAnimation",
        "optional": false
      },
      {
        "name": "in_motion",
        "type": "RotatedAnimation",
        "optional": false
      },
      {
        "name": "shadow_idle",
        "type": "RotatedAnimation",
        "optional": false
      },
      {
        "name": "shadow_in_motion",
        "type": "RotatedAnimation",
        "optional": false
      },
      {
        "name": "time_to_live",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "destroy_action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "follows_player",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "friction",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "range_from_player",
        "type": "double",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/ItemWithLabel": {
    "name": "Prototype/ItemWithLabel",
    "link": "/Prototype/ItemWithLabel",
    "id": "item-with-label",
    "parent": "Prototype/Item",
    "description": "Like a normal item but with the ability to have a colored label.",
    "properties": [
      {
        "name": "default_label_color",
        "type": "Color",
        "description": "The default label color the item will use.",
        "optional": true
      },
      {
        "name": "draw_label_for_cursor_render",
        "type": "bool",
        "description": "If the item will draw its label when held in the cursor in place of the item count.",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/EquipmentCategory": {
    "name": "Prototype/EquipmentCategory",
    "link": "/Prototype/EquipmentCategory",
    "id": "equipment-category",
    "parent": "PrototypeBase",
    "description": "Defines a category to be available to \u003ca href\u003d\"/Prototype/Equipment\" title\u003d\"Prototype/Equipment\"\u003ePrototype/Equipment\u003c/a\u003e and \u003ca href\u003d\"/Prototype/EquipmentGrid\" title\u003d\"Prototype/EquipmentGrid\"\u003ePrototype/EquipmentGrid\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/TileGhost": {
    "name": "Prototype/TileGhost",
    "link": "/Prototype/TileGhost",
    "id": "tile-ghost",
    "parent": "Prototype/Entity",
    "description": "The entity used for tile ghosts.",
    "properties": []
  },
  "Prototype/EditorController": {
    "name": "Prototype/EditorController",
    "link": "/Prototype/EditorController",
    "id": "editor-controller",
    "description": "Properties of the editor controller.",
    "properties": [
      {
        "name": "adjust_speed_based_off_zoom",
        "type": "bool",
        "optional": false
      },
      {
        "name": "enable_flash_light",
        "type": "bool",
        "optional": false
      },
      {
        "name": "fill_built_entity_energy_buffers",
        "type": "bool",
        "optional": false
      },
      {
        "name": "generate_neighbor_chunks",
        "type": "bool",
        "optional": false
      },
      {
        "name": "gun_inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      },
      {
        "name": "instant_blueprint_building",
        "type": "bool",
        "optional": false
      },
      {
        "name": "instant_deconstruction",
        "type": "bool",
        "optional": false
      },
      {
        "name": "instant_rail_planner",
        "type": "bool",
        "optional": false
      },
      {
        "name": "instant_upgrading",
        "type": "bool",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      },
      {
        "name": "item_pickup_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "loot_pickup_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "mining_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "movement_speed",
        "type": "double",
        "description": "Must be \u003e\u003d 0.34375.",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the editor-controller. Must be \"default\" since only one instances of this prototype can be defined.",
        "_default": "default",
        "optional": false
      },
      {
        "name": "placed_corpses_never_expire",
        "type": "bool",
        "optional": false
      },
      {
        "name": "render_as_day",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_additional_entity_info_gui",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_character_tab_in_controller_gui",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_entity_health_bars",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_entity_tags",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_hidden_entities",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_infinity_filters_in_controller_gui",
        "type": "bool",
        "optional": false
      },
      {
        "name": "show_status_icons",
        "type": "bool",
        "optional": false
      }
    ]
  },
  "Prototype/ItemRequestProxy": {
    "name": "Prototype/ItemRequestProxy",
    "link": "/Prototype/ItemRequestProxy",
    "id": "item-request-proxy",
    "parent": "Prototype/Entity",
    "description": "Entity used to signify that an entity is requesting items, for example modules for an assembling machine after it was blueprinted with modules inside.",
    "properties": [
      {
        "name": "picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "use_target_entity_alert_icon_shift",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/TrivialSmoke": {
    "name": "Prototype/TrivialSmoke",
    "link": "/Prototype/TrivialSmoke",
    "id": "trivial-smoke",
    "parent": "PrototypeBase",
    "description": "Smoke, but it\u0027s not an entity for optimization purposes.",
    "properties": [
      {
        "name": "animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "duration",
        "type": "uint32",
        "description": "Can\u0027t be 0 - the smoke will never render.",
        "optional": false
      },
      {
        "name": "affected_by_wind",
        "type": "bool",
        "description": "Smoke always moves randomly unless \u003ccode\u003emovement_slow_down_factor\u003c/code\u003e is 1. If \u003ccode\u003eaffected_by_wind\u003c/code\u003e is true, the smoke will also be moved by wind.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "cyclic",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "end_scale",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "fade_away_duration",
        "type": "uint32",
        "description": "\u003ccode\u003efade_in_duration\u003c/code\u003e + \u003ccode\u003efade_away_duration\u003c/code\u003e must be \u0026lt;\u003d \u003ccode\u003eduration\u003c/code\u003e.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "fade_in_duration",
        "type": "uint32",
        "description": "\u003ccode\u003efade_in_duration\u003c/code\u003e + \u003ccode\u003efade_away_duration\u003c/code\u003e must be \u0026lt;\u003d \u003ccode\u003eduration\u003c/code\u003e.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "glow_animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "glow_fade_away_duration",
        "type": "uint32",
        "optional": true
      },
      {
        "name": "movement_slow_down_factor",
        "type": "double",
        "description": "Value between 0 and 1, with 1 being no movement.",
        "_default": "0.995",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "smoke",
        "optional": true
      },
      {
        "name": "show_when_smoke_off",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "spread_duration",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "start_scale",
        "type": "double",
        "_default": "1.0",
        "optional": true
      }
    ]
  },
  "Prototype/AssemblingMachine": {
    "name": "Prototype/AssemblingMachine",
    "link": "/Prototype/AssemblingMachine",
    "id": "assembling-machine",
    "parent": "Prototype/CraftingMachine",
    "description": "An assembling machine - like the assembling machines 1/2/3 in the game, but you can use your own recipe categories.",
    "properties": [
      {
        "name": "fixed_recipe",
        "type": "string",
        "description": "The preset recipe of this machine. This machine does not show a recipe selection if this is set. The base game uses this for the \u003ca href\u003d\"/Rocket_silo\" title\u003d\"Rocket silo\"\u003erocket silo\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "gui_title_key",
        "type": "string",
        "description": "The locale key of the title of the GUI that is shown when the player opens the assembling machine.",
        "optional": true
      },
      {
        "name": "ingredient_count",
        "type": "uint8",
        "description": "\u003cp\u003eSets the maximum number of ingredients this machine can craft with. Any recipe with more ingredients than this will be unavailable in this machine.\u003c/p\u003e\u003cp\u003eThis only counts item ingredients, not fluid ingredients! This means if ingredient count is 2, and the recipe has 2 item ingredients and 1 fluid ingredient, it can still be crafted in the machine.\u003c/p\u003e",
        "_default": "255",
        "optional": true
      }
    ]
  },
  "Prototype/RoboportEquipment": {
    "name": "Prototype/RoboportEquipment",
    "link": "/Prototype/RoboportEquipment",
    "id": "roboport-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Personal_roboport\" title\u003d\"Personal roboport\"\u003epersonal roboport\u003c/a\u003e.",
    "properties": [
      {
        "name": "charge_approach_distance",
        "type": "float",
        "description": "Presumably, the distance from the roboport at which robots will wait to charge.",
        "optional": false
      },
      {
        "name": "charging_energy",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "construction_radius",
        "type": "float",
        "description": "Can\u0027t be negative.",
        "optional": false
      },
      {
        "name": "recharging_animation",
        "type": "Animation",
        "description": "The animation played at each charging point when a robot is charging there.",
        "optional": false
      },
      {
        "name": "spawn_and_station_height",
        "type": "float",
        "description": "Presumably states the height of the charging stations and thus an additive offset for the charging_offsets.",
        "optional": false
      },
      {
        "name": "burner",
        "type": "EnergySource",
        "description": "Must be a burner energy source. Add this is if the roboport should be fueled directly instead of using power from the equipment grid.",
        "optional": true
      },
      {
        "name": "charging_distance",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "charging_offsets",
        "type": "vector[]",
        "description": "The offsets from the centre of the roboport at which robots will charge.",
        "optional": true
      },
      {
        "name": "charging_station_count",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "charging_station_shift",
        "type": "vector",
        "optional": true
      },
      {
        "name": "charging_threshold_distance",
        "type": "float",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "draw_construction_radius_visualization",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_logistic_radius_visualization",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "power",
        "type": "Energy",
        "description": "Mandatory if \u003ccode\u003eburner\u003c/code\u003e is present. The size of the buffer of the burner energy source, so effectively the amount of power that the energy source can produce per tick.",
        "optional": true
      },
      {
        "name": "recharging_light",
        "type": "LightDefinition",
        "description": "The light emitted when charging a robot.",
        "optional": true
      },
      {
        "name": "robot_limit",
        "type": "ItemCountType",
        "description": "How many robots can exist in the network (cumulative).",
        "optional": true
      },
      {
        "name": "robot_vertical_acceleration",
        "type": "float",
        "_default": "0.01",
        "optional": true
      },
      {
        "name": "robots_shrink_when_entering_and_exiting",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "spawn_and_station_shadow_height_offset",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "spawn_minimum",
        "type": "Energy",
        "description": "Minimum amount of energy that needs to available inside the roboport\u0027s buffer so that robots can be spawned.",
        "optional": true
      },
      {
        "name": "stationing_offset",
        "type": "vector",
        "description": "The offset from the centre of the roboport at which robots will enter and exit.",
        "optional": true
      }
    ]
  },
  "Prototype/Projectile": {
    "name": "Prototype/Projectile",
    "link": "/Prototype/Projectile",
    "id": "projectile",
    "parent": "Prototype/Entity",
    "description": "Entity with limited lifetime that can hit other entities and has triggers when this happens.",
    "properties": [
      {
        "name": "acceleration",
        "type": "double",
        "optional": false
      },
      {
        "name": "animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "action",
        "type": "Trigger",
        "description": "Executed when the projectile hits something.",
        "optional": true
      },
      {
        "name": "direction_only",
        "type": "bool",
        "description": "Setting this to true can be used to disable projectile homing behaviour.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "enable_drawing_with_mask",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "final_action",
        "type": "Trigger",
        "description": "Executed when the projectile hits something, after \u003ccode\u003eaction\u003c/code\u003e and only if the entity that was hit was destroyed. The projectile is destroyed right after the final_action.",
        "optional": true
      },
      {
        "name": "force_condition",
        "type": "ForceCondition",
        "_default": "all",
        "optional": true
      },
      {
        "name": "height",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "hit_at_collision_position",
        "type": "bool",
        "description": "When true the entity is hit at the position on its collision box the projectile first collides with. When false the entity is hit at its own position.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "hit_collision_mask",
        "type": "CollisionMask",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "max_speed",
        "type": "double",
        "description": "Must be greater than or equal to 0.",
        "optional": true
      },
      {
        "name": "piercing_damage",
        "type": "float",
        "description": "Whenever an entity is hit by the projectile, this number gets reduced by the health of the entity. If the number is then below 0, the \u003ccode\u003efinal_action\u003c/code\u003e is applied and the projectile destroyed. Otherwise, the projectile simply continues to its destination.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "rotatable",
        "type": "bool",
        "description": "Whether the animation of the projectile is rotated to match the direction of travel.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "shadow",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "smoke",
        "type": "SmokeSource[]",
        "optional": true
      },
      {
        "name": "turn_speed",
        "type": "float",
        "optional": true
      }
    ]
  },
  "Prototype/CustomInput": {
    "name": "Prototype/CustomInput",
    "link": "/Prototype/CustomInput",
    "id": "custom-input",
    "parent": "PrototypeBase",
    "description": "Used for custom keyboard shortcuts/keybindings in mods. The key associated with the custom input can be changed in the options. This means that \u003ccode\u003ekey_sequence\u003c/code\u003e is simply the default keybinding.",
    "properties": [
      {
        "name": "key_sequence",
        "type": "string",
        "description": "\u003cp\u003eThe default key sequence for this custom input.\u003c/p\u003e\u003cul\u003e\u003cli\u003e\"mouse-button-2\" etc for mouse buttons, mouse-button-3 for middle mouse button\u003c/li\u003e\u003cli\u003e\"mouse-wheel-up\", \"mouse-wheel-down\", \"mouse-wheel-left\", \"mouse-wheel-right\" for mouse wheel (mouse wheel controls do not work for custom inputs!)\u003c/li\u003e\u003cli\u003e\" + \" is used to separate modifier keys from normal keys: \u003ccode\u003e\"ALT + G\"\u003c/code\u003e\u003c/li\u003e\u003cli\u003eFor modifier keys, the following names are used: \"CONTROL\", \"SHIFT\", \"ALT\", \"COMMAND\"\u003c/li\u003e\u003cli\u003eA keybinding can contain an unlimited amount of modifier keys (listed above) but only one normal key (listed below).\u003c/li\u003e\u003c/ul\u003e",
        "optional": false
      },
      {
        "name": "action",
        "type": "string",
        "description": "One of \"lua\", \"create-blueprint-item\", \"toggle-personal-roboport\", \"toggle-personal-logistic-requests\" and \"toggle-equipment-movement-bonus\".\u003cbr\u003eA lua event is only raised if the action is \"lua\".",
        "_default": "lua",
        "optional": true
      },
      {
        "name": "alternative_key_sequence",
        "type": "string",
        "description": "The alternative keybinding for this control. See #key_sequence.",
        "optional": true
      },
      {
        "name": "consuming",
        "type": "ConsumingType",
        "_default": "none",
        "optional": true
      },
      {
        "name": "enabled",
        "type": "bool",
        "description": "If this custom input is enabled. Disabled custom inputs exist but are not used by the game. If disabled, no event is raised when the input is used.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "enabled_while_in_cutscene",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "enabled_while_spectating",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "item_to_create",
        "type": "string",
        "description": "Name of a Prototype/Item. It will be created when this input is pressed.",
        "optional": true
      },
      {
        "name": "linked_game_control",
        "type": "string",
        "description": "When a custom-input is linked to a game control it won\u0027t show up in the control-settings GUI and will fire when the linked control is pressed. \u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/53591\"\u003e[1]\u003c/a\u003e",
        "optional": true
      }
    ]
  },
  "Prototype/Sprite": {
    "name": "Prototype/Sprite",
    "link": "/Prototype/Sprite",
    "id": "sprite",
    "description": "Specifies a picture that can be used with \u003ca rel\u003d\"nofollow\" class\u003d\"external free\" href\u003d\"https://lua-api.factorio.com/latest/Concepts.html#SpritePath\"\u003ehttps://lua-api.factorio.com/latest/Concepts.html#SpritePath\u003c/a\u003e during runtime.",
    "properties": [
      {
        "name": "filename",
        "type": "FileName",
        "description": "Technically optional, but path to sprite cannot be empty.",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the sprite. Must be unique. Can be used as a \u003ca rel\u003d\"nofollow\" class\u003d\"external free\" href\u003d\"https://lua-api.factorio.com/latest/Concepts.html#SpritePath\"\u003ehttps://lua-api.factorio.com/latest/Concepts.html#SpritePath\u003c/a\u003e.",
        "optional": false
      },
      {
        "name": "apply_runtime_tint",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "blend_mode",
        "type": "BlendMode",
        "_default": "normal",
        "optional": true
      },
      {
        "name": "draw_as_shadow",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "flags",
        "type": "SpriteFlags",
        "optional": true
      },
      {
        "name": "generate_sdf",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "height",
        "type": "SpriteSizeType",
        "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Height of the picture in pixels, from 0-8192.",
        "optional": true
      },
      {
        "name": "hr_version",
        "type": "Sprite",
        "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the sprite.",
        "optional": true
      },
      {
        "name": "layers",
        "type": "Sprite[]",
        "description": "\u003cp\u003eIf this property is present, all Sprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Sprite definition) in the array may also have the \u003ccode\u003elayers\u003c/code\u003e property.\u003c/p\u003e\u003cp\u003eIf this property is present, all other properties are ignored and the mandatory properties do not have to be defined.\u003c/p\u003e\u003cp\u003eLayers may not be an empty table.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "load_in_minimal_mode",
        "type": "bool",
        "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "mipmap_count",
        "type": "uint8",
        "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
        "_default": "0",
        "optional": true
      },
      {
        "name": "position",
        "type": "SpriteSizeType[]",
        "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
        "optional": true
      },
      {
        "name": "premul_alpha",
        "type": "bool",
        "description": "Whether alpha should be premultiplied.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "priority",
        "type": "SpritePriority",
        "_default": "medium",
        "optional": true
      },
      {
        "name": "scale",
        "type": "double",
        "description": "Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
        "_default": "1",
        "optional": true
      },
      {
        "name": "shift",
        "type": "vector",
        "description": "In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.",
        "optional": true
      },
      {
        "name": "size",
        "type": "SpriteSizeType|SpriteSizeType[]",
        "description": "\u003cp\u003eThe width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "slice",
        "type": "SpriteSizeType",
        "description": "\u003cp\u003eNumber of slices this is sliced into when using the \"optimized atlas packing\" option. If you are a modder, you can just ignore this property.\u003c/p\u003e\u003cp\u003eExample: If this is 4, the sprite will be sliced into a 4×4 grid.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "slice_x",
        "type": "SpriteSizeType",
        "description": "Same as \u003ccode\u003eslice\u003c/code\u003e above, but this specifies only how many slices there are on the x axis.",
        "optional": true
      },
      {
        "name": "slice_y",
        "type": "SpriteSizeType",
        "description": "Same as \u003ccode\u003eslice\u003c/code\u003e above, but this specifies only how many slices there are on the y axis.",
        "optional": true
      },
      {
        "name": "tint",
        "type": "Color",
        "optional": true
      },
      {
        "name": "width",
        "type": "SpriteSizeType",
        "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Width of the picture in pixels, from 0-8192.",
        "optional": true
      },
      {
        "name": "x",
        "type": "SpriteSizeType",
        "description": "Horizontal position of the sprite in the source file in pixels.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "y",
        "type": "SpriteSizeType",
        "description": "Vertical position of the sprite in the source file in pixels.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Tile": {
    "name": "Prototype/Tile",
    "link": "/Prototype/Tile",
    "id": "tile",
    "parent": "PrototypeBase",
    "description": "A \u003ca href\u003d\"/Tile\" title\u003d\"Tile\"\u003etile\u003c/a\u003e. Only 255 instances of this prototype may be defined.",
    "properties": [
      {
        "name": "collision_mask",
        "type": "CollisionMask",
        "optional": false
      },
      {
        "name": "layer",
        "type": "uint8",
        "description": "Specifies transition drawing priority.",
        "optional": false
      },
      {
        "name": "map_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "pollution_absorption_per_second",
        "type": "double",
        "description": "Emissions absorbed per second by this tile. Use a negative value if pollution is created instead of removed.",
        "optional": false
      },
      {
        "name": "variants",
        "type": "TileTransitions",
        "description": "Graphics for this tile.",
        "optional": false
      },
      {
        "name": "allowed_neighbors",
        "type": "string[]",
        "description": "Array of tile names that are allowed next to this one.",
        "optional": true
      },
      {
        "name": "autoplace",
        "type": "AutoplaceSpecification",
        "optional": true
      },
      {
        "name": "build_sound",
        "type": "table",
        "optional": true
      },
      {
        "name": "can_be_part_of_blueprint",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "decorative_removal_probability",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "draw_in_water_layer",
        "type": "bool",
        "description": "Used only for the \u003ccode\u003elayer_group\u003c/code\u003e default, see above.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "effect",
        "type": "string",
        "optional": true
      },
      {
        "name": "effect_color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "effect_is_opaque",
        "type": "bool",
        "optional": true
      },
      {
        "name": "layer_group",
        "type": "string",
        "description": "One of \"zero\", \"water\", \"water-overlay\", \"ground\" and \"top\".",
        "optional": true
      },
      {
        "name": "minable",
        "type": "MinableProperties",
        "description": "If you want the tile to not be minable, don\u0027t specify the minable property.",
        "optional": true
      },
      {
        "name": "mined_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "needs_correction",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "next_direction",
        "type": "string",
        "description": "Name of a tile.",
        "optional": true
      },
      {
        "name": "placeable_by",
        "type": "ItemToPlace|ItemToPlace[]",
        "optional": true
      },
      {
        "name": "scorch_mark_color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "tint",
        "type": "Color",
        "optional": true
      },
      {
        "name": "transition_merges_with_tile",
        "type": "string",
        "description": "Name of a tile.",
        "optional": true
      },
      {
        "name": "transition_overlay_layer_offset",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "transitions",
        "type": "TileTransitions[]",
        "description": "Extra transitions. Array of \u003ca href\u003d\"/Types/TileTransitions\" title\u003d\"Types/TileTransitions\"\u003eTileTransitions\u003c/a\u003e. Each \u003ca href\u003d\"/Types/TileTransitions\" title\u003d\"Types/TileTransitions\"\u003eTileTransitions\u003c/a\u003e needs the extra mandatory property \u003ccode\u003eto_tiles\u003c/code\u003e, which is a \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003estring\u003c/a\u003e which is the name of a tile. Furthermore, each \u003ca href\u003d\"/Types/TileTransitions\" title\u003d\"Types/TileTransitions\"\u003eTileTransitions\u003c/a\u003e needs the extra mandatory property \u003ccode\u003etransition_group\u003c/code\u003e which is a \u003ca href\u003d\"/Types/uint8\" title\u003d\"Types/uint8\"\u003euint8\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "transitions_between_transitions",
        "type": "TileTransitions[]",
        "description": "Array of \u003ca href\u003d\"/Types/TileTransitions\" title\u003d\"Types/TileTransitions\"\u003eTileTransitions\u003c/a\u003e. Each \u003ca href\u003d\"/Types/TileTransitions\" title\u003d\"Types/TileTransitions\"\u003eTileTransitions\u003c/a\u003e needs the extra mandatory properties \u003ccode\u003etransition_group1\u003c/code\u003e and\u003ccode\u003etransition_group2\u003c/code\u003e , which are of  \u003ca href\u003d\"/Types/uint8\" title\u003d\"Types/uint8\"\u003euint8\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "trigger_effect",
        "type": "TriggerEffect",
        "description": "Called by \u003ca href\u003d\"/Types/InvokeTileEffectTriggerEffectItem\" title\u003d\"Types/InvokeTileEffectTriggerEffectItem\"\u003eInvokeTileEffectTriggerEffectItem\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "vehicle_friction_modifier",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "walking_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "walking_speed_modifier",
        "type": "double",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/GroupAttackAchievement": {
    "name": "Prototype/GroupAttackAchievement",
    "link": "/Prototype/GroupAttackAchievement",
    "id": "group-attack-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player gets attacked due to pollution.",
    "properties": [
      {
        "name": "amount",
        "type": "uint32",
        "description": "This will trigger the achievement, if the player receives this amount of attacks. \u003cb\u003eNote:\u003c/b\u003e The default achievement \"it stinks and they dont like it\" uses the amount of 1. (As in getting attacked once.)",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/CharacterCorpse": {
    "name": "Prototype/CharacterCorpse",
    "link": "/Prototype/CharacterCorpse",
    "id": "character-corpse",
    "parent": "Prototype/Entity",
    "description": "The corpse of a \u003ca href\u003d\"/Prototype/Character\" title\u003d\"Prototype/Character\"\u003ePrototype/Character\u003c/a\u003e.",
    "properties": [
      {
        "name": "time_to_live",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "armor_picture_mapping",
        "type": "table",
        "description": "Table of key value pairs, the keys are armor names and the values are numbers. The number is the Animation that is associated with the armor, e.g. using \u003ccode\u003e1\u003c/code\u003e will associate the armor with the first Animation in the pictures table.",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Animation",
        "description": "Either \u003ccode\u003epictures\u003c/code\u003e or \u003ccode\u003epicture\u003c/code\u003e must be defined.",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "AnimationVariations",
        "description": "Either \u003ccode\u003epictures\u003c/code\u003e or \u003ccode\u003epicture\u003c/code\u003e must be defined.",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      }
    ]
  },
  "Prototype/SimpleSmoke": {
    "name": "Prototype/SimpleSmoke",
    "link": "/Prototype/SimpleSmoke",
    "id": "smoke",
    "parent": "Prototype/Smoke",
    "description": "\u003cb\u003eDeprecated in 0.16. The type \"simple-smoke\" has been obsoleted and cannot be created. Use \u003ca href\u003d\"/Prototype/TrivialSmoke\" title\u003d\"Prototype/TrivialSmoke\"\u003ePrototype/TrivialSmoke\u003c/a\u003e or \u003ca href\u003d\"/Prototype/SmokeWithTrigger\" title\u003d\"Prototype/SmokeWithTrigger\"\u003ePrototype/SmokeWithTrigger\u003c/a\u003e instead.\u003c/b\u003e",
    "properties": []
  },
  "Prototype/DontCraftManuallyAchievement": {
    "name": "Prototype/DontCraftManuallyAchievement",
    "link": "/Prototype/DontCraftManuallyAchievement",
    "id": "dont-craft-manually-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player finishes the game without crafting more than a set amount.",
    "properties": [
      {
        "name": "amount",
        "type": "MaterialAmountType",
        "description": "This will disable the achievement, if the player crafts more than this.",
        "optional": false
      }
    ]
  },
  "Prototype/TransportBelt": {
    "name": "Prototype/TransportBelt",
    "link": "/Prototype/TransportBelt",
    "id": "transport-belt",
    "parent": "Prototype/TransportBeltConnectable",
    "description": "A \u003ca href\u003d\"/Transport_belt\" title\u003d\"Transport belt\"\u003etransport belt\u003c/a\u003e.",
    "properties": [
      {
        "name": "connector_frame_sprites",
        "type": "TransportBeltConnectorFrame",
        "optional": false
      },
      {
        "name": "animations",
        "type": "RotatedAnimation",
        "description": "Transport belts must have 12 animations. Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "belt_animation_set",
        "type": "table",
        "description": "\u003cp\u003eEither this, or \u003ccode\u003eanimations\u003c/code\u003e has to present.\u003c/p\u003e\u003cp\u003eThis is the same table as the one used by \u003ca href\u003d\"/Prototype/TransportBeltConnectable\" title\u003d\"Prototype/TransportBeltConnectable\"\u003ePrototype/TransportBeltConnectable\u003c/a\u003e, with additional properties. If this is present, the belt_animation_set will used for all graphics.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "The pictures displayed for circuit connections to this transport belt.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint[]",
        "description": "Defines how wires visually connect to this transport belt.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/HeatInterface": {
    "name": "Prototype/HeatInterface",
    "link": "/Prototype/HeatInterface",
    "id": "heat-interface",
    "parent": "Prototype/EntityWithHealth",
    "description": "This entity produces or consumes heat. Its heat settings can be changed runtime.",
    "properties": [
      {
        "name": "heat_buffer",
        "type": "HeatBuffer",
        "optional": false
      },
      {
        "name": "gui_mode",
        "type": "string",
        "description": "\"none\", \"all\" or \"admins\"",
        "_default": "all",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "optional": true
      }
    ]
  },
  "Prototype/DontBuildEntityAchievement": {
    "name": "Prototype/DontBuildEntityAchievement",
    "link": "/Prototype/DontBuildEntityAchievement",
    "id": "dont-build-entity-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player finishes the game without building a specific entity.",
    "properties": [
      {
        "name": "dont_build",
        "type": "string[]|string",
        "description": "This will disable the achievement, if this entity is placed. If you finish the game without building this entity, you receive the achievement.",
        "optional": false
      },
      {
        "name": "amount",
        "type": "uint32",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/RecipeCategory": {
    "name": "Prototype/RecipeCategory",
    "link": "/Prototype/RecipeCategory",
    "id": "recipe-category",
    "parent": "PrototypeBase",
    "description": "A recipe category. The built-in categories can be found \u003ca href\u003d\"/Data.raw#recipe-category\" title\u003d\"Data.raw\"\u003ehere\u003c/a\u003e. See \u003ca href\u003d\"/Prototype/Recipe#category\" title\u003d\"Prototype/Recipe\"\u003ePrototype/Recipe#category\u003c/a\u003e. Recipe categories can be used to specify which machine can craft which recipes.",
    "properties": []
  },
  "Prototype/Car": {
    "name": "Prototype/Car",
    "link": "/Prototype/Car",
    "id": "car",
    "parent": "Prototype/Vehicle",
    "description": "Entity with specialized properties for acceleration, braking, and turning.",
    "properties": [
      {
        "name": "animation",
        "type": "RotatedAnimation",
        "description": "Animation speed 1 means 1 frame per tile.",
        "optional": false
      },
      {
        "name": "burner or energy_source",
        "type": "EnergySource",
        "description": "Must be a burner energy source when using \"burner\", otherwise it can also be a void energy source.",
        "optional": false
      },
      {
        "name": "consumption",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "effectivity",
        "type": "double",
        "description": "Modifies the efficiency of energy transfer from burner output to wheels.",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "description": "Size of the car inventory.",
        "optional": false
      },
      {
        "name": "rotation_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "guns",
        "type": "strings[]",
        "description": "The guns this car prototype uses.",
        "optional": true
      },
      {
        "name": "has_belt_immunity",
        "type": "bool",
        "description": "If this car is immune to movement by belts.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "immune_to_rock_impacts",
        "type": "bool",
        "description": "If this car gets damaged by driving over/against \u003ca href\u003d\"/Prototype/SimpleEntity#count_as_rock_for_filtered_deconstruction\" title\u003d\"Prototype/SimpleEntity\"\u003erocks\u003c/a\u003e.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "immune_to_tree_impacts",
        "type": "bool",
        "description": "If this car gets damaged by driving over/against \u003ca href\u003d\"/Prototype/Tree\" title\u003d\"Prototype/Tree\"\u003ePrototype/Trees\u003c/a\u003e.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "sound_no_fuel",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "tank_driving",
        "type": "bool",
        "description": "If this car prototype uses tank controls to drive.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "track_particle_triggers",
        "type": "FootstepTriggerEffectList",
        "optional": true
      },
      {
        "name": "turret_animation",
        "type": "RotatedAnimation",
        "description": "Animation speed 1 means 1 frame per tile.",
        "optional": true
      },
      {
        "name": "turret_return_timeout",
        "type": "uint32",
        "description": "Timeout in ticks specifying how long the turret must be inactive to return to the default position.",
        "_default": "60",
        "optional": true
      },
      {
        "name": "turret_rotation_speed",
        "type": "double",
        "_default": "0.01",
        "optional": true
      }
    ]
  },
  "Prototype/UndergroundBelt": {
    "name": "Prototype/UndergroundBelt",
    "link": "/Prototype/UndergroundBelt",
    "id": "underground-belt",
    "parent": "Prototype/TransportBeltConnectable",
    "description": "An \u003ca href\u003d\"/Underground_belt\" title\u003d\"Underground belt\"\u003eunderground belt\u003c/a\u003e.",
    "properties": [
      {
        "name": "max_distance",
        "type": "uint8",
        "optional": false
      },
      {
        "name": "structure",
        "type": "table",
        "optional": false
      },
      {
        "name": "underground_sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "underground_remove_belts_sprite",
        "type": "Sprite",
        "optional": true
      }
    ]
  },
  "Prototype/BatteryEquipment": {
    "name": "Prototype/BatteryEquipment",
    "link": "/Prototype/BatteryEquipment",
    "id": "battery-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Personal_battery\" title\u003d\"Personal battery\"\u003epersonal battery\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/ModuleCategory": {
    "name": "Prototype/ModuleCategory",
    "link": "/Prototype/ModuleCategory",
    "id": "module-category",
    "parent": "PrototypeBase",
    "description": "A module category. The built-in categories can be found \u003ca href\u003d\"/Data.raw#module-category\" title\u003d\"Data.raw\"\u003ehere\u003c/a\u003e. See \u003ca href\u003d\"/Prototype/Module#category\" title\u003d\"Prototype/Module\"\u003ePrototype/Module#category\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/ArtilleryFlare": {
    "name": "Prototype/ArtilleryFlare",
    "link": "/Prototype/ArtilleryFlare",
    "id": "artillery-flare",
    "parent": "Prototype/Entity",
    "description": "The entity spawned by the \u003ca href\u003d\"/Artillery_targeting_remote\" title\u003d\"Artillery targeting remote\"\u003eartillery targeting remote\u003c/a\u003e.",
    "properties": [
      {
        "name": "life_time",
        "type": "uint16",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "AnimationVariations",
        "description": "Picture variation count and individual frame count must be equal to shadow variation count.",
        "optional": false
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": false
      },
      {
        "name": "render_layer_when_on_ground",
        "type": "RenderLayer",
        "_default": "lower-object",
        "optional": false
      },
      {
        "name": "creation_shift",
        "type": "vector",
        "optional": true
      },
      {
        "name": "early_death_ticks",
        "type": "uint32",
        "description": "How long this flare stays alive after \u003ccode\u003eshots_per_flare\u003c/code\u003e amount of shots have been shot at it.",
        "_default": "180",
        "optional": true
      },
      {
        "name": "ended_in_water_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "initial_frame_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "initial_height",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "initial_speed",
        "type": "vector",
        "optional": true
      },
      {
        "name": "initial_vertical_speed",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "movement_modifier",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "movement_modifier_when_on_ground",
        "type": "double",
        "_default": "0.8",
        "optional": true
      },
      {
        "name": "regular_trigger_effect",
        "type": "TriggerEffect",
        "_default": "0",
        "optional": true
      },
      {
        "name": "regular_trigger_effect_frequency",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "shadows",
        "type": "AnimationVariations",
        "description": "Shadow variation variation count and individual frame count must be equal to picture variation count.",
        "optional": true
      },
      {
        "name": "shot_category",
        "type": "string",
        "description": "Name of a \u003ca href\u003d\"/Prototype/AmmoCategory\" title\u003d\"Prototype/AmmoCategory\"\u003ePrototype/AmmoCategory\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "shots_per_flare",
        "type": "uint32",
        "description": "How many artillery shots should be fired at the position of this flare.",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/ElectricEnergyInterface": {
    "name": "Prototype/ElectricEnergyInterface",
    "link": "/Prototype/ElectricEnergyInterface",
    "id": "electric-energy-interface",
    "parent": "Prototype/EntityWithHealth",
    "description": "Entity with electric energy source with that can have some of its values changed runtime. Useful for modding in energy consumers/producers.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric energy source.",
        "optional": false
      },
      {
        "name": "animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "animations",
        "type": "Animation4Way",
        "optional": true
      },
      {
        "name": "continuous_animation",
        "type": "bool",
        "description": "Whether the electric energy interface animation always runs instead of being scaled to activity.",
        "optional": true
      },
      {
        "name": "energy_production",
        "type": "Energy",
        "_default": "0",
        "optional": true
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "_default": "0",
        "optional": true
      },
      {
        "name": "gui_mode",
        "type": "string",
        "description": "Possible options: \"all\", \"none\", \"admins\".",
        "_default": "none",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "description": "The light that this electric energy interface emits.",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "Sprite4Way",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      }
    ]
  },
  "Prototype/Sticker": {
    "name": "Prototype/Sticker",
    "link": "/Prototype/Sticker",
    "id": "sticker",
    "parent": "Prototype/Entity",
    "description": "Entity that sticks to another entity, and damages/slows it. Currently stickers can only be attached to \u003ca href\u003d\"/Prototype/Unit\" title\u003d\"Prototype/Unit\"\u003ePrototype/Unit\u003c/a\u003e, \u003ca href\u003d\"/Prototype/Character\" title\u003d\"Prototype/Character\"\u003ePrototype/Character\u003c/a\u003e and \u003ca href\u003d\"/Prototype/Car\" title\u003d\"Prototype/Car\"\u003ePrototype/Car\u003c/a\u003e.",
    "properties": [
      {
        "name": "duration_in_ticks",
        "type": "uint32",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "damage_interval",
        "type": "uint32",
        "description": "Interval between application of \u003ccode\u003edamage_per_tick\u003c/code\u003e, in ticks.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "damage_per_tick",
        "type": "DamagePrototype",
        "description": "Applied every \u003ccode\u003edamage_interval\u003c/code\u003e ticks, so may not necessarily be \"per tick\".",
        "optional": true
      },
      {
        "name": "fire_spread_cooldown",
        "type": "uint8",
        "_default": "30",
        "optional": true
      },
      {
        "name": "fire_spread_radius",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "force_visibility",
        "type": "ForceCondition",
        "_default": "all",
        "optional": true
      },
      {
        "name": "selection_box_type",
        "type": "string",
        "description": "Using this property marks the sticker as a \"selection sticker\", meaning that the selection box will be rendered around the entity when the sticker is on it.",
        "_default": "entity",
        "optional": true
      },
      {
        "name": "single_particle",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "spread_fire_entity",
        "type": "string",
        "description": "Name of an entity. If this is given, this sticker is considered a \"fire sticker\" for some functions, such as \u003ca href\u003d\"/Types/BaseAttackParameters#fire_penalty\" title\u003d\"Types/BaseAttackParameters\"\u003eBaseAttackParameters#fire_penalty\u003c/a\u003e and \u003ca href\u003d\"/Types/EntityPrototypeFlags#.22not-flammable.22\" title\u003d\"Types/EntityPrototypeFlags\"\u003eEntityPrototypeFlags#.22not-flammable.22\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "stickers_per_square_meter",
        "type": "float",
        "_default": "15",
        "optional": true
      },
      {
        "name": "target_movement_modifier",
        "type": "float",
        "description": "Less than 1 to reduce movement speed, more than 1 to increase it.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "target_movement_modifier_from",
        "type": "float",
        "optional": true
      },
      {
        "name": "target_movement_modifier_to",
        "type": "float",
        "optional": true
      },
      {
        "name": "vehicle_friction_modifier",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "vehicle_friction_modifier_from",
        "type": "float",
        "optional": true
      },
      {
        "name": "vehicle_friction_modifier_to",
        "type": "float",
        "optional": true
      },
      {
        "name": "vehicle_speed_modifier",
        "type": "float",
        "description": "Less than 1 to reduce vehicle speed, more than 1 to increase it.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "vehicle_speed_modifier_from",
        "type": "float",
        "optional": true
      },
      {
        "name": "vehicle_speed_modifier_to",
        "type": "float",
        "optional": true
      }
    ]
  },
  "Prototype/TriggerTargetType": {
    "name": "Prototype/TriggerTargetType",
    "link": "/Prototype/TriggerTargetType",
    "id": "trigger-target-type",
    "description": "Only 56 instances of this prototype may be defined. The base game always internally defines a \"common\" trigger target type.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "optional": false
      }
    ]
  },
  "Prototype/DamageType": {
    "name": "Prototype/DamageType",
    "link": "/Prototype/DamageType",
    "id": "damage-type",
    "parent": "PrototypeBase",
    "description": "A damage type. This is used in the \u003ca href\u003d\"/Damage\" title\u003d\"Damage\"\u003edamage system\u003c/a\u003e. \u003ca href\u003d\"/Damage#Damage_Types\" title\u003d\"Damage\"\u003eA list of built-in damage types can be found here\u003c/a\u003e.",
    "properties": [
      {
        "name": "hidden",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/Armor": {
    "name": "Prototype/Armor",
    "link": "/Prototype/Armor",
    "id": "armor",
    "parent": "Prototype/Tool",
    "description": "Armor to wear on your in-game character for defense, and buffs.",
    "properties": [
      {
        "name": "equipment_grid",
        "type": "string",
        "description": "Name of the Prototype/EquipmentGrid that this armor has.",
        "optional": true
      },
      {
        "name": "inventory_size_bonus",
        "type": "ItemStackIndex",
        "description": "By how many slots the inventory of the player is expanded when the armor is worn.",
        "optional": true
      },
      {
        "name": "resistances",
        "type": "Resistances",
        "description": "What amount of damage the armor takes on what type of damage is incoming.",
        "optional": true
      }
    ]
  },
  "Prototype/Technology": {
    "name": "Prototype/Technology",
    "link": "/Prototype/Technology",
    "id": "technology",
    "parent": "PrototypeBase",
    "description": "A \u003ca href\u003d\"/Technologies\" title\u003d\"Technologies\"\u003etechnology\u003c/a\u003e.",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": false
      },
      {
        "name": "unit",
        "type": "table",
        "optional": false
      },
      {
        "name": "effects",
        "type": "Modifier[]",
        "description": "List of effects of the technology (applied when the technology is researched).",
        "optional": true
      },
      {
        "name": "enabled",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "expensive",
        "type": "Technology data|bool",
        "optional": true
      },
      {
        "name": "hidden",
        "type": "bool",
        "description": "Hides the technology from the tech screen.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "max_level",
        "type": "uint32|string",
        "description": "\"infinite\" for infinite technologies, otherwise uint.",
        "optional": true
      },
      {
        "name": "normal",
        "type": "Technology data|bool",
        "optional": true
      },
      {
        "name": "prerequisites",
        "type": "string[]",
        "description": "List of technologies needed to be researched before this one can be researched.",
        "optional": true
      },
      {
        "name": "upgrade",
        "type": "bool",
        "description": "When set to true, and the technology contains several levels, only the relevant one is displayed in the technology screen.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "visible_when_disabled",
        "type": "bool",
        "description": "Controls whether the technology is shown in the tech GUI when it is disabled (enabled \u003d false).",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/DeciderCombinator": {
    "name": "Prototype/DeciderCombinator",
    "link": "/Prototype/DeciderCombinator",
    "id": "decider-combinator",
    "parent": "Prototype/Combinator",
    "description": "A \u003ca href\u003d\"/Decider_combinator\" title\u003d\"Decider combinator\"\u003edecider combinator\u003c/a\u003e.",
    "properties": [
      {
        "name": "equal_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "greater_or_equal_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "greater_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "less_or_equal_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "less_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "not_equal_symbol_sprites",
        "type": "Sprite4Way",
        "optional": false
      }
    ]
  },
  "Prototype/HighlightBoxEntity": {
    "name": "Prototype/HighlightBoxEntity",
    "link": "/Prototype/HighlightBoxEntity",
    "id": "highlight-box",
    "parent": "Prototype/Entity",
    "description": "Used to attach graphics to entities during runtime.",
    "properties": []
  },
  "PrototypeBase": {
    "name": "PrototypeBase",
    "link": "/PrototypeBase",
    "description": "The abstract base for prototypes. PrototypeBase defines the common features of prototypes, such as localization and order.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "\u003cp\u003eUnique textual identification of the prototype.\u003c/p\u003e\u003cp\u003eFor a list of all names used in vanilla, see \u003ca href\u003d\"/Data.raw\" title\u003d\"Data.raw\"\u003edata.raw\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eMay not contain \u003ccode\u003e.\u003c/code\u003e, may not exceed a length of 200 characters.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "localised_description",
        "type": "LocalisedString",
        "description": "Overwrites the description set in the \u003ca href\u003d\"/Tutorial:Localisation#Localising_simple_strings\" title\u003d\"Tutorial:Localisation\"\u003elocale file\u003c/a\u003e. The description is usually shown in the tooltip of the prototype.",
        "optional": true
      },
      {
        "name": "localised_name",
        "type": "LocalisedString",
        "description": "Overwrites the name set in the \u003ca href\u003d\"/Tutorial:Localisation#Localising_simple_strings\" title\u003d\"Tutorial:Localisation\"\u003elocale file\u003c/a\u003e. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.",
        "optional": true
      },
      {
        "name": "order",
        "type": "Order",
        "description": "\u003cp\u003eUsed to order items in inventory, recipes and GUI\u0027s.\u003c/p\u003e\u003cp\u003eMay not exceed a length of 200 characters.\u003c/p\u003e",
        "optional": true
      }
    ]
  },
  "Prototype/Market": {
    "name": "Prototype/Market",
    "link": "/Prototype/Market",
    "id": "market",
    "parent": "Prototype/EntityWithHealth",
    "description": "Offers can be added to a market and they are shown when opening the entity. Offers allow to spend items to get research bonuses or items.",
    "properties": [
      {
        "name": "picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "allow_access_to_all_forces",
        "type": "bool",
        "description": "Whether all forces are allowed to open this market.",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/Lab": {
    "name": "Prototype/Lab",
    "link": "/Prototype/Lab",
    "id": "lab",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Lab\" title\u003d\"Lab\"\u003elab\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Defines how this lab gets energy.",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "description": "The amount of energy this lab uses.",
        "optional": false
      },
      {
        "name": "inputs",
        "type": "string[]",
        "description": "A list of the names of science packs that cane be used in this lab.",
        "optional": false
      },
      {
        "name": "off_animation",
        "type": "Animation",
        "description": "The animation that plays when the lab is idle.",
        "optional": false
      },
      {
        "name": "on_animation",
        "type": "Animation",
        "description": "The animation that plays when the lab is active.",
        "optional": false
      },
      {
        "name": "allowed_effects",
        "type": "EffectTypeLimitation",
        "description": "Sets the module effects that are allowed to be used on this lab.",
        "optional": true
      },
      {
        "name": "base_productivity",
        "type": "float",
        "description": "Productivity bonus that this machine always has.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "entity_info_icon_shift",
        "type": "vector",
        "description": "Shift of the \"alt-mode icon\" relative to the lab\u0027s center.",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "module_specification",
        "type": "ModuleSpecification",
        "description": "The number of module slots.",
        "optional": true
      },
      {
        "name": "researching_speed",
        "type": "double",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/MapGenPresets": {
    "name": "Prototype/MapGenPresets",
    "link": "/Prototype/MapGenPresets",
    "id": "map-gen-presets",
    "description": "The available map gen presets. Only 1 instance of this prototype can exist.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "Name of the map-gen-presets. Must be \"default\" since only one instances of this prototype can be defined.",
        "optional": false
      }
    ]
  },
  "Prototype/FlyingRobot": {
    "name": "Prototype/FlyingRobot",
    "link": "/Prototype/FlyingRobot",
    "parent": "Prototype/EntityWithHealth",
    "description": "Abstract base for construcion/logistics and combat robots.",
    "properties": [
      {
        "name": "speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "energy_per_move",
        "type": "Energy",
        "description": "How much does it cost to move 1 meter.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "energy_per_tick",
        "type": "Energy",
        "_default": "0",
        "optional": true
      },
      {
        "name": "max_energy",
        "type": "Energy",
        "description": "How much energy can be stored in the batteries.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "max_speed",
        "type": "double",
        "description": "The maximum speed of the robot. Useful to limit the impact of \u003ca href\u003d\"/Worker_robot_speed_(research)\" title\u003d\"Worker robot speed (research)\"\u003eworker robot speed (research)\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "max_to_charge",
        "type": "float",
        "description": "The robot will never go to charge when it has more energy than this.",
        "_default": "0.95",
        "optional": true
      },
      {
        "name": "min_to_charge",
        "type": "float",
        "description": "The robot will always go to charge when it has less energy than this.",
        "_default": "0.2",
        "optional": true
      },
      {
        "name": "speed_multiplier_when_out_of_energy",
        "type": "float",
        "description": "Some robots simply crash, some slowdown but keep going. 0 means crash.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/MouseCursor": {
    "name": "Prototype/MouseCursor",
    "link": "/Prototype/MouseCursor",
    "id": "mouse-cursor",
    "description": "Used by Prototype/SelectionTool#mouse_cursor.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "Name of the prototype.",
        "optional": false
      },
      {
        "name": "filename",
        "type": "FileName",
        "description": "Has to be present if \u003ccode\u003esystem_cursor\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "hot_pixel_x",
        "type": "int16",
        "description": "Has to be present if \u003ccode\u003esystem_cursor\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "hot_pixel_y",
        "type": "int16",
        "description": "Has to be present if \u003ccode\u003esystem_cursor\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "system_cursor",
        "type": "string",
        "description": "One of \"arrow\", \"i-beam\", \"crosshair\", \"wait-arrow\", \"size-all\", \"no\" and \"hand\". Either this or the other three properties have to be present.",
        "optional": true
      }
    ]
  },
  "Prototype/Equipment": {
    "name": "Prototype/Equipment",
    "link": "/Prototype/Equipment",
    "parent": "PrototypeBase",
    "description": "Abstract base of all equipment modules. Equipment modules can be inserted into Prototype/EquipmentGrids.",
    "properties": [
      {
        "name": "categories",
        "type": "string[]",
        "description": "An array of \u003ca href\u003d\"/Prototype/EquipmentCategory\" title\u003d\"Prototype/EquipmentCategory\"\u003ePrototype/EquipmentCategory\u003c/a\u003e names. Sets the categories of the equipment. It can only be inserted into \u003ca href\u003d\"/Prototype/EquipmentGrid#equipment_categories\" title\u003d\"Prototype/EquipmentGrid\"\u003egrids\u003c/a\u003e with at least one matching category.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric energy source.",
        "optional": false
      },
      {
        "name": "shape",
        "type": "EquipmentShape",
        "description": "How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.",
        "optional": false
      },
      {
        "name": "sprite",
        "type": "Sprite",
        "description": "The graphics to use when this equipment is shown inside an equipment grid.",
        "optional": false
      },
      {
        "name": "ability_icon",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "background_border_color",
        "type": "Color",
        "description": "The color that the border of the background of this equipment should have when shown inside an equipment grid.",
        "optional": true
      },
      {
        "name": "background_color",
        "type": "Color",
        "description": "The color that the background of this equipment should have when shown inside an equipment grid.",
        "optional": true
      },
      {
        "name": "grabbed_background_color",
        "type": "Color",
        "description": "The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.",
        "optional": true
      },
      {
        "name": "take_result",
        "type": "string",
        "description": "Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.",
        "optional": true
      }
    ]
  },
  "Prototype/TileEffect": {
    "name": "Prototype/TileEffect",
    "link": "/Prototype/TileEffect",
    "id": "tile-effect",
    "description": "Used to define the parameters for the water shader.",
    "properties": [
      {
        "name": "animation_scale",
        "type": "one[]|two float",
        "optional": false
      },
      {
        "name": "animation_speed",
        "type": "float",
        "optional": false
      },
      {
        "name": "dark_threshold",
        "type": "one[]|two float",
        "optional": false
      },
      {
        "name": "foam_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "foam_color_multiplier",
        "type": "float",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the tile-effect. Must be \"water\" since only one instances of this prototype can be defined.",
        "optional": false
      },
      {
        "name": "reflection_threshold",
        "type": "one[]|two float",
        "optional": false
      },
      {
        "name": "specular_lightness",
        "type": "Color",
        "optional": false
      },
      {
        "name": "specular_threshold",
        "type": "one[]|two float",
        "optional": false
      },
      {
        "name": "texture",
        "type": "Sprite",
        "description": "Sprite size must be 512x512.",
        "optional": false
      },
      {
        "name": "tick_scale",
        "type": "float",
        "optional": false
      },
      {
        "name": "far_zoom",
        "type": "float",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "near_zoom",
        "type": "float",
        "_default": "2.0",
        "optional": true
      }
    ]
  },
  "Prototype/TrainPathAchievement": {
    "name": "Prototype/TrainPathAchievement",
    "link": "/Prototype/TrainPathAchievement",
    "id": "train-path-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player has a specified train path length.",
    "properties": [
      {
        "name": "minimum_distance",
        "type": "double",
        "description": "The achievement will trigger if a train path is longer than this.",
        "optional": false
      }
    ]
  },
  "Prototype/NamedNoiseExpression": {
    "name": "Prototype/NamedNoiseExpression",
    "link": "/Prototype/NamedNoiseExpression",
    "id": "noise-expression",
    "parent": "PrototypeBase",
    "description": "\u003cp\u003eA \u003ca href\u003d\"/Types/NoiseExpression\" title\u003d\"Types/NoiseExpression\"\u003eNoiseExpression\u003c/a\u003e together with a name.\u003c/p\u003e\u003cp\u003eThe base game uses named noise expressions to specify functions for many map properties to be used in map generation; e.g. the \"elevation\" expression is used to calculate elevation for every point on a map. For a list of the built-in named noise expressions, see \u003ca href\u003d\"/Data.raw#noise-expression\" title\u003d\"Data.raw\"\u003eData.raw#noise-expression\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eNamed noise expressions can be used by \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"http://lua-api.factorio.com/latest/Concepts.html#MapGenSettings\"\u003eMapGenSettings\u003c/a\u003e and \u003ca href\u003d\"/Types/MapGenPreset\" title\u003d\"Types/MapGenPreset\"\u003eTypes/MapGenPreset\u003c/a\u003e to override which named expression is used to calculate a given property by having an entry in \u003ccode\u003eproperty_expression_names\u003c/code\u003e e.g. \u003ccode\u003eelevation \u003d \"0.16-elevation\"\u003c/code\u003e.\u003cbr\u003eAlternate expressions can be made available in the map generator GUI by setting their \u003ccode\u003eintended_property\u003c/code\u003e to the name of the property they should override.\u003cbr\u003eNamed noise expressions can also be used by \u003ca href\u003d\"/Types/NoiseExpression#variable\" title\u003d\"Types/NoiseExpression\"\u003enoise variables\u003c/a\u003e, e.g. \u003ccode\u003enoise.var(\"my-named-expression\")\u003c/code\u003e.\u003c/p\u003e",
    "properties": [
      {
        "name": "expression",
        "type": "NoiseExpression",
        "description": "The noise expression itself. This is where most of the noise magic happens.",
        "optional": false
      },
      {
        "name": "intended_property",
        "type": "string",
        "description": "\u003cp\u003eNames the property that this expression is intended to provide a value for, if any. This will make the expression show up as an option in the map generator GUI, unless it is the only expression with that intended property, in which case it will be hidden and selected by default.\u003c/p\u003e\u003cp\u003eNote that the \"Map type\" dropdown in the map generation GUI is actually a selector for \"elevation\" generators. If generators are available for other properties, the \"Map type\" dropdown in the GUI will be renamed to \"elevation\" and shown along with selectors for the other selectable properties.\u003c/p\u003e\u003cp\u003eFor example if a noise expression is intended to be used as an alternative temperature generator, \u003ccode\u003eintended_property\u003c/code\u003e should be \"temperature\". The base game uses the intended_properties  elevation, temperature, moisture and aux. For how the named noise expression with those intended_properties are used in the base game see the notable named noise expression list on \u003ca href\u003d\"/Types/NoiseExpression#variable\" title\u003d\"Types/NoiseExpression\"\u003eTypes/NoiseExpression#variable\u003c/a\u003e. Mods may add any other intended_property or modify the existing noise expressions to change/remove their intended properties. Furthermore, mods may remove the use of those named noise expressions from the map generation code or change what they affect.\u003c/p\u003e",
        "optional": true
      }
    ]
  },
  "Prototype/ConstantCombinator": {
    "name": "Prototype/ConstantCombinator",
    "link": "/Prototype/ConstantCombinator",
    "id": "constant-combinator",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Constant_combinator\" title\u003d\"Constant combinator\"\u003econstant combinator\u003c/a\u003e.",
    "properties": [
      {
        "name": "activity_led_light_offsets",
        "type": "vector[]",
        "optional": false
      },
      {
        "name": "activity_led_sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "optional": false
      },
      {
        "name": "item_slot_count",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "sprites",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "activity_led_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/VirtualSignal": {
    "name": "Prototype/VirtualSignal",
    "link": "/Prototype/VirtualSignal",
    "id": "virtual-signal",
    "parent": "PrototypeBase",
    "description": "A \u003ca href\u003d\"/Circuit_network#Virtual_signals\" title\u003d\"Circuit network\"\u003evirtual signal\u003c/a\u003e.",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": false
      },
      {
        "name": "special_signal",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "subgroup",
        "type": "string",
        "description": "The name of a \u003ca href\u003d\"/Prototype/ItemSubGroup\" title\u003d\"Prototype/ItemSubGroup\"\u003ePrototype/ItemSubGroup\u003c/a\u003e.",
        "_default": "virtual-signal",
        "optional": true
      }
    ]
  },
  "Prototype/AmbientSound": {
    "name": "Prototype/AmbientSound",
    "link": "/Prototype/AmbientSound",
    "id": "ambient-sound",
    "description": "This prototype is used to make sound, while playing the game. This includes the in-game\u0027s music, composed by Daniel James Taylor.",
    "properties": [
      {
        "name": "name",
        "type": "string",
        "description": "Unique textual identification of the prototype.",
        "optional": false
      },
      {
        "name": "sound",
        "type": "Sound",
        "description": "The sound file and volume.",
        "optional": false
      },
      {
        "name": "track_type",
        "type": "string",
        "description": "This lets the game know in what instances the audio file is played.",
        "optional": false
      },
      {
        "name": "weight",
        "type": "double",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/FireFlame": {
    "name": "Prototype/FireFlame",
    "link": "/Prototype/FireFlame",
    "id": "fire",
    "parent": "Prototype/Entity",
    "description": "A fire.",
    "properties": [
      {
        "name": "damage_per_tick",
        "type": "DamagePrototype",
        "optional": false
      },
      {
        "name": "spread_delay",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "spread_delay_deviation",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "add_fuel_cooldown",
        "type": "uint32",
        "_default": "10",
        "optional": true
      },
      {
        "name": "burnt_patch_alpha_default",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "burnt_patch_alpha_variations",
        "type": "table",
        "optional": true
      },
      {
        "name": "burnt_patch_lifetime",
        "type": "uint32",
        "_default": "1800",
        "optional": true
      },
      {
        "name": "burnt_patch_pictures",
        "type": "SpriteVariations",
        "optional": true
      },
      {
        "name": "damage_multiplier_decrease_per_tick",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "damage_multiplier_increase_per_added_fuel",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "delay_between_initial_flames",
        "type": "uint32",
        "_default": "10",
        "optional": true
      },
      {
        "name": "fade_in_duration",
        "type": "uint32",
        "_default": "30",
        "optional": true
      },
      {
        "name": "fade_out_duration",
        "type": "uint32",
        "_default": "30",
        "optional": true
      },
      {
        "name": "flame_alpha",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003euses_alternative_behavior\u003c/code\u003e is false.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "flame_alpha_deviation",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003euses_alternative_behavior\u003c/code\u003e is false.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "initial_flame_count",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "initial_lifetime",
        "type": "uint32",
        "_default": "300",
        "optional": true
      },
      {
        "name": "initial_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "lifetime_increase_by",
        "type": "uint32",
        "_default": "20",
        "optional": true
      },
      {
        "name": "lifetime_increase_cooldown",
        "type": "uint32",
        "_default": "10",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "limit_overlapping_particles",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "maximum_damage_multiplier",
        "type": "float",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "maximum_lifetime",
        "type": "uint32",
        "optional": true
      },
      {
        "name": "maximum_spread_count",
        "type": "uint16",
        "_default": "200",
        "optional": true
      },
      {
        "name": "on_damage_tick_effect",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "on_fuel_added_action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "particle_alpha",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003euses_alternative_behavior\u003c/code\u003e is true.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_alpha_blend_duration",
        "type": "uint16",
        "_default": "0",
        "optional": true
      },
      {
        "name": "particle_alpha_deviation",
        "type": "float",
        "description": "Only loaded if \u003ccode\u003euses_alternative_behavior\u003c/code\u003e is true.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "secondary_picture_fade_out_duration",
        "type": "uint32",
        "_default": "30",
        "optional": true
      },
      {
        "name": "secondary_picture_fade_out_start",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "secondary_pictures",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "secondary_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "small_tree_fire_pictures",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "smoke",
        "type": "SmokeSource[]",
        "optional": true
      },
      {
        "name": "smoke_fade_in_duration",
        "type": "uint32",
        "_default": "30",
        "optional": true
      },
      {
        "name": "smoke_fade_out_duration",
        "type": "uint32",
        "_default": "30",
        "optional": true
      },
      {
        "name": "smoke_source_pictures",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "spawn_entity",
        "type": "string",
        "description": "The name of an entity.",
        "optional": true
      },
      {
        "name": "tree_dying_factor",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "uses_alternative_behavior",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/GeneratorEquipment": {
    "name": "Prototype/GeneratorEquipment",
    "link": "/Prototype/GeneratorEquipment",
    "id": "generator-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Portable_fusion_reactor\" title\u003d\"Portable fusion reactor\"\u003eportable fusion reactor\u003c/a\u003e. Provides power in equipment grids. Can produce power for free or use a burner energy source.",
    "properties": [
      {
        "name": "power",
        "type": "Energy",
        "description": "The power output of this equipment.",
        "optional": false
      },
      {
        "name": "burner",
        "type": "EnergySource",
        "description": "Must be a burner energy source. If not defined, this equipment produces power for free.",
        "optional": true
      }
    ]
  },
  "Prototype/FlyingText": {
    "name": "Prototype/FlyingText",
    "link": "/Prototype/FlyingText",
    "id": "flying-text",
    "parent": "Prototype/Entity",
    "description": "An upwards flying text that disappears after a certain time (setting active \u003d false stops the flying and the disappearing.)",
    "properties": [
      {
        "name": "speed",
        "type": "float",
        "description": "How fast the text flies up. Seems to be tiles/tick.",
        "optional": false
      },
      {
        "name": "time_to_live",
        "type": "uint32",
        "description": "Time in ticks this flying-text lasts.",
        "optional": false
      },
      {
        "name": "text_alignment",
        "type": "string",
        "description": "Options: \"left\", \"center\", \"right\"",
        "_default": "left",
        "optional": true
      }
    ]
  },
  "Prototype/MovementBonusEquipment": {
    "name": "Prototype/MovementBonusEquipment",
    "link": "/Prototype/MovementBonusEquipment",
    "id": "movement-bonus-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Exoskeleton\" title\u003d\"Exoskeleton\"\u003eexoskeleton\u003c/a\u003e. Increases max speed of characters or acceleration of vehicles if they have this equipment in their grid.",
    "properties": [
      {
        "name": "energy_consumption",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "movement_bonus",
        "type": "double",
        "description": "Multiplier of the character speed/vehicle acceleration.",
        "optional": false
      }
    ]
  },
  "Prototype/EnergyShieldEquipment": {
    "name": "Prototype/EnergyShieldEquipment",
    "link": "/Prototype/EnergyShieldEquipment",
    "id": "energy-shield-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Energy_shield\" title\u003d\"Energy shield\"\u003eEnergy shield\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_per_shield",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "max_shield_value",
        "type": "float",
        "optional": false
      }
    ]
  },
  "Prototype/Item": {
    "name": "Prototype/Item",
    "link": "/Prototype/Item",
    "id": "item",
    "parent": "PrototypeBase",
    "description": "Possible configuration for all items.",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": false
      },
      {
        "name": "stack_size",
        "type": "ItemCountType",
        "description": "Count of items of the same name that can be stored in one inventory slot. Must be 1 when \u003ccode\u003estackable\u003c/code\u003e is false.",
        "optional": false
      },
      {
        "name": "burnt_result",
        "type": "string",
        "description": "The item that is the result when this item gets burned as fuel.",
        "optional": true
      },
      {
        "name": "dark_background_icons, dark_background_icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": true
      },
      {
        "name": "default_request_amount",
        "type": "ItemCountType",
        "optional": true
      },
      {
        "name": "flags",
        "type": "ItemPrototypeFlags",
        "description": "Specifies some properties of the item.",
        "optional": true
      },
      {
        "name": "fuel_acceleration_multiplier",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "fuel_category",
        "type": "string",
        "description": "Must exist when a fuel_value is defined. Name of one of the \u003ca href\u003d\"/Prototype/FuelCategory\" title\u003d\"Prototype/FuelCategory\"\u003efuel categories\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "fuel_emissions_multiplier",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "fuel_glow_color",
        "type": "Color",
        "description": "Colors the glow of the burner energy source when this fuel is burned.",
        "optional": true
      },
      {
        "name": "fuel_top_speed_multiplier",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "fuel_value",
        "type": "Energy",
        "description": "Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.",
        "_default": "0J",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "description": "Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, \u003ccode\u003eicon/icons\u003c/code\u003e will be used. Maximum number of variations is 16.",
        "optional": true
      },
      {
        "name": "place_as_tile",
        "type": "PlaceAsTile",
        "optional": true
      },
      {
        "name": "place_result",
        "type": "string",
        "description": "Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying \u003ccode\u003elocalised_name\u003c/code\u003e on this item, it will be used instead.",
        "optional": true
      },
      {
        "name": "placed_as_equipment_result",
        "type": "string",
        "optional": true
      },
      {
        "name": "rocket_launch_product",
        "type": "ItemProductPrototype",
        "optional": true
      },
      {
        "name": "rocket_launch_products",
        "type": "ItemProductPrototype[]",
        "optional": true
      },
      {
        "name": "subgroup",
        "type": "string",
        "description": "Empty text of subgroup is not allowed. (You can ommit the definition to get the default \"other\").",
        "_default": "other",
        "optional": true
      },
      {
        "name": "wire_count",
        "type": "ItemCountType",
        "description": "The number of items needed to connect 2 entities with this as wire. In the base game, \u003ca href\u003d\"/Green_wire\" title\u003d\"Green wire\"\u003egreen wire\u003c/a\u003e, \u003ca href\u003d\"/Red_wire\" title\u003d\"Red wire\"\u003ered wire\u003c/a\u003e and \u003ca href\u003d\"/Copper_cable\" title\u003d\"Copper cable\"\u003ecopper cable\u003c/a\u003e have this set to 1.",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/DeconstructibleTileProxy": {
    "name": "Prototype/DeconstructibleTileProxy",
    "link": "/Prototype/DeconstructibleTileProxy",
    "id": "deconstructible-tile-proxy",
    "parent": "Prototype/Entity",
    "description": "Entity used to signify that the tile below it should be deconstructed.",
    "properties": []
  },
  "Prototype/ConstructWithRobotsAchievement": {
    "name": "Prototype/ConstructWithRobotsAchievement",
    "link": "/Prototype/ConstructWithRobotsAchievement",
    "id": "construct-with-robots-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player constructs enough entities with construction robots.",
    "properties": [
      {
        "name": "limited_to_one_game",
        "type": "bool",
        "description": "If this is false, the player carries over their statistics from this achievement through all their saves.",
        "optional": false
      },
      {
        "name": "amount",
        "type": "uint32",
        "description": "This will trigger the achievement, if enough entities were placed using construction robots.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "more_than_manually",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/EntityParticle": {
    "name": "Prototype/EntityParticle",
    "link": "/Prototype/EntityParticle",
    "id": "particle",
    "parent": "Prototype/Entity",
    "description": "Deprecated in 0.18. The type \"particle\" has been obsoleted and cannot be created. See \u003ca href\u003d\"/Prototype/Particle\" title\u003d\"Prototype/Particle\"\u003ePrototype/Particle\u003c/a\u003e for particles.",
    "properties": []
  },
  "Prototype/Fluid": {
    "name": "Prototype/Fluid",
    "link": "/Prototype/Fluid",
    "id": "fluid",
    "parent": "PrototypeBase",
    "description": "A fluid.",
    "properties": [
      {
        "name": "base_color",
        "type": "Color",
        "description": "Used by bars that show the fluid color, like the flamethrower turret fill bar in the tooltip, or the fill bar for the fluidwagon tooltip; and for the pipe windows and storage tank fill gauges.",
        "optional": false
      },
      {
        "name": "default_temperature",
        "type": "double",
        "description": "Also the minimum temperature of the fluid. Has to be lower than \u003ccode\u003emax_temperature\u003c/code\u003e.",
        "optional": false
      },
      {
        "name": "flow_color",
        "type": "Color",
        "description": "Used only for pipe windows or storage tank fill gauges.",
        "optional": false
      },
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "optional": false
      },
      {
        "name": "max_temperature",
        "type": "double",
        "optional": false
      },
      {
        "name": "emissions_multiplier",
        "type": "double",
        "description": "Scales pollution generated when the fluid is consumed.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "fuel_value",
        "type": "Energy",
        "_default": "0J",
        "optional": true
      },
      {
        "name": "gas_temperature",
        "type": "double",
        "description": "Above this temperature the \u003ccode\u003egas_flow\u003c/code\u003e animation is used to display the fluid inside storage tanks and pipes.",
        "optional": true
      },
      {
        "name": "heat_capacity",
        "type": "Energy",
        "description": "Joule needed to heat 1 Unit by 1 °C.",
        "_default": "1KJ",
        "optional": true
      },
      {
        "name": "hidden",
        "type": "bool",
        "description": "Hides the fluid from the signal selection screen.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "subgroup",
        "type": "string",
        "description": "The value of this property may not be an empty string. It either has to be nil, or a non-empty string.",
        "_default": "fluid",
        "optional": true
      }
    ]
  },
  "Prototype/Gun": {
    "name": "Prototype/Gun",
    "link": "/Prototype/Gun",
    "id": "gun",
    "parent": "Prototype/Item",
    "description": "A gun. A weapon to deal damage to entities.",
    "properties": [
      {
        "name": "attack_parameters",
        "type": "AttackParameters",
        "description": "The information the item needs to know in order to know what ammo it requires, the sounds, and range.",
        "optional": false
      }
    ]
  },
  "Prototype/ArtilleryTurret": {
    "name": "Prototype/ArtilleryTurret",
    "link": "/Prototype/ArtilleryTurret",
    "id": "artillery-turret",
    "parent": "Prototype/EntityWithHealth",
    "description": "An \u003ca href\u003d\"/Artillery_turret\" title\u003d\"Artillery turret\"\u003eartillery turret\u003c/a\u003e.",
    "properties": [
      {
        "name": "ammo_stack_limit",
        "type": "ItemCountType",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "automated_ammo_count",
        "type": "ItemCountType",
        "optional": false
      },
      {
        "name": "gun",
        "type": "string",
        "description": "Name of an item.",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "manual_range_modifier",
        "type": "double",
        "description": "Must be \u003e 0.",
        "optional": false
      },
      {
        "name": "turret_rotation_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "alert_when_attacking",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "base_picture",
        "type": "Animation4Way",
        "optional": true
      },
      {
        "name": "base_picture_render_layer",
        "type": "RenderLayer",
        "_default": "lower-object",
        "optional": true
      },
      {
        "name": "base_picture_secondary_draw_order",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "base_shift",
        "type": "vector",
        "optional": true
      },
      {
        "name": "cannon_barrel_light_direction",
        "type": "Vector3D",
        "optional": true
      },
      {
        "name": "cannon_barrel_pictures",
        "type": "RotatedSprite",
        "optional": true
      },
      {
        "name": "cannon_barrel_recoil_shiftings",
        "type": "Vector3D[]",
        "optional": true
      },
      {
        "name": "cannon_barrel_recoil_shiftings_load_correction_matrix",
        "type": "Vector3D[]",
        "description": "Only loaded if \u003ccode\u003ecannon_barrel_recoil_shiftings\u003c/code\u003e is loaded.",
        "optional": true
      },
      {
        "name": "cannon_base_pictures",
        "type": "RotatedSprite",
        "optional": true
      },
      {
        "name": "cannon_parking_frame_count",
        "type": "uint16",
        "_default": "0",
        "optional": true
      },
      {
        "name": "cannon_parking_speed",
        "type": "uint16",
        "_default": "1",
        "optional": true
      },
      {
        "name": "disable_automatic_firing",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "rotating_sound",
        "type": "InterruptibleSound",
        "optional": true
      },
      {
        "name": "rotating_stopped_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "turn_after_shooting_cooldown",
        "type": "uint16",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/GodController": {
    "name": "Prototype/GodController",
    "link": "/Prototype/GodController",
    "id": "god-controller",
    "description": "Properties of the god controller.",
    "properties": [
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      },
      {
        "name": "item_pickup_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "loot_pickup_distance",
        "type": "double",
        "optional": false
      },
      {
        "name": "mining_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "movement_speed",
        "type": "double",
        "description": "Must be \u003e\u003d 0.34375.",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the god-controller. Must be \"default\" since only one instances of this prototype can be defined.",
        "_default": "default",
        "optional": false
      },
      {
        "name": "crafting_categories",
        "type": "string[]",
        "description": "Names of the crafting categories the player can craft recipes from.",
        "optional": true
      },
      {
        "name": "mining_categories",
        "type": "string[]",
        "description": "Names of the crafting categories the player can craft recipes from.",
        "optional": true
      }
    ]
  },
  "Prototype/FlameThrowerExplosion": {
    "name": "Prototype/FlameThrowerExplosion",
    "link": "/Prototype/FlameThrowerExplosion",
    "id": "flame-thrower-explosion",
    "parent": "Prototype/Explosion",
    "description": "Explosion that can deal damage.",
    "properties": [
      {
        "name": "damage",
        "type": "DamagePrototype",
        "optional": false
      },
      {
        "name": "slow_down_factor",
        "type": "double",
        "optional": false
      }
    ]
  },
  "Prototype/ResourceEntity": {
    "name": "Prototype/ResourceEntity",
    "link": "/Prototype/ResourceEntity",
    "id": "resource",
    "parent": "Prototype/Entity",
    "description": "A mineable/gatherable entity.",
    "properties": [
      {
        "name": "stage_counts",
        "type": "uint32[]",
        "description": "Number of stages the animation has.",
        "optional": false
      },
      {
        "name": "stages",
        "type": "AnimationVariations",
        "description": "Entity\u0027s graphics, using a graphic sheet, with variation and depletion. At least one stage must be defined.",
        "optional": false
      },
      {
        "name": "category",
        "type": "string",
        "description": "The category for the resource. Available categories in vanilla can be found here: \u003ca href\u003d\"/Data.raw#resource-category\" title\u003d\"Data.raw\"\u003eData.raw#resource-category\u003c/a\u003e",
        "_default": "basic-solid",
        "optional": true
      },
      {
        "name": "effect_animation_period",
        "type": "float",
        "description": "How long it takes \u003ccode\u003estages_effect\u003c/code\u003e to go from \u003ccode\u003emin_effect_alpha\u003c/code\u003e to \u003ccode\u003emax_effect_alpha\u003c/code\u003e.",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "effect_animation_period_deviation",
        "type": "float",
        "description": "How much \u003ccode\u003eeffect_animation_period\u003c/code\u003e can deviate from its original value. Used to make the stages effect alpha change look less uniform.",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "effect_darkness_multiplier",
        "type": "float",
        "description": "How much the surface darkness should affect the alpha of \u003ccode\u003estages_effect\u003c/code\u003e.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "highlight",
        "type": "bool",
        "description": "If the resource should be highlighted when holding a mining drill that can mine it (holding a pumpjack highlights crude-oil in the base game).",
        "_default": "false",
        "optional": true
      },
      {
        "name": "infinite",
        "type": "bool",
        "description": "If the ore is infinitely minable, or if it will eventually run out of resource.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "infinite_depletion_amount",
        "type": "uint32",
        "description": "\u003ci\u003eEvery time an infinite-type resource \"ticks\" lower it\u0027s lowered by that amount.\u003c/i\u003e -- \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://forums.factorio.com/viewtopic.php?t\u003d47093\u0026amp;p\u003d271243#p271115\"\u003eRseding91\u003c/a\u003e",
        "_default": "1",
        "optional": true
      },
      {
        "name": "map_grid",
        "type": "bool",
        "description": "Whether the resource should have a grid pattern on the map instead of a solid map color.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "max_effect_alpha",
        "type": "float",
        "description": "Maximal alpha value of \u003ccode\u003estages_effect\u003c/code\u003e.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "min_effect_alpha",
        "type": "float",
        "description": "Minimal alpha value of \u003ccode\u003estages_effect\u003c/code\u003e.",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "minimum",
        "type": "uint32",
        "description": "Must be not 0 when \u003ccode\u003einfinite \u003d true\u003c/code\u003e.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "mining_visualisation_tint",
        "type": "Color",
        "description": "Defaults to the resources map color if left unset and map color is set, otherwise defaults to white if left unset.",
        "optional": true
      },
      {
        "name": "normal",
        "type": "uint32",
        "description": "Must be not 0 when \u003ccode\u003einfinite \u003d true\u003c/code\u003e.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "randomize_visual_position",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "resource_patch_search_radius",
        "type": "uint32",
        "description": "When hovering over this resource in the map view: How far to search for other resource patches of this type to display as one (summing amount, white outline).",
        "_default": "3",
        "optional": true
      },
      {
        "name": "stages_effect",
        "type": "AnimationVariations",
        "description": "An effect that can be overlayed above the normal ore graphics. Used in the base game to make \u003ca href\u003d\"/Uranium_ore\" title\u003d\"Uranium ore\"\u003euranium ore\u003c/a\u003e glow.",
        "optional": true
      },
      {
        "name": "tree_removal_max_distance",
        "type": "double",
        "description": "Must be positive when \u003ccode\u003etree_removal_probability\u003c/code\u003e is set.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "tree_removal_probability",
        "type": "double",
        "description": "Must be positive.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "walking_sound",
        "type": "Sound",
        "description": "Sound played when the player walks over this resource.",
        "optional": true
      }
    ]
  },
  "Prototype/Explosion": {
    "name": "Prototype/Explosion",
    "link": "/Prototype/Explosion",
    "id": "explosion",
    "parent": "Prototype/Entity",
    "description": "Used to play an animation and a sound.",
    "properties": [
      {
        "name": "animations",
        "type": "AnimationVariations",
        "optional": false
      },
      {
        "name": "beam",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "correct_rotation",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "fade_in_duration",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "fade_out_duration",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "height",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "light_intensity_factor_final",
        "type": "float",
        "description": "Silently clamped to be between 0 and 1.",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "light_intensity_factor_initial",
        "type": "float",
        "description": "Silently clamped to be between 0 and 1.",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "light_intensity_peak_end_progress",
        "type": "float",
        "_default": "0.9",
        "optional": true
      },
      {
        "name": "light_intensity_peak_start_progress",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "light_size_factor_final",
        "type": "float",
        "description": "Silently clamped to be between 0 and 1.",
        "_default": "0.1",
        "optional": true
      },
      {
        "name": "light_size_factor_initial",
        "type": "float",
        "description": "Silently clamped to be between 0 and 1.",
        "_default": "0.05",
        "optional": true
      },
      {
        "name": "light_size_peak_end_progress",
        "type": "float",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "light_size_peak_start_progress",
        "type": "float",
        "_default": "0.1",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "explosion",
        "optional": true
      },
      {
        "name": "rotate",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "scale",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "scale_animation_speed",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "scale_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "scale_end",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "scale_in_duration",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "scale_increment_per_tick",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "scale_initial",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "scale_initial_deviation",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "scale_out_duration",
        "type": "uint8",
        "_default": "0",
        "optional": true
      },
      {
        "name": "smoke",
        "type": "string",
        "description": "Name of a trivial-smoke prototype. Mandatory if smoke_count \u003e 0.",
        "optional": true
      },
      {
        "name": "smoke_count",
        "type": "uint16",
        "_default": "0",
        "optional": true
      },
      {
        "name": "smoke_slow_down_factor",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "sound",
        "type": "Sound",
        "optional": true
      }
    ]
  },
  "Prototype/GuiStyle": {
    "name": "Prototype/GuiStyle",
    "link": "/Prototype/GuiStyle",
    "id": "gui-style",
    "description": "The available gui styles. Only 1 instance of this prototype can exist.",
    "properties": [
      {
        "name": "default_sprite_priority",
        "type": "SpritePriority",
        "_default": "medium",
        "optional": false
      },
      {
        "name": "default_sprite_scale",
        "type": "double",
        "_default": "1",
        "optional": false
      },
      {
        "name": "default_tileset",
        "type": "FileName",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the gui-style. Must be \"default\" since only one instance of this prototype can be defined.",
        "_default": "default",
        "optional": false
      }
    ]
  },
  "Prototype/RocketSiloRocketShadow": {
    "name": "Prototype/RocketSiloRocketShadow",
    "link": "/Prototype/RocketSiloRocketShadow",
    "id": "rocket-silo-rocket-shadow",
    "parent": "Prototype/Entity",
    "description": "The shadow of the rocket inside the rocket silo.",
    "properties": []
  },
  "Prototype/Generator": {
    "name": "Prototype/Generator",
    "link": "/Prototype/Generator",
    "id": "generator",
    "parent": "Prototype/EntityWithHealth",
    "description": "An entity that produces power from fluids, for example a \u003ca href\u003d\"/Steam_engine\" title\u003d\"Steam engine\"\u003esteam engine\u003c/a\u003e.",
    "properties": [
      {
        "name": "effectivity",
        "type": "double",
        "description": "The effectivity of the generator with 0.5 being half as effective as a regular steam-engine generator.",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric energy source.",
        "optional": false
      },
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "fluid_usage_per_tick",
        "type": "double",
        "description": "The number of fluid units the generator uses per tick.",
        "optional": false
      },
      {
        "name": "horizontal_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "maximum_temperature",
        "type": "double",
        "optional": false
      },
      {
        "name": "vertical_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "burns_fluid",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "max_power_output",
        "type": "Energy",
        "optional": true
      },
      {
        "name": "min_perceived_performance",
        "type": "double",
        "description": "Animation runs at least this fast. This corresponds to the sound.",
        "_default": "0.25",
        "optional": true
      },
      {
        "name": "performance_to_sound_speedup",
        "type": "double",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "scale_fluid_usage",
        "type": "bool",
        "description": "Scales the generator\u0027s fluid usage to its maximum power output.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "smoke",
        "type": "SmokeSource[]",
        "description": "Array of 1 or more smoke sources.",
        "optional": true
      }
    ]
  },
  "Prototype/SpectatorController": {
    "name": "Prototype/SpectatorController",
    "link": "/Prototype/SpectatorController",
    "id": "spectator-controller",
    "description": "Properties of the spectator controller.",
    "properties": [
      {
        "name": "movement_speed",
        "type": "double",
        "description": "Must be \u003e\u003d 0.34375.",
        "optional": false
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the spectator-controller. Must be \"default\" since only one instances of this prototype can be defined.",
        "_default": "default",
        "optional": false
      }
    ]
  },
  "Prototype/CombatRobotCountAchievement": {
    "name": "Prototype/CombatRobotCountAchievement",
    "link": "/Prototype/CombatRobotCountAchievement",
    "id": "combat-robot-count",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player has a certain robot follower count.",
    "properties": [
      {
        "name": "count",
        "type": "uint32",
        "description": "This will trigger the achievement, if player\u0027s current robot count is over this amount.",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/CargoWagon": {
    "name": "Prototype/CargoWagon",
    "link": "/Prototype/CargoWagon",
    "id": "cargo-wagon",
    "parent": "Prototype/RollingStock",
    "description": "A \u003ca href\u003d\"/Cargo_wagon\" title\u003d\"Cargo wagon\"\u003ecargo wagon\u003c/a\u003e.",
    "properties": [
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      }
    ]
  },
  "Prototype/PowerSwitch": {
    "name": "Prototype/PowerSwitch",
    "link": "/Prototype/PowerSwitch",
    "id": "power-switch",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Power_switch\" title\u003d\"Power switch\"\u003epower switch\u003c/a\u003e.",
    "properties": [
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "optional": false
      },
      {
        "name": "led_off",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "led_on",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "left_wire_connection_point",
        "type": "WireConnectionPoint",
        "optional": false
      },
      {
        "name": "overlay_loop",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "overlay_start",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "overlay_start_delay",
        "type": "uint8",
        "optional": false
      },
      {
        "name": "power_on_animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "right_wire_connection_point",
        "type": "WireConnectionPoint",
        "optional": false
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "wire_max_distance",
        "type": "double",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/PipeToGround": {
    "name": "Prototype/PipeToGround",
    "link": "/Prototype/PipeToGround",
    "id": "pipe-to-ground",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Pipe_to_ground\" title\u003d\"Pipe to ground\"\u003epipe to ground\u003c/a\u003e.",
    "properties": [
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "Sprite[]",
        "optional": false
      }
    ]
  },
  "Prototype/Container": {
    "name": "Prototype/Container",
    "link": "/Prototype/Container",
    "id": "container",
    "parent": "Prototype/EntityWithHealth",
    "description": "A generic container, such as a chest. Can not be rotated.",
    "properties": [
      {
        "name": "inventory_size",
        "type": "uint16",
        "description": "The number of slots in this container.",
        "optional": false
      },
      {
        "name": "picture",
        "type": "Sprite",
        "description": "The picture displayed for this entity.",
        "optional": false
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites",
        "description": "The pictures displayed for circuit connections to this container.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "description": "Defines how wires visually connect to this container.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this container.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "enable_inventory_bar",
        "type": "bool",
        "description": "If the red inventory limiter bar is enabled.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "scale_info_icons",
        "type": "bool",
        "description": "If the icons of items shown in alt-mode should be scaled to the containers size.",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/SolarPanel": {
    "name": "Prototype/SolarPanel",
    "link": "/Prototype/SolarPanel",
    "id": "solar-panel",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Solar_panel\" title\u003d\"Solar panel\"\u003esolar panel\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Sets how this solar panel connects to the energy network. The most relevant property seems to be the output_priority. Has to be an electric energy source.",
        "optional": false
      },
      {
        "name": "picture",
        "type": "SpriteVariations",
        "description": "The picture displayed for this solar panel.",
        "optional": false
      },
      {
        "name": "production",
        "type": "Energy",
        "description": "The maximum amount of power this solar panel can produce.",
        "optional": false
      },
      {
        "name": "overlay",
        "type": "SpriteVariations",
        "description": "Overlay has to be empty or have same number of variations as picture.",
        "optional": true
      }
    ]
  },
  "Prototype/ActiveDefenseEquipment": {
    "name": "Prototype/ActiveDefenseEquipment",
    "link": "/Prototype/ActiveDefenseEquipment",
    "id": "active-defense-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Discharge_defense\" title\u003d\"Discharge defense\"\u003edischarge defense\u003c/a\u003e.",
    "properties": [
      {
        "name": "attack_parameters",
        "type": "AttackParameters",
        "optional": false
      },
      {
        "name": "automatic",
        "type": "bool",
        "description": "If false, the equipment must have an \u003ccode\u003eability_icon\u003c/code\u003e specified.",
        "optional": false
      }
    ]
  },
  "Prototype/KillAchievement": {
    "name": "Prototype/KillAchievement",
    "link": "/Prototype/KillAchievement",
    "id": "kill-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player destroys a certain amount of an entity, with a specific damage type.",
    "properties": [
      {
        "name": "amount",
        "type": "uint32",
        "description": "This is the amount of entity of the specified type the player needs to destroy to receive the achievement.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "damage_type",
        "type": "string",
        "description": "This defines how the player needs to destroy the specific entity.",
        "optional": true
      },
      {
        "name": "in_vehicle",
        "type": "bool",
        "description": "This defines if the player needs to be in a vehicle.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "personally",
        "type": "bool",
        "description": "This defines to make sure you are the one driving, for instance, in a tank rather than an automated train.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "to_kill",
        "type": "string",
        "description": "This defines which entity (by name) needs to be destroyed in order to receive the achievement.",
        "optional": true
      },
      {
        "name": "type_to_kill",
        "type": "string",
        "description": "This defines what entity type needs to be destroyed in order to receive the achievement.",
        "optional": true
      }
    ]
  },
  "Prototype/Lamp": {
    "name": "Prototype/Lamp",
    "link": "/Prototype/Lamp",
    "id": "lamp",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Lamp\" title\u003d\"Lamp\"\u003elamp\u003c/a\u003e to provide light, using energy.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric or void energy source.",
        "optional": false
      },
      {
        "name": "energy_usage_per_tick",
        "type": "Energy",
        "description": "The amount of energy the lamp uses. Must be greater than \u003e 0.",
        "optional": false
      },
      {
        "name": "picture_off",
        "type": "Sprite",
        "description": "The lamps graphics when it\u0027s off.",
        "optional": false
      },
      {
        "name": "picture_on",
        "type": "Sprite",
        "description": "The lamps graphics when it\u0027s on.",
        "optional": false
      },
      {
        "name": "always_on",
        "type": "bool",
        "description": "Whether the lamp should always be on.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites",
        "description": "The pictures displayed for circuit connections to this lamp.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "description": "Defines how wires visually connect to this lamp.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "darkness_for_all_lamps_off",
        "type": "float",
        "description": "darkness_for_all_lamps_on must be \u003e darkness_for_all_lamps_off. Values must be between 0 and 1.",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "darkness_for_all_lamps_on",
        "type": "float",
        "description": "darkness_for_all_lamps_on must be \u003e darkness_for_all_lamps_off. Values must be between 0 and 1.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "glow_color_intensity",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "glow_render_mode",
        "type": "string",
        "description": "Options: \"additive\", \"multiplicative\"",
        "_default": "additive",
        "optional": true
      },
      {
        "name": "glow_size",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "description": "What color the lamp will be when it is on, and receiving power.",
        "optional": true
      },
      {
        "name": "light_when_colored",
        "type": "LightDefinition",
        "description": "This refers to when the light is in a circuit network, and is lit a certain color based on a Circuit value.",
        "optional": true
      },
      {
        "name": "signal_to_color_mapping",
        "type": "SignalColorMapping[]",
        "optional": true
      }
    ]
  },
  "Prototype/Boiler": {
    "name": "Prototype/Boiler",
    "link": "/Prototype/Boiler",
    "id": "boiler",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Boiler\" title\u003d\"Boiler\"\u003eboiler\u003c/a\u003e.",
    "properties": [
      {
        "name": "burning_cooldown",
        "type": "uint32",
        "description": "\u003cp\u003eControls for how long the boiler will show the fire and fire_glow after the energy source runs out of energy.\u003c/p\u003e\u003cp\u003eNote that fire and fire_glow alpha is set to the light intensity of the energy source, so 0 light intensity means the fire is invisible. For burner energy sources, the light intensity will reach zero rather quickly after the boiler runs out of fuel, effectively capping the time that fire and fire_glow will be shown after the boiler runs out of fuel.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "energy_consumption",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "energy_source",
        "type": "EnergySource",
        "optional": false
      },
      {
        "name": "fire",
        "type": "table",
        "optional": false
      },
      {
        "name": "fire_glow",
        "type": "table",
        "description": "\u003cp\u003eTable with the following optional members.\u003c/p\u003e\u003cp\u003eThis means the table itself is required, but can be empty.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "output_fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "structure",
        "type": "table",
        "optional": false
      },
      {
        "name": "target_temperature",
        "type": "double",
        "optional": false
      },
      {
        "name": "fire_flicker_enabled",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "fire_glow_flicker_enabled",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "mode",
        "type": "string",
        "description": "One of \"heat-water-inside\" or \"output-to-separate-pipe\".",
        "_default": "heat-water-inside",
        "optional": true
      },
      {
        "name": "patch",
        "type": "table",
        "optional": true
      }
    ]
  },
  "Prototype/RobotWithLogisticInterface": {
    "name": "Prototype/RobotWithLogisticInterface",
    "link": "/Prototype/RobotWithLogisticInterface",
    "parent": "Prototype/FlyingRobot",
    "description": "The common properties of logistic and construction robots represented by an abstract prototype.",
    "properties": [
      {
        "name": "cargo_centered",
        "type": "vector",
        "optional": false
      },
      {
        "name": "max_payload_size",
        "type": "ItemCountType",
        "optional": false
      },
      {
        "name": "draw_cargo",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "idle",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "in_motion",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "shadow_idle",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "shadow_in_motion",
        "type": "RotatedAnimation",
        "optional": true
      }
    ]
  },
  "Prototype/LogisticRobot": {
    "name": "Prototype/LogisticRobot",
    "link": "/Prototype/LogisticRobot",
    "id": "logistic-robot",
    "parent": "Prototype/RobotWithLogisticInterface",
    "description": "A \u003ca href\u003d\"/Logistic_robot\" title\u003d\"Logistic robot\"\u003elogistic robot\u003c/a\u003e.",
    "properties": [
      {
        "name": "idle_with_cargo",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "in_motion_with_cargo",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "shadow_idle_with_cargo",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "shadow_in_motion_with_cargo",
        "type": "RotatedAnimation",
        "optional": true
      }
    ]
  },
  "Prototype/Locomotive": {
    "name": "Prototype/Locomotive",
    "link": "/Prototype/Locomotive",
    "id": "locomotive",
    "parent": "Prototype/RollingStock",
    "description": "A \u003ca href\u003d\"/Locomotive\" title\u003d\"Locomotive\"\u003elocomotive\u003c/a\u003e.",
    "properties": [
      {
        "name": "burner or energy_source",
        "type": "EnergySource",
        "description": "Must be a burner energy source when using \"burner\", otherwise it can also be a void energy source.",
        "optional": false
      },
      {
        "name": "max_power",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "reversing_power_modifier",
        "type": "double",
        "optional": false
      },
      {
        "name": "front_light",
        "type": "LightDefinition",
        "optional": true
      }
    ]
  },
  "Prototype/ProgrammableSpeaker": {
    "name": "Prototype/ProgrammableSpeaker",
    "link": "/Prototype/ProgrammableSpeaker",
    "id": "programmable-speaker",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Programmable_speaker\" title\u003d\"Programmable speaker\"\u003eprogrammable speaker\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Must be an electric or void energy source.",
        "optional": false
      },
      {
        "name": "energy_usage_per_tick",
        "type": "Energy",
        "optional": false
      },
      {
        "name": "instruments",
        "type": "table",
        "optional": false
      },
      {
        "name": "maximum_polyphony",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "sprite",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "audible_distance_modifier",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/BlueprintBook": {
    "name": "Prototype/BlueprintBook",
    "link": "/Prototype/BlueprintBook",
    "id": "blueprint-book",
    "parent": "Prototype/ItemWithInventory",
    "description": "A \u003ca href\u003d\"/Blueprint_book\" title\u003d\"Blueprint book\"\u003eblueprint book\u003c/a\u003e.",
    "properties": [
      {
        "name": "show_in_library",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/Furnace": {
    "name": "Prototype/Furnace",
    "link": "/Prototype/Furnace",
    "id": "furnace",
    "parent": "Prototype/CraftingMachine",
    "description": "A furnace. Normal furnaces only process \"smelting\" category recipes, but you can make furnaces that process other \u003ca href\u003d\"/Prototype/RecipeCategory\" title\u003d\"Prototype/RecipeCategory\"\u003erecipe categories\u003c/a\u003e. The difference to assembling machines is that furnaces automatically choose their recipe based on input.",
    "properties": [
      {
        "name": "result_inventory_size",
        "type": "ItemStackIndex",
        "description": "The number of output slots.",
        "optional": false
      },
      {
        "name": "source_inventory_size",
        "type": "ItemStackIndex",
        "description": "The number of input slots, but not more than 1.",
        "optional": false
      }
    ]
  },
  "Prototype/Inserter": {
    "name": "Prototype/Inserter",
    "link": "/Prototype/Inserter",
    "id": "inserter",
    "parent": "Prototype/EntityWithHealth",
    "description": "An \u003ca href\u003d\"/Inserter\" title\u003d\"Inserter\"\u003einserter\u003c/a\u003e.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "Defines how this inserter gets energy. The emissions set on the energy source are ignored so inserters cannot produce pollution.",
        "optional": false
      },
      {
        "name": "extension_speed",
        "type": "double",
        "_default": "nul",
        "optional": false
      },
      {
        "name": "hand_base_picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hand_base_shadow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hand_closed_picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hand_closed_shadow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hand_open_picture",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "hand_open_shadow",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "insert_position",
        "type": "vector",
        "optional": false
      },
      {
        "name": "pickup_position",
        "type": "vector",
        "optional": false
      },
      {
        "name": "platform_picture",
        "type": "Sprite4Way",
        "optional": false
      },
      {
        "name": "rotation_speed",
        "type": "double",
        "optional": false
      },
      {
        "name": "allow_burner_leech",
        "type": "bool",
        "description": "Whether this burner inserter can fuel itself from the fuel inventory of the entity it is picking up items from.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "allow_custom_vectors",
        "type": "bool",
        "description": "Whether pickup and insert position can be set run-time.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "chases_belt_items",
        "type": "bool",
        "description": "Whether the inserter hand should move to the items it picks up from belts, leading to item chasing behaviour. If this is off, the inserter hand will stay in the center of the belt and any items picked up from the edges of the belt \"teleport\" to the inserter hand.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "default_stack_control_input_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_held_item",
        "type": "bool",
        "description": "Whether the item that the inserter is holding should be drawn.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_inserter_arrow",
        "type": "bool",
        "description": "Whether the yellow arrow that indicates the drop point of the inserter and the line that indicates the pickup position should be drawn.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "energy_per_movement",
        "type": "Energy",
        "_default": "0",
        "optional": true
      },
      {
        "name": "energy_per_rotation",
        "type": "Energy",
        "_default": "0",
        "optional": true
      },
      {
        "name": "filter_count",
        "type": "uint8",
        "description": "How many filters this inserter has. Maximum count of filtered items in inserter is 5.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "hand_size",
        "type": "double",
        "description": "Used to determine how long the arm of the inserter is when drawing it. Does not affect gameplay. The lower the value, the straighter the arm. Increasing the value will give the inserter a bigger bend due to its longer parts.",
        "_default": "0.75",
        "optional": true
      },
      {
        "name": "stack",
        "type": "bool",
        "description": "Whether this inserter is considered a stack inserter. Relevant for determining how \u003ca href\u003d\"/Inserter_capacity_bonus_(research)\" title\u003d\"Inserter capacity bonus (research)\"\u003eInserter capacity bonus (research)\u003c/a\u003e applies to the inserter.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "use_easter_egg",
        "type": "bool",
        "description": "Whether the inserter should be able to fish \u003ca href\u003d\"/Raw_fish\" title\u003d\"Raw fish\"\u003efish\u003c/a\u003e.",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/RailChainSignal": {
    "name": "Prototype/RailChainSignal",
    "link": "/Prototype/RailChainSignal",
    "id": "rail-chain-signal",
    "parent": "Prototype/RailSignalBase",
    "description": "A \u003ca href\u003d\"/Rail_chain_signal\" title\u003d\"Rail chain signal\"\u003erail chain signal\u003c/a\u003e.",
    "properties": [
      {
        "name": "selection_box_offsets",
        "type": "vector[]",
        "description": "Array of 8 vectors.",
        "optional": false
      },
      {
        "name": "blue_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "default_blue_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      }
    ]
  },
  "Prototype/AmmoTurret": {
    "name": "Prototype/AmmoTurret",
    "link": "/Prototype/AmmoTurret",
    "id": "ammo-turret",
    "parent": "Prototype/Turret",
    "description": "A turret that consumes ammo items.",
    "properties": [
      {
        "name": "automated_ammo_count",
        "type": "ItemCountType",
        "optional": false
      },
      {
        "name": "inventory_size",
        "type": "ItemStackIndex",
        "optional": false
      },
      {
        "name": "entity_info_icon_shift",
        "type": "vector",
        "description": "Shift of the \"alt-mode icon\" relative to the turret\u0027s position.",
        "optional": true
      }
    ]
  },
  "Prototype/ElectricPole": {
    "name": "Prototype/ElectricPole",
    "link": "/Prototype/ElectricPole",
    "id": "electric-pole",
    "parent": "Prototype/EntityWithHealth",
    "description": "An electric pole - part of the \u003ca href\u003d\"/Electric_system\" title\u003d\"Electric system\"\u003eelectric system\u003c/a\u003e.",
    "properties": [
      {
        "name": "connection_points",
        "type": "WireConnectionPoint[]",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "RotatedSprite",
        "optional": false
      },
      {
        "name": "supply_area_distance",
        "type": "double",
        "description": "\u003cp\u003eThe \"radius\" of this pole\u0027s supply area. Corresponds to half of the \"supply area\" in the item tooltip. If this is 3.5, the pole will have a 7X7 supply area.\u003c/p\u003e\u003cp\u003eMax value is 64.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "active_picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "maximum_wire_distance",
        "type": "double",
        "description": "\u003cp\u003eThe maximum distance between this pole and any other connected pole - if two poles are farther apart than this, they cannot be connected together directly. Corresponds to \"wire reach\" in the item tooltip.\u003c/p\u003e\u003cp\u003eMax value is 64.\u003c/p\u003e",
        "_default": "0",
        "optional": true
      },
      {
        "name": "radius_visualisation_picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "track_coverage_during_build_by_moving",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/RailPlanner": {
    "name": "Prototype/RailPlanner",
    "link": "/Prototype/RailPlanner",
    "id": "rail-planner",
    "parent": "Prototype/Item",
    "description": "A \u003ca href\u003d\"/Rail_planner\" title\u003d\"Rail planner\"\u003erail planner\u003c/a\u003e.",
    "properties": [
      {
        "name": "curved_rail",
        "type": "string",
        "description": "The name of an entity of the type \"curved-rail\". The first item to place of the rail must be this rail planner.",
        "optional": false
      },
      {
        "name": "straight_rail",
        "type": "string",
        "description": "The name of an entity of the type \"straight-rail\". The first item to place of the rail must be this rail planner.",
        "optional": false
      }
    ]
  },
  "Prototype/SimpleEntityWithOwner": {
    "name": "Prototype/SimpleEntityWithOwner",
    "link": "/Prototype/SimpleEntityWithOwner",
    "id": "simple-entity-with-owner",
    "parent": "Prototype/EntityWithHealth",
    "description": "Has a force, but unlike Prototype/SimpleEntityWithForce it is only attacked if the biters get stuck on it.",
    "properties": [
      {
        "name": "animations",
        "type": "AnimationVariations",
        "description": "Must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "force_visibility",
        "type": "ForceCondition",
        "_default": "all",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "description": "Must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "description": "Must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "random_animation_offset",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "random_variation_on_create",
        "type": "bool",
        "description": "Whether a random graphics variation is chosen when placing the entity/creating it via script/creating it via map generation. If this is false, the entity will use the first variation instead of a random one.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "secondary_draw_order",
        "type": "int8",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/Particle": {
    "name": "Prototype/Particle",
    "link": "/Prototype/Particle",
    "id": "optimized-particle",
    "parent": "PrototypeBase",
    "description": "An entity with a limited lifetime that can use trigger effects.",
    "properties": [
      {
        "name": "life_time",
        "type": "uint16",
        "description": "Can\u0027t be 1.",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "AnimationVariations",
        "description": "Picture variation count and individual frame count must be equal to shadow variation count.",
        "optional": false
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": false
      },
      {
        "name": "render_layer_when_on_ground",
        "type": "RenderLayer",
        "_default": "lower-object",
        "optional": false
      },
      {
        "name": "draw_shadow_when_on_ground",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "ended_in_water_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "ended_on_ground_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "fade_away_duration",
        "type": "uint16",
        "description": "Defaults to \u003ccode\u003elife_time\u003c/code\u003e / 5, but at most 60. If this is 0, it is silently changed to 1.",
        "optional": true
      },
      {
        "name": "mining_particle_frame_speed",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "movement_modifier",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "movement_modifier_when_on_ground",
        "type": "double",
        "_default": "0.8",
        "optional": true
      },
      {
        "name": "regular_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "regular_trigger_effect_frequency",
        "type": "uint32",
        "description": "Can\u0027t be 1.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "shadows",
        "type": "AnimationVariations",
        "description": "Shadow variation variation count and individual frame count must be equal to picture variation count.",
        "optional": true
      },
      {
        "name": "vertical_acceleration",
        "type": "float",
        "description": "Has to be \u003e\u003d -0.01 and \u003c\u003d 0.01.",
        "_default": "-0.004",
        "optional": true
      }
    ]
  },
  "Prototype/ProduceAchievement": {
    "name": "Prototype/ProduceAchievement",
    "link": "/Prototype/ProduceAchievement",
    "id": "produce-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player produces more than the specified amount of items.",
    "properties": [
      {
        "name": "amount",
        "type": "MaterialAmountType",
        "description": "This will set the amount of items or fluids needed to craft, for the player to complete the achievement.",
        "optional": false
      },
      {
        "name": "limited_to_one_game",
        "type": "bool",
        "description": "If this is false, the player carries over their statistics from this achievement through all their saves.",
        "optional": false
      },
      {
        "name": "fluid_product",
        "type": "string",
        "description": "This will tell the achievement what fluid the player needs to craft, to get the achievement.",
        "optional": true
      },
      {
        "name": "item_product",
        "type": "string",
        "description": "This will tell the achievement what item the player needs to craft, to get the achievement.",
        "optional": true
      }
    ]
  },
  "Prototype/Corpse": {
    "name": "Prototype/Corpse",
    "link": "/Prototype/Corpse",
    "id": "corpse",
    "parent": "Prototype/Entity",
    "description": "Used for corpses, for example the remnants when destroying buildings.",
    "properties": [
      {
        "name": "animation",
        "type": "RotatedAnimationVariations",
        "optional": true
      },
      {
        "name": "animation_overlay",
        "type": "RotatedAnimationVariations",
        "description": "Variation count must be the same as \u003ccode\u003eanimation\u003c/code\u003e variation count. Direction count must be the same as \u003ccode\u003eanimation\u003c/code\u003e direction count. Frame count must be the same as \u003ccode\u003eanimation\u003c/code\u003e frame count.",
        "optional": true
      },
      {
        "name": "animation_overlay_final_render_layer",
        "type": "RenderLayer",
        "_default": "corpse",
        "optional": true
      },
      {
        "name": "animation_overlay_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "animation_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "direction_shuffle",
        "type": "tables[] of uint16",
        "description": "An array of arrays of integers. Arrays are called \"groups\" and must all have the same size.",
        "optional": true
      },
      {
        "name": "dying_speed",
        "type": "float",
        "description": "Multiplier for #time_before_shading_off and #time_before_removed. Must be positive.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "final_render_layer",
        "type": "RenderLayer",
        "_default": "corpse",
        "optional": true
      },
      {
        "name": "ground_patch",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "ground_patch_fade_in_delay",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "ground_patch_fade_in_speed",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "ground_patch_fade_out_duration",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "ground_patch_fade_out_start",
        "type": "float",
        "_default": "0",
        "optional": true
      },
      {
        "name": "ground_patch_higher",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "ground_patch_render_layer",
        "type": "RenderLayer",
        "_default": "ground-patch",
        "optional": true
      },
      {
        "name": "remove_on_entity_placement",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "remove_on_tile_placement",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "shuffle_directions_at_frame",
        "type": "uint8",
        "_default": "1",
        "optional": true
      },
      {
        "name": "splash",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "splash_render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "splash_speed",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "time_before_removed",
        "type": "int32",
        "description": "Time in ticks this corpse lasts. May not be 0.",
        "_default": "7200",
        "optional": true
      },
      {
        "name": "time_before_shading_off",
        "type": "int32",
        "description": "Controls how long the corpse takes to fade, as in how long it takes to get from no transparency to full tranparency/removed. This time is not added to #time_before_removed, it is instead substracted from it. So by default, the corpse starts fading about 15 seconds before it gets removed.",
        "_default": "900",
        "optional": true
      },
      {
        "name": "use_tile_color_for_ground_patch_tint",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/AmmoCategory": {
    "name": "Prototype/AmmoCategory",
    "link": "/Prototype/AmmoCategory",
    "id": "ammo-category",
    "parent": "PrototypeBase",
    "description": "An ammo category. Each weapon has an ammo category, and can use any ammo with the same ammo category. Ammo categories can also be upgraded by technologies.",
    "properties": [
      {
        "name": "bonus_gui_order",
        "type": "Order",
        "optional": true
      }
    ]
  },
  "Prototype/Capsule": {
    "name": "Prototype/Capsule",
    "link": "/Prototype/Capsule",
    "id": "capsule",
    "parent": "Prototype/Item",
    "description": "A capsule, for example a \u003ca href\u003d\"/Combat_robot_capsules\" title\u003d\"Combat robot capsules\"\u003ecombat robot capsule\u003c/a\u003e or the \u003ca href\u003d\"/Raw_fish\" title\u003d\"Raw fish\"\u003eraw fish\u003c/a\u003e.",
    "properties": [
      {
        "name": "capsule_action",
        "type": "CapsuleAction",
        "optional": false
      },
      {
        "name": "radius_color",
        "type": "Color",
        "description": "Color of the range radius that is shown around the player when they hold the capsule.",
        "optional": true
      }
    ]
  },
  "Prototype/ItemWithEntityData": {
    "name": "Prototype/ItemWithEntityData",
    "link": "/Prototype/ItemWithEntityData",
    "id": "item-with-entity-data",
    "parent": "Prototype/Item",
    "description": "ItemWithEntityData saves data associated with the entity that it represents, for example the content of the equipment grid of a car.",
    "properties": []
  },
  "Prototype/ConstructionRobot": {
    "name": "Prototype/ConstructionRobot",
    "link": "/Prototype/ConstructionRobot",
    "id": "construction-robot",
    "parent": "Prototype/RobotWithLogisticInterface",
    "description": "A \u003ca href\u003d\"/Construction_robot\" title\u003d\"Construction robot\"\u003econstruction robot\u003c/a\u003e.",
    "properties": [
      {
        "name": "construction_vector",
        "type": "vector",
        "optional": false
      },
      {
        "name": "smoke",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "sparks",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "working",
        "type": "RotatedAnimation",
        "optional": true
      },
      {
        "name": "working_light",
        "type": "LightDefinition",
        "optional": true
      }
    ]
  },
  "Prototype/NoiseLayer": {
    "name": "Prototype/NoiseLayer",
    "link": "/Prototype/NoiseLayer",
    "id": "noise-layer",
    "parent": "PrototypeBase",
    "description": "A noise layer used by the \u003ca href\u003d\"/Types/AutoplaceSpecification#noise_layer\" title\u003d\"Types/AutoplaceSpecification\"\u003eautoplace system\u003c/a\u003e. For a list of built-in layers, see \u003ca href\u003d\"/Data.raw#noise-layer\" title\u003d\"Data.raw\"\u003eData.raw#noise-layer\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/Shortcut": {
    "name": "Prototype/Shortcut",
    "link": "/Prototype/Shortcut",
    "id": "shortcut",
    "parent": "PrototypeBase",
    "description": "Definition for a shortcut in the \u003ca href\u003d\"/Shortcut_bar\" title\u003d\"Shortcut bar\"\u003eshortcut bar\u003c/a\u003e.",
    "properties": [
      {
        "name": "action",
        "type": "string",
        "description": "One of \"toggle-alt-mode\", \"undo\", \"copy\", \"cut\", \"paste\", \"import-string\", \"toggle-personal-roboport\", \"toggle-equipment-movement-bonus\", \"create-blueprint-item\" and \"lua\".",
        "optional": false
      },
      {
        "name": "icon",
        "type": "Sprite",
        "optional": false
      },
      {
        "name": "associated_control_input",
        "type": "string",
        "description": "Name of a custom input or vanilla control. Used to show the keybind in the tooltip of the shortcut.",
        "optional": true
      },
      {
        "name": "disabled_icon",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "disabled_small_icon",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "item_to_create",
        "type": "string",
        "description": "Name of a Prototype/Item. The item to create when clicking on a shortcut with the action set to \"create-blueprint-item\".",
        "optional": true
      },
      {
        "name": "small_icon",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "style",
        "type": "string",
        "description": "One of \"default\", \"blue\", \"red\" and \"green\".",
        "_default": "default",
        "optional": true
      },
      {
        "name": "technology_to_unlock",
        "type": "string",
        "description": "Name of a Prototype/Technology. The technology that must be researched before this shortcut can be used.",
        "optional": true
      },
      {
        "name": "toggleable",
        "type": "bool",
        "description": "Must be enabled for the Factorio API to be able to set the toggled state on the shortcut button, see \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/LuaPlayer.html#LuaPlayer.set_shortcut_toggled\"\u003eLuaPlayer.set_shortcut_toggled\u003c/a\u003e.",
        "optional": true
      }
    ]
  },
  "Prototype/Smoke": {
    "name": "Prototype/Smoke",
    "link": "/Prototype/Smoke",
    "parent": "Prototype/Entity",
    "description": "Abstract entity that has an animation.",
    "properties": [
      {
        "name": "animation",
        "type": "Animation",
        "optional": false
      },
      {
        "name": "affected_by_wind",
        "type": "bool",
        "description": "Smoke always moves randomly unless \u003ccode\u003emovement_slow_down_factor\u003c/code\u003e is 0. If \u003ccode\u003eaffected_by_wind\u003c/code\u003e is true, the smoke will also be moved by wind.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "cyclic",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "duration",
        "type": "uint32",
        "description": "May not be 0 if cyclic is true.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "end_scale",
        "type": "double",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "fade_away_duration",
        "type": "uint32",
        "description": "\u003ccode\u003efade_in_duration\u003c/code\u003e + \u003ccode\u003efade_away_duration\u003c/code\u003e must be \u0026lt;\u003d \u003ccode\u003eduration\u003c/code\u003e.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "fade_in_duration",
        "type": "uint32",
        "description": "\u003ccode\u003efade_in_duration\u003c/code\u003e + \u003ccode\u003efade_away_duration\u003c/code\u003e must be \u0026lt;\u003d \u003ccode\u003eduration\u003c/code\u003e.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "glow_animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "glow_fade_away_duration",
        "type": "uint32",
        "optional": true
      },
      {
        "name": "movement_slow_down_factor",
        "type": "double",
        "description": "Value between 0 and 1, with 0 being no movement.",
        "_default": "0.995",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "smoke",
        "optional": true
      },
      {
        "name": "show_when_smoke_off",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "spread_duration",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "start_scale",
        "type": "double",
        "_default": "1.0",
        "optional": true
      }
    ]
  },
  "Prototype/Wall": {
    "name": "Prototype/Wall",
    "link": "/Prototype/Wall",
    "id": "wall",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Wall\" title\u003d\"Wall\"\u003ewall\u003c/a\u003e.",
    "properties": [
      {
        "name": "pictures",
        "type": "table",
        "optional": false
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_point",
        "type": "WireConnectionPoint",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "connected_gate_visualization",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "default_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "visual_merge_group",
        "type": "uint32",
        "description": "Different walls will visually connect to each other if their merge group is the same.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "wall_diode_green",
        "type": "Sprite4Way",
        "optional": true
      },
      {
        "name": "wall_diode_green_light_bottom",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_green_light_left",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_green_light_right",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_green_light_top",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_red",
        "type": "Sprite4Way",
        "optional": true
      },
      {
        "name": "wall_diode_red_light_bottom",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_red_light_left",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_red_light_right",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "wall_diode_red_light_top",
        "type": "LightDefinition",
        "optional": true
      }
    ]
  },
  "Prototype/Tree": {
    "name": "Prototype/Tree",
    "link": "/Prototype/Tree",
    "id": "tree",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Tree\" title\u003d\"Tree\"\u003etree\u003c/a\u003e.",
    "properties": [
      {
        "name": "colors",
        "type": "Color[]",
        "description": "Array. Mandatory if \u003ccode\u003evariations\u003c/code\u003e exists.",
        "optional": true
      },
      {
        "name": "darkness_of_burnt_tree",
        "type": "float",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "description": "Either this or \u003ccode\u003evariations\u003c/code\u003e must exist.",
        "optional": true
      },
      {
        "name": "variation_weights",
        "type": "double[]",
        "optional": true
      },
      {
        "name": "variations",
        "type": "TreePrototypeVariation[]",
        "description": "Array. Can\u0027t be empty. Either this or \u003ccode\u003epictures\u003c/code\u003e must exist.",
        "optional": true
      }
    ]
  },
  "Prototype/RailSignalBase": {
    "name": "Prototype/RailSignalBase",
    "link": "/Prototype/RailSignalBase",
    "parent": "Prototype/EntityWithHealth",
    "description": "The abstract base entity for both rail signals.",
    "properties": [
      {
        "name": "animation",
        "type": "RotatedAnimation",
        "optional": false
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "default_green_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "default_orange_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "default_red_output_signal",
        "type": "SignalIDConnector",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "green_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "orange_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "rail_piece",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "red_light",
        "type": "LightDefinition",
        "optional": true
      }
    ]
  },
  "Prototype/TransportBeltConnectable": {
    "name": "Prototype/TransportBeltConnectable",
    "link": "/Prototype/TransportBeltConnectable",
    "parent": "Prototype/EntityWithHealth",
    "description": "Abstract class that anything that is a belt or can connect to belts uses",
    "properties": [
      {
        "name": "speed",
        "type": "double",
        "description": "\u003cp\u003eThe speed of the belt (since 0.17): \u003ccode\u003espeed × 480 \u003d x Items/second\u003c/code\u003e\u003c/p\u003e\u003cp\u003eThe raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt\u0027s maximum density - e.g. \u003ccode\u003ex items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) \u003d \u0026lt;speed\u0026gt; belts/tick\u003c/code\u003e where a \"belt\" is the size of one tile. See \u003ca href\u003d\"/Transport_belts/Physics\" title\u003d\"Transport belts/Physics\"\u003eTransport_belts/Physics\u003c/a\u003e for more details.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "animation_speed_coefficient",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "belt_animation_set",
        "type": "table",
        "description": "Either this, or all of the properties below this one have to present.",
        "optional": true
      },
      {
        "name": "belt_horizontal",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "belt_vertical",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "ending_bottom",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "ending_patch",
        "type": "Sprite4Way",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "ending_side",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "ending_top",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "ends_with_stopper",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "starting_bottom",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "starting_side",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      },
      {
        "name": "starting_top",
        "type": "Animation",
        "description": "Mandatory if \u003ccode\u003ebelt_animation_set\u003c/code\u003e is not present.",
        "optional": true
      }
    ]
  },
  "Prototype/FluidStream": {
    "name": "Prototype/FluidStream",
    "link": "/Prototype/FluidStream",
    "id": "stream",
    "parent": "Prototype/Entity",
    "description": "Used for example for the handheld flamethrower.",
    "properties": [
      {
        "name": "particle_horizontal_speed",
        "type": "double",
        "description": "Must be larger than 0. particle_horizontal_speed has to be greater than particle_horizontal_speed_deviation.",
        "optional": false
      },
      {
        "name": "particle_horizontal_speed_deviation",
        "type": "double",
        "optional": false
      },
      {
        "name": "particle_spawn_interval",
        "type": "uint16",
        "optional": false
      },
      {
        "name": "particle_vertical_acceleration",
        "type": "double",
        "optional": false
      },
      {
        "name": "action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "ground_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "initial_action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "oriented_particle",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "particle",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "particle_alpha_per_part",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_buffer_size",
        "type": "uint32",
        "description": "Has to be less than 256.",
        "_default": "20",
        "optional": true
      },
      {
        "name": "particle_end_alpha",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_fade_out_duration",
        "type": "uint16",
        "description": "Will be set to 1 by the game if less than 1.",
        "_default": "65553",
        "optional": true
      },
      {
        "name": "particle_fade_out_threshold",
        "type": "float",
        "description": "Value between 0 and 1.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_loop_exit_threshold",
        "type": "float",
        "description": "Value between 0 and 1.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "particle_loop_frame_count",
        "type": "uint16",
        "description": "Will be set to 1 by the game if less than 1.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_scale_per_part",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_spawn_timeout",
        "type": "uint16",
        "optional": true
      },
      {
        "name": "particle_start_alpha",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "particle_start_scale",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "progress_to_create_smoke",
        "type": "float",
        "_default": "0.5",
        "optional": true
      },
      {
        "name": "shadow",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "shadow_scale_enabled",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "smoke_sources",
        "type": "SmokeSource[]",
        "optional": true
      },
      {
        "name": "special_neutral_target_damage",
        "type": "DamagePrototype",
        "optional": true
      },
      {
        "name": "spine_animation",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "stream_light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "target_position_deviation",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "width",
        "type": "float",
        "_default": "0.5",
        "optional": true
      }
    ]
  },
  "Prototype/EnemySpawner": {
    "name": "Prototype/EnemySpawner",
    "link": "/Prototype/EnemySpawner",
    "id": "unit-spawner",
    "parent": "Prototype/EntityWithHealth",
    "description": "Can spawn entities. Used for biter/spitter nests.",
    "properties": [
      {
        "name": "animations",
        "type": "AnimationVariations",
        "optional": false
      },
      {
        "name": "call_for_help_radius",
        "type": "double",
        "optional": false
      },
      {
        "name": "max_count_of_owned_units",
        "type": "uint32",
        "description": "Count of enemies this spawner can sustain.",
        "optional": false
      },
      {
        "name": "max_friends_around_to_spawn",
        "type": "uint32",
        "description": "How many friendly units are required within the \u003ca href\u003d\"#spawning_radius\"\u003espawning_radius\u003c/a\u003e of this spawner for it to stop producing more units.",
        "optional": false
      },
      {
        "name": "max_richness_for_spawn_shift",
        "type": "double",
        "description": "Max richness to determine spawn shift. Spawn shift is linear interpolation between 0 and maxSpawnShift.",
        "optional": false
      },
      {
        "name": "max_spawn_shift",
        "type": "double",
        "description": "Caps how much richness can be added on top of evolution when spawning units. (See also \u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://www.reddit.com/r/factorio/comments/8pjscm/friday_facts_246_the_gui_update_part_3/e0bttnp/\"\u003e[1]\u003c/a\u003e)",
        "optional": false
      },
      {
        "name": "pollution_absorption_absolute",
        "type": "double",
        "optional": false
      },
      {
        "name": "pollution_absorption_proportional",
        "type": "double",
        "optional": false
      },
      {
        "name": "result_units",
        "type": "UnitSpawnDefinition[]",
        "description": "Array of the \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003eentities\u003c/a\u003e that this spawner can spawn and their spawn probabilities. The sum of probabilities is expected to be 1.0. The array must not be empty.",
        "optional": false
      },
      {
        "name": "spawning_cooldown",
        "type": "two[] double",
        "description": "Ticks for cooldown after unit is spawned.",
        "optional": false
      },
      {
        "name": "spawning_radius",
        "type": "double",
        "description": "How far from the spawner can the units be spawned.",
        "optional": false
      },
      {
        "name": "spawning_spacing",
        "type": "double",
        "description": "What spaces should be between the spawned units.",
        "optional": false
      },
      {
        "name": "dying_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "integration",
        "type": "SpriteVariations",
        "optional": true
      },
      {
        "name": "max_darkness_to_spawn",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "min_darkness_to_spawn",
        "type": "float",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "random_animation_offset",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/MiningDrill": {
    "name": "Prototype/MiningDrill",
    "link": "/Prototype/MiningDrill",
    "id": "mining-drill",
    "parent": "Prototype/EntityWithHealth",
    "description": "A mining drill.",
    "properties": [
      {
        "name": "energy_source",
        "type": "EnergySource",
        "description": "The energy source of this mining drill.",
        "optional": false
      },
      {
        "name": "energy_usage",
        "type": "Energy",
        "description": "The amount of energy used by the drill while mining. Can\u0027t be less than or equal to 0.",
        "optional": false
      },
      {
        "name": "mining_speed",
        "type": "double",
        "description": "The speed of this drill.",
        "optional": false
      },
      {
        "name": "resource_categories",
        "type": "string[]",
        "description": "The names of the \u003ca href\u003d\"/Prototype/ResourceCategory\" title\u003d\"Prototype/ResourceCategory\"\u003ePrototype/ResourceCategory\u003c/a\u003e that can be mined by this drill. For a list on built-in categories, see \u003ca href\u003d\"/Data.raw#resource-category\" title\u003d\"Data.raw\"\u003eData.raw#resource-category\u003c/a\u003e.",
        "optional": false
      },
      {
        "name": "resource_searching_radius",
        "type": "double",
        "description": "\u003cp\u003eThe distance from the centre of the mining drill to search for resources in.\u003c/p\u003e\u003cp\u003eThis is 2.49 for electric mining drills (a 5x5 area) and 0.99 for burner mining drills (a 2x2 area). The drill searches resource outside its natural boundary box, which is 0.01 (the middle of the entity); making it 2.5 and 1.0 gives it another block radius.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "vector_to_place_result",
        "type": "vector",
        "description": "The position where the (mine) result is placed, when the mining drill is facing south (?).",
        "optional": false
      },
      {
        "name": "allowed_effects",
        "type": "EffectTypeLimitation",
        "optional": true
      },
      {
        "name": "animations",
        "type": "Animation4Way",
        "description": "Loaded only if \u003ccode\u003egraphics_set\u003c/code\u003e does not exist.",
        "optional": true
      },
      {
        "name": "base_picture",
        "type": "Sprite4Way",
        "description": "Used by the \u003ca href\u003d\"/Pumpjack\" title\u003d\"Pumpjack\"\u003epumpjack\u003c/a\u003e to have a static 4 way sprite.",
        "optional": true
      },
      {
        "name": "base_productivity",
        "type": "float",
        "description": "Productivity bonus that this machine always has.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "base_render_layer",
        "type": "RenderLayer",
        "_default": "lower-object",
        "optional": true
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "description": "The maximum circuit wire distance for this entity.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "graphics_set",
        "type": "MiningDrillGraphicsSet",
        "optional": true
      },
      {
        "name": "input_fluid_box",
        "type": "FluidBox",
        "optional": true
      },
      {
        "name": "module_specification",
        "type": "ModuleSpecification",
        "optional": true
      },
      {
        "name": "monitor_visualization_tint",
        "type": "Color",
        "description": "When this mining drill is connected to the circuit network, the resource that it is reading (either the entire resource patch, or the resource in the mining area of the drill, depending on circuit network setting), is tinted in this color when mousing over the mining drill.",
        "optional": true
      },
      {
        "name": "output_fluid_box",
        "type": "FluidBox",
        "optional": true
      },
      {
        "name": "radius_visualisation_picture",
        "type": "Sprite",
        "description": "The sprite used to show the range of the mining drill.",
        "optional": true
      },
      {
        "name": "storage_slots",
        "type": "ItemStackIndex",
        "description": "The output slot(s).",
        "_default": "1",
        "optional": true
      },
      {
        "name": "wet_mining_graphics_set",
        "type": "MiningDrillGraphicsSet",
        "optional": true
      }
    ]
  },
  "Prototype/Tool": {
    "name": "Prototype/Tool",
    "link": "/Prototype/Tool",
    "id": "tool",
    "parent": "Prototype/Item",
    "description": "Items with a \"durability\". Used for \u003ca href\u003d\"/Science_pack\" title\u003d\"Science pack\"\u003escience packs\u003c/a\u003e.",
    "properties": [
      {
        "name": "durability",
        "type": "double",
        "description": "The durability of this tool. Must be positive. Mandatory if \u003ccode\u003einfinite\u003c/code\u003e is false.",
        "optional": true
      },
      {
        "name": "durability_description_key",
        "type": "string",
        "_default": "description.durability-key",
        "optional": true
      },
      {
        "name": "durability_description_value",
        "type": "string",
        "_default": "description.durability-value",
        "optional": true
      },
      {
        "name": "infinite",
        "type": "bool",
        "description": "Whether this tool has infinite durability.",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/SolarPanelEquipment": {
    "name": "Prototype/SolarPanelEquipment",
    "link": "/Prototype/SolarPanelEquipment",
    "id": "solar-panel-equipment",
    "parent": "Prototype/Equipment",
    "description": "Used by \u003ca href\u003d\"/Portable_solar_panel\" title\u003d\"Portable solar panel\"\u003eportable solar panel\u003c/a\u003e.",
    "properties": [
      {
        "name": "power",
        "type": "Energy",
        "description": "How much power should be provided.",
        "optional": false
      }
    ]
  },
  "Prototype/EntityWithHealth": {
    "name": "Prototype/EntityWithHealth",
    "link": "/Prototype/EntityWithHealth",
    "parent": "Prototype/Entity",
    "description": "Abstract base of all entities with health in the game.",
    "properties": [
      {
        "name": "alert_when_damaged",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "attack_reaction",
        "type": "AttackReaction",
        "optional": true
      },
      {
        "name": "corpse",
        "type": "string|strings[]",
        "description": "Specifies the name(s) of the \u003ca href\u003d\"/Prototype/Corpse\" title\u003d\"Prototype/Corpse\"\u003ePrototype/Corpse\u003c/a\u003e entity to be used when this entity dies.",
        "optional": true
      },
      {
        "name": "create_ghost_on_death",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "damaged_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "dying_explosion",
        "type": "ExplosionDefinition|ExplosionDefinition[]",
        "description": "Either one \u003ca href\u003d\"/Types/ExplosionDefinition\" title\u003d\"Types/ExplosionDefinition\"\u003eExplosionDefinition\u003c/a\u003e or an array of them. The entities that are spawned in place of this one when it dies.",
        "optional": true
      },
      {
        "name": "dying_trigger_effect",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "healing_per_tick",
        "type": "float",
        "description": "The amount of health cured by tick naturally. Works only on active entities. (Todo explain)",
        "_default": "0",
        "optional": true
      },
      {
        "name": "hide_resistances",
        "type": "bool",
        "description": "Whether the resistances of this entity should be hidden in the entity tooltip.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "integration_patch",
        "type": "Sprite4Way",
        "description": "Sprite drawn on ground under the entity to make it feel more integrated into the ground.",
        "optional": true
      },
      {
        "name": "integration_patch_render_layer",
        "type": "RenderLayer",
        "_default": "lower-object",
        "optional": true
      },
      {
        "name": "loot",
        "type": "Loot",
        "description": "The loot is dropped on the ground when the entity is killed.",
        "optional": true
      },
      {
        "name": "max_health",
        "type": "float",
        "description": "The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.",
        "_default": "10",
        "optional": true
      },
      {
        "name": "random_corpse_variation",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "repair_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "repair_speed_modifier",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "resistances",
        "type": "Resistances",
        "optional": true
      }
    ]
  },
  "Prototype/EquipmentGrid": {
    "name": "Prototype/EquipmentGrid",
    "link": "/Prototype/EquipmentGrid",
    "id": "equipment-grid",
    "parent": "PrototypeBase",
    "description": "The prototype of an equipment grid, for example the one used in a \u003ca href\u003d\"/Power_armor\" title\u003d\"Power armor\"\u003epower armor\u003c/a\u003e.",
    "properties": [
      {
        "name": "equipment_categories",
        "type": "string[]",
        "description": "An array of \u003ca href\u003d\"/Prototype/EquipmentCategory\" title\u003d\"Prototype/EquipmentCategory\"\u003ePrototype/EquipmentCategory\u003c/a\u003e names. Only \u003ca href\u003d\"/Prototype/Equipment\" title\u003d\"Prototype/Equipment\"\u003ePrototype/Equipment\u003c/a\u003e with at least one of these categories can be inserted into the grid.",
        "optional": false
      },
      {
        "name": "height",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "width",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "locked",
        "type": "bool",
        "description": "Whether this locked from user interaction which means that the user cannot put equipment into or take equipment from this equipment grid.",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/LeafParticle": {
    "name": "Prototype/LeafParticle",
    "link": "/Prototype/LeafParticle",
    "id": "leaf-particle",
    "parent": "Prototype/EntityParticle",
    "description": "Deprecated in 0.18. Particles that are exclusively meant for leaves of trees. The type \"leaf-particle\" has been obsoleted and cannot be created. See \u003ca href\u003d\"/Prototype/Particle\" title\u003d\"Prototype/Particle\"\u003ePrototype/Particle\u003c/a\u003e for particles.",
    "properties": []
  },
  "Prototype/Module": {
    "name": "Prototype/Module",
    "link": "/Prototype/Module",
    "id": "module",
    "parent": "Prototype/Item",
    "description": "A \u003ca href\u003d\"/Module\" title\u003d\"Module\"\u003emodule\u003c/a\u003e.",
    "properties": [
      {
        "name": "category",
        "type": "string",
        "description": "The name of a \u003ca href\u003d\"/Prototype/ModuleCategory\" title\u003d\"Prototype/ModuleCategory\"\u003ePrototype/ModuleCategory\u003c/a\u003e. Used when upgrading modules: Ctrl + click modules into an entity and it will replace lower tier modules of the same category with higher tier modules.",
        "optional": false
      },
      {
        "name": "effect",
        "type": "Effect",
        "optional": false
      },
      {
        "name": "tier",
        "type": "uint32",
        "description": "Tier of the module inside its category. Used when upgrading modules: Ctrl + click modules into an entity and it will replace lower tier modules with higher tier modules if they have the same category.",
        "optional": false
      },
      {
        "name": "art_style",
        "type": "string",
        "description": "Chooses with what art style the module is shown inside beacons. See \u003ca href\u003d\"/Types/BeaconModuleVisualizations#art_style\" title\u003d\"Types/BeaconModuleVisualizations\"\u003eTypes/BeaconModuleVisualizations#art_style\u003c/a\u003e. Vanilla uses \"vanilla\" here.",
        "optional": true
      },
      {
        "name": "beacon_tint",
        "type": "Color[]",
        "optional": true
      },
      {
        "name": "limitation",
        "type": "string[]",
        "description": "Array of recipe names this module can be used on. If empty, the module can be used on all recipes.",
        "optional": true
      },
      {
        "name": "limitation_message_key",
        "type": "string",
        "description": "Mandatory when \u003ccode\u003elimitation\u003c/code\u003e is present. The locale key of the message that is shown when the player attempts to use the module on a recipe it can\u0027t be used on. The locale key will be prefixed with \u003ccode\u003eitem-limitation.\u003c/code\u003e (the \"category\" of the locale) by the game.",
        "optional": true
      },
      {
        "name": "requires_beacon_alt_mode",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/Vehicle": {
    "name": "Prototype/Vehicle",
    "link": "/Prototype/Vehicle",
    "parent": "Prototype/EntityWithHealth",
    "description": "Abstract base of all vehicles.",
    "properties": [
      {
        "name": "braking_power or braking_force",
        "type": "Energy|double",
        "optional": false
      },
      {
        "name": "energy_per_hit_point",
        "type": "double",
        "description": "The (movement) energy used per hit point (1 hit point \u003d 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: \u003ccode\u003edamage \u003d energy / energy_per_hit_point\u003c/code\u003e.",
        "optional": false
      },
      {
        "name": "friction or friction_force",
        "type": "double",
        "description": "Two different ways to set friction force. At least one must exist. Must be positive.",
        "optional": false
      },
      {
        "name": "weight",
        "type": "double",
        "description": "Must be positive. Weight of the entity used for physics calculation when car hits something.",
        "optional": false
      },
      {
        "name": "crash_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "equipment_grid",
        "type": "string",
        "description": "The name of the \u003ca href\u003d\"/Prototype/EquipmentGrid\" title\u003d\"Prototype/EquipmentGrid\"\u003eequipment grid\u003c/a\u003e this vehicle has.",
        "optional": true
      },
      {
        "name": "minimap_representation",
        "type": "Sprite",
        "description": "The sprite that represents this vehicle on the map/minimap.",
        "optional": true
      },
      {
        "name": "selected_minimap_representation",
        "type": "Sprite",
        "description": "The sprite that represents this vehicle on the map/minimap when it is selected.",
        "optional": true
      },
      {
        "name": "sound_minimum_speed",
        "type": "double",
        "description": "Must be positive. Sound is scaled by speed.",
        "optional": true
      },
      {
        "name": "sound_scaling_ratio",
        "type": "double",
        "description": "Must be positive. Sound is scaled by speed.",
        "_default": "1.0",
        "optional": true
      },
      {
        "name": "stop_trigger",
        "type": "TriggerEffect",
        "optional": true
      },
      {
        "name": "stop_trigger_speed",
        "type": "double",
        "_default": "0.0",
        "optional": true
      },
      {
        "name": "terrain_friction_modifier",
        "type": "float",
        "description": "Must be in the [0, 1] interval.",
        "_default": "1",
        "optional": true
      }
    ]
  },
  "Prototype/PlayerDamagedAchievement": {
    "name": "Prototype/PlayerDamagedAchievement",
    "link": "/Prototype/PlayerDamagedAchievement",
    "id": "player-damaged-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player receives damage.",
    "properties": [
      {
        "name": "minimum_damage",
        "type": "float",
        "description": "This will trigger the achievement, if the amount of damage taken by the dealer, is more than this.",
        "optional": false
      },
      {
        "name": "should_survive",
        "type": "bool",
        "description": "This sets the achievement to only trigger, if you survive the minimum amount of damage. If you don\u0027t need to survive, false.",
        "optional": false
      },
      {
        "name": "type_of_dealer",
        "type": "string",
        "description": "This will trigger the achievement, if the player takes damage from this specific entity type.",
        "optional": true
      }
    ]
  },
  "Prototype/Decorative": {
    "name": "Prototype/Decorative",
    "link": "/Prototype/Decorative",
    "id": "optimized-decorative",
    "parent": "PrototypeBase",
    "description": "Simple decorative purpose objects on the map, they have no health and some of them are removed when the player builds over. Usually used for grass patches, roots, small plants etc.",
    "properties": [
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "description": "Must contain at least 1 picture.",
        "optional": false
      },
      {
        "name": "autoplace",
        "type": "AutoplaceSpecification",
        "optional": true
      },
      {
        "name": "collision_box",
        "type": "BoundingBox",
        "description": "Must contain the [0,0] point. Max radius of the collision box is 8.",
        "optional": true
      },
      {
        "name": "collision_mask",
        "type": "CollisionMask",
        "_default": "doodad-layer",
        "optional": true
      },
      {
        "name": "grows_through_rail_path",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "decorative",
        "optional": true
      },
      {
        "name": "tile_layer",
        "type": "uint8",
        "description": "Mandatory if \u003ccode\u003erender_layer\u003c/code\u003e \u003d \"decals\". This int16 is converted to a \u003ca href\u003d\"/Types/RenderLayer\" title\u003d\"Types/RenderLayer\"\u003eRenderLayer\u003c/a\u003e internally.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "trigger_effect",
        "type": "TriggerEffect",
        "description": "Called by \u003ca href\u003d\"/Types/DestroyDecorativesTriggerEffectItem\" title\u003d\"Types/DestroyDecorativesTriggerEffectItem\"\u003eDestroyDecorativesTriggerEffectItem\u003c/a\u003e.",
        "optional": true
      },
      {
        "name": "walking_sound",
        "type": "Sound",
        "optional": true
      }
    ]
  },
  "Prototype/Pipe": {
    "name": "Prototype/Pipe",
    "link": "/Prototype/Pipe",
    "id": "pipe",
    "parent": "Prototype/EntityWithHealth",
    "description": "An entity to transport gas and fluids over a distance, and between machines.",
    "properties": [
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "description": "The area of the entity where fluid/gas inputs, and outputs.",
        "optional": false
      },
      {
        "name": "horizontal_window_bounding_box",
        "type": "BoundingBox",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "table",
        "optional": false
      },
      {
        "name": "vertical_window_bounding_box",
        "type": "BoundingBox",
        "optional": false
      }
    ]
  },
  "Prototype/Beam": {
    "name": "Prototype/Beam",
    "link": "/Prototype/Beam",
    "id": "beam",
    "parent": "Prototype/Entity",
    "description": "Used as a laser beam.",
    "properties": [
      {
        "name": "body",
        "type": "AnimationVariations",
        "description": "Body segment of the beam. Must have at least 1 variation.",
        "optional": false
      },
      {
        "name": "damage_interval",
        "type": "uint32",
        "description": "Damage interval can\u0027t be 0. A value of 1 will cause the attack to be applied each tick.",
        "optional": false
      },
      {
        "name": "head",
        "type": "Animation",
        "description": "Head segment of the beam.",
        "optional": false
      },
      {
        "name": "tail",
        "type": "Animation",
        "description": "Tail segment of the beam.",
        "optional": false
      },
      {
        "name": "width",
        "type": "double",
        "optional": false
      },
      {
        "name": "action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "action_triggered_automatically",
        "type": "bool",
        "description": "Whether this beams should trigger its action every damage_interval. If false, the action is instead triggered when its owner triggers shooting.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "body_light",
        "type": "AnimationVariations",
        "optional": true
      },
      {
        "name": "ending",
        "type": "Animation",
        "description": "End point of the beam.",
        "optional": true
      },
      {
        "name": "ending_light",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "ground_light_animations",
        "type": "table",
        "optional": true
      },
      {
        "name": "head_light",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "light_animations",
        "type": "table",
        "description": "Lights are additively accumulated onto lightmap, which is multiplicatively rendered on the game world.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/viewtopic.php?p\u003d435042#p435042\"\u003e[1]\u003c/a\u003e",
        "optional": true
      },
      {
        "name": "random_end_animation_rotation",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "random_target_offset",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "start",
        "type": "Animation",
        "description": "Start point of the beam.",
        "optional": true
      },
      {
        "name": "start_light",
        "type": "Animation",
        "description": "This and the below properties ending in \"_light\" are considered deprecated. If they are present, then \u003ccode\u003elight_animations\u003c/code\u003e and \u003ccode\u003eground_light_animations\u003c/code\u003e are not loaded.",
        "optional": true
      },
      {
        "name": "tail_light",
        "type": "Animation",
        "optional": true
      },
      {
        "name": "target_offset",
        "type": "vector",
        "optional": true
      },
      {
        "name": "transparent_start_end_animations",
        "type": "bool",
        "_default": "true",
        "optional": true
      }
    ]
  },
  "Prototype/UtilitySounds": {
    "name": "Prototype/UtilitySounds",
    "link": "/Prototype/UtilitySounds",
    "id": "utility-sounds",
    "parent": "PrototypeBase",
    "description": "Sounds used by the game that are not specific to certain prototypes.",
    "properties": [
      {
        "name": "achievement_unlocked",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "alert_destroyed",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "armor_insert",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "armor_remove",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "axe_fighting",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "axe_mining_ore",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "build_big",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "build_medium",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "build_small",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "cannot_build",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "console_message",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "crafting_finished",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "deconstruct_big",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "deconstruct_medium",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "deconstruct_robot",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "deconstruct_small",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "default_manual_repair",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "game_lost",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "game_won",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "gui_click",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "inventory_move",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "list_box_click",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "metal_walking_sound",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "mining_wood",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "new_objective",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "picked_up_item",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "research_completed",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "rotated_big",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "rotated_medium",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "rotated_small",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "scenario_message",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "smart_pipette",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "switch_gun",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "tutorial_notice",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "wire_connect_pole",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "wire_disconnect",
        "type": "Sound",
        "optional": false
      },
      {
        "name": "wire_pickup",
        "type": "Sound",
        "optional": false
      }
    ]
  },
  "Prototype/StorageTank": {
    "name": "Prototype/StorageTank",
    "link": "/Prototype/StorageTank",
    "id": "storage-tank",
    "parent": "Prototype/EntityWithHealth",
    "description": "A \u003ca href\u003d\"/Storage_tank\" title\u003d\"Storage tank\"\u003estorage tank\u003c/a\u003e.",
    "properties": [
      {
        "name": "flow_length_in_ticks",
        "type": "uint32",
        "description": "\u003cp\u003eMust be positive.\u003c/p\u003e\u003cp\u003eUsed for determining the x position inside the flow_sprite when drawing the storage tank. Does not affect gameplay.\u003c/p\u003e\u003cp\u003eThe x position of the sprite will be \u003ccode\u003e((game.tick\u0026nbsp;% flow_length_in_ticks) ÷ flow_length_in_ticks) × (flow_sprite.width - 32)\u003c/code\u003e. This means, that over flow_length_in_ticks ticks, the part of the flow_sprite that is drawn in-game is incrementally moved from most-left to most-right inside the actual sprite, that part always has a width of 32px. After flow_length_in_ticks, the part of the flow_sprite that is drawn will start from the left again.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "fluid_box",
        "type": "FluidBox",
        "optional": false
      },
      {
        "name": "pictures",
        "type": "table",
        "optional": false
      },
      {
        "name": "window_bounding_box",
        "type": "BoundingBox",
        "description": "The location of the window showing the contents. Note that for window_background the width and height are determined by the sprite and window_bounding_box only determines the drawing location. For fluid_background the width is determined by the sprite and the height and drawing location are determined by window_bounding_box.",
        "optional": false
      },
      {
        "name": "circuit_connector_sprites",
        "type": "CircuitConnectorSprites[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_connection_points",
        "type": "WireConnectionPoint[]",
        "description": "Mandatory if circuit_wire_max_distance \u003e 0.",
        "optional": true
      },
      {
        "name": "circuit_wire_max_distance",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "draw_circuit_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "draw_copper_wires",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "scale_info_icons",
        "type": "bool",
        "description": "If the icons of fluids shown in alt-mode should be scaled to the storage tank\u0027s size.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "two_direction_only",
        "type": "bool",
        "_default": "false",
        "optional": true
      }
    ]
  },
  "Prototype/SimpleEntityWithForce": {
    "name": "Prototype/SimpleEntityWithForce",
    "link": "/Prototype/SimpleEntityWithForce",
    "id": "simple-entity-with-force",
    "parent": "Prototype/EntityWithHealth",
    "description": "This entity will be a priority target for units/turrets, who will choose to attack it even if it does not block their path.  Use \u003ca href\u003d\"/Prototype/SimpleEntityWithOwner\" title\u003d\"Prototype/SimpleEntityWithOwner\"\u003ePrototype/SimpleEntityWithOwner\u003c/a\u003e for entities that are only attacked when they block enemies.",
    "properties": [
      {
        "name": "animations",
        "type": "AnimationVariations",
        "description": "Must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "description": "Must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "pictures",
        "type": "SpriteVariations",
        "description": "Must have one of \u0027picture\u0027, \u0027pictures\u0027 or \u0027animations\u0027 defined.",
        "optional": true
      },
      {
        "name": "random_animation_offset",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "random_variation_on_create",
        "type": "bool",
        "description": "Whether a random graphics variation is chosen when placing the entity/creating it via script/creating it via map generation. If this is false, the entity will use the first variation instead of a random one.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "secondary_draw_order",
        "type": "int8",
        "_default": "0",
        "optional": true
      }
    ]
  },
  "Prototype/UtilityConstants": {
    "name": "Prototype/UtilityConstants",
    "link": "/Prototype/UtilityConstants",
    "id": "utility-constants",
    "parent": "PrototypeBase",
    "description": "Constants used by the game that are not specific to certain prototypes. See \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://github.com/wube/factorio-data/blob/master/core/prototypes/utility-constants.lua\"\u003eutility-constants.lua\u003c/a\u003e for the values used by the base game.",
    "properties": [
      {
        "name": "artillery_range_visualization_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "bonus_gui_ordering",
        "type": "table",
        "optional": false
      },
      {
        "name": "building_buildable_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "building_buildable_too_far_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "building_ignorable_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "building_no_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "building_not_buildable_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "capsule_range_visualization_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "chart",
        "type": "table",
        "optional": false
      },
      {
        "name": "clipboard_history_size",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "color_filters",
        "type": "tables[]",
        "optional": false
      },
      {
        "name": "daytime_color_lookup",
        "type": "DaytimeColorLookupTable",
        "optional": false
      },
      {
        "name": "deconstruct_mark_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "default_alert_icon_scale",
        "type": "float",
        "optional": false
      },
      {
        "name": "default_enemy_force_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "default_other_force_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "default_player_force_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "default_scorch_mark_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "disabled_recipe_slot_background_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "disabled_recipe_slot_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "enabled_recipe_slot_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "entity_button_background_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "entity_renderer_search_box_limits",
        "type": "table",
        "optional": false
      },
      {
        "name": "equipment_default_background_border_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "equipment_default_background_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "equipment_default_grabbed_background_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "filter_outline_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "forced_enabled_recipe_slot_background_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "ghost_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "icon_shadow_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "icon_shadow_inset",
        "type": "float",
        "optional": false
      },
      {
        "name": "icon_shadow_radius",
        "type": "float",
        "optional": false
      },
      {
        "name": "icon_shadow_sharpness",
        "type": "float",
        "optional": false
      },
      {
        "name": "item_outline_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "item_outline_inset",
        "type": "float",
        "optional": false
      },
      {
        "name": "item_outline_radius",
        "type": "float",
        "optional": false
      },
      {
        "name": "item_outline_sharpness",
        "type": "float",
        "optional": false
      },
      {
        "name": "light_renderer_search_distance_limit",
        "type": "uint8",
        "optional": false
      },
      {
        "name": "main_menu_background_image_location",
        "type": "FileName",
        "optional": false
      },
      {
        "name": "manual_rail_building_reach_modifier",
        "type": "double",
        "optional": false
      },
      {
        "name": "map_editor",
        "type": "table",
        "optional": false
      },
      {
        "name": "max_terrain_building_size",
        "type": "uint8",
        "optional": false
      },
      {
        "name": "medium_area_size",
        "type": "float",
        "optional": false
      },
      {
        "name": "missing_preview_sprite_location",
        "type": "FileName",
        "optional": false
      },
      {
        "name": "player_colors",
        "type": "table[]",
        "optional": false
      },
      {
        "name": "rail_segment_colors",
        "type": "Color[]",
        "optional": false
      },
      {
        "name": "recipe_step_limit",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "script_command_console_chat_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "server_command_console_chat_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "small_area_size",
        "type": "float",
        "optional": false
      },
      {
        "name": "tile_ghost_tint",
        "type": "Color",
        "optional": false
      },
      {
        "name": "train_inactivity_wait_condition_default",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "train_path_finding",
        "type": "table",
        "optional": false
      },
      {
        "name": "train_temporary_stop_wait_time",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "train_time_wait_condition_default",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "tree_leaf_distortion_distortion_far",
        "type": "vector",
        "optional": false
      },
      {
        "name": "tree_leaf_distortion_distortion_near",
        "type": "vector",
        "optional": false
      },
      {
        "name": "tree_leaf_distortion_speed_far",
        "type": "vector",
        "optional": false
      },
      {
        "name": "tree_leaf_distortion_speed_near",
        "type": "vector",
        "optional": false
      },
      {
        "name": "tree_leaf_distortion_strength_far",
        "type": "vector",
        "optional": false
      },
      {
        "name": "tree_leaf_distortion_strength_near",
        "type": "vector",
        "optional": false
      },
      {
        "name": "tree_shadow_roughness",
        "type": "float",
        "optional": false
      },
      {
        "name": "tree_shadow_speed",
        "type": "float",
        "optional": false
      },
      {
        "name": "turret_range_visualization_color",
        "type": "Color",
        "optional": false
      },
      {
        "name": "unit_group_pathfind_resolution",
        "type": "int8",
        "optional": false
      },
      {
        "name": "zoom_to_world_can_use_nightvision",
        "type": "bool",
        "optional": false
      },
      {
        "name": "zoom_to_world_daytime_color_lookup",
        "type": "DaytimeColorLookupTable",
        "optional": false
      },
      {
        "name": "zoom_to_world_effect_strength",
        "type": "float",
        "optional": false
      },
      {
        "name": "default_alert_icon_scale_by_type",
        "type": "table<string, float>",
        "optional": true
      },
      {
        "name": "default_alert_icon_shift_by_type",
        "type": "table<string, float>",
        "optional": true
      },
      {
        "name": "default_trigger_target_mask_by_type",
        "type": "table<string, TriggerTargetMask>",
        "optional": true
      }
    ]
  },
  "Prototype/ArtilleryProjectile": {
    "name": "Prototype/ArtilleryProjectile",
    "link": "/Prototype/ArtilleryProjectile",
    "id": "artillery-projectile",
    "parent": "Prototype/Entity",
    "description": "The projectile shot by \u003ca href\u003d\"/Artillery\" title\u003d\"Artillery\"\u003eartillery\u003c/a\u003e.",
    "properties": [
      {
        "name": "reveal_map",
        "type": "bool",
        "optional": false
      },
      {
        "name": "action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "chart_picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "final_action",
        "type": "Trigger",
        "optional": true
      },
      {
        "name": "height_from_ground",
        "type": "float",
        "_default": "1",
        "optional": true
      },
      {
        "name": "picture",
        "type": "Sprite",
        "optional": true
      },
      {
        "name": "rotatable",
        "type": "bool",
        "description": "Whether the picture of the projectile is rotated to match the direction of travel.",
        "_default": "true",
        "optional": true
      },
      {
        "name": "shadow",
        "type": "Sprite",
        "optional": true
      }
    ]
  },
  "Prototype/Entity": {
    "name": "Prototype/Entity",
    "link": "/Prototype/Entity",
    "parent": "PrototypeBase",
    "description": "Abstract base of all entities in the game. Entity is basically everything that can be on the map (except tiles). For in game script access to entity, take a look at \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"http://lua-api.factorio.com/latest/LuaEntity.html\"\u003eLuaEntity\u003c/a\u003e",
    "properties": [
      {
        "name": "icons, icon, icon_size (IconSpecification)",
        "type": "IconSpecification",
        "description": "\u003cp\u003eAn icon is mandatory for entities that have at least one of these flags active: placeable-neutral, placeable-player, placeable-enemy.\u003c/p\u003e\u003cp\u003eThe icon will be used in the editor building selection and the bonus gui.\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "additional_pastable_entities",
        "type": "string[]",
        "description": "Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren\u0027t compatible on the C++ code side, by allowing mods to receive the \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted\"\u003eon_entity_settings_pasted\u003c/a\u003e event for the given entity and do the setting pasting via script.",
        "optional": true
      },
      {
        "name": "alert_icon_scale",
        "type": "float",
        "optional": true
      },
      {
        "name": "alert_icon_shift",
        "type": "vector",
        "optional": true
      },
      {
        "name": "allow_copy_paste",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "autoplace",
        "type": "AutoplaceSpecification",
        "description": "Used to specify the rules for placing this entity during map generation.",
        "_default": "nil",
        "optional": true
      },
      {
        "name": "build_base_evolution_requirement",
        "type": "double",
        "_default": "0",
        "optional": true
      },
      {
        "name": "build_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "close_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "collision_box",
        "type": "BoundingBox",
        "description": "\u003cp\u003eSpecification of the entity collision boundaries.\u003c/p\u003e\u003cp\u003eEmpty collision box is used for smoke, projectiles, particles, explosions etc.\u003c/p\u003e\u003cp\u003e\u003cdiv class\u003d\"mw-highlight mw-content-ltr\" dir\u003d\"ltr\"\u003e\u003cpre\u003e\u003cspan\u003e\u003c/span\u003e\u003cspan class\u003d\"n\"\u003ecollision_box\u003c/span\u003e \u003cspan class\u003d\"o\"\u003e\u003d\u003c/span\u003e \u003cspan class\u003d\"p\"\u003e{{\u003c/span\u003e\u003cspan class\u003d\"o\"\u003e-\u003c/span\u003e\u003cspan class\u003d\"mf\"\u003e0.4\u003c/span\u003e\u003cspan class\u003d\"p\"\u003e,\u003c/span\u003e \u003cspan class\u003d\"o\"\u003e-\u003c/span\u003e\u003cspan class\u003d\"mf\"\u003e0.4\u003c/span\u003e\u003cspan class\u003d\"p\"\u003e},\u003c/span\u003e \u003cspan class\u003d\"p\"\u003e{\u003c/span\u003e\u003cspan class\u003d\"mf\"\u003e0.4\u003c/span\u003e\u003cspan class\u003d\"p\"\u003e,\u003c/span\u003e \u003cspan class\u003d\"mf\"\u003e0.4\u003c/span\u003e\u003cspan class\u003d\"p\"\u003e}}\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/p\u003e\u003cp\u003eThe {0,0} coordinate in the collision box will match the entity position.\u003c/p\u003e\u003cp\u003eIt should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.\u003c/p\u003e\u003cp\u003eNote, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "collision_mask",
        "type": "CollisionMask",
        "description": "Two entities can collide only if they share a layer from the collision mask.",
        "optional": true
      },
      {
        "name": "created_effect",
        "type": "Trigger",
        "description": "The effect/trigger that happens when the entity is placed.",
        "optional": true
      },
      {
        "name": "created_smoke",
        "type": "CreateTrivialSmokeEffectItem",
        "description": "The smoke that is shown when the entity is placed. Default is using the \"smoke-building\" smoke.",
        "_default": "smoke-building",
        "optional": true
      },
      {
        "name": "drawing_box",
        "type": "BoundingBox",
        "description": "\u003cp\u003eSpecification of space needed to see the whole entity.\u003c/p\u003e\u003cp\u003eThis is used to calculate the correct zoom and positioning in the entity info gui.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "emissions_per_second",
        "type": "double",
        "description": "Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.",
        "_default": "0",
        "optional": true
      },
      {
        "name": "enemy_map_color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "fast_replaceable_group",
        "type": "string",
        "description": "\u003cp\u003eThis allows you to replace an entity that\u0027s already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.\u003c/p\u003e\u003cp\u003eThis is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "flags",
        "type": "EntityPrototypeFlags",
        "optional": true
      },
      {
        "name": "friendly_map_color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "hit_visualization_box",
        "type": "BoundingBox",
        "description": "Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.",
        "optional": true
      },
      {
        "name": "map_color",
        "type": "Color",
        "optional": true
      },
      {
        "name": "map_generator_bounding_box",
        "type": "BoundingBox",
        "description": "Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.",
        "optional": true
      },
      {
        "name": "minable",
        "type": "MinableProperties",
        "optional": true
      },
      {
        "name": "mined_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "mining_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "next_upgrade",
        "type": "string",
        "description": "Name of the entity that will be automatically selected as the upgrade of this entity when using the \u003ca href\u003d\"/Upgrade_planner\" title\u003d\"Upgrade planner\"\u003eupgrade planner\u003c/a\u003e without configuration.\u003c/p\u003e\u003cp\u003eThis entity may not have \u0027not-upgradable\u0027 flag set and must be minable. This entity mining result must not contain item product with \"hidden\" flag set. Mining results with no item products are allowed. The entity may not be a \u003ca href\u003d\"/Prototype/RollingStock\" title\u003d\"Prototype/RollingStock\"\u003ePrototype/RollingStock\u003c/a\u003e.\u003cbr\u003eThe upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn\u0027t hidden.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "open_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "placeable_by",
        "type": "ItemToPlace|ItemToPlace[]",
        "description": "\u003cp\u003eItem that when placed creates this entity. Determines which item is picked when \"Q\" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.\u003c/p\u003e\u003cp\u003eThe item count specified here can\u0027t be larger than the stack size of that item.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "radius_visualisation_specification",
        "type": "RadiusVisualisationSpecification",
        "optional": true
      },
      {
        "name": "remains_when_mined",
        "type": "string|string[]",
        "description": "The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.",
        "optional": true
      },
      {
        "name": "remove_decoratives",
        "type": "string",
        "description": "Either \"automatic\", \"true\" or \"false\". Whether this entity should remove decoratives that collide with it when this entity is built.",
        "_default": "automatic",
        "optional": true
      },
      {
        "name": "rotated_sound",
        "type": "Sound",
        "optional": true
      },
      {
        "name": "selectable_in_game",
        "type": "bool",
        "_default": "true",
        "optional": true
      },
      {
        "name": "selection_box",
        "type": "BoundingBox",
        "description": "\u003cp\u003eSpecification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).\u003c/p\u003e\u003cp\u003eThe selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.\u003c/p\u003e",
        "optional": true
      },
      {
        "name": "selection_priority",
        "type": "uint8",
        "description": "The entity with the higher number is selectable before the entity with the lower number.",
        "_default": "50",
        "optional": true
      },
      {
        "name": "shooting_cursor_size",
        "type": "double",
        "description": "The cursor size used when shooting at this entity.",
        "optional": true
      },
      {
        "name": "sticker_box",
        "type": "BoundingBox",
        "description": "Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.",
        "optional": true
      },
      {
        "name": "subgroup",
        "type": "string",
        "description": "The name of the subgroup this entity should be sorted into in the map editor building selection.",
        "optional": true
      },
      {
        "name": "tile_height",
        "type": "uint32",
        "optional": true
      },
      {
        "name": "tile_width",
        "type": "uint32",
        "description": "Used to determine how the center of the entity should be positioned when building (unless the offgrid \u003ca href\u003d\"/Types/EntityPrototypeFlags\" title\u003d\"Types/EntityPrototypeFlags\"\u003eflag\u003c/a\u003e is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.",
        "optional": true
      },
      {
        "name": "trigger_target_mask",
        "type": "TriggerTargetMask",
        "optional": true
      },
      {
        "name": "vehicle_impact_sound",
        "type": "Sound",
        "description": "When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.",
        "optional": true
      },
      {
        "name": "water_reflection",
        "type": "WaterReflectionDefinition",
        "description": "May also be defined inside \u003ccode\u003egraphics_set\u003c/code\u003e instead of directly in the entity prototype. This is useful for entities that use the a \u003ccode\u003egraphics_set\u003c/code\u003e property to define their graphics, becausen then all graphics can be in defined one place.",
        "optional": true
      },
      {
        "name": "working_sound",
        "type": "WorkingSound",
        "description": "Will also work on entities that don\u0027t actually do work.",
        "optional": true
      }
    ]
  },
  "Prototype/BlueprintItem": {
    "name": "Prototype/BlueprintItem",
    "link": "/Prototype/BlueprintItem",
    "id": "blueprint",
    "parent": "Prototype/SelectionTool",
    "description": "A \u003ca href\u003d\"/Blueprint\" title\u003d\"Blueprint\"\u003eblueprint\u003c/a\u003e.",
    "properties": []
  },
  "Prototype/DeconstructWithRobotsAchievement": {
    "name": "Prototype/DeconstructWithRobotsAchievement",
    "link": "/Prototype/DeconstructWithRobotsAchievement",
    "id": "deconstruct-with-robots-achievement",
    "parent": "Prototype/Achievement",
    "description": "This prototype definition is used for receiving an achievement when the player deconstructs enough entities with construction robots.",
    "properties": [
      {
        "name": "amount",
        "type": "uint32",
        "description": "This will trigger the achievement, if enough entities were deconstructed using construction robots.",
        "optional": false
      }
    ]
  },
  "Prototype/Rail": {
    "name": "Prototype/Rail",
    "link": "/Prototype/Rail",
    "parent": "Prototype/EntityWithHealth",
    "description": "The abstract base of both rail prototypes.",
    "properties": [
      {
        "name": "pictures",
        "type": "table",
        "optional": false
      },
      {
        "name": "walking_sound",
        "type": "Sound",
        "description": "Sound played when a character walks over this rail.",
        "optional": true
      }
    ]
  },
  "Prototype/Unit": {
    "name": "Prototype/Unit",
    "link": "/Prototype/Unit",
    "id": "unit",
    "parent": "Prototype/EntityWithHealth",
    "description": "Entity that attacks players.",
    "properties": [
      {
        "name": "attack_parameters",
        "type": "AttackParameters",
        "description": "Requires animation in attack_parameters. Requires ammo_type in attack_parameters.",
        "optional": false
      },
      {
        "name": "distance_per_frame",
        "type": "float",
        "description": "How fast the \u003ccode\u003erun_animation\u003c/code\u003e frames are advanced. The animations are advanced animation_speed frames per \u003ccode\u003edistance_per_frame\u003c/code\u003e that the unit moves.",
        "optional": false
      },
      {
        "name": "distraction_cooldown",
        "type": "uint32",
        "optional": false
      },
      {
        "name": "movement_speed",
        "type": "float",
        "description": "Movement speed of the unit in the world, in tiles per tick. Must be equal to or greater than 0.",
        "optional": false
      },
      {
        "name": "pollution_to_join_attack",
        "type": "float",
        "description": "The amount of pollution that has to be absorbed by the unit\u0027s spawner before the unit will leave the spawner and attack the source of the pollution.",
        "optional": false
      },
      {
        "name": "run_animation",
        "type": "RotatedAnimation",
        "optional": false
      },
      {
        "name": "vision_distance",
        "type": "double",
        "description": "Note: Setting to 50 or above can lead to undocumented behavior of individual units creating groups on their own when attacking or being attacked.",
        "optional": false
      },
      {
        "name": "affected_by_tiles",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "ai_settings",
        "type": "UnitAISettings",
        "optional": true
      },
      {
        "name": "alternative_attacking_frame_sequence",
        "type": "table",
        "optional": true
      },
      {
        "name": "can_open_gates",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "dying_sound",
        "type": "Sound",
        "description": "The sound file to play when entity dies.",
        "optional": true
      },
      {
        "name": "has_belt_immunity",
        "type": "bool",
        "description": "If the unit is immune to movement by belts.",
        "_default": "false",
        "optional": true
      },
      {
        "name": "light",
        "type": "LightDefinition",
        "optional": true
      },
      {
        "name": "max_pursue_distance",
        "type": "double",
        "_default": "50",
        "optional": true
      },
      {
        "name": "min_pursue_time",
        "type": "uint32",
        "_default": "600",
        "optional": true
      },
      {
        "name": "move_while_shooting",
        "type": "bool",
        "_default": "false",
        "optional": true
      },
      {
        "name": "radar_range",
        "type": "uint32",
        "_default": "0",
        "optional": true
      },
      {
        "name": "render_layer",
        "type": "RenderLayer",
        "_default": "object",
        "optional": true
      },
      {
        "name": "rotation_speed",
        "type": "float",
        "_default": "0.025",
        "optional": true
      },
      {
        "name": "running_sound_animation_positions",
        "type": "float[]",
        "description": "Ignored if \u003ccode\u003ewalking_sounds\u003c/code\u003e is not defined.",
        "optional": true
      },
      {
        "name": "spawning_time_modifier",
        "type": "double",
        "_default": "1",
        "optional": true
      },
      {
        "name": "walking_sound",
        "type": "Sound",
        "optional": true
      }
    ]
  },
  "Prototype/AmmoItem": {
    "name": "Prototype/AmmoItem",
    "link": "/Prototype/AmmoItem",
    "id": "ammo",
    "parent": "Prototype/Item",
    "description": "Ammo used for a gun.",
    "properties": [
      {
        "name": "ammo_type",
        "type": "AmmoType[]|AmmoType",
        "description": "\u003cp\u003eWhen using an array of AmmoType, the AmmoType has an extra property:\u003c/p\u003e\u003cul\u003e\u003cli\u003esource_type - \u003ca href\u003d\"/Types/AmmoSourceType\" title\u003d\"Types/AmmoSourceType\"\u003eAmmoSourceType\u003c/a\u003e - Mandatory. - Defines for which kind of entity this ammo type applies. Each entity kind can only be used once per array.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eWhen using a plain \u003ca href\u003d\"/Types/AmmoType\" title\u003d\"Types/AmmoType\"\u003eAmmoType\u003c/a\u003e, the ammo type applies to everything (\"default\").\u003c/p\u003e",
        "optional": false
      },
      {
        "name": "magazine_size",
        "type": "float",
        "description": "Number of shots before ammo item is consumed. Must be \u003e\u003d 1.",
        "_default": "1",
        "optional": true
      },
      {
        "name": "reload_time",
        "type": "float",
        "description": "Amount of extra time (in ticks) it takes to reload the weapon after depleting the magazine. Must be \u003e\u003d 0.",
        "_default": "0",
        "optional": true
      }
    ]
  }
}
