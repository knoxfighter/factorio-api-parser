{
  "WhitelistBlacklist": {
    "name": "WhitelistBlacklist",
    "type": "string",
    "value": {
      "whitelist": "",
      "blacklist": ""
    }
  },
  "UtilityConstantsPlayerColor": {
    "name": "UtilityConstantsPlayerColor",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false
        },
        {
          "name": "player_color",
          "type": "string",
          "optional": false
        },
        {
          "name": "chat_color",
          "type": "string",
          "optional": false
        }
      ]
    }
  },
  "AnimatedVectorDirectionShift": {
    "name": "AnimatedVectorDirectionShift",
    "type": "table",
    "link": "/Types/AnimatedVector#default_recipe_tint",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "vector",
          "optional": true
        },
        {
          "name": "east",
          "type": "vector",
          "optional": true
        },
        {
          "name": "south",
          "type": "vector",
          "optional": true
        },
        {
          "name": "west",
          "type": "vector",
          "optional": true
        }
      ]
    }
  },
  "RecipeData": {
    "name": "RecipeData",
    "type": "table",
    "link": "/Prototypes/Recipe",
    "value": {
      "properties": [
        {
          "name": "ingredients",
          "type": "IngredientPrototype[]",
          "description": "\u003cp\u003eA table containing ingredient names and counts. Can also contain information about fluid temperature and catalyst amounts.\u003c/p\u003e\u003cp\u003eMaximal ingredient amount is 65535. The catalyst amounts are automatically calculated from the recipe, or can be set manually.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://factorio.com/blog/post/fff-256\"\u003e[1]\u003c/a\u003e\u003c/p\u003e",
          "optional": false
        },
        {
          "name": "allow_as_intermediate",
          "type": "bool",
          "description": "Optional. Whether the recipe can be used as an intermediate recipe in hand-crafting.",
          "default": "true",
          "optional": true
        },
        {
          "name": "allow_decomposition",
          "type": "bool",
          "description": "Optional. Whether this recipe is allowed to be broken down for the recipe tooltip \"Total raw\" calculations.",
          "default": "true",
          "optional": true
        },
        {
          "name": "allow_intermediates",
          "type": "bool",
          "description": "Optional. Whether the recipe is allowed to use intermediate recipes when hand-crafting.",
          "default": "true",
          "optional": true
        },
        {
          "name": "always_show_made_in",
          "type": "bool",
          "description": "Optional. Whether the \"Made in: {Machine}\" part of the tool-tip should always be present, not only when the recipe can not be hand-crafted.",
          "default": "false",
          "optional": true
        },
        {
          "name": "always_show_products",
          "type": "bool",
          "description": "Optional. Whether the products are always shown in the recipe tool-tip.",
          "default": "false",
          "optional": true
        },
        {
          "name": "emissions_multiplier",
          "type": "double",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "enabled",
          "type": "bool",
          "description": "\u003cp\u003eOptional. This can be false to disable the recipe at the start of the game, or \"true\" to leave it enabled.\u003c/p\u003e\u003cp\u003eIf your recipe is unlocked by a technology, you should set this to \"false\".\u003c/p\u003e",
          "default": "true",
          "optional": true
        },
        {
          "name": "energy_required",
          "type": "double",
          "description": "\u003cp\u003eOptional. The amount of time it takes to make this recipe.\u003c/p\u003e\u003cp\u003eThis is the number of seconds it takes to craft at crafting speed 1.\u003c/p\u003e",
          "default": "0.5",
          "optional": true
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Optional. Hides the recipe from crafting menus.",
          "default": "false",
          "optional": true
        },
        {
          "name": "hide_from_player_crafting",
          "type": "bool",
          "description": "Optional. Hides the recipe from the player\u0027s crafting screen. The recipe will still show up for selection in machines.",
          "default": "false",
          "optional": true
        },
        {
          "name": "hide_from_stats",
          "type": "bool",
          "description": "Optional. Hides the recipe from flow stats (item/fluid production statistics).",
          "default": "false",
          "optional": true
        },
        {
          "name": "main_product",
          "type": "string",
          "description": "\u003cp\u003eFor recipes with more than one product: This defines of which result the icon, subgroup and name is used. If it is not set and the recipe has more than 1 result the recipe will use the recipe-name and recipe-description locale and its own subgroup and icon.\u003c/p\u003e\u003cp\u003eFor recipes with 1 result: The recipe uses the icon, subgroup and name of the result by default. If set this property is set to an empty string, the recipe will use the properties of the recipe instead of the result.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "overload_multiplier",
          "type": "uint32",
          "description": "\u003cp\u003eUsed to determine how many extra items are put into an assembling machine before it\u0027s considered \"full enough\". See Inserters#Insertion_limits.\u003c/p\u003e\u003cp\u003eIf set to 0, it instead uses the following formula: 1.166 / (energy_required / the assembler\u0027s crafting_speed), rounded up, and clamped between 2 and 100.\u003c/p\u003e",
          "default": "0",
          "optional": true
        },
        {
          "name": "requester_paste_multiplier",
          "type": "uint32",
          "default": "30",
          "optional": true
        },
        {
          "name": "result",
          "type": "string",
          "description": "Can be replaced with the results parameter. The item created by this recipe. Must be the name of an item, such as \"iron-gear-wheel\".",
          "optional": true
        },
        {
          "name": "result_count",
          "type": "uint32",
          "description": "Optional. The number of items created by this recipe.",
          "default": "1",
          "optional": true
        },
        {
          "name": "results",
          "type": "ProductPrototype[]",
          "description": "A table containing result names and counts. Can also contain information about fluid temperature and catalyst amounts. The catalyst amounts are automatically calculated from the recipe, or can be set manually.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://factorio.com/blog/post/fff-256\"\u003e[2]\u003c/a\u003e",
          "optional": true
        },
        {
          "name": "show_amount_in_title",
          "type": "bool",
          "description": "Optional. Whether the recipe name should have the product amount in front of it, e.g. \"2 \u003ca href\u003d\"/Transport_belt\" title\u003d\"Transport belt\"\u003etransport belt\u003c/a\u003e\"",
          "default": "true",
          "optional": true
        },
        {
          "name": "unlock_results",
          "type": "bool",
          "description": "Optional. Whether enabling this recipe unlocks its item products to show in selection lists (item filter, logistic request etc.).",
          "default": "true",
          "optional": true
        }
      ]
    }
  },
  "InsertItemTriggerEffectItem": {
    "name": "InsertItemTriggerEffectItem",
    "type": "table",
    "link": "/Types/InsertItemTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "item",
          "type": "string",
          "description": "Name of the \u003ca href\u003d\"/Prototype/Item\" title\u003d\"Prototype/Item\"\u003ePrototype/Item\u003c/a\u003e that should be created.",
          "optional": false
        },
        {
          "name": "count",
          "type": "uint32",
          "default": "1",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "WaterReflectionDefinition": {
    "name": "WaterReflectionDefinition",
    "type": "table",
    "link": "/Types/WaterReflectionDefinition",
    "description": "Entity water reflection.",
    "value": {
      "properties": [
        {
          "name": "pictures",
          "type": "SpriteVariations",
          "optional": true
        },
        {
          "name": "orientation_to_variation",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "rotate",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "TileBuildSoundValue": {
    "name": "TileBuildSoundValue",
    "type": "table",
    "link": "/Prototype/Tile#build_sound",
    "value": {
      "properties": [
        {
          "name": "small",
          "type": "SoundType",
          "optional": true
        },
        {
          "name": "medium",
          "type": "SoundType",
          "optional": true
        },
        {
          "name": "large",
          "type": "SoundType",
          "optional": true
        }
      ]
    }
  },
  "TileLayerGroup": {
    "name": "TileLayerGroup",
    "type": "string",
    "link": "/Prototype/Tile#layer_group",
    "value": {
      "zero": "",
      "water": "",
      "water-overlay": "",
      "ground": "",
      "top": ""
    }
  },
  "EntityRemoveDecoratives": {
    "name": "EntityRemoveDecoratives",
    "type": "string",
    "link": "/Prototype/Entity#remove_decoratives",
    "value": {
      "automatic": "",
      "true": "",
      "false": ""
    }
  },
  "LocalisedString": {
    "name": "LocalisedString",
    "type": "alias",
    "link": "/Types/LocalisedString",
    "value": "string[]"
  },
  "CameraEffectTriggerEffectItem": {
    "name": "CameraEffectTriggerEffectItem",
    "type": "table",
    "link": "/Types/CameraEffectTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "effect",
          "type": "string",
          "description": "Required, read by the game and then immediately discarded. In short: Does nothing.",
          "optional": false
        },
        {
          "name": "duration",
          "type": "uint8",
          "optional": false
        },
        {
          "name": "ease_in_duration",
          "type": "uint8",
          "default": "0",
          "optional": true
        },
        {
          "name": "ease_out_duration",
          "type": "uint8",
          "default": "0",
          "optional": true
        },
        {
          "name": "delay",
          "type": "uint8",
          "default": "0",
          "optional": true
        },
        {
          "name": "full_strength_max_distance",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "max_distance",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "strength",
          "type": "float",
          "default": "0",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "DamageTypeFilters": {
    "name": "DamageTypeFilters",
    "type": "alias",
    "link": "/Types/DamageTypeFilters",
    "description": "Either a dictionary (\u003ca href\u003d\"/Types/table\" title\u003d\"Types/table\"\u003eTypes/table\u003c/a\u003e) with the below properties, an array (\u003ca href\u003d\"/Types/table\" title\u003d\"Types/table\"\u003eTypes/table\u003c/a\u003e) of names of \u003ca href\u003d\"/Prototype/DamageType\" title\u003d\"Prototype/DamageType\"\u003ePrototype/DamageTypes\u003c/a\u003e (\u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/strings\u003c/a\u003e), or one name of a \u003ca href\u003d\"/Prototype/DamageType\" title\u003d\"Prototype/DamageType\"\u003ePrototype/DamageType\u003c/a\u003e (\u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e).",
    "value": "DamageTypeFiltersValue|string|string[]"
  },
  "EnergySourceHeat": {
    "name": "EnergySourceHeat",
    "type": "table",
    "link": "/Types/EnergySource",
    "value": {
      "properties": [
        {
          "name": "max_temperature",
          "type": "double",
          "description": "max_temperature must be \u003e\u003d default_temperature.",
          "optional": false
        },
        {
          "name": "default_temperature",
          "type": "double",
          "default": "15",
          "optional": true
        },
        {
          "name": "specific_heat",
          "type": "Energy",
          "optional": true
        },
        {
          "name": "max_transfer",
          "type": "Energy",
          "optional": true
        },
        {
          "name": "min_temperature_gradient",
          "type": "double",
          "default": "1",
          "optional": true
        },
        {
          "name": "min_working_temperature",
          "type": "double",
          "description": "min_working_temperature must be \u003e\u003d default_temperature. min_working_temperature must be \u003c\u003d max_temperature.",
          "default": "15",
          "optional": true
        },
        {
          "name": "minimum_glow_temperature",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "pipe_covers",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "heat_pipe_covers",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "heat_picture",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "heat_glow",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "connections",
          "type": "HeatConnection[]",
          "description": "The table may only contain up to 32 connections.",
          "optional": true
        }
      ],
      "parent": "EnergySourceBase"
    }
  },
  "FlameThrowerExplosionTriggerDelivery": {
    "name": "FlameThrowerExplosionTriggerDelivery",
    "type": "table",
    "link": "/Types/FlameThrowerExplosionTriggerDelivery",
    "value": {
      "properties": [
        {
          "name": "explosion",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Explosion\" title\u003d\"Prototype/Explosion\"\u003ePrototype/Explosion\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "starting_distance",
          "type": "double",
          "optional": false
        },
        {
          "name": "direction_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_deviation",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_fraciton_deviation",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "projectile_starting_speed",
          "type": "float",
          "default": "1",
          "optional": true
        }
      ],
      "parent": "TriggerDeliveryBase"
    }
  },
  "PipePictures": {
    "name": "PipePictures",
    "type": "table",
    "link": "/Prototype/Pipe#pictures",
    "value": {
      "properties": [
        {
          "name": "straight_vertical_single",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "straight_vertical",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "straight_vertical_window",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "straight_horizontal",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "straight_horizontal_window",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "corner_up_right",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "corner_up_left",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "corner_down_right",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "corner_down_left",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "t_up",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "t_down",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "t_right",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "t_left",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "cross",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "ending_up",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "ending_down",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "ending_right",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "ending_left",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "horizontal_window_background",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "vertical_window_background",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "fluid_background",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "low_temperature_flow",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "middle_temperature_flow",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "high_temperature_flow",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "gas_flow",
          "type": "AnimationType",
          "optional": false
        }
      ]
    }
  },
  "InstantTriggerDelivery": {
    "name": "InstantTriggerDelivery",
    "type": "table",
    "link": "/Types/InstantTriggerDelivery",
    "value": {
      "properties": [],
      "parent": "TriggerDeliveryBase"
    }
  },
  "TintColors": {
    "name": "TintColors",
    "type": "table",
    "link": "/Types/TintColors",
    "value": {
      "properties": [
        {
          "name": "primary",
          "type": "Color",
          "optional": true
        },
        {
          "name": "secondary",
          "type": "Color",
          "optional": true
        },
        {
          "name": "tertiary",
          "type": "Color",
          "optional": true
        },
        {
          "name": "quaternary",
          "type": "Color",
          "optional": true
        }
      ]
    }
  },
  "FootprintParticle": {
    "name": "FootprintParticle",
    "type": "table",
    "link": "/Types/FootprintParticle",
    "value": {
      "properties": [
        {
          "name": "tiles",
          "type": "string[]",
          "description": "Array of names of \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tiles\u003c/a\u003e. The tiles this footprint particle is shown on when the player walks over them.",
          "optional": false
        },
        {
          "name": "particle_name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Particle\" title\u003d\"Prototype/Particle\"\u003ePrototype/Particle\u003c/a\u003e. The name of the particle that should be created when the character walks on the defined tiles.",
          "optional": true
        },
        {
          "name": "use_as_default",
          "type": "bool",
          "description": "Whether this footprint particle should be the default particle that is used for \u003ca href\u003d\"#tiles\"\u003e#tiles\u003c/a\u003e that don\u0027t have an associated footprint particle.",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "FluidBoxSecondaryDrawOrders": {
    "name": "FluidBoxSecondaryDrawOrders",
    "type": "table",
    "link": "/Types/FluidBox#secondary_draw_orders",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "int8",
          "optional": false
        },
        {
          "name": "east",
          "type": "int8",
          "optional": false
        },
        {
          "name": "south",
          "type": "int8",
          "optional": false
        },
        {
          "name": "west",
          "type": "int8",
          "optional": false
        }
      ]
    }
  },
  "ItemProductPrototype": {
    "name": "ItemProductPrototype",
    "type": "table",
    "link": "/Types/ItemProductPrototype",
    "description": "An item product definition for a \u003ca href\u003d\"/Prototype/Recipe\" title\u003d\"Prototype/Recipe\"\u003ePrototype/Recipe\u003c/a\u003e. Its loading is triggered by the \u003ccode\u003etype\u003c/code\u003e of a \u003ca href\u003d\"/Types/ProductPrototype\" title\u003d\"Types/ProductPrototype\"\u003eTypes/ProductPrototype\u003c/a\u003e being \"item\". It can be specified as a table with named or numbered keys, but not a mix of both.",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "The name of a \u003ca href\u003d\"/Prototype/Item\" title\u003d\"Prototype/Item\"\u003ePrototype/Item\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "amount",
          "type": "uint16",
          "description": "Mandatory when using numbered keys (an array).",
          "optional": true
        },
        {
          "name": "probability",
          "type": "double",
          "description": "Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.",
          "default": "1",
          "optional": true
        },
        {
          "name": "amount_min",
          "type": "uint16",
          "description": "Mandatory if \u003ccode\u003eamount\u003c/code\u003e is not specified and named keys are being used.",
          "optional": true
        },
        {
          "name": "amount_max",
          "type": "uint16",
          "description": "\u003cp\u003eMandatory if \u003ccode\u003eamount\u003c/code\u003e is not specified and named keys are being used.\u003c/p\u003e\u003cp\u003eIf set to a number that is less than amount_min, the game will use amount_min internally.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "catalyst_amount",
          "type": "uint16",
          "description": "Amount that should not be affected by productivity modules (not yielded from bonus production) and should not be included in the item production statistics.",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "TutorialTrigger": {
    "name": "TutorialTrigger",
    "type": "table",
    "link": "/Prototype/Tutorial#trigger",
    "value": {
      "properties": [
        {
          "name": "type",
          "type": "TutorialTriggerType",
          "optional": false
        },
        {
          "name": "technology",
          "type": "string",
          "description": "\u003cp\u003eRead if type is \"research-technology\".\u003c/p\u003e\u003cp\u003eName of the technology that triggers this tutorial when it is researched.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "entity",
          "type": "string",
          "description": "\u003cp\u003eRead if type is \"build-entity\".\u003c/p\u003e\u003cp\u003eName of the entity that triggers this tutorial when it is built.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "item",
          "type": "string",
          "description": "\u003cp\u003eRead if type is \"craft-item\".\u003c/p\u003e\u003cp\u003eName of the item that triggers this tutorial when it is crafted.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "count",
          "type": "uint32",
          "description": "\u003cp\u003eRead if type is \"manual-transfer\".\u003c/p\u003e\u003cp\u003eAmount of times manual item transfer has to be done to trigger this tutorial.\u003c/p\u003e",
          "optional": true
        }
      ]
    }
  },
  "MaterialAmountType": {
    "name": "MaterialAmountType",
    "type": "alias",
    "link": "/Types/MaterialAmountType",
    "value": "double"
  },
  "MapSettingsSteeringDefault": {
    "name": "MapSettingsSteeringDefault",
    "type": "table",
    "link": "/Prototype/MapSettings#steering",
    "value": {
      "properties": [
        {
          "name": "radius",
          "type": "double",
          "description": "Not including the radius of the unit",
          "optional": false
        },
        {
          "name": "separation_factor",
          "type": "double",
          "optional": false
        },
        {
          "name": "separation_force",
          "type": "double",
          "optional": false
        },
        {
          "name": "force_unit_fuzzy_goto_behavior",
          "type": "bool",
          "optional": false
        }
      ]
    }
  },
  "FluidBox": {
    "name": "FluidBox",
    "type": "table",
    "link": "/Types/FluidBox",
    "description": "Used to set the fluid amount an entity can hold, as well as the connection points for pipes leading into and out of the entity.",
    "value": {
      "properties": [
        {
          "name": "pipe_connections",
          "type": "PipeConnectionDefinition[]",
          "description": "Max number of members is 255.",
          "optional": false
        },
        {
          "name": "base_area",
          "type": "double",
          "description": "Must be greater than 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "base_level",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "height",
          "type": "double",
          "description": "Must be greater than 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "filter",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Fluid\" title\u003d\"Prototype/Fluid\"\u003ePrototype/Fluid\u003c/a\u003e. Can be used to specify which fluid is allowed to enter this fluid box. \u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/viewtopic.php?f\u003d28\u0026amp;t\u003d46302\"\u003e[1]\u003c/a\u003e",
          "optional": true
        },
        {
          "name": "render_layer",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "pipe_covers",
          "type": "Sprite4Way",
          "description": "The pictures to show when another fluid box connects to this one.",
          "optional": true
        },
        {
          "name": "pipe_picture",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "minimum_temperature",
          "type": "double",
          "description": "The minimum temperature allowed into the fluidbox. Only applied if a \u003ccode\u003efilter\u003c/code\u003e is specified \u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/viewtopic.php?p\u003d496738#p496738\"\u003e[2]\u003c/a\u003e.",
          "optional": true
        },
        {
          "name": "maximum_temperature",
          "type": "double",
          "description": "The maximum temperature allowed into the fluidbox. Only applied if a \u003ccode\u003efilter\u003c/code\u003e is specified \u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/viewtopic.php?p\u003d496738#p496738\"\u003e[3]\u003c/a\u003e.",
          "optional": true
        },
        {
          "name": "production_type",
          "type": "FluidBoxProductionType",
          "default": "None",
          "optional": true
        },
        {
          "name": "secondary_draw_order",
          "type": "int8",
          "description": "Set the secondary draw order for all orientations.",
          "default": "1",
          "optional": true
        },
        {
          "name": "secondary_draw_orders",
          "type": "FluidBoxSecondaryDrawOrders",
          "description": "Set the secondary draw order for each orientation.",
          "optional": true
        }
      ]
    }
  },
  "SmokeSource": {
    "name": "SmokeSource",
    "type": "table",
    "link": "/Types/SmokeSource",
    "description": "Definition of the smoke of an entity.",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/TrivialSmoke\" title\u003d\"Prototype/TrivialSmoke\"\u003ePrototype/TrivialSmoke\u003c/a\u003e",
          "optional": false
        },
        {
          "name": "frequency",
          "type": "double",
          "description": "Can\u0027t be negative, NaN or infinite.",
          "optional": false
        },
        {
          "name": "offset",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "north_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "east_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "south_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "west_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "deviation",
          "type": "Position",
          "optional": true
        },
        {
          "name": "starting_frame_speed",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_speed_deviation",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_deviation",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "slow_down_factor",
          "type": "uint8",
          "default": "1",
          "optional": true
        },
        {
          "name": "height",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "height_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_vertical_speed",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_vertical_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "vertical_speed_slowdown",
          "type": "float",
          "default": "0.965",
          "optional": true
        }
      ]
    }
  },
  "TileBuildSound": {
    "name": "TileBuildSound",
    "type": "alias",
    "link": "/Types/Tile#build_sound",
    "value": "SoundType|TileBuildSoundValue"
  },
  "BeamLightAnimations": {
    "name": "BeamLightAnimations",
    "type": "table",
    "link": "/Prototype/Beam#light_animations",
    "value": {
      "properties": [
        {
          "name": "start",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "ending",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "head",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "tail",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "body",
          "type": "AnimationVariations",
          "optional": true
        }
      ]
    }
  },
  "BaseAttackParameters": {
    "name": "BaseAttackParameters",
    "type": "table",
    "link": "/Types/BaseAttackParameters",
    "description": "The abstract base of all attack parameters.",
    "value": {
      "properties": [
        {
          "name": "range",
          "type": "float",
          "optional": false
        },
        {
          "name": "cooldown",
          "type": "float",
          "description": "Number of ticks in which it will be possible to shoot again. If \u003c 1, multiple shots can be performed in one tick.",
          "optional": false
        },
        {
          "name": "min_range",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "turn_range",
          "type": "float",
          "description": "If this is \u0026lt;\u003d 0, it is set to 1. Arc from 0 to 1, so for example 0.25 is 90°. Used by the \u003ca href\u003d\"/Flamethrower_turret\" title\u003d\"Flamethrower turret\"\u003eflamethrower turret\u003c/a\u003e in the base game.",
          "default": "1",
          "optional": true
        },
        {
          "name": "fire_penalty",
          "type": "float",
          "description": "Used when searching for the nearest enemy, when this is \u0026gt; 0, enemies that aren\u0027t burning are preferred over burning enemies. Definition of \"burning\" for this: Entity has sticker attached to it, and the sticker has a \u003ca href\u003d\"/Prototype/Sticker#spread_fire_entity\" title\u003d\"Prototype/Sticker\"\u003espread_fire_entity\u003c/a\u003e set.",
          "default": "0",
          "optional": true
        },
        {
          "name": "rotate_penalty",
          "type": "float",
          "description": "A higher penalty will discourage turrets from targeting units that would take longer to turn to face.",
          "default": "0",
          "optional": true
        },
        {
          "name": "health_penalty",
          "type": "float",
          "description": "A higher penalty will discourage turrets from targeting units with higher health. A negative penalty will encourage turrets to target units with higher health.",
          "default": "0",
          "optional": true
        },
        {
          "name": "min_attack_distance",
          "type": "float",
          "description": "If less than \u003ccode\u003erange\u003c/code\u003e, the entity will choose a random distance between \u003ccode\u003erange\u003c/code\u003e and \u003ccode\u003emin_attack_distance\u003c/code\u003e and attack from that distance.",
          "optional": true
        },
        {
          "name": "damage_modifier",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "ammo_consumption_modifier",
          "type": "float",
          "description": "Must be greater than or equal to 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "cooldown_deviation",
          "type": "float",
          "description": "Must be between 0 and 1.",
          "default": "0",
          "optional": true
        },
        {
          "name": "warmup",
          "type": "uint32",
          "description": "Number of ticks it takes for the weapon to actually shoot after the order for shooting has been made. This also allows to \"adjust\" the shooting animation to the effect of shooting.",
          "default": "0",
          "optional": true
        },
        {
          "name": "lead_target_for_projectile_speed",
          "type": "float",
          "description": "Presumably this should be set to the projectile speed to make the unit/turret lead their projectiles.",
          "default": "0",
          "optional": true
        },
        {
          "name": "movement_slow_down_cooldown",
          "type": "float",
          "optional": true
        },
        {
          "name": "movement_slow_down_factor",
          "type": "double",
          "default": "1",
          "optional": true
        },
        {
          "name": "ammo_type",
          "type": "AmmoType",
          "description": "Can be mandatory.",
          "optional": true
        },
        {
          "name": "sound",
          "type": "LayeredSound",
          "optional": true
        },
        {
          "name": "animation",
          "type": "RotatedAnimation",
          "optional": true
        },
        {
          "name": "cyclic_sound",
          "type": "CyclicSound",
          "optional": true
        },
        {
          "name": "use_shooter_direction",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "ammo_categories",
          "type": "string[]",
          "description": "Names of \u003ca href\u003d\"/Prototype/AmmoCategory\" title\u003d\"Prototype/AmmoCategory\"\u003ePrototype/AmmoCategories\u003c/a\u003e.",
          "optional": true
        },
        {
          "name": "ammo_category",
          "type": "string",
          "description": "The name of a \u003ca href\u003d\"/Prototype/AmmoCategory\" title\u003d\"Prototype/AmmoCategory\"\u003ePrototype/AmmoCategory\u003c/a\u003e. Mandatory if \u003ccode\u003eammo_type\u003c/code\u003e and \u003ccode\u003eammo_category\u003c/code\u003e is not given, otherwise ignored.",
          "optional": true
        }
      ]
    }
  },
  "int16": {
    "name": "int16",
    "type": "alias",
    "link": "/Types/int16",
    "description": "16 bit signed number. The range is -32,768 to 32,767 or [-2^15, 2^15 - 1].",
    "value": "number"
  },
  "Vector3D": {
    "name": "Vector3D",
    "type": "alias",
    "link": "/Types/Vector3D",
    "description": "table of three floats. Either specified as an array, or with the named keys \"x\", \"y\" and \"z\".",
    "value": "table"
  },
  "TrainStopLight": {
    "name": "TrainStopLight",
    "type": "table",
    "link": "/Prototype/TrainStop#light1",
    "value": {
      "properties": [
        {
          "name": "picture",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "red_picture",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "light",
          "type": "LightDefinition",
          "optional": false
        }
      ]
    }
  },
  "uint32": {
    "name": "uint32",
    "type": "alias",
    "link": "/Types/uint32",
    "description": "32 bit unsigned number. The range is [0, 2^32-1] or [0, 4294967295] or approximately 4 billion 294 million.",
    "value": "number"
  },
  "TransportBeltConnectorFrame": {
    "name": "TransportBeltConnectorFrame",
    "type": "table",
    "link": "/Types/TransportBeltConnectorFrame",
    "description": "Used to define the graphics for the (in vanilla) yellow frame that is used when a \u003ca href\u003d\"/Prototype/TransportBelt\" title\u003d\"Prototype/TransportBelt\"\u003ePrototype/TransportBelt\u003c/a\u003e is connected to the circuit network.",
    "value": {
      "properties": [
        {
          "name": "frame_main",
          "type": "AnimationVariations",
          "optional": false
        },
        {
          "name": "frame_shadow",
          "type": "AnimationVariations",
          "optional": false
        },
        {
          "name": "frame_main_scanner",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "frame_main_scanner_movement_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "frame_main_scanner_horizontal_start_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_horizontal_end_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_horizontal_y_scale",
          "type": "float",
          "optional": false
        },
        {
          "name": "frame_main_scanner_horizontal_rotation",
          "type": "RealOrientation",
          "optional": false
        },
        {
          "name": "frame_main_scanner_vertical_start_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_vertical_end_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_vertical_y_scale",
          "type": "float",
          "optional": false
        },
        {
          "name": "frame_main_scanner_vertical_rotation",
          "type": "RealOrientation",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_horizontal_start_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_horizontal_end_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_horizontal_y_scale",
          "type": "float",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_horizontal_rotation",
          "type": "RealOrientation",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_vertical_start_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_vertical_end_shift",
          "type": "vector",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_vertical_y_scale",
          "type": "float",
          "optional": false
        },
        {
          "name": "frame_main_scanner_cross_vertical_rotation",
          "type": "RealOrientation",
          "optional": false
        },
        {
          "name": "frame_main_scanner_nw_ne",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "frame_main_scanner_sw_se",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "frame_back_patch",
          "type": "SpriteVariations",
          "optional": true
        },
        {
          "name": "frame_front_patch",
          "type": "SpriteVariations",
          "optional": true
        }
      ]
    }
  },
  "OffshorePumpGraphicsSet": {
    "name": "OffshorePumpGraphicsSet",
    "type": "table",
    "link": "/Prototype/OffshorePump#graphics_set",
    "value": {
      "properties": [
        {
          "name": "animation",
          "type": "Animation4Way",
          "description": "Rendered in \"object\" layer, with secondary draw order 0.",
          "optional": false
        },
        {
          "name": "base_render_layer",
          "type": "RenderLayer",
          "default": "ground-patch",
          "optional": true
        },
        {
          "name": "underwater_layer_offset",
          "type": "int8",
          "default": "1",
          "optional": true
        },
        {
          "name": "fluid_animation",
          "type": "Animation4Way",
          "description": "Rendered in \"object\" layer, with secondary draw order 20.",
          "optional": true
        },
        {
          "name": "glass_pictures",
          "type": "Sprite4Way",
          "description": "Rendered in \"object\" layer, with secondary draw order 40.",
          "optional": true
        },
        {
          "name": "base_pictures",
          "type": "Sprite4Way",
          "description": "Rendered in layer specified by base_render_layer, with secondary draw order 0.",
          "optional": true
        },
        {
          "name": "underwater_pictures",
          "type": "Sprite4Way",
          "description": "Drawn by tile renderer when water animation is enabled.",
          "optional": true
        }
      ]
    }
  },
  "InterruptibleSound": {
    "name": "InterruptibleSound",
    "type": "table",
    "link": "/Types/InterruptibleSound",
    "value": {
      "properties": [
        {
          "name": "sound",
          "type": "SoundType",
          "optional": false
        },
        {
          "name": "fade_ticks",
          "type": "uint32",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "RotatedAnimation": {
    "name": "RotatedAnimation",
    "type": "table",
    "link": "/Types/RotatedAnimation",
    "value": {
      "properties": [
        {
          "name": "direction_count",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "layers",
          "type": "RotatedAnimation[]",
          "description": "\u003cp\u003eIf this property is present, all RotatedAnimation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (RotatedAnimation definition) in the array may also have the \u003ccode\u003elayers\u003c/code\u003e property.\u003c/p\u003e\u003cp\u003eIf this property is present, all other properties are ignored and the mandatory properties do not have to be defined.\u003c/p\u003e\u003cp\u003eLayers may not be an empty table.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "hr_version",
          "type": "RotatedAnimation",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the RotatedAnimation.",
          "optional": true
        },
        {
          "name": "filename",
          "type": "FileName",
          "description": "Mandatory if \u003ccode\u003estripes\u003c/code\u003e and \u003ccode\u003efilenames\u003c/code\u003e is not specified.",
          "optional": true
        },
        {
          "name": "filenames",
          "type": "FileName[]",
          "description": "Only loaded if \u003ccode\u003estripes\u003c/code\u003e is not present.",
          "optional": true
        },
        {
          "name": "slice",
          "type": "uint32",
          "description": "Mandatory if \u003ccode\u003efilenames\u003c/code\u003e is present.",
          "optional": true
        },
        {
          "name": "lines_per_file",
          "type": "uint32",
          "description": "Mandatory if \u003ccode\u003efilenames\u003c/code\u003e is present.",
          "optional": true
        },
        {
          "name": "priority",
          "type": "SpritePriority",
          "default": "medium",
          "optional": true
        },
        {
          "name": "flags",
          "type": "SpriteFlags",
          "optional": true
        },
        {
          "name": "size",
          "type": "SpriteSizeType|SpriteSizeType[]",
          "description": "\u003cp\u003eThe width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "width",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Width of one frame in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "height",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Height of one frame in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the animation in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the animation in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "position",
          "type": "SpriteSizeType[]",
          "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "optional": true
        },
        {
          "name": "scale",
          "type": "double",
          "description": "Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
          "default": "1",
          "optional": true
        },
        {
          "name": "draw_as_shadow",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "mipmap_count",
          "type": "uint8",
          "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
          "default": "0",
          "optional": true
        },
        {
          "name": "apply_runtime_tint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tint",
          "type": "Color",
          "optional": true
        },
        {
          "name": "blend_mode",
          "type": "BlendMode",
          "default": "normal",
          "optional": true
        },
        {
          "name": "load_in_minimal_mode",
          "type": "bool",
          "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
          "default": "false",
          "optional": true
        },
        {
          "name": "premul_alpha",
          "type": "bool",
          "description": "Whether alpha should be premultiplied.",
          "default": "true",
          "optional": true
        },
        {
          "name": "generate_sdf",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "run_mode",
          "type": "AnimationRunMode",
          "default": "forward",
          "optional": true
        },
        {
          "name": "frame_count",
          "type": "uint32",
          "description": "Can\u0027t be 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "line_length",
          "type": "uint32",
          "description": "Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.",
          "default": "0",
          "optional": true
        },
        {
          "name": "animation_speed",
          "type": "float",
          "description": "Modifier of the animation playing speed, the default is 1, which means one animation frame per tick (60 fps). The speed of playing can often vary depending on the usage (output of steam engine for example). Has to be greater than 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "max_advance",
          "type": "float",
          "optional": true
        },
        {
          "name": "repeat_count",
          "type": "uint8",
          "description": "Can\u0027t be 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "dice",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "dice_x",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "dice_y",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "frame_sequence",
          "type": "AnimationFrameSequence",
          "optional": true
        },
        {
          "name": "still_frame",
          "type": "uint32",
          "default": "0",
          "optional": true
        },
        {
          "name": "axially_symmetrical",
          "type": "bool",
          "description": "If true, \u003ccode\u003edirection_count\u003c/code\u003e must be greater than 1.",
          "default": "false",
          "optional": true
        },
        {
          "name": "counterclockwise",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "middle_orientation",
          "type": "RealOrientation",
          "default": "0.5",
          "optional": true
        },
        {
          "name": "orientation_range",
          "type": "float",
          "description": "Automatically clamped to be between 0 and 1.",
          "default": "1",
          "optional": true
        },
        {
          "name": "apply_projection",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "stripes",
          "type": "Stripe[]",
          "optional": true
        }
      ]
    }
  },
  "FootstepTriggerEffectList": {
    "name": "FootstepTriggerEffectList",
    "type": "alias",
    "link": "/Types/FootstepTriggerEffectList",
    "value": "FootstepTriggerEffectListValue[]"
  },
  "HeatBuffer": {
    "name": "HeatBuffer",
    "type": "table",
    "link": "/Types/HeatBuffer",
    "description": "Used to specify heat capacity properties without a \u003ca href\u003d\"/Types/EnergySource#Heat_energy_source\" title\u003d\"Types/EnergySource\"\u003eheat energy source\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "max_temperature",
          "type": "double",
          "description": "Must be \u003e\u003d default_temperature.",
          "optional": false
        },
        {
          "name": "specific_heat",
          "type": "Energy",
          "optional": false
        },
        {
          "name": "max_transfer",
          "type": "Energy",
          "optional": false
        },
        {
          "name": "default_temperature",
          "type": "double",
          "default": "15",
          "optional": true
        },
        {
          "name": "min_temperature_gradient",
          "type": "double",
          "default": "1",
          "optional": true
        },
        {
          "name": "min_working_temperature",
          "type": "double",
          "description": "Must be \u003e\u003d default_temperature and \u003c\u003d max_temperature.",
          "default": "15",
          "optional": true
        },
        {
          "name": "minimum_glow_temperature",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "pipe_covers",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "heat_pipe_covers",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "heat_picture",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "heat_glow",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "connections",
          "type": "HeatConnection[]",
          "description": "The table may only contain up to 32 connections.",
          "optional": true
        }
      ]
    }
  },
  "ShowExplosionOnChartTriggerEffectItem": {
    "name": "ShowExplosionOnChartTriggerEffectItem",
    "type": "table",
    "link": "/Types/ShowExplosionOnChartTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "scale",
          "type": "float",
          "optional": false
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "BoilerMode": {
    "name": "BoilerMode",
    "type": "string",
    "link": "/Prototype/Boiler#mode",
    "value": {
      "heat-water-inside": "",
      "output-to-separate-pipe": ""
    }
  },
  "UtilityConstantsChart": {
    "name": "UtilityConstantsChart",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "electric_lines_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "electric_lines_color_switch_enabled",
          "type": "Color",
          "optional": false
        },
        {
          "name": "electric_lines_color_switch_disabled",
          "type": "Color",
          "optional": false
        },
        {
          "name": "electric_power_pole_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "switch_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "electric_line_width",
          "type": "double",
          "optional": false
        },
        {
          "name": "electric_line_minimum_absolute_width",
          "type": "double",
          "optional": false
        },
        {
          "name": "turret_range_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "artillery_range_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "default_friendly_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "default_enemy_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "rail_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "vehicle_outer_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "vehicle_outer_color_selected",
          "type": "Color",
          "optional": false
        },
        {
          "name": "vehicle_inner_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "vehicle_wagon_connection_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "resource_outline_selection_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "chart_train_stop_text_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "chart_train_stop_disabled_text_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "red_signal_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "green_signal_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "blue_signal_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "yellow_signal_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "default_friendly_color_by_type",
          "type": "table\u003cstring, Color\u003e",
          "description": "The strings are entity types.",
          "optional": true
        },
        {
          "name": "default_color_by_type",
          "type": "table\u003cstring, Color\u003e",
          "description": "The strings are entity types.",
          "optional": true
        },
        {
          "name": "explosion_visualization_duration",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_path_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "train_preview_path_outline_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "train_current_path_outline_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "custom_tag_scale",
          "type": "float",
          "default": "0.6",
          "optional": true
        }
      ]
    }
  },
  "TriggerEffectValue": {
    "name": "TriggerEffectValue",
    "type": "prototype",
    "link": "/Types/SpriteVariations",
    "value": {
      "damage": "DamageTriggerEffectItem",
      "create-entity": "CreateEntityTriggerEffectItem",
      "create-explosion": "CreateExplosionTriggerEffectItem",
      "create-fire": "CreateFireTriggerEffectItem",
      "create-smoke": "CreateSmokeTriggerEffectItem",
      "create-trivial-smoke": "CreateTrivialSmokeEffectItem",
      "create-particle": "CreateParticleTriggerEffectItem",
      "create-sticker": "CreateStickerTriggerEffectItem",
      "create-decorative": "CreateDecorativesTriggerEffectItem",
      "nested-result": "NestedTriggerEffectItem",
      "play-sound": "PlaySoundTriggerEffectItem",
      "push-back": "PushBackTriggerEffectItem",
      "destroy-cliffs": "DestroyCliffsTriggerEffectItem",
      "show-explosion-on-chart": "ShowExplosionOnChartTriggerEffectItem",
      "insert-item": "InsertItemTriggerEffectItem",
      "script": "ScriptTriggerEffectItem",
      "set-tile": "SetTileTriggerEffectItem",
      "invoke-tile-trigger": "InvokeTileEffectTriggerEffectItem",
      "destroy-decoratives": "DestroyDecorativesTriggerEffectItem",
      "camera-effect": "CameraEffectTriggerEffectItem"
    }
  },
  "PlaceAsTile": {
    "name": "PlaceAsTile",
    "type": "table",
    "link": "/Types/PlaceAsTile",
    "value": {
      "properties": [
        {
          "name": "result",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "condition",
          "type": "CollisionMask",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "condition_size",
          "type": "int32",
          "optional": false
        }
      ]
    }
  },
  "Order": {
    "name": "Order",
    "type": "alias",
    "link": "/Types/Order",
    "description": "\u003cp\u003eThe order property is a \u003cb\u003esimple\u003c/b\u003e \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003estring\u003c/a\u003e. When the game needs to sort prototypes, it looks at their order properties and sorts those alphabetically. A prototype with an order string of \"a\" will be listed before other prototypes with order string \"b\" or \"c\". The \"-\" or \"[]\" structures that can be found in vanilla order strings \u003ci\u003edo not\u003c/i\u003e have any special meaning.\u003c/p\u003e\u003cp\u003eWhen the game compares two prototypes (of the same type) if the order strings aren\u0027t equal they\u0027re \u003ca href\u003d\"http://en.wikipedia.org/wiki/Lexicographical_order\" class\u003d\"extiw\" title\u003d\"wikipedia:Lexicographical order\"\u003elexicographically compared\u003c/a\u003e to determine if a given prototype is shown before or after another. If the order strings are equal then the game falls back to comparing the prototype names to determine order.\u003c/p\u003e",
    "value": "string"
  },
  "AutoplaceSpecification": {
    "name": "AutoplaceSpecification",
    "type": "table",
    "link": "/Types/AutoplaceSpecification",
    "description": "\u003cp\u003eAutoplace specification is used to determine which entities are placed when generating map. Currently it is used for enemy bases, resources and other entities (trees, fishes, ...).\u003c/p\u003e\u003cp\u003eAutoplace specification describe conditions for placing tiles, entities, and decoratives during surface generation. Probability (of placement on any given tile) and richness (which has different meaning depending on the thing being placed) can be defined either in terms of a set of peaks, or using explicit expressions.\u003c/p\u003e",
    "value": {
      "properties": [
        {
          "name": "control",
          "type": "string",
          "description": "ID of \u003ca href\u003d\"/Prototype/AutoplaceControl\" title\u003d\"Prototype/AutoplaceControl\"\u003eautoplace control\u003c/a\u003e that applies to this entity.",
          "optional": true
        },
        {
          "name": "default_enabled",
          "type": "bool",
          "description": "\u003cp\u003eIndicates whether the thing should be placed even if \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"http://lua-api.factorio.com/latest/Concepts.html#MapGenSettings\"\u003eMapGenSettings\u003c/a\u003e do not provide frequency/size/richness for it (either for the specific prototype of for the control named by AutoplaceSpecification.control).\u003c/p\u003e\u003cp\u003eIf true, normal frequency/size/richness (value\u003d1) are used in that case.  Otherwise it is treated as if \u0027none\u0027 were selected.\u003c/p\u003e",
          "default": "true",
          "optional": true
        },
        {
          "name": "force",
          "type": "AutoplaceSpecificationForce",
          "description": "Force of the placed entity. One of \"enemy\", \"player\", \"neutral\", or a custom force name. Only matters for EntityWithForce or EntityWithOwner.",
          "default": "neutral",
          "optional": true
        },
        {
          "name": "order",
          "type": "Order",
          "description": "Order for placing the entity (has no effect when placing tiles). Entities whose order compares less are placed earlier (this influences placing multiple entities which collide with itself), from entities with equal order string only one with the highest probability is placed.",
          "optional": true
        },
        {
          "name": "placement_density",
          "type": "uint32",
          "description": "For entities and decoratives, how many times to attempt to place on each tile (probability and collisions are taken into account each attempt).",
          "default": "1",
          "optional": true
        },
        {
          "name": "tile_restriction",
          "type": "string[]",
          "description": "For entities and decoratives, how many times to attempt to place on each tile (probability and collisions are taken into account each attempt).",
          "optional": true
        }
      ]
    }
  },
  "MiningDrillGraphicsSet": {
    "name": "MiningDrillGraphicsSet",
    "type": "table",
    "link": "/Types/MiningDrillGraphicsSet",
    "value": {
      "properties": [
        {
          "name": "animation",
          "type": "Animation4Way",
          "optional": true
        },
        {
          "name": "idle_animation",
          "type": "Animation4Way",
          "description": "Idle animation must have the same frame count as animation.",
          "optional": true
        },
        {
          "name": "always_draw_idle_animation",
          "type": "bool",
          "description": "Only loaded if \u003ccode\u003eidle_animation\u003c/code\u003e is present. ",
          "default": "false",
          "optional": true
        },
        {
          "name": "default_recipe_tint",
          "type": "TintColors",
          "optional": true
        },
        {
          "name": "working_visualisations",
          "type": "WorkingVisualisation",
          "optional": true
        },
        {
          "name": "shift_animation_waypoints",
          "type": "CraftingMachineShiftAnimationWaypoints",
          "description": "Only loaded if one of \u003ccode\u003eshift_animation_waypoint_stop_duration\u003c/code\u003e or \u003ccode\u003eshift_animation_transition_duration\u003c/code\u003e is not 0.",
          "optional": true
        },
        {
          "name": "shift_animation_waypoint_stop_duration",
          "type": "uint16",
          "description": "Only loaded if \u003ccode\u003eshift_animation_waypoints\u003c/code\u003e is present.",
          "default": "0",
          "optional": true
        },
        {
          "name": "shift_animation_transition_duration",
          "type": "uint16",
          "description": "Only loaded if \u003ccode\u003eshift_animation_waypoints\u003c/code\u003e is present.",
          "default": "0",
          "optional": true
        },
        {
          "name": "status_colors",
          "type": "CraftingMachineStatusColors",
          "optional": true
        },
        {
          "name": "drilling_vertical_movement_duration",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "animation_progress",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "max_animation_progress",
          "type": "float",
          "default": "1000",
          "optional": true
        },
        {
          "name": "min_animation_progress",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "circuit_connector_layer",
          "type": "RenderLayer|MiningDrillGraphicsSetCircuitConnectorLayer",
          "description": "Renderlayer(s) for all directions of the circuit connectors.",
          "default": "object",
          "optional": true
        },
        {
          "name": "circuit_connector_secondary_draw_order",
          "type": "int8|MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder",
          "description": "Secondary draw order(s) for all directions of the circuit connectors.",
          "default": "100",
          "optional": true
        }
      ]
    }
  },
  "SoundType": {
    "name": "SoundType",
    "type": "alias",
    "link": "/Types/Sound",
    "value": "SoundValue1|SoundValue2[]"
  },
  "ColorValue": {
    "name": "ColorValue",
    "type": "table",
    "link": "/Types/Color",
    "value": {
      "properties": [
        {
          "name": "r",
          "type": "float",
          "description": "red value",
          "default": "0",
          "optional": true
        },
        {
          "name": "g",
          "type": "float",
          "description": "green value",
          "default": "0",
          "optional": true
        },
        {
          "name": "b",
          "type": "float",
          "description": "blue value",
          "default": "0",
          "optional": true
        },
        {
          "name": "a",
          "type": "float",
          "description": "alpha value - transparency",
          "default": "1",
          "optional": true
        }
      ]
    }
  },
  "SpriteSizeType": {
    "name": "SpriteSizeType",
    "type": "alias",
    "link": "/Types/SpriteSizeType",
    "value": "int16"
  },
  "AnimationVector": {
    "name": "AnimationVector",
    "type": "table",
    "link": "/Types/AnimatedVector",
    "value": {
      "properties": [
        {
          "name": "rotations",
          "type": "AnimatedVectorRotation[]",
          "optional": false
        },
        {
          "name": "render_layer",
          "type": "RenderLayer",
          "description": "Default render layer for the rotations.",
          "optional": true
        },
        {
          "name": "direction_shift",
          "type": "AnimatedVectorDirectionShift",
          "optional": true
        }
      ]
    }
  },
  "TrainStopDrawingBoxes": {
    "name": "TrainStopDrawingBoxes",
    "type": "table",
    "link": "/Prototype/TrainStop#drawing_boxes",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "BoundingBox",
          "optional": false
        },
        {
          "name": "west",
          "type": "BoundingBox",
          "optional": false
        },
        {
          "name": "south",
          "type": "BoundingBox",
          "optional": false
        },
        {
          "name": "east",
          "type": "BoundingBox",
          "optional": false
        }
      ]
    }
  },
  "BoundingBox": {
    "name": "BoundingBox",
    "type": "alias",
    "link": "/Types/BoundingBox",
    "description": "\u003cp\u003eBoundingBox is set of two Types/Position. BoundingBoxes are typically centered around the position of an entity.\u003c/p\u003e\u003cp\u003eThe first position is assumed to be leftTop, the second position is assumed to be rightBottom. A third member may be added, a Types/float that represents the orientation, however it does not seem to be used.\u003c/p\u003e",
    "value": "Position[]"
  },
  "ForceCondition": {
    "name": "ForceCondition",
    "type": "string",
    "link": "/Types/ForceCondition",
    "value": {
      "all": "",
      "enemy": "",
      "ally": "",
      "friend": "",
      "not-friend": "",
      "same": "",
      "not-same": ""
    }
  },
  "HeatConnection": {
    "name": "HeatConnection",
    "type": "table",
    "link": "/Types/HeatConnection",
    "description": "Defines the connections for a heat energy source in \u003ca href\u003d\"/Types/EnergySource\" title\u003d\"Types/EnergySource\"\u003eTypes/EnergySource\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "position",
          "type": "Position",
          "optional": false
        },
        {
          "name": "direction",
          "type": "Direction",
          "optional": false
        }
      ]
    }
  },
  "RotatedAnimationVariations": {
    "name": "RotatedAnimationVariations",
    "type": "alias",
    "link": "/Types/RotatedAnimationVariations",
    "value": "RotatedAnimation|RotatedAnimation[]"
  },
  "UtilitySpritesCursorBox": {
    "name": "UtilitySpritesCursorBox",
    "type": "table",
    "link": "/Prototype/UtilitySprites",
    "value": {
      "properties": [
        {
          "name": "regular",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "not_allowed",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "copy",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "electricity",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "logistics",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "logistics",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "pair",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "train_visualization",
          "type": "BoxSpecification[]",
          "optional": false
        },
        {
          "name": "blueprint_snap_rectangle",
          "type": "BoxSpecification[]",
          "optional": false
        }
      ]
    }
  },
  "ElectricUsagePriority": {
    "name": "ElectricUsagePriority",
    "type": "string",
    "link": "/Types/ElectricUsagePriority",
    "description": "Used to specify priority of energy usage in the \u003ca href\u003d\"/Electric_system\" title\u003d\"Electric system\"\u003eElectric network\u003c/a\u003e.",
    "value": {
      "primary-input": "As input used for the most important machines, currently used for laser turrets.",
      "primary-output": "",
      "secondary-input": "As input used for all other machines.",
      "secondary-output": "As output used in steam generators.",
      "tertiary": "As input/output used for accumulators, to collect the overproduction or provide energy when neither primary/secondary output can\u0027t.",
      "solar": "Can only be used by \u003ca href\u003d\"/Prototype/SolarPanel\" title\u003d\"Prototype/SolarPanel\"\u003ePrototype/SolarPanel\u003c/a\u003e, will be ignored otherwise.",
      "lamp": "Can only be used by \u003ca href\u003d\"/Prototype/Lamp\" title\u003d\"Prototype/Lamp\"\u003ePrototype/Lamp\u003c/a\u003e, will be ignored otherwise."
    }
  },
  "BeaconGraphicsSetApplymoduleTint": {
    "name": "BeaconGraphicsSetApplymoduleTint",
    "type": "string",
    "link": "/Types/BeaconGraphicsSet#apply_module_tint",
    "value": {
      "primary": "",
      "secondary": "",
      "tertiary": "",
      "quaternary": "",
      "none": ""
    }
  },
  "AreaTriggerItem": {
    "name": "AreaTriggerItem",
    "type": "table",
    "link": "/Types/AreaTriggerItem",
    "value": {
      "properties": [
        {
          "name": "radius",
          "type": "double",
          "optional": false
        },
        {
          "name": "trigger_from_target",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "target_entities",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "show_in_tooltip",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "collision_mode",
          "type": "AreaTriggerItemCollisionMode",
          "default": "distance-from-collision-box",
          "optional": true
        }
      ],
      "parent": "TriggerItem"
    }
  },
  "CreateEntityTriggerEffectItem": {
    "name": "CreateEntityTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateEntityTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "entity_name",
          "type": "string",
          "description": "Name of the entity that should be created.",
          "optional": false
        },
        {
          "name": "offset_deviation",
          "type": "BoundingBox",
          "optional": true
        },
        {
          "name": "trigger_created_entity",
          "type": "bool",
          "description": "If this is true, \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity\"\u003eon_trigger_created_entity\u003c/a\u003e is raised when the entity is created.",
          "default": "false",
          "optional": true
        },
        {
          "name": "check_buildability",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "show_in_tooltip",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tile_collision_mask",
          "type": "CollisionMask",
          "optional": true
        },
        {
          "name": "offsets",
          "type": "vector[]",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "ItemIngredientPrototype": {
    "name": "ItemIngredientPrototype",
    "type": "table",
    "link": "/Types/ItemIngredientPrototype",
    "description": "An item ingredient definition for a \u003ca href\u003d\"/Prototype/Recipe\" title\u003d\"Prototype/Recipe\"\u003ePrototype/Recipe\u003c/a\u003e. Its loading is triggered by the \u003ccode\u003etype\u003c/code\u003e of a \u003ca href\u003d\"/Types/IngredientPrototype\" title\u003d\"Types/IngredientPrototype\"\u003eTypes/IngredientPrototype\u003c/a\u003e being \"item\". It can be specified as a table with named or numbered keys, but not a mix of both.",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "The name of a \u003ca href\u003d\"/Prototype/Item\" title\u003d\"Prototype/Item\"\u003ePrototype/Item\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "amount",
          "type": "uint16",
          "optional": false
        },
        {
          "name": "catalyst_amount",
          "type": "uint16",
          "description": "Only loaded if the table is using named keys. Amount of this ingredient that should not be included in the item consumption statistics. Usually used together with an equal catalyst amount on the \"product\" of the catalyst in the recipe.",
          "default": "0",
          "optional": false
        }
      ]
    }
  },
  "BeaconGraphicsSet": {
    "name": "BeaconGraphicsSet",
    "type": "table",
    "link": "/Types/BeaconGraphicsSet",
    "value": {
      "properties": [
        {
          "name": "draw_animation_when_idle",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "draw_light_when_idle",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "random_animation_offset",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "module_icons_suppressed",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "base_layer",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "animation_layer",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "top_layer",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "animation_progress",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "min_animation_progress",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "max_animation_progress",
          "type": "float",
          "default": "1000",
          "optional": true
        },
        {
          "name": "apply_module_tint",
          "type": "BeaconGraphicsSetApplymoduleTint",
          "description": "Which tint set in \u003ca href\u003d\"/Prototype/Module#beacon_tint\" title\u003d\"Prototype/Module\"\u003ePrototype/Module#beacon_tint\u003c/a\u003e should be applied to this, if any.",
          "default": "none",
          "optional": true
        },
        {
          "name": "apply_module_tint_to_light",
          "type": "BeaconGraphicsSetApplymoduleTint",
          "description": "Which tint set in \u003ca href\u003d\"/Prototype/Module#beacon_tint\" title\u003d\"Prototype/Module\"\u003ePrototype/Module#beacon_tint\u003c/a\u003e should be applied to the light, if any.",
          "default": "none",
          "optional": true
        },
        {
          "name": "no_modules_tint",
          "type": "Color",
          "optional": true
        },
        {
          "name": "animation_list",
          "type": "AnimationElement[]",
          "optional": true
        },
        {
          "name": "module_visualisations",
          "type": "BeaconModuleVisualizations[]",
          "description": "The visualisations available for displaying the modules in the beacon. The visualisation is chosen based on art style, see \u003ca href\u003d\"/Types/BeaconModuleVisualizations#art_style\" title\u003d\"Types/BeaconModuleVisualizations\"\u003eTypes/BeaconModuleVisualizations#art_style\u003c/a\u003e and \u003ca href\u003d\"/Prototype/Module#art_style\" title\u003d\"Prototype/Module\"\u003ePrototype/Module#art_style\u003c/a\u003e.",
          "optional": true
        },
        {
          "name": "module_tint_mode",
          "type": "string",
          "description": "One of \"single-module\" or \"mix\".",
          "default": "single-module",
          "optional": true
        }
      ]
    }
  },
  "BlendMode": {
    "name": "BlendMode",
    "type": "string",
    "link": "/Types/BlendMode",
    "value": {
      "normal": "The result color is determined with the following formula: \u003ccode\u003eResult \u003d Active_RGB * Active_Alpha + Background_RGB * ( 1 - Active_Alpha )\u003c/code\u003e",
      "additive": "The result color is determined with the following formula: \u003ccode\u003eResult \u003d Active_RGB + Background_RGB\u003c/code\u003e",
      "additive-soft": "The result color is determined with the following formula: \u003ccode\u003eResult \u003d Active_RGB * ( 1 - Background_RGB ) + Background_RGB\u003c/code\u003e",
      "multiplicative": "The result color is determined with the following formula: \u003ccode\u003eResult \u003d Active_RGB * Background_RGB\u003c/code\u003e",
      "overwrite": "The result color is determined with the following formula: \u003ccode\u003eResult \u003d Active_RGBA or Background_RGBA\u003c/code\u003e"
    }
  },
  "ActivateEquipmentCapsuleAction": {
    "name": "ActivateEquipmentCapsuleAction",
    "type": "table",
    "link": "/Types/ActivateEquipmentCapsuleAction",
    "description": "Used by \u003ca href\u003d\"/Types/CapsuleAction\" title\u003d\"Types/CapsuleAction\"\u003eTypes/CapsuleAction\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "equipment",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Equipment\" title\u003d\"Prototype/Equipment\"\u003ePrototype/Equipment\u003c/a\u003e.",
          "optional": false
        }
      ]
    }
  },
  "RotatedSprite": {
    "name": "RotatedSprite",
    "type": "table",
    "link": "/Types/RotatedSprite",
    "description": "Specifies series of sprites used to visualise different rotations of the object.",
    "value": {
      "properties": [
        {
          "name": "direction_count",
          "type": "uint16",
          "description": "Count of direction (frames) specified.",
          "optional": false
        },
        {
          "name": "filename",
          "type": "FileName",
          "description": "Either this or \u003ccode\u003e\"filenames\"\u003c/code\u003e has to be non-empty.",
          "optional": true
        },
        {
          "name": "filenames",
          "type": "FileName[]",
          "description": "Array of filenames. Either this or \u003ccode\u003e\"filename\"\u003c/code\u003e has to be non-empty.",
          "optional": true
        },
        {
          "name": "layers",
          "type": "RotatedSprite[]",
          "description": "\u003cp\u003eIf this property is present, all RotatedSprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (RotatedSprite definition) in the array may also have the \u003ccode\u003elayers\u003c/code\u003e property.\u003c/p\u003e\u003cp\u003eIf this property is present, all other properties are ignored and the mandatory properties do not have to be defined.\u003c/p\u003e\u003cp\u003eLayers may not be an empty table.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "hr_version",
          "type": "RotatedSprite",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the RotatedSprite.",
          "optional": true
        },
        {
          "name": "hr_version",
          "type": "RotatedSprite",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the RotatedSprite.",
          "optional": true
        },
        {
          "name": "slice",
          "type": "SpriteSizeType",
          "description": "\u003cp\u003eNumber of slices this is sliced into when using the \"optimized atlas packing\" option. If you are a modder, you can just ignore this property.\u003c/p\u003e\u003cp\u003eExample: If this is 4, the sprite will be sliced into a 4×4 grid.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "dice",
          "type": "SpriteSizeType",
          "description": "\u003cp\u003eNumber of slices this is sliced into when using the \"optimized atlas packing\" option. If you are a modder, you can just ignore this property.\u003c/p\u003e\u003cp\u003eExample: If this is 4, the sprite will be sliced into a 4×4 grid.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "slice_x",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the x axis.",
          "optional": true
        },
        {
          "name": "dice_x",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the x axis.",
          "optional": true
        },
        {
          "name": "slice_y",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the y axis.",
          "optional": true
        },
        {
          "name": "dice_y",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the y axis.",
          "optional": true
        },
        {
          "name": "priority",
          "type": "SpritePriority",
          "default": "medium",
          "optional": true
        },
        {
          "name": "flags",
          "type": "SpriteFlags",
          "optional": true
        },
        {
          "name": "size",
          "type": "SpriteSizeType|SpriteSizeType[]",
          "description": "\u003cp\u003eThe width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "width",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Width of the picture in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "height",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Height of the picture in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "position",
          "type": "SpriteSizeType[]",
          "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "description": "In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.",
          "optional": true
        },
        {
          "name": "scale",
          "type": "double",
          "description": "Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
          "default": "1",
          "optional": true
        },
        {
          "name": "draw_as_shadow",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "mipmap_count",
          "type": "uint8",
          "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
          "default": "0",
          "optional": true
        },
        {
          "name": "apply_runtime_tint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tint",
          "type": "Color",
          "optional": true
        },
        {
          "name": "blend_mode",
          "type": "BlendMode",
          "default": "normal",
          "optional": true
        },
        {
          "name": "load_in_minimal_mode",
          "type": "bool",
          "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
          "default": "false",
          "optional": true
        },
        {
          "name": "premul_alpha",
          "type": "bool",
          "description": "Whether alpha should be premultiplied.",
          "default": "true",
          "optional": true
        },
        {
          "name": "generate_sdf",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "axially_symmetrical",
          "type": "bool",
          "description": "When set to true, left the same picture is used for left/right direction, just flipped, this can save half of the space required, but is not usable once the picture contains shadows etc.",
          "default": "false",
          "optional": true
        },
        {
          "name": "back_equals_front",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "apply_projection",
          "type": "bool",
          "description": "Used to fix the inconsistency of direction of the entity in 3d when rendered and direction on the screen (where the 45 degree angle for projection is used).",
          "default": "false",
          "optional": true
        },
        {
          "name": "counterclockwise",
          "type": "bool",
          "description": "Set to true to indicate sprites in the spritesheet are in counterclockwise order.",
          "default": "false",
          "optional": true
        },
        {
          "name": "line_length",
          "type": "uint32",
          "description": "Used to specify the individual images in grid. 0 means that all the picture are in one horizontal line.",
          "default": "0",
          "optional": true
        },
        {
          "name": "allow_low_quality_rotation",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "lines_per_file",
          "type": "uint64",
          "description": "Mandatory if \u003ccode\u003e\"filenames\"\u003c/code\u003e exists.",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "WorkingVisualisationApplyTint": {
    "name": "WorkingVisualisationApplyTint",
    "type": "string",
    "link": "/Types/WorkingVisualisation#apply_tint",
    "value": {
      "resource-color": "",
      "input-fluid-base-color": "",
      "input-fluid-flow-color": "",
      "status": "",
      "none": ""
    }
  },
  "int32": {
    "name": "int32",
    "type": "alias",
    "link": "/Types/int32",
    "description": "32 bit signed number. The range is [-2^31, 2^31 - 1] or [-2147483648, 2147483647] or approximately 2 billion 147 million.",
    "value": "number"
  },
  "Loot": {
    "name": "Loot",
    "type": "alias",
    "link": "/Types/Loot",
    "value": "LootValue[]"
  },
  "ItemWithInventoryInsertionPriorityMode": {
    "name": "ItemWithInventoryInsertionPriorityMode",
    "type": "string",
    "link": "/Prototype/ItemWithInventory#insertion_priority_mode",
    "value": {
      "default": "Items are inserted into this item-with-inventory only if they match the whitelist defined in the prototype for the item and whitelist is used.",
      "never": "Items are never inserted into this item-with-inventory except explicitly by the player or script.",
      "always": "All items first try to be inserted into this item-with-inventory.",
      "when_manually_filtered": "When the inventory contains filters that match the item-to-be-inserted then try to put it into this item before the inventory this item resides in."
    }
  },
  "MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder": {
    "name": "MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder",
    "type": "table",
    "link": "/Types/MiningDrillGraphicsSet#circuit_connector_layer",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "int8",
          "default": "100",
          "optional": true
        },
        {
          "name": "east",
          "type": "int8",
          "default": "100",
          "optional": true
        },
        {
          "name": "south",
          "type": "int8",
          "default": "100",
          "optional": true
        },
        {
          "name": "west",
          "type": "int8",
          "default": "100",
          "optional": true
        }
      ]
    }
  },
  "CircularParticleCreationSpecification": {
    "name": "CircularParticleCreationSpecification",
    "type": "table",
    "link": "/Types/CircularParticleCreationSpecification",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003ePrototype/Entity\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "starting_frame_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "direction",
          "type": "float",
          "default": "0.25",
          "optional": true
        },
        {
          "name": "direction_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed",
          "type": "float",
          "default": "0.1",
          "optional": true
        },
        {
          "name": "speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "height",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "height_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "vertical_speed",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "vertical_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "center",
          "type": "vector",
          "optional": true
        },
        {
          "name": "creation_distance",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "creation_distance_orientation",
          "type": "double",
          "default": "0",
          "optional": true
        },
        {
          "name": "use_source_position",
          "type": "bool",
          "optional": true
        }
      ]
    }
  },
  "LightDefinitionBasic": {
    "name": "LightDefinitionBasic",
    "type": "table",
    "link": "/Types/LightDefinition",
    "description": "Type for placeable_by for entities: Item that when placed creates this entity.",
    "value": {
      "properties": [
        {
          "name": "intensity",
          "type": "float",
          "description": "Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.",
          "optional": false
        },
        {
          "name": "size",
          "type": "float",
          "description": "The radius of the light in tiles. Note, that the light gets darker near the edges, so the effective size of the light seems to be smaller.",
          "optional": false
        },
        {
          "name": "source_orientation_offset",
          "type": "RealOrientation",
          "default": "0",
          "optional": true
        },
        {
          "name": "add_perspective",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "optional": true
        },
        {
          "name": "color",
          "type": "Color",
          "description": "Color of the light.",
          "optional": true
        },
        {
          "name": "minimum_darkness",
          "type": "float",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "TileVariantsMain": {
    "name": "TileVariantsMain",
    "type": "table",
    "link": "/Prototype/Tile#variants",
    "value": {
      "properties": [
        {
          "name": "size",
          "type": "uint32",
          "description": "Only powers of 2 from 1 to 128 can be used. Square size of the tile arrangement this animation is used for. Used to calculate the \u003ccode\u003ewidth\u003c/code\u003e and \u003ccode\u003eheight\u003c/code\u003e of the animation which cannot be set directly. (width or height) \u003d size * 32 / scale.",
          "optional": false
        },
        {
          "name": "probability",
          "type": "double",
          "description": "Probability of 1x1 (size \u003d 1) version of tile must be 1.",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "weights",
          "type": "double[]",
          "optional": true
        }
      ],
      "parent": "TileSprite"
    }
  },
  "UtilityConstantsMapEditor": {
    "name": "UtilityConstantsMapEditor",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "clone_editor_copy_source_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "clone_editor_copy_destination_allowed_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "clone_editor_copy_destination_not_allowed_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "clone_editor_brush_source_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "clone_editor_brush_destination_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "clone_editor_brush_cursor_preview_tint",
          "type": "Color",
          "optional": false
        },
        {
          "name": "clone_editor_brush_world_preview_tint",
          "type": "Color",
          "optional": false
        },
        {
          "name": "script_editor_select_area_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "script_editor_drag_area_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "force_editor_select_area_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "cliff_editor_remove_cliffs_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "tile_editor_selection_preview_tint",
          "type": "Color",
          "optional": false
        },
        {
          "name": "tile_editor_area_selection_color",
          "type": "Color",
          "optional": false
        },
        {
          "name": "decorative_editor_selection_preview_tint",
          "type": "Color",
          "optional": false
        },
        {
          "name": "tile_editor_selection_preview_radius",
          "type": "uint8",
          "optional": false
        },
        {
          "name": "decorative_editor_selection_preview_radius",
          "type": "uint8",
          "optional": false
        }
      ]
    }
  },
  "AnimationVariationSheet": {
    "name": "AnimationVariationSheet",
    "type": "table",
    "link": "/Types/AnimationVariation",
    "value": {
      "properties": [
        {
          "name": "variation_count",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "frame_count",
          "type": "uint32",
          "default": "1",
          "optional": true
        },
        {
          "name": "line_length",
          "type": "uint32",
          "description": "Default is the value of \u003ccode\u003evariation_count\u003c/code\u003e.",
          "optional": true
        }
      ],
      "parent": "AnimationType"
    }
  },
  "PipeConnectionDefinition": {
    "name": "PipeConnectionDefinition",
    "type": "table",
    "link": "/Types/PipeConnectionDefinition",
    "description": "\u003cp\u003eDefinition of a pipe connection. Used in fluidboxes.\u003c/p\u003e\u003cp\u003eEither \u003ccode\u003eposition\u003c/code\u003e or \u003ccode\u003epositions\u003c/code\u003e must be specified. (\u003ccode\u003eposition\u003c/code\u003e takes priority)\u003c/p\u003e",
    "value": {
      "properties": [
        {
          "name": "position",
          "type": "vector",
          "description": "Position of the pipe connection.",
          "optional": true
        },
        {
          "name": "positions",
          "type": "vector[]",
          "description": "Table must have 4 members, which are 4 explicit positions for the pipe connection (corresponding to 4 directions). Positions must correspond to directions going one after another.",
          "optional": true
        },
        {
          "name": "max_underground_distance",
          "type": "uint32",
          "description": "0 means not underground.",
          "default": "0",
          "optional": true
        },
        {
          "name": "type",
          "type": "PipeConnectionDefinitionType",
          "default": "input-output",
          "optional": true
        }
      ]
    }
  },
  "SignalColorMapping": {
    "name": "SignalColorMapping",
    "type": "table",
    "link": "/Types/SignalColorMapping",
    "description": "Used for \u003ca href\u003d\"/Prototype/Lamp#signal_to_color_mapping\" title\u003d\"Prototype/Lamp\"\u003ePrototype/Lamp#signal_to_color_mapping\u003c/a\u003e",
    "value": {
      "properties": [
        {
          "name": "type",
          "type": "SignalColorMappingType",
          "description": "Type of the signal that shows this color.",
          "optional": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "Name of the signal that shows this color.",
          "optional": false
        },
        {
          "name": "color",
          "type": "Color",
          "description": "The color this signal shows.",
          "optional": false
        }
      ]
    }
  },
  "LayeredSound": {
    "name": "LayeredSound",
    "type": "alias",
    "link": "/Types/LayeredSound",
    "value": "LayeredSoundValue|SoundType"
  },
  "ProductPrototypeFluid": {
    "name": "ProductPrototypeFluid",
    "type": "table",
    "link": "/Types/ProductPrototype",
    "value": {
      "properties": [
        {
          "name": "show_details_in_recipe_tooltip",
          "type": "bool",
          "description": "When hovering over a recipe in the crafting menu the recipe tooltip will be shown. An additional item tooltip will be shown for every product, as a separate tooltip, if the item tooltip has a description and/or properties to show and if show_details_in_recipe_tooltip is true.",
          "default": "true",
          "optional": true
        }
      ],
      "parent": "FluidProductPrototype"
    }
  },
  "SpriteFlags": {
    "name": "SpriteFlags",
    "type": "stringArray",
    "link": "/Types/SpriteFlags",
    "value": {
      "no-crop": "The sprite won\u0027t be automatically cropped.",
      "not-compressed": "",
      "always-compressed": "",
      "mipmap": "",
      "linear-minification": "",
      "linear-magnification": "",
      "linear-mip-level": "",
      "alpha-mask": "",
      "no-scale": "",
      "mask": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"group\u003dnone\"\u003c/li\u003e\u003c/ul\u003e",
      "icon": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"no-crop\"\u003c/li\u003e\n\u003cli\u003e\"no-scale\"\u003c/li\u003e\n\u003cli\u003e\"mipmap\"\u003c/li\u003e\n\u003cli\u003e\"linear-minification\"\u003c/li\u003e\n\u003cli\u003e\"linear-magnification\"\u003c/li\u003e\n\u003cli\u003e\"linear-mip-level\"\u003c/li\u003e\n\u003cli\u003e\"not-compressed\"\u003c/li\u003e\n\u003cli\u003e\"group\u003dicon\"\u003c/li\u003e\u003c/ul\u003e",
      "gui": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"no-crop\"\u003c/li\u003e\n\u003cli\u003e\"no-scale\"\u003c/li\u003e\n\u003cli\u003e\"mipmap\"\u003c/li\u003e\n\u003cli\u003e\"linear-minification\"\u003c/li\u003e\n\u003cli\u003e\"linear-magnification\"\u003c/li\u003e\n\u003cli\u003e\"linear-mip-level\"\u003c/li\u003e\n\u003cli\u003e\"not-compressed\"\u003c/li\u003e\n\u003cli\u003e\"group\u003dgui\"\u003c/li\u003e\u003c/ul\u003e",
      "gui-icon": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"no-crop\"\u003c/li\u003e\n\u003cli\u003e\"no-scale\"\u003c/li\u003e\n\u003cli\u003e\"mipmap\"\u003c/li\u003e\n\u003cli\u003e\"linear-minification\"\u003c/li\u003e\n\u003cli\u003e\"linear-magnification\"\u003c/li\u003e\n\u003cli\u003e\"not-compressed\"\u003c/li\u003e\n\u003cli\u003e\"group\u003dicon\"\u003c/li\u003e\u003c/ul\u003e",
      "light": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"no-crop\"\u003c/li\u003e\n\u003cli\u003e\"no-scale\"\u003c/li\u003e\n\u003cli\u003e\"mipmap\"\u003c/li\u003e\n\u003cli\u003e\"linear-minification\"\u003c/li\u003e\n\u003cli\u003e\"linear-magnification\"\u003c/li\u003e\n\u003cli\u003e\"linear-mip-level\"\u003c/li\u003e\n\u003cli\u003e\"group\u003dnone\"\u003c/li\u003e\u003c/ul\u003e",
      "terrain": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"no-crop\"\u003c/li\u003e\n\u003cli\u003e\"mipmap\"\u003c/li\u003e\n\u003cli\u003e\"linear-minification\"\u003c/li\u003e\n\u003cli\u003e\"linear-mip-level\"\u003c/li\u003e\n\u003cli\u003e\"group\u003dterrain\"\u003c/li\u003e\u003c/ul\u003e",
      "terrain-effect-map": "",
      "shadow": "",
      "smoke": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"mipmap\"\u003c/li\u003e\n\u003cli\u003e\"linear-minification\"\u003c/li\u003e\n\u003cli\u003e\"linear-magnification\"\u003c/li\u003e\n\u003cli\u003e\"group\u003dsmoke\"\u003c/li\u003e\u003c/ul\u003e",
      "decal": "\u003cp\u003eWhen this flag is set, it will automatically set these flags:\u003c/p\u003e\n\u003cul\u003e\u003cli\u003e\"group\u003ddecal\"\u003c/li\u003e\u003c/ul\u003e",
      "low-object": "",
      "trilinear-filtering": "",
      "group\u003dnone": "",
      "group\u003dterrain": "",
      "group\u003dshadow": "",
      "group\u003dsmoke": "",
      "group\u003ddecal": "",
      "group\u003dlow-object": "",
      "group\u003dgui": "",
      "group\u003dicon": "",
      "group\u003dicon-background": "",
      "compressed": "Deprecated flag that does nothing but is kept to prevent \"unknown sprite flag\" errors."
    }
  },
  "AmmoType": {
    "name": "AmmoType",
    "type": "table",
    "link": "/Types/AmmoType",
    "description": "Definition of actual parameters used in attack.",
    "value": {
      "properties": [
        {
          "name": "category",
          "type": "string",
          "description": "Name of a Prototype/AmmoCategory. Defines whether the attack will be affected by upgrades.",
          "optional": false
        },
        {
          "name": "action",
          "type": "Trigger",
          "description": "Describes actions taken upon attack happening.",
          "optional": true
        },
        {
          "name": "clamp_position",
          "type": "bool",
          "description": "When true, the gun will be able to shoot even when the target is out of range. Only applies when target_type is position. The gun will fire at the maximum range in the direction of the target position. Defaults to false.",
          "default": "false",
          "optional": true
        },
        {
          "name": "energy_consumption",
          "type": "Energy",
          "description": "Energy consumption of a single shot, if applicable.",
          "optional": true
        },
        {
          "name": "range_modifier",
          "type": "double",
          "default": "1",
          "optional": true
        },
        {
          "name": "cooldown_modifier",
          "type": "double",
          "default": "1",
          "optional": true
        },
        {
          "name": "consumption_modifier",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "target_type",
          "type": "AmmoTypeTargetType",
          "description": "If this is \"entity\", \u003ccode\u003eclamp_position\u003c/code\u003e is forced to be false. \"entity\" fires at an entity, \"position\" fires directly at a position, \"direction\" fires in a direction.",
          "default": "entity",
          "optional": true
        }
      ]
    }
  },
  "SoundAggregation": {
    "name": "SoundAggregation",
    "type": "table",
    "link": "/Prototype/Sound#aggregation",
    "value": {
      "properties": [
        {
          "name": "max_count",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "progress_threshold",
          "type": "float",
          "description": "If count already playing is true, this will determine maximum progress when instance is counted toward playing sounds.",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "remove",
          "type": "bool",
          "optional": false
        },
        {
          "name": "count_already_playing",
          "type": "bool",
          "description": "If true already playing sounds are taken into account when checking maxCount.",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "AnimationVariationValue": {
    "name": "AnimationVariationValue",
    "type": "table",
    "link": "/Types/AnimationVariation",
    "value": {
      "properties": [
        {
          "name": "sheet",
          "type": "AnimationVariationSheet",
          "description": "\u003cp\u003eAn animation. Does not use the \u003ccode\u003elayers\u003c/code\u003e property. The \u003ccode\u003efilename\u003c/code\u003e is mandatory.\u003c/p\u003e\u003cp\u003eThe variations are arranged vertically in the file, one row for each variation.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "sheets",
          "type": "AnimationVariationSheet[]",
          "description": "Array of Types/Animation. The contained animations do not use the \u003ccode\u003elayers\u003c/code\u003e property. The \u003ccode\u003efilename\u003c/code\u003e is mandatory.",
          "optional": true
        }
      ]
    }
  },
  "DamagePrototype": {
    "name": "DamagePrototype",
    "type": "table",
    "link": "/Types/DamagePrototype",
    "description": "A property type, NOT a prototype. Used to specify what type of damage and how much damage something deals.",
    "value": {
      "properties": [
        {
          "name": "amount",
          "type": "float",
          "optional": false
        },
        {
          "name": "type",
          "type": "string",
          "description": "The type of damage. See \u003ca href\u003d\"/Data.raw#damage-type\" title\u003d\"Data.raw\"\u003eData.raw#damage-type\u003c/a\u003e for a list of built-in types, and \u003ca href\u003d\"/Prototype/DamageType\" title\u003d\"Prototype/DamageType\"\u003ePrototype/DamageType\u003c/a\u003e for creating custom types.",
          "optional": false
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "WorkingSound": {
    "name": "WorkingSound",
    "type": "table",
    "link": "/Types/WorkingSound",
    "description": "This type is used to produce sound from in-game entities when they are working/idle.",
    "value": {
      "properties": [
        {
          "name": "sound",
          "type": "SoundType",
          "description": "The sound to be played when the entity is working. If sound is not present, the entire WorkingSound is loaded as a \u003ca href\u003d\"/Types/Sound\" title\u003d\"Types/Sound\"\u003eTypes/Sound\u003c/a\u003e.\n",
          "optional": false
        },
        {
          "name": "apparent_volume",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "max_sounds_per_type",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "match_progress_to_activity",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "match_volume_to_activity",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "match_speed_to_activity",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "persistent",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "use_doppler_shift",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "audible_distance_modifier",
          "type": "double",
          "description": "Modifies how far a sound can be heard. Can only be 1 or lower, has to be a positive number.",
          "default": "1",
          "optional": true
        },
        {
          "name": "probability",
          "type": "double",
          "description": "Modifies how often the sound is played.",
          "default": "1",
          "optional": true
        },
        {
          "name": "fade_in_ticks",
          "type": "uint32",
          "description": "Can\u0027t be used when match_progress_to_activity is true.",
          "default": "0",
          "optional": true
        },
        {
          "name": "fade_out_ticks",
          "type": "uint32",
          "description": "Can\u0027t be used when match_progress_to_activity is true.",
          "default": "0",
          "optional": true
        },
        {
          "name": "idle_sound",
          "type": "SoundType",
          "description": "The sound to be played when the entity is idle. Might not work with all entities that use working_sound.",
          "optional": true
        },
        {
          "name": "activate_sound",
          "type": "SoundType",
          "description": "Might not work with all entities that use working_sound.",
          "optional": true
        },
        {
          "name": "deactivate_sound",
          "type": "SoundType",
          "description": "Might not work with all entities that use working_sound.",
          "optional": true
        }
      ]
    }
  },
  "Position": {
    "name": "Position",
    "type": "alias",
    "link": "/Types/Position",
    "description": "\u003cp\u003eCoordinates of a tile in a map. Positions may be specified either as a dictionary with x, y as keys, or simply as an array with two elements.\u003c/p\u003e\u003cp\u003eThe coordinates are fixed size int: 32 bit with 8 bits reserved for sub 1 precision, this means that it\u0027s smallest value step is 1/2^8 \u003d 0.00390625.\u003c/p\u003e",
    "value": "number[]|PositionValue"
  },
  "CreateDecorativesTriggerEffectItem": {
    "name": "CreateDecorativesTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateDecorativesTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "decorative",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Decorative\" title\u003d\"Prototype/Decorative\"\u003ePrototype/Decorative\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "spawn_max",
          "type": "uint16",
          "optional": false
        },
        {
          "name": "spawn_min_radius",
          "type": "float",
          "optional": false
        },
        {
          "name": "spawn_max_radius",
          "type": "float",
          "description": "Must be less than 24.",
          "optional": false
        },
        {
          "name": "spawn_min",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "radius_curve",
          "type": "float",
          "default": "0.5",
          "optional": true
        },
        {
          "name": "apply_projection",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "spread_evenly",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "double": {
    "name": "double",
    "type": "alias",
    "link": "/Types/double",
    "value": "number"
  },
  "MapSettingsPathFinder": {
    "name": "MapSettingsPathFinder",
    "type": "table",
    "link": "/Prototype/MapSettings#path_finder",
    "value": {
      "properties": [
        {
          "name": "fwd2bwd_ratio",
          "type": "int32",
          "description": "Defines whether we prefer forward (\u003e1) or backward (\u003c-1) or symmetrical (1) search.",
          "optional": false
        },
        {
          "name": "goal_pressure_ratio",
          "type": "double",
          "description": "When comparing nodes in open which one to check next, heuristic value is multiplied by this ratio. The higher the number the more is the search directed directly towards the goal.",
          "optional": false
        },
        {
          "name": "use_path_cache",
          "type": "bool",
          "optional": false
        },
        {
          "name": "max_steps_worked_per_tick",
          "type": "double",
          "description": "When this is exhausted no more requests are allowed, at the moment the first path to exhaust this will be finished (even if it is hundreds of steps).",
          "optional": false
        },
        {
          "name": "max_work_done_per_tick",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "short_cache_size",
          "type": "uint32",
          "description": "Number of elements in the cache.",
          "optional": false
        },
        {
          "name": "long_cache_size",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "short_cache_min_cacheable_distance",
          "type": "double",
          "description": "Minimal distance to goal for path to be searched in short path cache.",
          "optional": false
        },
        {
          "name": "short_cache_min_algo_steps_to_cache",
          "type": "uint32",
          "description": "Minimal number of algorithm steps for path to be inserted into the short path cache.",
          "optional": false
        },
        {
          "name": "long_cache_min_cacheable_distance",
          "type": "double",
          "description": "Minimal distance to goal for path to be searched in long path cache.",
          "optional": false
        },
        {
          "name": "cache_max_connect_to_cache_steps_multiplier",
          "type": "uint32",
          "description": "When searching for connection to path cache path, search at most for this number of steps times the initial estimate.",
          "optional": false
        },
        {
          "name": "cache_accept_path_start_distance_ratio",
          "type": "double",
          "description": "When looking for path from cache make sure it doesn\u0027t start too far from requested start in relative distance terms.",
          "optional": false
        },
        {
          "name": "cache_accept_path_end_distance_ratio",
          "type": "double",
          "description": "When looking for path from cache make sure it doesn\u0027t end too far from requested end. This is typically higher than accept value for the start because the end target can be moving.",
          "optional": false
        },
        {
          "name": "negative_cache_accept_path_start_distance_ratio",
          "type": "double",
          "description": "Same as cache_accept_path_start_distance_ratio, but used for negative cache queries.",
          "optional": false
        },
        {
          "name": "negative_cache_accept_path_end_distance_ratio",
          "type": "double",
          "description": "Same as cache_accept_path_end_distance_ratio, but used for negative cache queries.",
          "optional": false
        },
        {
          "name": "cache_path_start_distance_rating_multiplier",
          "type": "double",
          "description": "When assigning rating to the best path this * start distances is considered.",
          "optional": false
        },
        {
          "name": "cache_path_end_distance_rating_multiplier",
          "type": "double",
          "description": "When assigning rating to the best path this * end distances is considered. This is typically higher than value for the start to achieve better path end quality.",
          "optional": false
        },
        {
          "name": "stale_enemy_with_same_destination_collision_penalty",
          "type": "double",
          "description": "Somewhere along the path is stuck enemy we need to avoid. This is mainly to handle situations when units have arrived and are attacking the target then units further in the back will use this and run around the target.",
          "optional": false
        },
        {
          "name": "ignore_moving_enemy_collision_distance",
          "type": "double",
          "description": "If there is a moving unit further than this we don\u0027t really care.",
          "optional": false
        },
        {
          "name": "enemy_with_different_destination_collision_penalty",
          "type": "double",
          "description": "Enemy is not moving/or is too close and has different destination.",
          "optional": false
        },
        {
          "name": "general_entity_collision_penalty",
          "type": "double",
          "description": "Simplification for now; collision with everything else is this.",
          "optional": false
        },
        {
          "name": "general_entity_subsequent_collision_penalty",
          "type": "double",
          "description": "Collision penalty for successors of positions that require destroy to reach.",
          "optional": false
        },
        {
          "name": "extended_collision_penalty",
          "type": "double",
          "description": "Collision penalty for collisions in the extended bounding box but outside the entity\u0027s actual bounding box.",
          "optional": false
        },
        {
          "name": "max_clients_to_accept_any_new_request",
          "type": "uint32",
          "description": "Up until this amount any client will be served by the path finder (no estimate on the path length).",
          "optional": false
        },
        {
          "name": "max_clients_to_accept_short_new_request",
          "type": "uint32",
          "description": "From max_clients_to_accept_any_new_request till this one only those that have a short estimate will be served.",
          "optional": false
        },
        {
          "name": "direct_distance_to_consider_short_request",
          "type": "uint32",
          "description": "This is the \"threshold\" to decide what is short and what is not.",
          "optional": false
        },
        {
          "name": "short_request_max_steps",
          "type": "uint32",
          "description": "If a short request takes more than this many steps, it will be rescheduled as a long request.",
          "optional": false
        },
        {
          "name": "short_request_ratio",
          "type": "double",
          "description": "How many steps will be allocated to short requests each tick, as a ratio of all available steps per tick.",
          "optional": false
        },
        {
          "name": "min_steps_to_check_path_find_termination",
          "type": "uint32",
          "description": "Absolute minimum of steps that will be performed for every path find request no matter what.",
          "optional": false
        },
        {
          "name": "start_to_goal_cost_multiplier_to_terminate_path_find",
          "type": "double",
          "description": "If the current actual cost from start is higher than this times estimate of start to goal then path finding is terminated.",
          "optional": false
        },
        {
          "name": "overload_levels",
          "type": "uint32[]",
          "optional": false
        },
        {
          "name": "overload_multipliers",
          "type": "double[]",
          "optional": false
        }
      ]
    }
  },
  "EffectTypeLimitation": {
    "name": "EffectTypeLimitation",
    "type": "stringArray",
    "link": "/Types/EffectTypeLimitation",
    "description": "A \u003ca href\u003d\"/Types/table\" title\u003d\"Types/table\"\u003elist\u003c/a\u003e of module effects or just one module effect as a string. Modules with other effects cannot be used on the machine. This means that both effects from modules and from surrounding beacons are restricted to the listed effects. If \u003ccode\u003eallowed_effects\u003c/code\u003e is set to \u003ccode\u003enil\u003c/code\u003e, the machine cannot be affected by modules or beacons.",
    "value": {
      "speed": "Modules that increase or decrease the machine\u0027s speed.",
      "productivity": "Modules that make the machine produce bonus items.",
      "consumption": "Modules that increase or decrease the machine\u0027s energy consumption.",
      "pollution": "Modules that make the machine produce more or less pollution. "
    }
  },
  "SpriteVariations": {
    "name": "SpriteVariations",
    "type": "alias",
    "link": "/Types/SpriteVariations",
    "value": "SpriteType[]|SpriteType|SpriteVariationsValue"
  },
  "ConnectableEntityGraphics": {
    "name": "ConnectableEntityGraphics",
    "type": "table",
    "link": "/Types/ConnectableEntityGraphics",
    "description": "Graphics for the heat pipe.",
    "value": {
      "properties": [
        {
          "name": "single",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "straight_vertical",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "straight_horizontal",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "corner_right_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "corner_left_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "corner_right_up",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "corner_left_up",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "t_up",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "t_right",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "t_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "t_left",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "ending_up",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "ending_right",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "ending_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "ending_left",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "cross",
          "type": "SpriteVariations",
          "optional": false
        }
      ]
    }
  },
  "TutorialTriggerType": {
    "name": "TutorialTriggerType",
    "type": "string",
    "link": "/Prototype/Tutorial#trigger",
    "value": {
      "research-technology": "",
      "build-entity": "",
      "craft-item": "",
      "manual-transfer": ""
    }
  },
  "CustomInputAction": {
    "name": "CustomInputAction",
    "type": "string",
    "link": "/Prototype/CustomInput#action",
    "value": {
      "lua": "",
      "create-blueprint-item": "",
      "toggle-personal-roboport": "",
      "toggle-personal-logistic-requests": "",
      "toggle-equipment-movement-bonus": ""
    }
  },
  "DamageTriggerEffectItem": {
    "name": "DamageTriggerEffectItem",
    "type": "table",
    "link": "/Types/DamageTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "damage",
          "type": "DamagePrototype",
          "optional": false
        },
        {
          "name": "apply_damage_to_trees",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "vaporize",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "lower_distance_threshold",
          "type": "uint16",
          "optional": true
        },
        {
          "name": "upper_distance_threshold",
          "type": "uint16",
          "optional": true
        },
        {
          "name": "lower_damage_modifier",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "upper_damage_modifier",
          "type": "float",
          "default": "1",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "SpriteType": {
    "name": "SpriteType",
    "type": "table",
    "link": "/Types/Sprite",
    "description": "\u003cp\u003eSpecifies one picture that can be used in the game.\u003c/p\u003e\u003cp\u003eWhen there is more than one sprite or \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eanimation\u003c/a\u003e frame with the same source file and dimensions/position in the game, they all share the same memory.\u003c/p\u003e",
    "value": {
      "properties": [
        {
          "name": "filename",
          "type": "FileName",
          "description": "Technically optional, but path to sprite cannot be empty.",
          "optional": false
        },
        {
          "name": "layers",
          "type": "SpriteType[]",
          "description": "\u003cp\u003eIf this property is present, all Sprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Sprite definition) in the array may also have the \u003ccode\u003elayers\u003c/code\u003e property.\u003c/p\u003e\u003cp\u003eIf this property is present, all other properties are ignored and the mandatory properties do not have to be defined.\u003c/p\u003e\u003cp\u003eLayers may not be an empty table.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "hr_version",
          "type": "SpriteType",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the sprite.",
          "optional": true
        },
        {
          "name": "slice",
          "type": "SpriteSizeType",
          "description": "\u003cp\u003eNumber of slices this is sliced into when using the \"optimized atlas packing\" option. If you are a modder, you can just ignore this property.\u003c/p\u003e\u003cp\u003eExample: If this is 4, the sprite will be sliced into a 4×4 grid.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "dice",
          "type": "SpriteSizeType",
          "description": "\u003cp\u003eNumber of slices this is sliced into when using the \"optimized atlas packing\" option. If you are a modder, you can just ignore this property.\u003c/p\u003e\u003cp\u003eExample: If this is 4, the sprite will be sliced into a 4×4 grid.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "slice_x",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the x axis.",
          "optional": true
        },
        {
          "name": "dice_x",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the x axis.",
          "optional": true
        },
        {
          "name": "slice_y",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the y axis.",
          "optional": true
        },
        {
          "name": "dice_y",
          "type": "SpriteSizeType",
          "description": "Same as \u003ccode\u003eslice\u003c/code\u003e or \u003ccode\u003edice\u003c/code\u003e above, but this specifies only how many slices there are on the y axis.",
          "optional": true
        },
        {
          "name": "priority",
          "type": "SpritePriority",
          "default": "medium",
          "optional": true
        },
        {
          "name": "flags",
          "type": "SpriteFlags",
          "optional": true
        },
        {
          "name": "size",
          "type": "SpriteSizeType|SpriteSizeType[]",
          "description": "\u003cp\u003eThe width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "width",
          "type": "SpriteSizeType",
          "description": "Mandatory if size is not given. Width of the picture in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "height",
          "type": "SpriteSizeType",
          "description": "Mandatory if size is not given. Height of the picture in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "position",
          "type": "SpriteSizeType[]",
          "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "description": "In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.",
          "optional": true
        },
        {
          "name": "scale",
          "type": "double",
          "description": "Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
          "default": "1",
          "optional": true
        },
        {
          "name": "draw_as_shadow",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "mipmap_count",
          "type": "uint8",
          "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
          "default": "0",
          "optional": true
        },
        {
          "name": "apply_runtime_tint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tint",
          "type": "Color",
          "optional": true
        },
        {
          "name": "blend_mode",
          "type": "BlendMode",
          "default": "normal",
          "optional": true
        },
        {
          "name": "load_in_minimal_mode",
          "type": "bool",
          "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
          "default": "false",
          "optional": true
        },
        {
          "name": "premul_alpha",
          "type": "bool",
          "description": "Whether alpha should be premultiplied.",
          "default": "true",
          "optional": true
        },
        {
          "name": "generate_sdf",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "AmmoTypeTargetType": {
    "name": "AmmoTypeTargetType",
    "type": "string",
    "link": "/Types/AmmoType#target_type",
    "value": {
      "entity": "",
      "position": "",
      "direction": ""
    }
  },
  "BeaconModuleVisualizations": {
    "name": "BeaconModuleVisualizations",
    "type": "table",
    "link": "/Types/BeaconModuleVisualizations",
    "description": "Used by \u003ca href\u003d\"/Types/BeaconGraphicsSet\" title\u003d\"Types/BeaconGraphicsSet\"\u003eTypes/BeaconGraphicsSet\u003c/a\u003e (\u003ca href\u003d\"/Prototype/Beacon\" title\u003d\"Prototype/Beacon\"\u003ePrototype/Beacon\u003c/a\u003e).",
    "value": {
      "properties": [
        {
          "name": "art_style",
          "type": "string",
          "description": "The visualization is chosen based on the \u003ca href\u003d\"/Prototype/Module#art_style\" title\u003d\"Prototype/Module\"\u003ePrototype/Module#art_style\u003c/a\u003e, meaning if module art style \u003d\u003d beacon module visualization art style then this visualization is chosen. Vanilla uses \"vanilla\" here.",
          "optional": false
        },
        {
          "name": "use_for_empty_slots",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tier_offset",
          "type": "int32",
          "default": "0",
          "optional": true
        },
        {
          "name": "slots",
          "type": "BeaconModuleVisualization[][]",
          "description": "The outer array contains the different slots, the inner array contains the different layers for those slots (with different tints etc).",
          "optional": true
        }
      ]
    }
  },
  "vector": {
    "name": "vector",
    "type": "alias",
    "link": "/Types/vector",
    "description": "A vector is a two-element array containing the x and y components. Unlike Positions, vectors don\u0027t use the x, y keys. Positive x goes towards east, positive y goes towards south.",
    "value": "table"
  },
  "MapSettingsSteering": {
    "name": "MapSettingsSteering",
    "type": "table",
    "link": "/Prototype/MapSettings#steering",
    "value": {
      "properties": [
        {
          "name": "default",
          "type": "MapSettingsSteeringDefault",
          "optional": false
        },
        {
          "name": "moving",
          "type": "MapSettingsSteeringMoving",
          "optional": false
        }
      ]
    }
  },
  "CraftingMachineShiftAnimationWaypoints": {
    "name": "CraftingMachineShiftAnimationWaypoints",
    "type": "table",
    "link": "/Prototype/CraftingMachine#shift_animation_waypoints",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "vector[]",
          "optional": true
        },
        {
          "name": "east",
          "type": "vector[]",
          "optional": true
        },
        {
          "name": "south",
          "type": "vector[]",
          "optional": true
        },
        {
          "name": "west",
          "type": "vector[]",
          "optional": true
        }
      ]
    }
  },
  "ProjectileTriggerDelivery": {
    "name": "ProjectileTriggerDelivery",
    "type": "table",
    "link": "/Types/ProjectileTriggerDelivery",
    "value": {
      "properties": [
        {
          "name": "projectile",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Projectile\" title\u003d\"Prototype/Projectile\"\u003ePrototype/Projectile\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "starting_speed",
          "type": "float",
          "description": "Starting speed in tiles per tick.",
          "optional": false
        },
        {
          "name": "starting_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "direction_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "range_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "max_range",
          "type": "double",
          "default": "1000",
          "optional": true
        },
        {
          "name": "min_range",
          "type": "double",
          "default": "0",
          "optional": true
        }
      ],
      "parent": "TriggerDeliveryBase"
    }
  },
  "AnimatedVectorRotation": {
    "name": "AnimatedVectorRotation",
    "type": "table",
    "link": "/Prototype/AnimatedVector#rotations",
    "value": {
      "properties": [
        {
          "name": "frames",
          "type": "vector[]",
          "description": "Sizes of all \u003ccode\u003eframes\u003c/code\u003e arrays must be the same.",
          "optional": false
        },
        {
          "name": "render_layer",
          "type": "RenderLayer",
          "optional": true
        }
      ]
    }
  },
  "UnitAISettings": {
    "name": "UnitAISettings",
    "type": "table",
    "link": "/Types/UnitAISettings",
    "description": "Used by \u003ca href\u003d\"/Prototype/Unit\" title\u003d\"Prototype/Unit\"\u003ePrototype/Unit\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "destroy_when_commands_fail",
          "type": "bool",
          "description": "If enabled, units that repeatedly fail to succeed at commands will be destroyed.",
          "default": "false",
          "optional": true
        },
        {
          "name": "allow_try_return_to_spawner",
          "type": "bool",
          "description": "If enabled, units that have nothing else to do will attempt to return to a spawner.",
          "default": "false",
          "optional": true
        },
        {
          "name": "do_separation",
          "type": "bool",
          "description": "If enabled, units will try to separate themselves from nearby friendly units.",
          "default": "true",
          "optional": true
        },
        {
          "name": "path_resolution_modifier",
          "type": "int8",
          "description": "Must be between -8 and 8.",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "CharacterArmorAnimation": {
    "name": "CharacterArmorAnimation",
    "type": "table",
    "link": "/Types/CharacterArmorAnimation",
    "value": {
      "properties": [
        {
          "name": "idle",
          "type": "RotatedAnimation",
          "optional": false
        },
        {
          "name": "idle_with_gun",
          "type": "RotatedAnimation",
          "optional": false
        },
        {
          "name": "running",
          "type": "RotatedAnimation",
          "optional": false
        },
        {
          "name": "running_with_gun",
          "type": "RotatedAnimation",
          "description": "Must contain exactly 18 directions, so all of the combination of gun direction and moving direction can be covered. Some of these variations are used in reverse to save space. You can use the character animation in the base game for reference.",
          "optional": false
        },
        {
          "name": "mining_with_tool",
          "type": "RotatedAnimation",
          "optional": false
        },
        {
          "name": "flipped_shadow_running_with_gun",
          "type": "RotatedAnimation",
          "description": "flipped_shadow_running_with_gun must be nil or contain exactly 18 directions, so all of the combination of gun direction and moving direction can be covered. Some of these variations are used in reverse to save space. You can use the character animation in the base game for reference. flipped_shadow_running_with_gun has to have same frame count as running_with_gun.",
          "optional": true
        },
        {
          "name": "armors",
          "type": "string[]",
          "description": "The names of the armors this animation data is used for. Don\u0027t define this if you want the animations to be used for the player without armor.",
          "optional": true
        }
      ]
    }
  },
  "TileSprite": {
    "name": "TileSprite",
    "type": "table",
    "link": "/Types/TileSprite",
    "description": "Used by \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "count",
          "type": "uint32",
          "description": "Frame count.",
          "optional": false
        },
        {
          "name": "picture",
          "type": "FileName",
          "optional": false
        },
        {
          "name": "hr_version",
          "type": "TileSprite",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the tile sprite.",
          "optional": true
        },
        {
          "name": "scale",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "line_length",
          "type": "uint32",
          "optional": true
        }
      ]
    }
  },
  "DestroyCliffsTriggerEffectItem": {
    "name": "DestroyCliffsTriggerEffectItem",
    "type": "table",
    "link": "/Types/DestroyCliffsTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "radius",
          "type": "float",
          "optional": false
        },
        {
          "name": "explosion",
          "type": "string",
          "description": "Name of an entity.",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "FootstepTriggerEffectListValue": {
    "name": "FootstepTriggerEffectListValue",
    "type": "table",
    "link": "/Types/FootprintParticle",
    "value": {
      "properties": [
        {
          "name": "tiles",
          "type": "string[]",
          "description": "Each CreateParticleTriggerEffectItem needs the extra mandatory property tiles, which is a table (array) of string which is the name of a tile.",
          "optional": false
        },
        {
          "name": "actions",
          "type": "CreateParticleTriggerEffectItem[]",
          "description": "Alternatively, instead of specifying the CreateParticleTriggerEffectItem directly in the table with the \u003ccode\u003etiles\u003c/code\u003e property, a \u003ccode\u003eactions\u003c/code\u003e property that is an array of CreateParticleTriggerEffectItem can be specified in the table with the \u003ccode\u003etiles\u003c/code\u003e property.",
          "optional": true
        },
        {
          "name": "use_as_default",
          "type": "bool",
          "description": "Furthermore, the table with the \u003ccode\u003etiles\u003c/code\u003e property can contain a \u003ccode\u003euse_as_default\u003c/code\u003e property which is a boolean value. \u003ccode\u003euse_as_default\u003c/code\u003e defaults to false. When it is set to true, the trigger(s) defined in that table are the default triggers for tiles that don\u0027t have an associated footstep particle trigger (don\u0027t show up in one of the \"tiles\" lists).",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "CreateParticleTriggerEffectItem"
    }
  },
  "TriggerDelivery": {
    "name": "TriggerDelivery",
    "type": "prototype",
    "link": "/Types/TriggerDelivery",
    "value": {
      "instant": "InstantTriggerDelivery",
      "projectile": "ProjectileTriggerDelivery",
      "flame-thrower": "FlameThrowerExplosionTriggerDelivery",
      "beam": "BeamTriggerDelivery",
      "stream": "StreamTriggerDelivery",
      "artillery": "ArtilleryTriggerDelivery"
    }
  },
  "Stripe": {
    "name": "Stripe",
    "type": "table",
    "link": "/Types/Stripe",
    "description": "Used as an alternative way to specify animations.",
    "value": {
      "properties": [
        {
          "name": "width_in_frames",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "height_in_frames",
          "type": "uint32",
          "description": "Mandatory when \u003ca class\u003d\"mw-selflink selflink\"\u003eTypes/Stripe\u003c/a\u003e is used in \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e, optional when it is used in \u003ca href\u003d\"/Types/RotatedAnimation\" title\u003d\"Types/RotatedAnimation\"\u003eTypes/RotatedAnimation\u003c/a\u003e and then it defaults to \u003ca href\u003d\"/Types/RotatedAnimation#direction_count\" title\u003d\"Types/RotatedAnimation\"\u003eTypes/RotatedAnimation#direction_count\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "filename",
          "type": "FileName",
          "optional": false
        },
        {
          "name": "x",
          "type": "uint32",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "uint32",
          "default": "0",
          "optional": false
        }
      ]
    }
  },
  "AnimationVariations": {
    "name": "AnimationVariations",
    "type": "alias",
    "description": "",
    "value": "AnimationType[]|AnimationVariationValue"
  },
  "PushBackTriggerEffectItem": {
    "name": "PushBackTriggerEffectItem",
    "type": "table",
    "link": "/Types/PushBackTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "distance",
          "type": "float",
          "optional": false
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "ProductPrototypeItem": {
    "name": "ProductPrototypeItem",
    "type": "table",
    "link": "/Types/ProductPrototype",
    "value": {
      "properties": [
        {
          "name": "show_details_in_recipe_tooltip",
          "type": "bool",
          "description": "When hovering over a recipe in the crafting menu the recipe tooltip will be shown. An additional item tooltip will be shown for every product, as a separate tooltip, if the item tooltip has a description and/or properties to show and if show_details_in_recipe_tooltip is true.",
          "default": "true",
          "optional": true
        }
      ],
      "parent": "ItemProductPrototype"
    }
  },
  "StreamTriggerDelivery": {
    "name": "StreamTriggerDelivery",
    "type": "table",
    "link": "/Types/StreamTriggerDelivery",
    "value": {
      "properties": [
        {
          "name": "stream",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/FluidStream\" title\u003d\"Prototype/FluidStream\"\u003ePrototype/FluidStream\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "source_offset",
          "type": "vector",
          "optional": true
        }
      ],
      "parent": "TriggerDeliveryBase"
    }
  },
  "int8": {
    "name": "int8",
    "type": "alias",
    "link": "/Types/int8",
    "description": "8-bit signed integer. Possible values are –128 to 127. ",
    "value": "number"
  },
  "IconSpecification": {
    "name": "IconSpecification",
    "type": "table",
    "link": "/Types/IconSpecification",
    "description": "\u003cp\u003eSpecifies the icon of an entity/item/technology/recipe etc. The properties are specified directly in the prototype, not in another sub-property.\u003c/p\u003e\u003cp\u003eEither \u003ccode\u003eicons\u003c/code\u003e and optionally \u003ccode\u003eicon_size\u003c/code\u003e, or both \u003ccode\u003eicon\u003c/code\u003e and \u003ccode\u003eicon_size\u003c/code\u003e have to be specified. If both \u003ccode\u003eicons\u003c/code\u003e and \u003ccode\u003eicon\u003c/code\u003e are defined, \u003ccode\u003eicon\u003c/code\u003e is ignored.\u003c/p\u003e",
    "value": {
      "properties": [
        {
          "name": "icon",
          "type": "FileName",
          "description": "Path to the icon file.",
          "optional": true
        },
        {
          "name": "icons",
          "type": "IconData[]",
          "description": "The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).",
          "optional": true
        },
        {
          "name": "icon_size",
          "type": "FileName",
          "description": "Mandatory if \u003ccode\u003eicon_size\u003c/code\u003e is not specified inside all instances of \u003ca href\u003d\"/Types/IconData\" title\u003d\"Types/IconData\"\u003eTypes/IconData\u003c/a\u003e inside \u003ccode\u003eicons\u003c/code\u003e. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.",
          "optional": true
        },
        {
          "name": "icon_mipmaps",
          "type": "uint8",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "AttackReactionItem": {
    "name": "AttackReactionItem",
    "type": "table",
    "link": "/Types/AttackReactionItem",
    "description": "Used by \u003ca href\u003d\"/Types/AttackReaction\" title\u003d\"Types/AttackReaction\"\u003eTypes/AttackReaction\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "range",
          "type": "float",
          "optional": false
        },
        {
          "name": "action",
          "type": "Trigger",
          "optional": true
        },
        {
          "name": "reaction_modifier",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "damage_type",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/DamageType\" title\u003d\"Prototype/DamageType\"\u003ePrototype/DamageType\u003c/a\u003e.",
          "optional": true
        }
      ]
    }
  },
  "IconData": {
    "name": "IconData",
    "type": "table",
    "link": "/Types/IconData",
    "description": "Data of one icon \"layer\" for the \u003ccode\u003eicons\u003c/code\u003e property of the \u003ca href\u003d\"/Types/IconSpecification\" title\u003d\"Types/IconSpecification\"\u003eTypes/IconSpecification\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "icon",
          "type": "FileName",
          "description": "Path to the icon file.",
          "optional": false
        },
        {
          "name": "icon_size",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003eicon_size\u003c/code\u003e is not specified outside of \u003ccode\u003eicons\u003c/code\u003e. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.",
          "optional": false
        },
        {
          "name": "tint",
          "type": "Color",
          "description": "Tint of the icon.",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "description": "Used to offset the icon \"layer\" from the overall icon.",
          "optional": true
        },
        {
          "name": "scale",
          "type": "double",
          "description": "Values different than 1 specify the scale of the icon on default gui scale. Scale 2 means that the icon will be 2 times bigger on screen (and more pixelated).",
          "default": "1",
          "optional": true
        },
        {
          "name": "icon_mipmaps",
          "type": "uint8",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "GuiMode": {
    "name": "GuiMode",
    "type": "string",
    "link": "/Prototype/InfinityContainer#gui_mode",
    "value": {
      "all": "",
      "none": "",
      "admins": ""
    }
  },
  "AutoplaceSpecificationForce": {
    "name": "AutoplaceSpecificationForce",
    "type": "string",
    "link": "/Types/AutoplaceSpecification#force",
    "value": {
      "enemy": "",
      "player": "",
      "neutral": ""
    }
  },
  "TriggerDeliveryBase": {
    "name": "TriggerDeliveryBase",
    "type": "table",
    "link": "/Types/TriggerDelivery",
    "value": {
      "properties": [
        {
          "name": "source_effects",
          "type": "TriggerEffect",
          "optional": true
        },
        {
          "name": "target_effects",
          "type": "TriggerEffect",
          "optional": true
        }
      ]
    }
  },
  "FluidProductPrototype": {
    "name": "FluidProductPrototype",
    "type": "table",
    "link": "/Types/FluidProductPrototype",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "The name of a \u003ca href\u003d\"/Prototype/Fluid\" title\u003d\"Prototype/Fluid\"\u003ePrototype/Fluid\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "probability",
          "type": "double",
          "description": "Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.",
          "default": "1",
          "optional": true
        },
        {
          "name": "probability",
          "type": "double",
          "description": "Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.",
          "default": "1",
          "optional": true
        },
        {
          "name": "amount",
          "type": "double",
          "description": "Cannot be \u003c 0.",
          "optional": true
        },
        {
          "name": "amount_min",
          "type": "MaterialAmountType",
          "description": "\u003cp\u003eMandatory if \u003ccode\u003eamount\u003c/code\u003e is not specified.\u003c/p\u003e\u003cp\u003eMay not be \u003c 0.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "amount_max",
          "type": "MaterialAmountType",
          "description": "\u003cp\u003eMandatory if \u003ccode\u003eamount\u003c/code\u003e is not specified.\u003c/p\u003e\u003cp\u003eIf set to a number that is less than \u003ccode\u003eamount_min\u003c/code\u003e, the game will use \u003ccode\u003eamount_min\u003c/code\u003e internally.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "temperature",
          "type": "double",
          "description": "Sets the temperature of the fluid product.",
          "optional": true
        },
        {
          "name": "catalyst_amount",
          "type": "double",
          "description": "Amount that should not be affected by productivity modules (not yielded from bonus production) and should not be included in the fluid production statistics.",
          "default": "0",
          "optional": true
        },
        {
          "name": "fluidbox_index",
          "type": "uint32",
          "description": "Used to specify which fluidbox this product should use on the machine. It will only use this one fluidbox.",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "TileTransitionSprite": {
    "name": "TileTransitionSprite",
    "type": "table",
    "link": "/Types/TileTransitionSprite",
    "description": "Used by \u003ca href\u003d\"/Types/TileTransitions\" title\u003d\"Types/TileTransitions\"\u003eTypes/TileTransitions\u003c/a\u003e which is used by \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "count",
          "type": "uint32",
          "description": "Frame count.",
          "optional": false
        },
        {
          "name": "picture",
          "type": "FileName",
          "optional": false
        },
        {
          "name": "hr_version",
          "type": "TileTransitionSprite",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the tile transition sprite.",
          "optional": true
        },
        {
          "name": "tall",
          "type": "bool",
          "description": "If this is true, the shift of the tile transition sprite is set to {0, 0.5}.",
          "default": "false",
          "optional": true
        },
        {
          "name": "scale",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "UndergroundBeltStructure": {
    "name": "UndergroundBeltStructure",
    "type": "table",
    "link": "/Prototype/UndergroundBelt#structure",
    "value": {
      "properties": [
        {
          "name": "direction_in",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "direction_out",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "back_patch",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "front_patch",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "direction_in_side_loading",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "direction_out_side_loading",
          "type": "Sprite4Way",
          "optional": true
        }
      ]
    }
  },
  "AnimationFrameSequence": {
    "name": "AnimationFrameSequence",
    "type": "alias",
    "link": "/Types/AnimationFrameSequence",
    "description": "\u003cp\u003eThis is a list of 1-based frame indices into the spritesheet. The actual length of the animation will then be the length of the frame_sequence (times \u003ccode\u003erepeat_count\u003c/code\u003e, times two if \u003ccode\u003erun_mode\u003c/code\u003e is \"forward-then-backward\"). There is a limit for (actual) animation length of 255 frames.\u003c/p\u003e\u003cp\u003eIndices can be used in any order, repeated or not used at all. Unused frames are not loaded into VRAM at all, frames referenced multiple times are loaded just once.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/53202\"\u003e[1]\u003c/a\u003e\u003c/p\u003e",
    "value": "uint16[]"
  },
  "PipeConnectionDefinitionType": {
    "name": "PipeConnectionDefinitionType",
    "type": "string",
    "link": "/Types/PipeConnectionDefinition#production_type",
    "value": {
      "input": "",
      "input-output": "",
      "output": ""
    }
  },
  "TileVariants": {
    "name": "TileVariants",
    "type": "table",
    "link": "/Prototype/Tile#variants",
    "value": {
      "properties": [
        {
          "name": "main",
          "type": "TileVariantsMain",
          "optional": false
        },
        {
          "name": "material_background",
          "type": "TileSprite",
          "description": "Width and height are given by the game, setting them will not have an effect. Width and height are calculated from the expected size (32) and the scale. So, for HR tiles at a size of 64x64, the scale needs to be 0.5.",
          "optional": true
        }
      ],
      "parent": "TileTransitions"
    }
  },
  "EnergySourceElectric": {
    "name": "EnergySourceElectric",
    "type": "table",
    "link": "/Types/EnergySource",
    "value": {
      "properties": [
        {
          "name": "buffer_capacity",
          "type": "Energy",
          "description": "Optional. How much power the entity holds.",
          "optional": true
        },
        {
          "name": "usage_priority",
          "type": "ElectricUsagePriority",
          "optional": false
        },
        {
          "name": "input_flow_limit",
          "type": "Energy",
          "description": "How fast the energy can flow into the entity. 0 means 0.",
          "optional": true
        },
        {
          "name": "output_flow_limit",
          "type": "Energy",
          "description": "How fast the energy can flow out of the entity. 0 means 0.",
          "optional": true
        },
        {
          "name": "drain",
          "type": "Energy",
          "description": "How much energy the entity will always \"drain\" from the network, even when not in use.",
          "optional": true
        }
      ],
      "parent": "EnergySourceBase"
    }
  },
  "MapSettingsEnemyExpansion": {
    "name": "MapSettingsEnemyExpansion",
    "type": "table",
    "link": "/Prototype/MapSettings#enemy_expansion",
    "value": {
      "properties": [
        {
          "name": "enabled",
          "type": "bool",
          "optional": false
        },
        {
          "name": "max_expansion_distance",
          "type": "uint32",
          "description": "Distance in chunks from the furthest base around. This prevents expansions from reaching too far into the player\u0027s territory.",
          "optional": false
        },
        {
          "name": "friendly_base_influence_radius",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "enemy_building_influence_radius",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "building_coefficient",
          "type": "double",
          "optional": false
        },
        {
          "name": "other_base_coefficient",
          "type": "double",
          "optional": false
        },
        {
          "name": "neighbouring_chunk_coefficient",
          "type": "double",
          "optional": false
        },
        {
          "name": "neighbouring_base_chunk_coefficient",
          "type": "double",
          "optional": false
        },
        {
          "name": "max_colliding_tiles_coefficient",
          "type": "double",
          "description": "A chunk has to have at most this much percent unbuildable tiles for it to be considered a candidate. This is to avoid chunks full of water to be marked as candidates.",
          "optional": false
        },
        {
          "name": "settler_group_min_size",
          "type": "uint32",
          "description": "Size of the group that goes to build new base (the game interpolates between min size and max size based on evolution factor).",
          "optional": false
        },
        {
          "name": "settler_group_max_size",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "min_expansion_cooldown",
          "type": "uint32",
          "description": "Ticks to expand to a single position for a base is used. Cooldown is calculated as follows: \u003ccode\u003ecooldown \u003d lerp(max_expansion_cooldown, min_expansion_cooldown, -e^2 + 2 * e)\u003c/code\u003e where lerp is the linear interpolation function, and e is the current evolution factor.",
          "optional": false
        },
        {
          "name": "max_expansion_cooldown",
          "type": "uint32",
          "optional": false
        }
      ]
    }
  },
  "WorkingVisualisationEffect": {
    "name": "WorkingVisualisationEffect",
    "type": "string",
    "link": "/Types/WorkingVisualisation#effect",
    "value": {
      "flicker": "",
      "uranium-glow": "",
      "none": ""
    }
  },
  "CollisionMask": {
    "name": "CollisionMask",
    "type": "stringArray",
    "link": "/Types/CollisionMask",
    "value": {
      "ground-tile": "",
      "water-tile": "",
      "resource-layer": "",
      "doodad-layer": "",
      "floor-layer": "",
      "item-layer": "",
      "ghost-layer": "",
      "object-layer": "",
      "player-layer": "",
      "train-layer": "",
      "layer-11": "",
      "layer-12": "",
      "layer-13": "",
      "layer-14": "",
      "layer-15": "",
      "not-colliding-with-itself": "Any 2 entities that both have this option enabled on their prototype and have an identical collision mask layers list will not collide. Other collision mask options are not included in the identical layer list check. This does mean that 2 different prototypes with the same collision mask layers and this option enabled will not collide.",
      "consider-tile-transitions": "Uses the prototypes position rather than its collision box when doing collision checks with tile prototypes. Allows the prototype to overlap colliding tiles up until its center point. This is only respected for character movement and cars driven by players.",
      "colliding-with-tiles-only": "Any prototype with this collision option will only be checked for collision with other prototype\u0027s collision masks if they are a tile."
    }
  },
  "uint16": {
    "name": "uint16",
    "type": "alias",
    "link": "/Types/uint16",
    "description": "16 bit unsigned number. The range is [0, 2^16-1] or [0, 65535]",
    "value": "number"
  },
  "SoundCategory": {
    "name": "SoundCategory",
    "type": "string",
    "link": "/Prototype/Sound#category",
    "value": {
      "game-effect": "",
      "gui-effect": "",
      "ambient": "",
      "environment": "",
      "walking": "",
      "alert": "",
      "wind": ""
    }
  },
  "LightDefinition": {
    "name": "LightDefinition",
    "type": "prototype",
    "link": "/Types/LightDefinition",
    "description": "Specifies the light source.",
    "value": {
      "basic": "LightDefinitionBasic",
      "oriented": "LightDefinitionOriented"
    }
  },
  "BoilerPatch": {
    "name": "BoilerPatch",
    "type": "table",
    "link": "/Prototype/Boiler#mode",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "east",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "south",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "west",
          "type": "SpriteType",
          "optional": true
        }
      ]
    }
  },
  "DaytimeColorLookupTable": {
    "name": "DaytimeColorLookupTable",
    "type": "alias",
    "link": "/Types/DaytimeColorLookupTable",
    "description": "\u003cp\u003eAn \u003ca href\u003d\"/Types/table\" title\u003d\"Types/table\"\u003earray\u003c/a\u003e of \u003ca href\u003d\"/Types/table\" title\u003d\"Types/table\"\u003earrays\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe first member of the inner array must be a \u003ca href\u003d\"/Types/double\" title\u003d\"Types/double\"\u003edouble\u003c/a\u003e, second member of the inner array must be a \u003ca href\u003d\"/Types/FileName\" title\u003d\"Types/FileName\"\u003eFileName\u003c/a\u003e or \"identity\". The file pointed to by the filename must be a sprite of size 16x16.\u003c/p\u003e\n\u003cp\u003e\nzoom_to_world_daytime_color_lookup \u003d\n{\n  {0.25, \"identity\"},\n  {0.45, \"__core__/graphics/color_luts/night.png\"},\n  {0.55, \"__core__/graphics/color_luts/night.png\"},\n  {0.75, \"identity\"},\n}\n\u003c/p\u003e",
    "value": "table[]"
  },
  "Energy": {
    "name": "Energy",
    "type": "alias",
    "link": "/Types/Energy",
    "description": "\u003cp\u003eUses \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e to specify the amount of electric energy in joules or electric energy per time in watts.\u003c/p\u003e\u003cp\u003eInternally, the input in Watt or \u003ccode\u003eJoule/second\u003c/code\u003e is always converted into Joule/tick or \u003ccode\u003eJoule/(1/60)second\u003c/code\u003e, using the following formula: \u003ccode\u003ePower in Joule/tick \u003d Power in Watt\u0026nbsp;/\u0026nbsp;60\u003c/code\u003e (\u003ca href\u003d\"/Units#Power\" title\u003d\"Units\"\u003eUnits#Power\u003c/a\u003e).\u003c/p\u003e",
    "value": "string"
  },
  "EntityPrototypeFlags": {
    "name": "EntityPrototypeFlags",
    "type": "stringArray",
    "link": "/Types/EntityPrototypeFlags",
    "value": {
      "not-rotatable": "Can\u0027t be rotated before or after placing.",
      "placeable-player": "placeable neutral/player/enemy determine the default force when placing entities in the map editor and using the *AUTO* option for the force.",
      "placeable-neutral": "placeable neutral/player/enemy determine the default force when placing entities in the map editor and using the *AUTO* option for the force.",
      "placeable-enemy": "placeable neutral/player/enemy determine the default force when placing entities in the map editor and using the *AUTO* option for the force.",
      "placeable-off-grid": "placeable-off-grid refers to the fact that most entities are placed on an invisible \u0027grid\u0027 within the world, entities with the placeable-off-grid flag do not have to line up with this grid (like trees and land-mines)",
      "player-creation": "Makes it possible for the biter AI to target the entity as a distraction. Makes it possible to blueprint, deconstruct, and repair the entity (can be turned off again using the specific flags). Enables smoke to be created automatically when building the entity.",
      "building-direction-8-way": "Uses 45 degree angle increments when selecting direction.",
      "filter-directions": "Used to automatically detect the proper direction, if possible. Used by base with the pump, train stop, and train signal.",
      "fast-replaceable-no-build-while-moving": "Fast replace will not apply when building while moving.",
      "breaths-air": "This is used to specify that the entity breathes air, and so is affected by poison (currently \u003ca href\u003d\"/Poison_capsule\" title\u003d\"Poison capsule\"\u003epoison capsules\u003c/a\u003e are the only source).",
      "not-repairable": "Used to specify that the entity can not be \u0027healed\u0027 by repair-packs (or construction robots with repair packs)",
      "not-on-map": "The entity does not get drawn on the map.",
      "not-blueprintable": "The entity can\u0027t be used in blueprints.",
      "not-deconstructable": "The entity can\u0027t be deconstructed.",
      "hidden": "Hides the entity from the bonus GUI (button above the map) and from the made in property of recipe tooltips.",
      "hide-alt-info": "Hides the alt-info of an entity in alt-mode, for example the recipe icon.",
      "fast-replaceable-no-cross-type-while-moving": "Do not fast replace over other entity types when building while moving.",
      "no-gap-fill-while-building": "",
      "not-flammable": "Do not apply fire stickers to the entity.",
      "no-automated-item-removal": "Prevents inserters and loaders from taking items from this entity.",
      "no-automated-item-insertion": "Prevents inserters and loaders from inserting items into this entity.",
      "no-copy-paste": "",
      "not-selectable-in-game": "",
      "not-upgradable": "The entity can\u0027t be selected by the \u003ca href\u003d\"/Upgrade_planner\" title\u003d\"Upgrade planner\"\u003eupgrade planner\u003c/a\u003e.",
      "not-in-kill-statistics": "The entity is not shown in the kill statistics."
    }
  },
  "NestedTriggerEffectItem": {
    "name": "NestedTriggerEffectItem",
    "type": "table",
    "link": "/Types/NestedTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "action",
          "type": "Trigger",
          "optional": false
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "UtilityConstantsEntityRendererSearchBoxLimits": {
    "name": "UtilityConstantsEntityRendererSearchBoxLimits",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "left",
          "type": "uint8",
          "description": "Min value 6, max value 15 - Min value 6 to compensate for shadows",
          "optional": false
        },
        {
          "name": "top",
          "type": "uint8",
          "description": "Min value 3, max value 15",
          "optional": false
        },
        {
          "name": "right",
          "type": "uint8",
          "description": "Min value 3, max value 15",
          "optional": false
        },
        {
          "name": "bottom",
          "type": "uint8",
          "description": "Min value 4, max value 15 - Min value 4 to compensate for tall entities like electric poles",
          "optional": false
        }
      ]
    }
  },
  "Sprite4WayValue": {
    "name": "Sprite4WayValue",
    "type": "table",
    "link": "/Types/Sprite4Way",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "SpriteType",
          "description": "Optional. If omitted and neither \u003ca href\u003d\"#sheets\"\u003e#sheets\u003c/a\u003e or \u003ca href\u003d\"#sheet\"\u003e#sheet\u003c/a\u003e are present, the game will not look for any other directions and instead try to load the whole definition as one \u003ca href\u003d\"/Types/Sprite\" title\u003d\"Types/Sprite\"\u003eTypes/Sprite\u003c/a\u003e and apply it to all directions.",
          "optional": true
        },
        {
          "name": "east",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "south",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "west",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "sheets",
          "type": "SpriteNWaySheet[]",
          "description": "Optional. If given, this is used instead of any other properties that may be present.",
          "optional": true
        },
        {
          "name": "sheet",
          "type": "SpriteNWaySheet",
          "description": "Optional. If given, and \u003ca href\u003d\"#sheets\"\u003e#sheets\u003c/a\u003e isnt present, this is used instead of any other properties that may be present.",
          "optional": true
        }
      ]
    }
  },
  "LoaderStructure": {
    "name": "LoaderStructure",
    "type": "table",
    "link": "/Prototype/Loader1x2#structure",
    "value": {
      "properties": [
        {
          "name": "direction_in",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "direction_out",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "back_patch",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "front_patch",
          "type": "Sprite4Way",
          "optional": true
        }
      ]
    }
  },
  "LampGlowRenderMode": {
    "name": "LampGlowRenderMode",
    "type": "string",
    "link": "/Prototype/Lamp#glow_render_mode",
    "value": {
      "left": "",
      "center": "",
      "right": ""
    }
  },
  "Color": {
    "name": "Color",
    "type": "alias",
    "link": "/Types/Color",
    "description": "\u003cp\u003eTable of red, green, blue, and alpha float values between 0 and 1. All values are optional, default optional value for colors is 0, for alpha 1. Alternatively, values can be from 0-255, they are interpreted as such if at least one value is \u003e 1.\u003c/p\u003e\u003cp\u003eColor allows the short-hand notation of passing an array of exactly 3 or 4 numbers.\u003c/p\u003e\u003cp\u003eThe game usually expects colors to be in pre-multiplied form (color channels are pre-multiplied by alpha).\u003c/p\u003e",
    "value": "ColorValue|float[]"
  },
  "TransportBeltConnectableBeltAnimationSet": {
    "name": "TransportBeltConnectableBeltAnimationSet",
    "type": "table",
    "link": "/Prototype/TransportBeltConnectable#belt_animation_set",
    "value": {
      "properties": [
        {
          "name": "animation_set",
          "type": "RotatedAnimation",
          "optional": false
        },
        {
          "name": "east_index",
          "type": "uint8",
          "default": "1",
          "optional": true
        },
        {
          "name": "west_index",
          "type": "uint8",
          "default": "2",
          "optional": true
        },
        {
          "name": "north_index",
          "type": "uint8",
          "default": "3",
          "optional": true
        },
        {
          "name": "south_index",
          "type": "uint8",
          "default": "4",
          "optional": true
        },
        {
          "name": "starting_south_index",
          "type": "uint8",
          "default": "13",
          "optional": true
        },
        {
          "name": "ending_south_index",
          "type": "uint8",
          "default": "14",
          "optional": true
        },
        {
          "name": "starting_west_index",
          "type": "uint8",
          "default": "15",
          "optional": true
        },
        {
          "name": "ending_west_index",
          "type": "uint8",
          "default": "16",
          "optional": true
        },
        {
          "name": "starting_north_index",
          "type": "uint8",
          "default": "17",
          "optional": true
        },
        {
          "name": "ending_north_index",
          "type": "uint8",
          "default": "18",
          "optional": true
        },
        {
          "name": "starting_east_index",
          "type": "uint8",
          "default": "19",
          "optional": true
        },
        {
          "name": "ending_east_index",
          "type": "uint8",
          "default": "20",
          "optional": true
        },
        {
          "name": "ending_patch",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "ends_with_stopper",
          "type": "Sprite4Way",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "ItemPrototypeFlags": {
    "name": "ItemPrototypeFlags",
    "type": "stringArray",
    "link": "/Types/ItemPrototypeFlags",
    "value": {
      "draw-logistic-overlay": "Whether the logistics areas of roboports should be drawn when holding this item. Used for example by the \u003ca href\u003d\"/Deconstruction_planner\" title\u003d\"Deconstruction planner\"\u003edeconstruction planner\u003c/a\u003e.",
      "hidden": "Item will not appear in lists of all items such as those for logistics requests, filters, etc.",
      "always-show": "Always show the item in selection lists (item filter, logistic request etc.) even when locked recipe for that item is present.",
      "hide-from-bonus-gui": "Item will not appear in the bonus gui.",
      "hide-from-fuel-tooltip": "Item will not appear in the tooltips shown when hovering over a burner inventory with the fuel category the item is in.",
      "not-stackable": "The item can never be stacked.",
      "can-extend-inventory": "",
      "primary-place-result": "",
      "mod-openable": "Only works for \u003ca href\u003d\"/Prototype/SelectionTool\" title\u003d\"Prototype/SelectionTool\"\u003ePrototype/SelectionTool\u003c/a\u003e and derived classes.\u003cbr\u003eThis property corresponds to the following event in the lua api: \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/events.html#on_mod_item_opened\"\u003edefines.events.on_mod_item_opened\u003c/a\u003e",
      "only-in-cursor": "Item is deleted when removed from the cursor by pressing \u003ccode\u003eQ\u003c/code\u003e (clear cursor). Used for example by the copy paste tools. "
    }
  },
  "ProgrammableSpeakerInstrument": {
    "name": "ProgrammableSpeakerInstrument",
    "type": "table",
    "link": "/Prototype/ProgrammableSpeaker#instruments",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false
        },
        {
          "name": "notes",
          "type": "ProgrammableSpeakerInstrumentNote[]",
          "optional": false
        }
      ]
    }
  },
  "AnimationSidesMandatory": {
    "name": "AnimationSidesMandatory",
    "type": "table",
    "link": "/Prototype/Boiler#fire",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "east",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "south",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "west",
          "type": "AnimationType",
          "optional": false
        }
      ]
    }
  },
  "FileName": {
    "name": "FileName",
    "type": "alias",
    "link": "/Types/FileName",
    "description": "Slash (/) is always used as directory delimiter.",
    "value": "string"
  },
  "SpritePriority": {
    "name": "SpritePriority",
    "type": "string",
    "link": "/Types/SpritePriority",
    "description": "This sets the \"caching priority\" of a sprite, so deciding priority of it being included in VRAM instead of streaming it and is therefore a purely technical value.\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://forums.factorio.com/viewtopic.php?p\u003d437380#p437380\"\u003e[1]\u003c/a\u003e\u003ca rel\u003d\"nofollow\" class\u003d\"external autonumber\" href\u003d\"https://www.factorio.com/blog/post/fff-264\"\u003e[2]\u003c/a\u003e The possible values are listed below.",
    "value": {
      "extra-high-no-scale": "",
      "extra-high": "",
      "high": "",
      "medium": "",
      "low": "",
      "very-low": "",
      "no-atlas": ""
    }
  },
  "LightFlickeringDefinition": {
    "name": "LightFlickeringDefinition",
    "type": "table",
    "link": "/Types/LightFlickeringDefinition",
    "description": "Specifies the light flicker. Note that this defaults to \"showing a white light\" instead of the usually expected \"showing nothing\".",
    "value": {
      "properties": [
        {
          "name": "minimum_intensity",
          "type": "float",
          "description": "Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.",
          "default": "0.2",
          "optional": true
        },
        {
          "name": "maximum_intensity",
          "type": "float",
          "description": "Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.",
          "default": "0.8",
          "optional": true
        },
        {
          "name": "derivation_change_frequency",
          "type": "float",
          "default": "0.3",
          "optional": true
        },
        {
          "name": "derivation_change_deviation",
          "type": "float",
          "default": "0.06",
          "optional": true
        },
        {
          "name": "border_fix_speed",
          "type": "float",
          "default": "0.02",
          "optional": true
        },
        {
          "name": "minimum_light_size",
          "type": "float",
          "description": "The radius of the light in tiles. Note, that the light gets darker near the edges, so the effective size of the light seems to be smaller.",
          "default": "0.5",
          "optional": true
        },
        {
          "name": "light_intensity_to_size_coefficient",
          "type": "float",
          "default": "0.5",
          "optional": true
        },
        {
          "name": "color",
          "type": "Color",
          "description": "Color of the light.",
          "optional": true
        }
      ]
    }
  },
  "NoiseExpression": {
    "name": "NoiseExpression",
    "type": "alias",
    "link": "/Types/NoiseExpression",
    "description": "\u003cp\u003eA fragment of a functional program used to generate coherent noise, probably for purposes related to terrain generation.\u003c/p\u003e\u003cp\u003eNoise expressions can be provided as table literals or built using functions in the \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://github.com/wube/factorio-data/blob/master/core/lualib/noise.lua\"\u003ebuilt-in \u003ccode\u003enoise\u003c/code\u003e library\u003c/a\u003e. The built-in noise library allows writing much more concise code, so its usage will be shown in most examples on this page.\u003cbr\u003e\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://github.com/wube/factorio-data/blob/master/core/lualib/noise.lua#L272\"\u003e\u003ccode\u003enoise.define_noise_function\u003c/code\u003e\u003c/a\u003e allows noise expressions to be defined using a shorthand that\u0027s a subset of Lua (see \u003ca href\u003d\"#Example_definition\"\u003eexample definition\u003c/a\u003e for an example and its literal equivalent).\u003c/p\u003e\u003cp\u003e\u003cb\u003eTypes/NoiseExpression\u003c/b\u003e is used by \u003ca href\u003d\"/Prototype/NamedNoiseExpression#expression\" title\u003d\"Prototype/NamedNoiseExpression\"\u003eNamedNoiseExpressionPrototype::expression\u003c/a\u003e, \u003ca href\u003d\"/Types/AutoplaceSpecification#Properties_for_Expression-based_AutoplaceSpecifications\" title\u003d\"Types/AutoplaceSpecification\"\u003eAutoplaceSpecification::probability_expression\u003c/a\u003e and \u003ca href\u003d\"/Types/AutoplaceSpecification#Properties_for_Expression-based_AutoplaceSpecifications\" title\u003d\"Types/AutoplaceSpecification\"\u003eAutoplaceSpecification::richness_expression\u003c/a\u003e.\u003c/p\u003e",
    "value": "table"
  },
  "RotatedAnimation4WayValue": {
    "name": "RotatedAnimation4WayValue",
    "type": "table",
    "link": "/Types/RotatedAnimation",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "RotatedAnimation",
          "description": "\u003cp\u003eOptional. If omitted, the game will not look for any other directions and instead try to load the whole definition as one \u003ca href\u003d\"/Types/RotatedAnimation\" title\u003d\"Types/RotatedAnimation\"\u003eTypes/RotatedAnimation\u003c/a\u003e and apply it to all directions.\u003c/p\u003e\u003cp\u003eIf north is present, but no other directions are present, the north rotated animation is used for all directions.\u003c/p\u003e",
          "optional": false
        },
        {
          "name": "east",
          "type": "RotatedAnimation",
          "description": "If east is present, but west is not present, the east rotated animation is used for the west direction.",
          "optional": false
        },
        {
          "name": "south",
          "type": "RotatedAnimation",
          "optional": false
        },
        {
          "name": "west",
          "type": "RotatedAnimation",
          "optional": false
        }
      ]
    }
  },
  "InvokeTileEffectTriggerEffectItem": {
    "name": "InvokeTileEffectTriggerEffectItem",
    "type": "table",
    "link": "/Types/InvokeTileEffectTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "tile_collision_mask",
          "type": "CollisionMask",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "TreePrototypeVariation": {
    "name": "TreePrototypeVariation",
    "type": "table",
    "link": "/Types/TreePrototypeVariation",
    "description": "Graphics definition for a \u003ca href\u003d\"/Prototype/Tree\" title\u003d\"Prototype/Tree\"\u003ePrototype/Tree\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "trunk",
          "type": "AnimationType",
          "description": "If \u003ccode\u003eshadow\u003c/code\u003e is not specified, this has to have one more frame than \u003ccode\u003eleaves\u003c/code\u003e.",
          "optional": false
        },
        {
          "name": "leaves",
          "type": "AnimationType",
          "optional": false
        },
        {
          "name": "leaf_generation",
          "type": "CreateParticleTriggerEffectItem",
          "optional": false
        },
        {
          "name": "branch_generation",
          "type": "CreateParticleTriggerEffectItem",
          "optional": false
        },
        {
          "name": "shadow",
          "type": "AnimationType",
          "description": "Shadow must have 1 less frame_count than \u003ccode\u003eleaves\u003c/code\u003e (shadow.frame_count \u003d leaves.frame_count + 1).",
          "optional": true
        },
        {
          "name": "disable_shadow_distortion_beginning_at_frame",
          "type": "uint32",
          "description": "Only loaded if \u003ccode\u003eshadow\u003c/code\u003e is present. Defaults to shadow.frame_count - 1.",
          "optional": true
        },
        {
          "name": "normal",
          "type": "AnimationType",
          "description": "Normal must have the same frame_count as \u003ccode\u003eleaves\u003c/code\u003e (normal.frame_count \u003d leaves.frame_count).",
          "optional": true
        },
        {
          "name": "water_reflection",
          "type": "WaterReflectionDefinition",
          "optional": true
        }
      ]
    }
  },
  "MapSettingsSteeringUnitGroup": {
    "name": "MapSettingsSteeringUnitGroup",
    "type": "table",
    "link": "/Prototype/MapSettings#unit_group",
    "value": {
      "properties": [
        {
          "name": "min_group_gathering_time",
          "type": "uint32",
          "description": "Pollution triggered group waiting time is a random time between min and max gathering time",
          "optional": false
        },
        {
          "name": "max_group_gathering_time",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "max_wait_time_for_late_members",
          "type": "uint32",
          "description": "After the gathering is finished the group can still wait for late members, but it doesn\u0027t accept new ones anymore.",
          "optional": false
        },
        {
          "name": "max_group_radius",
          "type": "double",
          "description": "Limits for group radius (calculated by number of numbers).",
          "optional": false
        },
        {
          "name": "min_group_radius",
          "type": "double",
          "optional": false
        },
        {
          "name": "max_member_speedup_when_behind",
          "type": "double",
          "description": "When a member falls behind the group he can speedup up till this much of his regular speed.",
          "optional": false
        },
        {
          "name": "max_member_slowdown_when_ahead",
          "type": "double",
          "description": "When a member gets ahead of its group, it will slow down to at most this factor of its speed.",
          "optional": false
        },
        {
          "name": "max_group_slowdown_factor",
          "type": "double",
          "description": "When members of a group are behind, the entire group will slow down to at most this factor of its max speed.",
          "optional": false
        },
        {
          "name": "max_group_member_fallback_factor",
          "type": "double",
          "description": "If a member falls behind more than this times the group radius, the group will slow down to max_group_slowdown_factor.",
          "optional": false
        },
        {
          "name": "member_disown_distance",
          "type": "double",
          "description": "If a member falls behind more than this time the group radius, it will be removed from the group.",
          "optional": false
        },
        {
          "name": "tick_tolerance_when_member_arrives",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "max_gathering_unit_groups",
          "type": "uint32",
          "description": "Maximum number of automatically created unit groups gathering for attack at any time.",
          "optional": false
        },
        {
          "name": "max_unit_group_size",
          "type": "uint32",
          "description": "Maximum size of an attack unit group. This only affects automatically-created unit groups; manual groups created through the API are unaffected.",
          "optional": false
        }
      ]
    }
  },
  "MapSettingsSteeringMoving": {
    "name": "MapSettingsSteeringMoving",
    "type": "table",
    "link": "/Prototype/MapSettings#steering",
    "value": {
      "properties": [
        {
          "name": "radius",
          "type": "double",
          "optional": false
        },
        {
          "name": "separation_factor",
          "type": "double",
          "optional": false
        },
        {
          "name": "separation_force",
          "type": "double",
          "optional": false
        },
        {
          "name": "force_unit_fuzzy_goto_behavior",
          "type": "bool",
          "description": "Used only for special \"to look good\" purposes (like in trailer)",
          "optional": false
        }
      ]
    }
  },
  "MapSettingsDifficultySettings": {
    "name": "MapSettingsDifficultySettings",
    "type": "table",
    "link": "/Prototype/MapSettings#difficulty_settings",
    "value": {
      "properties": [
        {
          "name": "recipe_difficulty",
          "type": "uint8",
          "description": "A \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/defines.html#defines.difficulty_settings\"\u003edefines.difficulty_settings.recipe_difficulty\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "technology_difficulty",
          "type": "uint8",
          "description": "A \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/defines.html#defines.difficulty_settings\"\u003edefines.difficulty_settings.technology_difficulty\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "technology_price_multiplier",
          "type": "double",
          "description": "Must be \u003e\u003d 0.001 and \u003c\u003d 1000.",
          "default": "1",
          "optional": true
        },
        {
          "name": "research_queue_setting",
          "type": "MapSettingsDifficultySettingsResearchQueueSetting",
          "optional": true
        }
      ]
    }
  },
  "BeamAttackParameters": {
    "name": "BeamAttackParameters",
    "type": "table",
    "link": "/Types/BeamAttackParameters",
    "value": {
      "properties": [
        {
          "name": "source_direction_count",
          "type": "uint32",
          "default": "0",
          "optional": true
        },
        {
          "name": "source_offset",
          "type": "vector",
          "optional": true
        }
      ],
      "parent": "BaseAttackParameters"
    }
  },
  "UnitAlternativeAttackingFrameSequence": {
    "name": "UnitAlternativeAttackingFrameSequence",
    "type": "table",
    "link": "/Prototype/Unit#alternative_attacking_frame_sequence",
    "value": {
      "properties": [
        {
          "name": "warmup_frame_sequence",
          "type": "uint16[]",
          "description": "Indices of frames from the attack parameter animation.",
          "optional": false
        },
        {
          "name": "warmup2_frame_sequence",
          "type": "uint16[]",
          "description": "Indices of frames from the attack parameter animation.",
          "optional": false
        },
        {
          "name": "attacking_frame_sequence",
          "type": "uint16[]",
          "description": "Indices of frames from the attack parameter animation.",
          "optional": false
        },
        {
          "name": "cooldown_frame_sequence",
          "type": "uint16[]",
          "description": "Indices of frames from the attack parameter animation.",
          "optional": false
        },
        {
          "name": "prepared_frame_sequence",
          "type": "uint16[]",
          "description": "Indices of frames from the attack parameter animation.",
          "optional": false
        },
        {
          "name": "back_to_walk_frame_sequence",
          "type": "uint16[]",
          "description": "Indices of frames from the attack parameter animation.",
          "optional": false
        },
        {
          "name": "warmup_animation_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "attacking_animation_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "cooldown_animation_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "prepared_animation_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "back_to_walk_animation_speed",
          "type": "float",
          "optional": false
        }
      ]
    }
  },
  "SpawnPoint": {
    "name": "SpawnPoint",
    "type": "alias",
    "link": "/Types/SpawnPoint",
    "description": "The definition of a evolution and probability weights for a spawnable unit (\u003ca href\u003d\"/Types/UnitSpawnDefinition\" title\u003d\"Types/UnitSpawnDefinition\"\u003eTypes/UnitSpawnDefinition\u003c/a\u003e) for a \u003ca href\u003d\"/Prototype/EnemySpawner\" title\u003d\"Prototype/EnemySpawner\"\u003ePrototype/EnemySpawner\u003c/a\u003e. It can be specified as a table with named or numbered keys, but not a mix of both.",
    "value": "double[]|SpawnPointValue"
  },
  "DamageTypeFiltersValue": {
    "name": "DamageTypeFiltersValue",
    "type": "table",
    "link": "/Types/DamageTypeFilters",
    "value": {
      "properties": [
        {
          "name": "types",
          "type": "string|string[]",
          "description": "Name or names of \u003ca href\u003d\"/Prototype/DamageType\" title\u003d\"Prototype/DamageType\"\u003ePrototype/DamageTypes\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "whitelist",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "EquipmentShapeManual": {
    "name": "EquipmentShapeManual",
    "type": "table",
    "link": "/Types/EquipmentShape",
    "value": {
      "properties": [
        {
          "name": "points",
          "type": "uint32[][]",
          "description": "Only used when when using \u003ccode\u003etype\u003c/code\u003e \"manual\". Each inner array is a \"position\" inside width×height of the equipment. Each positions that is defined is a filled squares of the equipment shape. {0, 0} is the upper left corner of the equipment.",
          "optional": false
        }
      ],
      "parent": "EquipmentShapeBase"
    }
  },
  "SoundValue2": {
    "name": "SoundValue2",
    "type": "table",
    "link": "/Types/Sound",
    "value": {
      "properties": [
        {
          "name": "filename",
          "type": "FileName",
          "optional": false
        },
        {
          "name": "volume",
          "type": "float",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "preload",
          "type": "bool",
          "optional": true
        },
        {
          "name": "speed",
          "type": "float",
          "description": "Speed must be \u003e\u003d 1 / 64. This sets both min and max speed.",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "min_speed",
          "type": "float",
          "description": "Not loaded if speed is present. Speed must be \u003e\u003d 1 / 64.",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "max_speed",
          "type": "float",
          "description": "Mandatory if min_speed is present, otherwise not loaded. Must be \u003e\u003d min_speed.",
          "default": "1.0",
          "optional": true
        }
      ]
    }
  },
  "SoundValue1": {
    "name": "SoundValue1",
    "type": "table",
    "link": "/Types/Sound",
    "value": {
      "properties": [
        {
          "name": "aggregation",
          "type": "SoundAggregation",
          "optional": true
        },
        {
          "name": "allow_random_repeat",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "audible_distance_modifier",
          "type": "double",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "variations",
          "type": "SoundValue2[]",
          "optional": true
        },
        {
          "name": "filename",
          "type": "FileName",
          "description": "Mandatory if \u003ccode\u003evariations\u003c/code\u003e is not given.",
          "optional": true
        },
        {
          "name": "volume",
          "type": "float",
          "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given.",
          "optional": true
        },
        {
          "name": "preload",
          "type": "bool",
          "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given.",
          "optional": true
        },
        {
          "name": "speed",
          "type": "float",
          "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given. Speed must be \u003e\u003d 1 / 64. This sets both min and max speed.",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "min_speed",
          "type": "float",
          "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given. Not loaded if speed is present. Speed must be \u003e\u003d 1 / 64.",
          "default": "1.0",
          "optional": true
        },
        {
          "name": "max_speed",
          "type": "float",
          "description": "Only loaded if \u003ccode\u003evariations\u003c/code\u003e is not given. Mandatory if min_speed is present, otherwise not loaded. Must be \u003e\u003d min_speed.",
          "default": "1.0",
          "optional": true
        }
      ]
    }
  },
  "CreateParticleTriggerEffectItem": {
    "name": "CreateParticleTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateParticleTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "particle_name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Particle\" title\u003d\"Prototype/Particle\"\u003ePrototype/Particle\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "initial_height",
          "type": "float",
          "optional": false
        },
        {
          "name": "offset_deviation",
          "type": "BoundingBox",
          "optional": true
        },
        {
          "name": "show_in_tooltip",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tile_collision_mask",
          "type": "CollisionMask",
          "optional": true
        },
        {
          "name": "offsets",
          "type": "vector[]",
          "optional": true
        },
        {
          "name": "initial_height_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "initial_vertical_speed",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "initial_vertical_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_from_center",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_from_center_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "frame_speed",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "frame_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "tail_length",
          "type": "uint8",
          "description": "Silently capped to a maximum of 100.",
          "default": "0",
          "optional": true
        },
        {
          "name": "tail_length_deviation",
          "type": "uint8",
          "description": "Silently capped to a maximum of 100.",
          "default": "0",
          "optional": true
        },
        {
          "name": "tail_width",
          "type": "float",
          "default": "1",
          "optional": true
        },
        {
          "name": "rotate_offsets",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "uint8": {
    "name": "uint8",
    "type": "alias",
    "link": "/Types/uint8",
    "description": "8-bit unsigned integer. Possible values are 0 to 255.",
    "value": "number"
  },
  "ThrowCapsuleAction": {
    "name": "ThrowCapsuleAction",
    "type": "table",
    "link": "/Types/ThrowCapsuleAction",
    "value": {
      "properties": [
        {
          "name": "attack_parameters",
          "type": "AttackParameters",
          "optional": false
        },
        {
          "name": "uses_stack",
          "type": "bool",
          "description": "Whether using the capsule consumes an item from the stack.",
          "default": "true",
          "optional": true
        }
      ],
      "parent": "CapsuleAction"
    }
  },
  "IngredientPrototype": {
    "name": "IngredientPrototype",
    "type": "prototype",
    "link": "/Types/IngredientPrototype",
    "description": "Class used for \u003ca href\u003d\"/Prototype/Recipe\" title\u003d\"Prototype/Recipe\"\u003ePrototype/Recipe\u003c/a\u003e ingredients, it loads as \u003ca href\u003d\"/Types/ItemIngredientPrototype\" title\u003d\"Types/ItemIngredientPrototype\"\u003eTypes/ItemIngredientPrototype\u003c/a\u003e or \u003ca href\u003d\"/Types/FluidIngredientPrototype\" title\u003d\"Types/FluidIngredientPrototype\"\u003eTypes/FluidIngredientPrototype\u003c/a\u003e, depending on the \u003ca href\u003d\"#type\"\u003e#type\u003c/a\u003e.",
    "value": {
      "item": "ItemIngredientPrototype",
      "fluid": "FluidIngredientPrototype"
    }
  },
  "BoxSpecification": {
    "name": "BoxSpecification",
    "type": "table",
    "link": "/Types/BoxSpecification",
    "value": {
      "properties": [
        {
          "name": "sprite",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "is_whole_box",
          "type": "bool",
          "description": "Whether this is a complete box or just the top left corner. If this is true, \u003ccode\u003eside_length\u003c/code\u003e and \u003ccode\u003eside_height\u003c/code\u003e must be present. Otherwise \u003ccode\u003emax_side_length\u003c/code\u003e must be present.",
          "default": "false",
          "optional": true
        },
        {
          "name": "side_length",
          "type": "double",
          "description": "Only read if \u003ccode\u003eis_whole_box\u003c/code\u003e is true.",
          "optional": true
        },
        {
          "name": "side_height",
          "type": "double",
          "description": "Only read if \u003ccode\u003eis_whole_box\u003c/code\u003e is true.",
          "optional": true
        },
        {
          "name": "max_side_length",
          "type": "double",
          "description": "Only read if \u003ccode\u003eis_whole_box\u003c/code\u003e is false.",
          "optional": true
        }
      ]
    }
  },
  "AreaTriggerItemCollisionMode": {
    "name": "AreaTriggerItemCollisionMode",
    "type": "string",
    "link": "/Types/AreaTriggerItem#collision_mode",
    "value": {
      "distance-from-collision-box": "",
      "distance-from-center": ""
    }
  },
  "StreamAttackParametersFluid": {
    "name": "StreamAttackParametersFluid",
    "type": "table",
    "link": "/Types/StreamAttackParameters#fluids",
    "value": {
      "properties": [
        {
          "name": "type",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Fluid\" title\u003d\"Prototype/Fluid\"\u003ePrototype/Fluid\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "damage_modifier",
          "type": "double",
          "default": "1",
          "optional": true
        }
      ]
    }
  },
  "ShortcutStyle": {
    "name": "ShortcutStyle",
    "type": "string",
    "link": "/Prototype/Shortcut#style",
    "value": {
      "default": "",
      "red": "",
      "green": "",
      "blue": ""
    }
  },
  "SignalColorMappingType": {
    "name": "SignalColorMappingType",
    "type": "string",
    "link": "/Types/SignalColorMapping#type",
    "value": {
      "virtual": "",
      "item": "",
      "fluid": ""
    }
  },
  "EnergySourceBase": {
    "name": "EnergySourceBase",
    "type": "table",
    "link": "/Types/EnergySource",
    "value": {
      "properties": [
        {
          "name": "emissions_per_minute",
          "type": "double",
          "description": "The pollution an entity emits per minute at full energy consumption. \u003ccode\u003eemissions_per_minute\u003c/code\u003e is exactly the value that is shown in the entity tooltip.",
          "default": "0",
          "optional": true
        },
        {
          "name": "render_no_power_icon",
          "type": "bool",
          "description": "Optional. Whether to render the Electricity-icon-red.png icon on the entity if it is low on power. Also applies to Fuel-icon-red.png when using a burner energy source.",
          "default": "true",
          "optional": true
        },
        {
          "name": "render_no_network_icon",
          "type": "bool",
          "description": "Optional. Whether to render the Electricity-icon-unplugged.png icon on the entity if it is not connected to a electric network.",
          "default": "true",
          "optional": true
        }
      ]
    }
  },
  "ProductPrototype": {
    "name": "ProductPrototype",
    "type": "prototype",
    "link": "/Types/ProductPrototype",
    "description": "Class used for \u003ca href\u003d\"/Prototype/Recipe\" title\u003d\"Prototype/Recipe\"\u003ePrototype/Recipe\u003c/a\u003e prodcuts, it loads as \u003ca href\u003d\"/Types/ItemProductPrototype\" title\u003d\"Types/ItemProductPrototype\"\u003eTypes/ItemProductPrototype\u003c/a\u003e or \u003ca href\u003d\"/Types/FluidProductPrototype\" title\u003d\"Types/FluidProductPrototype\"\u003eTypes/FluidProductPrototype\u003c/a\u003e, depending on the \u003ca href\u003d\"#type\"\u003e#type\u003c/a\u003e.",
    "value": {
      "item": "ProductPrototypeItem",
      "fluid": "ProductPrototypeFluid"
    }
  },
  "CapsuleAction": {
    "name": "CapsuleAction",
    "type": "prototype",
    "link": "/Types/CapsuleAction",
    "description": "The table is loaded as a specific capsule action, depending on the value of the \u003ccode\u003etype\u003c/code\u003e key.",
    "value": {
      "throw": "ThrowCapsuleAction",
      "equipment-remote": "ActivateEquipmentCapsuleAction",
      "use-on-self": "UseOnSelfCapsuleAction",
      "artillery-remote": "ArtilleryRemoteCapsuleAction",
      "destroy-cliffs": "DestroyCliffsCapsuleAction"
    }
  },
  "PlaySoundTriggerEffectItem": {
    "name": "PlaySoundTriggerEffectItem",
    "type": "table",
    "link": "/Types/PlaySoundTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "sound",
          "type": "SoundType",
          "optional": false
        },
        {
          "name": "min_distance",
          "type": "float",
          "description": "Negative values are silently clamped to 0.",
          "default": "0",
          "optional": false
        },
        {
          "name": "max_distance",
          "type": "float",
          "description": "Negative values are silently clamped to 0.",
          "optional": true
        },
        {
          "name": "volume_modifier",
          "type": "float",
          "description": "Negative values are silently clamped to 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "audible_distance_modifier",
          "type": "float",
          "description": "Negative values are silently clamped to 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "play_on_target_position",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "CircuitConnectorSprites": {
    "name": "CircuitConnectorSprites",
    "type": "table",
    "link": "/Types/CircuitConnectorSprites",
    "value": {
      "properties": [
        {
          "name": "led_red",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "led_green",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "led_blue",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "led_light",
          "type": "LightDefinition",
          "optional": false
        },
        {
          "name": "connector_main",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "connector_shadow",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "wire_pins",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "wire_pins_shadow",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "led_blue_off",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "blue_led_light_offset",
          "type": "vector",
          "optional": true
        },
        {
          "name": "red_green_led_light_offset",
          "type": "vector",
          "optional": true
        }
      ]
    }
  },
  "WorkingVisualisation": {
    "name": "WorkingVisualisation",
    "type": "table",
    "link": "/Types/WorkingVisualisation",
    "description": "Used by crafting machines to display different graphics when the machine is running.",
    "value": {
      "properties": [
        {
          "name": "render_layer",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "fadeout",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "synced_fadeout",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "constant_speed",
          "type": "bool",
          "description": "Whether the animations are always played at the same speed, not adjusted to the machine speed.",
          "default": "false",
          "optional": true
        },
        {
          "name": "always_draw",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "animated_shift",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "align_to_waypoint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "secondary_draw_order",
          "type": "int8",
          "optional": true
        },
        {
          "name": "draw_as_sprite",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "draw_as_light",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "light",
          "type": "LightDefinition",
          "optional": true
        },
        {
          "name": "effect",
          "type": "WorkingVisualisationEffect",
          "optional": true
        },
        {
          "name": "apply_recipe_tint",
          "type": "BeaconGraphicsSetApplymoduleTint",
          "optional": true
        },
        {
          "name": "apply_tint",
          "type": "WorkingVisualisationApplyTint",
          "description": "Used by \u003ca href\u003d\"/Prototype/CraftingMachine\" title\u003d\"Prototype/CraftingMachine\"\u003ePrototype/CraftingMachine\u003c/a\u003e (\"status\" only) and \u003ca href\u003d\"/Prototype/MiningDrill\" title\u003d\"Prototype/MiningDrill\"\u003ePrototype/MiningDrill\u003c/a\u003e.\n",
          "optional": true
        },
        {
          "name": "north_animation",
          "type": "AnimationType",
          "description": "Either these animations for the directions are loaded, or \u003ccode\u003eanimation\u003c/code\u003e and the positions for the directions are loaded.",
          "optional": true
        },
        {
          "name": "west_animation",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "south_animation",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "east_animation",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "animation",
          "type": "AnimationType",
          "description": "Either this and the below positions are loaded, or the animation properties for each direction are loaded.",
          "optional": true
        },
        {
          "name": "north_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "west_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "south_position",
          "type": "vector",
          "optional": true
        },
        {
          "name": "east_position",
          "type": "vector",
          "optional": true
        }
      ]
    }
  },
  "LayeredSoundValue": {
    "name": "LayeredSoundValue",
    "type": "table",
    "link": "/Types/LayeredSound",
    "value": {
      "properties": [
        {
          "name": "layers",
          "type": "SoundType[]",
          "optional": false
        }
      ]
    }
  },
  "SignalIDConnector": {
    "name": "SignalIDConnector",
    "type": "table",
    "link": "/Types/SignalIDConnector",
    "description": "Refers to an existing circuit network signal.",
    "value": {
      "properties": [
        {
          "name": "type",
          "type": "SignalColorMappingType",
          "optional": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of a circuit network signal, it has to have the type that is specified in this definition. For example \u003ccode\u003ename \u003d \"iron-plate\"\u003c/code\u003e would only work with \u003ccode\u003etype \u003d \"item\"\u003c/code\u003e, and \u003ccode\u003etype \u003d \"fluid\"\u003c/code\u003e would need a fluid signal as the name, for example \u003ccode\u003e\"crude-oil\"\u003c/code\u003e or \u003ccode\u003e\"water\"\u003c/code\u003e.",
          "optional": false
        }
      ]
    }
  },
  "LootValue": {
    "name": "LootValue",
    "type": "table",
    "link": "/Types/LightDefinition",
    "description": "Type for loot for Prototype/EntityWithHealth: The loot is generated when the entity is killed.",
    "value": {
      "properties": [
        {
          "name": "item",
          "type": "string",
          "description": "The item to spawn.",
          "optional": false
        },
        {
          "name": "probability",
          "type": "double",
          "description": "0 is 0% and 1 is 100%. Must be \u003e 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "count_min",
          "type": "double",
          "default": "1",
          "optional": true
        },
        {
          "name": "count_max",
          "type": "double",
          "description": "Must be \u003e 0.",
          "default": "1",
          "optional": true
        }
      ]
    }
  },
  "WallPictures": {
    "name": "WallPictures",
    "type": "table",
    "link": "/Prototype/Wall#pictures",
    "value": {
      "properties": [
        {
          "name": "single",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "straight_vertical",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "straight_horizontal",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "corner_right_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "corner_left_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "cornt_uper_left_down",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "ending_right",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "ending_left",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "filling",
          "type": "SpriteVariations",
          "optional": true
        },
        {
          "name": "water_connection_patch",
          "type": "Sprite4Way",
          "optional": true
        },
        {
          "name": "gate_connection_patch",
          "type": "Sprite4Way",
          "optional": true
        }
      ]
    }
  },
  "LightDefinitionOriented": {
    "name": "LightDefinitionOriented",
    "type": "table",
    "link": "/Types/LightDefinition",
    "description": "Type for placeable_by for entities: Item that when placed creates this entity.",
    "value": {
      "properties": [
        {
          "name": "picture",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "rotation_shift",
          "type": "RealOrientation",
          "optional": true
        }
      ],
      "parent": "LightDefinitionBasic"
    }
  },
  "SetTileTriggerEffectItem": {
    "name": "SetTileTriggerEffectItem",
    "type": "table",
    "link": "/Types/SetTileTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "tile_name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Tile\" title\u003d\"Prototype/Tile\"\u003ePrototype/Tile\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "radius",
          "type": "float",
          "optional": false
        },
        {
          "name": "apply_projection",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tile_collision_mask",
          "type": "CollisionMask",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "FireFlameBurntPatchAlphaVariations": {
    "name": "FireFlameBurntPatchAlphaVariations",
    "type": "table",
    "link": "/Prototype/FireFlame#burnt_patch_alpha_variations",
    "value": {
      "properties": [
        {
          "name": "tile",
          "type": "string",
          "description": "Name of a tile.",
          "optional": false
        },
        {
          "name": "alpha",
          "type": "float",
          "optional": false
        }
      ]
    }
  },
  "CreateExplosionTriggerEffectItem": {
    "name": "CreateExplosionTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateExplosionTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "max_movement_distance",
          "type": "float",
          "default": "-1",
          "optional": true
        },
        {
          "name": "max_movement_distance_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "inherit_movement_distance_from_projectile",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "cycle_while_moving",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "CreateEntityTriggerEffectItem"
    }
  },
  "EquipmentShapeBase": {
    "name": "EquipmentShapeBase",
    "type": "table",
    "link": "/Types/EquipmentShape",
    "value": {
      "properties": [
        {
          "name": "width",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "height",
          "type": "uint32",
          "optional": false
        }
      ]
    }
  },
  "Sprite8Way": {
    "name": "Sprite8Way",
    "type": "table",
    "link": "/Types/Sprite8Way",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "north_east",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "east",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "south_east",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "south",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "south_west",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "west",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "north_west",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "sheets",
          "type": "SpriteNWaySheet[]",
          "description": "If given, this is used instead of any other properties that may be present.",
          "optional": true
        },
        {
          "name": "sheet",
          "type": "SpriteNWaySheet",
          "description": "If given, and #sheets isnt present, this is used instead of any other properties that may be present.",
          "optional": true
        }
      ]
    }
  },
  "CliffOrientations": {
    "name": "CliffOrientations",
    "type": "table",
    "link": "/Prototype/Cliff#orientations",
    "value": {
      "properties": [
        {
          "name": "west_to_east",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "north_to_south",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "east_to_west",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "south_to_north",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "west_to_north",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "north_to_east",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "east_to_south",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "south_to_west",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "west_to_south",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "north_to_west",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "east_to_north",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "south_to_east",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "west_to_none",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "none_to_east",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "north_to_none",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "none_to_south",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "east_to_none",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "none_to_west",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "south_to_none",
          "type": "OrientedCliffPrototype",
          "optional": false
        },
        {
          "name": "none_to_north",
          "type": "OrientedCliffPrototype",
          "optional": false
        }
      ]
    }
  },
  "DirectTriggerItem": {
    "name": "DirectTriggerItem",
    "type": "table",
    "link": "/Types/DirectTriggerItem",
    "value": {
      "properties": [
        {
          "name": "filter_enabled",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "TriggerItem"
    }
  },
  "Effect": {
    "name": "Effect",
    "type": "table",
    "link": "/Types/Effect",
    "value": {
      "properties": [
        {
          "name": "consumption",
          "type": "EffectConsumption",
          "optional": true
        },
        {
          "name": "speed",
          "type": "EffectConsumption",
          "optional": true
        },
        {
          "name": "productivity",
          "type": "EffectConsumption",
          "optional": true
        },
        {
          "name": "pollution",
          "type": "EffectConsumption",
          "optional": true
        }
      ]
    }
  },
  "CreateSmokeTriggerEffectItem": {
    "name": "CreateSmokeTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateSmokeTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "initial_height",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed",
          "type": "vector",
          "optional": true
        },
        {
          "name": "speed_multiplier",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_multiplier_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_speed",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_from_center",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_from_center_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        }
      ],
      "parent": "CreateEntityTriggerEffectItem"
    }
  },
  "Resistances": {
    "name": "Resistances",
    "type": "table",
    "link": "/Types/Resistances",
    "description": "Resistances to certain types of attacks from enemy, and physical damage. See \u003ca href\u003d\"/Damage\" title\u003d\"Damage\"\u003eDamage\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "type",
          "type": "string",
          "description": "Specification of the type. Name of a \u003ca href\u003d\"/Prototype/DamageType\" title\u003d\"Prototype/DamageType\"\u003ePrototype/DamageType\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "decrease",
          "type": "float",
          "description": "The \u003ca href\u003d\"/Damage#Decrease.2C_or_.22flat.22_resistance\" title\u003d\"Damage\"\u003eflat resistance\u003c/a\u003e to the given damage type. (Higher is better)",
          "default": "0",
          "optional": false
        },
        {
          "name": "percent",
          "type": "float",
          "description": "The \u003ca href\u003d\"/Damage#Percentage_resistance\" title\u003d\"Damage\"\u003epercentage resistance\u003c/a\u003e to the given damage type. (Higher is better)",
          "default": "0",
          "optional": false
        }
      ]
    }
  },
  "TriggerItem": {
    "name": "TriggerItem",
    "type": "table",
    "link": "/Types/TriggerItem",
    "value": {
      "properties": [
        {
          "name": "entity_flags",
          "type": "EntityPrototypeFlags",
          "description": "Only prototypes with these flags are affected by the trigger item.",
          "optional": true
        },
        {
          "name": "ignore_collision_condition",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "trigger_target_mask",
          "type": "TriggerTargetMask",
          "optional": true
        },
        {
          "name": "repeat_count",
          "type": "uint32",
          "default": "1",
          "optional": true
        },
        {
          "name": "probability",
          "type": "float",
          "description": "Must be greater than 0 and less than or equal to 1.",
          "default": "1",
          "optional": true
        },
        {
          "name": "collision_mask",
          "type": "CollisionMask",
          "description": "Only prototypes with these collision masks are affected by the trigger item.",
          "optional": true
        },
        {
          "name": "source_effects",
          "type": "TriggerEffect",
          "optional": true
        },
        {
          "name": "action_delivery",
          "type": "TriggerDelivery|TriggerDelivery[]",
          "optional": true
        },
        {
          "name": "force",
          "type": "ForceCondition",
          "description": "Only entities meeting the force condition are affected by the trigger item.",
          "optional": true
        }
      ]
    }
  },
  "AttackReaction": {
    "name": "AttackReaction",
    "type": "alias",
    "link": "/Types/AttackReaction",
    "value": "AttackReactionItem[]"
  },
  "WirePosition": {
    "name": "WirePosition",
    "type": "table",
    "link": "/Types/WirePosition",
    "description": "Used by \u003ca href\u003d\"/Types/WireConnectionPoint\" title\u003d\"Types/WireConnectionPoint\"\u003eTypes/WireConnectionPoint\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "copper",
          "type": "vector",
          "optional": true
        },
        {
          "name": "red",
          "type": "vector",
          "optional": true
        },
        {
          "name": "green",
          "type": "vector",
          "optional": true
        }
      ]
    }
  },
  "RotatedAnimation4Way": {
    "name": "RotatedAnimation4Way",
    "type": "alias",
    "link": "/Types/RotatedAnimation4Way",
    "description": "A map of rotated animations for all 4 directions of the entity, or one \u003ca href\u003d\"/Types/RotatedAnimation\" title\u003d\"Types/RotatedAnimation\"\u003eTypes/RotatedAnimation\u003c/a\u003e that is used for all directions.",
    "value": "RotatedAnimation4WayValue|RotatedAnimation"
  },
  "StreamAttackParametersGunCenterShift": {
    "name": "StreamAttackParametersGunCenterShift",
    "type": "table",
    "link": "/Types/StreamAttackParameters#gun_center_shift",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "vector",
          "optional": false
        },
        {
          "name": "east",
          "type": "vector",
          "optional": false
        },
        {
          "name": "south",
          "type": "vector",
          "optional": false
        },
        {
          "name": "west",
          "type": "vector",
          "optional": false
        }
      ]
    }
  },
  "StorageTankPictures": {
    "name": "StorageTankPictures",
    "type": "table",
    "link": "/Prototype/StorageTank#pictures",
    "value": {
      "properties": [
        {
          "name": "picture",
          "type": "Sprite4Way",
          "optional": false
        },
        {
          "name": "window_background",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "fluid_background",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "flow_sprite",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "gas_flow",
          "type": "AnimationType",
          "optional": false
        }
      ]
    }
  },
  "MinableProperties": {
    "name": "MinableProperties",
    "type": "table",
    "link": "/Types/MinableProperties",
    "description": "The mining properties of objects. For formulas for the mining time, see \u003ca href\u003d\"/Mining\" title\u003d\"Mining\"\u003emining\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "mining_time",
          "type": "double",
          "description": "How long it takes to mine this object.",
          "optional": false
        },
        {
          "name": "results",
          "type": "ProductPrototype[]",
          "description": "The items that are returned when this object is mined.",
          "optional": true
        },
        {
          "name": "result",
          "type": "string",
          "description": "\u003cp\u003eOnly loaded if \u003ccode\u003eresults\u003c/code\u003e was not found. Which item is dropped when this is mined.\u003c/p\u003e\u003cp\u003eCannot be empty. If you want the entity to not be minable, don\u0027t specify the minable properties, if you want it to be minable with no result item, don\u0027t specify the result at all.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "fluid_amount",
          "type": "double",
          "description": "The amount of fluid that is used up when this object is mined. If this is \u003e 0, this object cannot be mined by hand.",
          "default": "0",
          "optional": true
        },
        {
          "name": "mining_particle",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Particle\" title\u003d\"Prototype/Particle\"\u003ePrototype/Particle\u003c/a\u003e. Which set of particles to use.",
          "optional": true
        },
        {
          "name": "required_fluid",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Fluid\" title\u003d\"Prototype/Fluid\"\u003ePrototype/Fluid\u003c/a\u003e. The fluid that is used up when this object is mined.",
          "optional": true
        },
        {
          "name": "count",
          "type": "uint16",
          "description": "Only loaded if results was not found. How many of result are dropped.",
          "default": "1",
          "optional": true
        },
        {
          "name": "mining_trigger",
          "type": "Trigger",
          "optional": true
        }
      ]
    }
  },
  "ArtilleryTriggerDelivery": {
    "name": "ArtilleryTriggerDelivery",
    "type": "table",
    "link": "/Types/ArtilleryTriggerDelivery",
    "value": {
      "properties": [
        {
          "name": "projectile",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/ArtilleryProjectile\" title\u003d\"Prototype/ArtilleryProjectile\"\u003ePrototype/ArtilleryProjectile\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "starting_speed",
          "type": "float",
          "optional": false
        },
        {
          "name": "starting_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "direction_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "range_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "trigger_fired_artillery",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "TriggerDeliveryBase"
    }
  },
  "ItemStackIndex": {
    "name": "ItemStackIndex",
    "type": "alias",
    "link": "/Types/ItemStackIndex",
    "value": "uint16"
  },
  "TriggerTargetMask": {
    "name": "TriggerTargetMask",
    "type": "alias",
    "link": "/Types/TriggerTargetMask",
    "value": "string[]"
  },
  "ShortcutAction": {
    "name": "ShortcutAction",
    "type": "string",
    "link": "/Prototype/Shortcut#action",
    "value": {
      "toggle-alt-mode": "",
      "undo": "",
      "copy": "",
      "cut": "",
      "paste": "",
      "import-string": "",
      "toggle-personal-roboport": "",
      "toggle-equipment-movement-bonus": "",
      "create-blueprint-item": "",
      "lua": ""
    }
  },
  "OrientedCliffPrototype": {
    "name": "OrientedCliffPrototype",
    "type": "table",
    "link": "/Types/OrientedCliffPrototype",
    "description": "Used by \u003ca href\u003d\"/Prototype/Cliff\" title\u003d\"Prototype/Cliff\"\u003ePrototype/Cliff\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "collision_bounding_box",
          "type": "BoundingBox",
          "optional": false
        },
        {
          "name": "pictures",
          "type": "SpriteVariations",
          "optional": false
        },
        {
          "name": "fill_volume",
          "type": "uint32",
          "optional": false
        }
      ]
    }
  },
  "CraftingMachineStatusColors": {
    "name": "CraftingMachineStatusColors",
    "type": "table",
    "link": "/Prototype/CraftingMachine#status_colors",
    "value": {
      "properties": [
        {
          "name": "idle",
          "type": "Color",
          "optional": true
        },
        {
          "name": "no_minable_resources",
          "type": "Color",
          "optional": true
        },
        {
          "name": "full_output",
          "type": "Color",
          "optional": true
        },
        {
          "name": "insufficient_input",
          "type": "Color",
          "optional": true
        },
        {
          "name": "disabled",
          "type": "Color",
          "optional": true
        },
        {
          "name": "no_power",
          "type": "Color",
          "optional": true
        },
        {
          "name": "working",
          "type": "Color",
          "optional": true
        },
        {
          "name": "low_power",
          "type": "Color",
          "optional": true
        }
      ]
    }
  },
  "EnergySourceBurner": {
    "name": "EnergySourceBurner",
    "type": "table",
    "link": "/Types/EnergySource",
    "value": {
      "properties": [
        {
          "name": "fuel_inventory_size",
          "type": "ItemStackIndex",
          "optional": false
        },
        {
          "name": "burnt_inventory_size",
          "type": "ItemStackIndex",
          "default": "0",
          "optional": true
        },
        {
          "name": "smoke",
          "type": "SmokeSource[]",
          "description": "Array of 1 or more smoke sources.",
          "optional": true
        },
        {
          "name": "light_flicker",
          "type": "LightFlickeringDefinition",
          "optional": true
        },
        {
          "name": "effectivity",
          "type": "double",
          "description": "1 means 100% effectivity. Must be greater than 0. Multiplier of the energy output.",
          "default": "1",
          "optional": true
        },
        {
          "name": "fuel_category",
          "type": "string",
          "description": "The energy source can be used with fuel from this \u003ca href\u003d\"/Prototype/FuelCategory\" title\u003d\"Prototype/FuelCategory\"\u003efuel category\u003c/a\u003e. For a list on built-in categories, see \u003ca href\u003d\"/Data.raw#fuel-category\" title\u003d\"Data.raw\"\u003eData.raw#fuel-category\u003c/a\u003e.",
          "default": "chemical",
          "optional": true
        },
        {
          "name": "fuel_categories",
          "type": "string[]",
          "description": "Same as above, only one of them can exist. For a list on built-in categories, see \u003ca href\u003d\"/Data.raw#fuel-category\" title\u003d\"Data.raw\"\u003eData.raw#fuel-category\u003c/a\u003e.",
          "optional": true
        }
      ],
      "parent": "EnergySourceBase"
    }
  },
  "DestroyCliffsCapsuleAction": {
    "name": "DestroyCliffsCapsuleAction",
    "type": "table",
    "link": "/Types/DestroyCliffsCapsuleAction",
    "description": "Used by \u003ca href\u003d\"/Types/CapsuleAction\" title\u003d\"Types/CapsuleAction\"\u003eTypes/CapsuleAction\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "attack_parameters",
          "type": "AttackParameters",
          "optional": false
        },
        {
          "name": "radius",
          "type": "float",
          "optional": false
        },
        {
          "name": "timeout",
          "type": "uint32",
          "default": "1200",
          "optional": true
        },
        {
          "name": "play_sound_on_failure",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "uses_stack",
          "type": "bool",
          "description": "Whether using the capsule consumes an item from the stack.",
          "default": "true",
          "optional": true
        }
      ]
    }
  },
  "CircularProjectileCreationSpecification": {
    "name": "CircularProjectileCreationSpecification",
    "type": "alias",
    "link": "/Types/CircularProjectileCreationSpecification",
    "description": "An \u003ca href\u003d\"/Types/table\" title\u003d\"Types/table\"\u003earray\u003c/a\u003e of arrays. The first member of the inner arrays is a \u003ca href\u003d\"/Types/RealOrientation\" title\u003d\"Types/RealOrientation\"\u003eTypes/RealOrientation\u003c/a\u003e, the second member is a \u003ca href\u003d\"/Types/vector\" title\u003d\"Types/vector\"\u003eTypes/vector\u003c/a\u003e.",
    "value": "table[]"
  },
  "EnergySourceFluid": {
    "name": "EnergySourceFluid",
    "type": "table",
    "link": "/Types/EnergySource",
    "value": {
      "properties": [
        {
          "name": "fluid_box",
          "type": "FluidBox",
          "description": "All standard fluid box configurations are acceptable, but the type must be \"input\" or \"input-output\" to function correctly. Scale_fluid_usage, fluid_usage_per_tick or a filter on the fluidbox must be set to be able to calculate the fluid usage of the energy source.",
          "optional": false
        },
        {
          "name": "smoke",
          "type": "SmokeSource[]",
          "description": "Array of 1 or more smoke sources.",
          "optional": true
        },
        {
          "name": "light_flicker",
          "type": "LightFlickeringDefinition",
          "optional": true
        },
        {
          "name": "effectivity",
          "type": "double",
          "description": "1 means 100% effectivity. Must be greater than 0. Multiplier of the energy output.",
          "default": "1",
          "optional": true
        },
        {
          "name": "burns_fluid",
          "type": "bool",
          "description": "Optional. If set to true, the energy source will calculate power based on the fluid\u0027s fuel_value entry, else it will calculate based on fluid temperature, like \u003ca href\u003d\"/Prototype/Generator\" title\u003d\"Prototype/Generator\"\u003ePrototype/Generator\u003c/a\u003e.",
          "default": "false",
          "optional": true
        },
        {
          "name": "scale_fluid_usage",
          "type": "bool",
          "description": "If set to true, the energy source will consume as much fluid as required to produce the desired power, if set to false it will consume as much as it is allowed to, wasting any excess.",
          "default": "false",
          "optional": true
        },
        {
          "name": "fluid_usage_per_tick",
          "type": "double",
          "description": "The number of fluid units the energy source uses per tick. If used with scale_fluid_usage, this specifies the maximum. If this value is not set, scale_energy_usage \u003d false and a fluid box filter is set, the game will attempt to calculate this value from the fluid box filter\u0027s fluid\u0027s fuel_value or heat_capacity and the entity\u0027s energy_usage. If burns_fluid is false, maximum_temperature will also be used.",
          "default": "0",
          "optional": true
        },
        {
          "name": "maximum_temperature",
          "type": "double",
          "description": "If it is specified while scale_fluid_usage \u003d false and fluid_usage_per_tick is not specified, the game will use this value to calculate fluid_usage_per_tick.",
          "optional": true
        }
      ],
      "parent": "EnergySourceBase"
    }
  },
  "ItemToPlace": {
    "name": "ItemToPlace",
    "type": "table",
    "link": "/Types/ItemToPlace",
    "description": "Type for placeable_by for entities: Item that when placed creates this entity.",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "The item used to place this entity.",
          "optional": true
        },
        {
          "name": "count",
          "type": "uint32",
          "description": "How many items are used to place one of this entity. Can\u0027t be larger than the stack size of the item.",
          "optional": true
        }
      ]
    }
  },
  "AnimationElement": {
    "name": "AnimationElement",
    "type": "table",
    "link": "/Types/AnimationElement",
    "description": "Used by \u003ca href\u003d\"/Types/BeaconGraphicsSet\" title\u003d\"Types/BeaconGraphicsSet\"\u003eTypes/BeaconGraphicsSet\u003c/a\u003e (\u003ca href\u003d\"/Prototype/Beacon\" title\u003d\"Prototype/Beacon\"\u003ePrototype/Beacon\u003c/a\u003e).",
    "value": {
      "properties": [
        {
          "name": "render_layer",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "secondary_draw_order",
          "type": "int8",
          "optional": true
        },
        {
          "name": "draw_as_sprite",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "draw_as_light",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "apply_tint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "always_draw",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "animation",
          "type": "AnimationType",
          "optional": true
        }
      ]
    }
  },
  "RenderLayer": {
    "name": "RenderLayer",
    "type": "string",
    "link": "/Types/RenderLayer",
    "value": {
      "water-tile": "",
      "ground-tile": "",
      "tile-transition": "",
      "decals": "",
      "lower-radius-visualization": "",
      "radius-visualization": "",
      "transport-belt-integration": "",
      "resource": "",
      "building-smoke": "",
      "decorative": "",
      "ground-patch": "",
      "ground-patch-higher": "",
      "ground-patch-higher2": "",
      "remnants": "",
      "floor": "",
      "transport-belt": "",
      "transport-belt-endings": "",
      "floor-mechanics-under-corpse": "",
      "corpse": "",
      "floor-mechanics": "",
      "item": "",
      "lower-object": "",
      "transport-belt-circuit-connector": "",
      "lower-object-above-shadow": "",
      "object": "",
      "higher-object-under": "",
      "higher-object-above": "",
      "item-in-inserter-hand": "",
      "wires": "",
      "wires-above": "",
      "entity-info-icon": "",
      "entity-info-icon-above": "",
      "explosion": "",
      "projectile": "",
      "smoke": "",
      "air-object": "",
      "air-entity-info-icon": "",
      "light-effect": "",
      "selection-box": "",
      "higher-selection-box": "",
      "collision-selection-box": "",
      "arrow": "",
      "cursor": ""
    }
  },
  "ScriptTriggerEffectItem": {
    "name": "ScriptTriggerEffectItem",
    "type": "table",
    "link": "/Types/ScriptTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "effect_id",
          "type": "string",
          "description": "The effect_id that will be provided in \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/events.html#on_script_trigger_effect\"\u003eon_script_trigger_effect\u003c/a\u003e.",
          "optional": false
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "TextAlignment": {
    "name": "TextAlignment",
    "type": "string",
    "link": "/Prototype/FlyingText#text_alignment",
    "value": {
      "left": "",
      "center": "",
      "right": ""
    }
  },
  "PumpConnectorGraphicsValue": {
    "name": "PumpConnectorGraphicsValue",
    "type": "table",
    "link": "/Types/PumpConnectorGraphics",
    "value": {
      "properties": [
        {
          "name": "standup_base",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "standup_top",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "standup_shadow",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "connector",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "connector_shadow",
          "type": "AnimationType",
          "optional": true
        }
      ]
    }
  },
  "SpriteVariationsValue": {
    "name": "SpriteVariationsValue",
    "type": "table",
    "link": "/Types/SpriteVariations",
    "value": {
      "properties": [
        {
          "name": "sheet",
          "type": "SpriteVariationsSheet",
          "optional": true
        }
      ]
    }
  },
  "ConsumingType": {
    "name": "ConsumingType",
    "type": "string",
    "link": "/Types/ConsumingType",
    "description": "A \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e that defines which other inputs a \u003ca href\u003d\"/Prototype/CustomInput\" title\u003d\"Prototype/CustomInput\"\u003ePrototype/CustomInput\u003c/a\u003e consumes.",
    "value": {
      "none": "The associated script event will fire when satisfied and pass through to normal game events (default).",
      "game-only": "The associated script event will fire when satisfied and block game events that conflict with the key sequence. Actions that are processed regardless of game paused state cannot be blocked."
    }
  },
  "MiningDrillGraphicsSetCircuitConnectorLayer": {
    "name": "MiningDrillGraphicsSetCircuitConnectorLayer",
    "type": "table",
    "link": "/Types/MiningDrillGraphicsSet#circuit_connector_layer",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "east",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "south",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        },
        {
          "name": "west",
          "type": "RenderLayer",
          "default": "object",
          "optional": true
        }
      ]
    }
  },
  "SpawnPointValue": {
    "name": "SpawnPointValue",
    "type": "table",
    "link": "/Types/SpawnPoint",
    "value": {
      "properties": [
        {
          "name": "evolution_factor",
          "type": "double",
          "optional": false
        },
        {
          "name": "spawn_weight",
          "type": "double",
          "description": "Must be \u003e\u003d 0.",
          "optional": false
        }
      ]
    }
  },
  "BeamTriggerDelivery": {
    "name": "BeamTriggerDelivery",
    "type": "table",
    "link": "/Types/BeamTriggerDelivery",
    "value": {
      "properties": [
        {
          "name": "beam",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Beam\" title\u003d\"Prototype/Beam\"\u003ePrototype/Beam\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "add_to_shooter",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "max_length",
          "type": "uint32",
          "default": "0",
          "optional": true
        },
        {
          "name": "duration",
          "type": "uint32",
          "default": "0",
          "optional": true
        },
        {
          "name": "source_offset",
          "type": "vector",
          "optional": true
        }
      ],
      "parent": "TriggerDeliveryBase"
    }
  },
  "UtilityConstantsTrainPathFinding": {
    "name": "UtilityConstantsTrainPathFinding",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "train_stop_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "stopped_manually_controlled_train_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "stopped_manually_controlled_train_without_passenger_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "signal_reserved_by_circuit_network_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_in_station_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_in_station_with_no_other_valid_stops_in_schedule",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_arriving_to_station_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_arriving_to_signal_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_waiting_at_signal_penalty",
          "type": "uint32",
          "optional": false
        },
        {
          "name": "train_waiting_at_signal_tick_multiplier_penalty",
          "type": "float",
          "description": "Must be \u003e\u003d 0.",
          "optional": false
        },
        {
          "name": "train_with_no_path_penalty",
          "type": "uint32",
          "optional": false
        }
      ]
    }
  },
  "SpriteNWaySheet": {
    "name": "SpriteNWaySheet",
    "type": "table",
    "link": "/Types/SpriteNWaySheet",
    "description": "Used in \u003ca href\u003d\"/Types/Sprite4Way\" title\u003d\"Types/Sprite4Way\"\u003eTypes/Sprite4Way\u003c/a\u003e and \u003ca href\u003d\"/Types/Sprite8Way\" title\u003d\"Types/Sprite8Way\"\u003eTypes/Sprite8Way\u003c/a\u003e",
    "value": {
      "properties": [
        {
          "name": "filename",
          "type": "FileName",
          "description": "Technically optional, but path to sprite cannot be empty.",
          "optional": false
        },
        {
          "name": "frames",
          "type": "uint32",
          "description": "Specifies how many of the directions of the SpriteNWay are filled up with this sheet.",
          "optional": true
        },
        {
          "name": "hr_version",
          "type": "SpriteNWaySheet",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the SpriteNWaySheet.",
          "optional": true
        },
        {
          "name": "priority",
          "type": "SpritePriority",
          "default": "medium",
          "optional": true
        },
        {
          "name": "flags",
          "type": "SpriteFlags",
          "optional": true
        },
        {
          "name": "size",
          "type": "SpriteSizeType|SpriteSizeType[]",
          "description": "\u003cp\u003eThe width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "width",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Width of the picture in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "height",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Height of the picture in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the sprite in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "position",
          "type": "SpriteSizeType[]",
          "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "description": "In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.",
          "optional": true
        },
        {
          "name": "scale",
          "type": "double",
          "description": "Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
          "default": "1",
          "optional": true
        },
        {
          "name": "draw_as_shadow",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "mipmap_count",
          "type": "uint8",
          "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
          "default": "0",
          "optional": true
        },
        {
          "name": "apply_runtime_tint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tint",
          "type": "Color",
          "optional": true
        },
        {
          "name": "blend_mode",
          "type": "BlendMode",
          "default": "normal",
          "optional": true
        },
        {
          "name": "load_in_minimal_mode",
          "type": "bool",
          "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
          "default": "false",
          "optional": true
        },
        {
          "name": "premul_alpha",
          "type": "bool",
          "description": "Whether alpha should be premultiplied.",
          "default": "true",
          "optional": true
        },
        {
          "name": "generate_sdf",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "LogisticContainerLogisticMode": {
    "name": "LogisticContainerLogisticMode",
    "type": "string",
    "link": "/Prototype/LogisticContainer#logistic_mode",
    "value": {
      "passive-provider": "",
      "active-provider": "",
      "storage": "",
      "buffer": "",
      "requester": ""
    }
  },
  "AttackParameters": {
    "name": "AttackParameters",
    "type": "prototype",
    "link": "/Types/AttackParameters",
    "description": "A types/table. The table is loaded as one of the extensions of Types/BaseAttackParameters, depending on the value of the \u003ccode\u003etype\u003c/code\u003e key.",
    "value": {
      "projectile": "ProjectileAttackParameters",
      "beam": "BeamAttackParameters",
      "stream": "StreamAttackParameters"
    }
  },
  "AnimationSidesOptional": {
    "name": "AnimationSidesOptional",
    "type": "table",
    "link": "/Prototype/Boiler#fire",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "east",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "south",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "west",
          "type": "AnimationType",
          "optional": true
        }
      ]
    }
  },
  "ProgrammableSpeakerInstrumentNote": {
    "name": "ProgrammableSpeakerInstrumentNote",
    "type": "table",
    "link": "/Prototype/ProgrammableSpeaker#instruments",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false
        },
        {
          "name": "sound",
          "type": "SoundType",
          "optional": false
        }
      ]
    }
  },
  "TileTransitions": {
    "name": "TileTransitions",
    "type": "table",
    "link": "/Types/TileTransitions",
    "description": "Used for tile graphics.",
    "value": {
      "properties": [
        {
          "name": "side",
          "type": "TileTransitionSprite",
          "description": "This or side_mask needs to be specified if \u003ccode\u003eempty_transitions\u003c/code\u003e is not true.",
          "optional": true
        },
        {
          "name": "side_mask",
          "type": "TileTransitionSprite",
          "description": "This or side needs to be specified if \u003ccode\u003eempty_transitions\u003c/code\u003e is not true.",
          "optional": true
        },
        {
          "name": "inner_corner",
          "type": "TileTransitionSprite",
          "description": "This or inner_corner_mask needs to be specified if \u003ccode\u003eempty_transitions\u003c/code\u003e is not true.",
          "optional": true
        },
        {
          "name": "inner_corner_mask",
          "type": "TileTransitionSprite",
          "description": "This or inner_corner needs to be specified if \u003ccode\u003eempty_transitions\u003c/code\u003e is not true.",
          "optional": true
        },
        {
          "name": "outer_corner",
          "type": "TileTransitionSprite",
          "description": "This or outer_corner_mask needs to be specified if \u003ccode\u003eempty_transitions\u003c/code\u003e is not true.",
          "optional": true
        },
        {
          "name": "outer_corner_mask",
          "type": "TileTransitionSprite",
          "description": "This or outer_corner needs to be specified if \u003ccode\u003eempty_transitions\u003c/code\u003e is not true.",
          "optional": true
        },
        {
          "name": "empty_transitions",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "side_background",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "side_background_mask",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "side_effect_map",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "side_weights",
          "type": "float[]",
          "optional": true
        },
        {
          "name": "inner_corner_background",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "inner_corner_background_mask",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "inner_corner_effect_map",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "inner_corner_weights",
          "type": "float[]",
          "optional": true
        },
        {
          "name": "outer_corner_background",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "outer_corner_background_mask",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "outer_corner_effect_map",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "outer_corner_weights",
          "type": "float[]",
          "optional": true
        },
        {
          "name": "u_transition",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "u_transition_mask",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "u_transition_background",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "u_transition_background_mask",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "u_transition_effect_map",
          "type": "TileTransitionSprite",
          "optional": true
        },
        {
          "name": "u_transition_weights",
          "type": "float[]",
          "optional": true
        },
        {
          "name": "o_transition",
          "type": "TileSprite",
          "optional": true
        },
        {
          "name": "o_transition_mask",
          "type": "TileSprite",
          "optional": true
        },
        {
          "name": "o_transition_background",
          "type": "TileSprite",
          "optional": true
        },
        {
          "name": "o_transition_background_mask",
          "type": "TileSprite",
          "optional": true
        },
        {
          "name": "o_transition_effect_map",
          "type": "TileSprite",
          "optional": true
        },
        {
          "name": "water_patch",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "effect_mask",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "layer",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "overlay_layer_group",
          "type": "TileLayerGroup",
          "optional": true
        },
        {
          "name": "background_layer_group",
          "type": "TileLayerGroup",
          "optional": true
        },
        {
          "name": "overlay_layer_offset",
          "type": "int8",
          "optional": true
        },
        {
          "name": "masked_overlay_layer_offset",
          "type": "int8",
          "default": "0",
          "optional": true
        },
        {
          "name": "background_layer_offset",
          "type": "int8",
          "default": "0",
          "optional": true
        },
        {
          "name": "masked_background_layer_offset",
          "type": "int8",
          "default": "0",
          "optional": true
        },
        {
          "name": "apply_effect_color_to_overlay",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "offset_background_layer_by_tile_layer",
          "type": "bool",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "RailPieceLayers": {
    "name": "RailPieceLayers",
    "type": "table",
    "link": "/Types/RailPieceLayers",
    "description": "Used for graphics by \u003ca href\u003d\"/Prototype/Rail\" title\u003d\"Prototype/Rail\"\u003ePrototype/Rails\u003c/a\u003e and \u003ca href\u003d\"/Prototype/RailRemnants\" title\u003d\"Prototype/RailRemnants\"\u003ePrototype/RailRemnants\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "metals",
          "type": "SpriteVariations",
          "description": "Must have between 1 and 4 variations.",
          "optional": false
        },
        {
          "name": "backplates",
          "type": "SpriteVariations",
          "description": "Must have same number of variations as \u003ccode\u003emetals\u003c/code\u003e.",
          "optional": false
        },
        {
          "name": "ties",
          "type": "SpriteVariations",
          "description": "Must have between 1 and 4 variations.",
          "optional": false
        },
        {
          "name": "stone_path",
          "type": "SpriteVariations",
          "description": "Must have between 1 and 4 variations.",
          "optional": false
        },
        {
          "name": "stone_path_background",
          "type": "SpriteVariations",
          "description": "Must have less or equal than 4 variations.",
          "optional": true
        },
        {
          "name": "segment_visualisation_middle",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "segment_visualisation_ending_front",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "segment_visualisation_ending_back",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "segment_visualisation_continuing_front",
          "type": "SpriteType",
          "optional": true
        },
        {
          "name": "segment_visualisation_continuing_back",
          "type": "SpriteType",
          "optional": true
        }
      ]
    }
  },
  "PumpConnectorGraphics": {
    "name": "PumpConnectorGraphics",
    "type": "table",
    "link": "/Types/PumpConnectorGraphics",
    "description": "A mapping of arrays of mappings of \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e to \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animations\u003c/a\u003e to all 4 directions of the pump connection (to a fluid wagon).",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "PumpConnectorGraphicsValue[]",
          "description": "Size of the table must be 6 or more. Each value of the table is a mapping of \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e to \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e. The following strings are recognized: \u003ccode\u003estandup_base\u003c/code\u003e, \u003ccode\u003estandup_top\u003c/code\u003e, \u003ccode\u003estandup_shadow\u003c/code\u003e, \u003ccode\u003econnector\u003c/code\u003e, \u003ccode\u003econnector_shadow\u003c/code\u003e.",
          "optional": false
        },
        {
          "name": "west",
          "type": "PumpConnectorGraphicsValue[]",
          "description": "Size of the table must be 6 or more. Each value of the table is a mapping of \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e to \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e. The following strings are recognized: \u003ccode\u003estandup_base\u003c/code\u003e, \u003ccode\u003estandup_top\u003c/code\u003e, \u003ccode\u003estandup_shadow\u003c/code\u003e, \u003ccode\u003econnector\u003c/code\u003e, \u003ccode\u003econnector_shadow\u003c/code\u003e.",
          "optional": false
        },
        {
          "name": "south",
          "type": "PumpConnectorGraphicsValue[]",
          "description": "Size of the table must be 6 or more. Each value of the table is a mapping of \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e to \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e. The following strings are recognized: \u003ccode\u003estandup_base\u003c/code\u003e, \u003ccode\u003estandup_top\u003c/code\u003e, \u003ccode\u003estandup_shadow\u003c/code\u003e, \u003ccode\u003econnector\u003c/code\u003e, \u003ccode\u003econnector_shadow\u003c/code\u003e.",
          "optional": false
        },
        {
          "name": "east",
          "type": "PumpConnectorGraphicsValue[]",
          "description": "Size of the table must be 6 or more. Each value of the table is a mapping of \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e to \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e. The following strings are recognized: \u003ccode\u003estandup_base\u003c/code\u003e, \u003ccode\u003estandup_top\u003c/code\u003e, \u003ccode\u003estandup_shadow\u003c/code\u003e, \u003ccode\u003econnector\u003c/code\u003e, \u003ccode\u003econnector_shadow\u003c/code\u003e.",
          "optional": false
        }
      ]
    }
  },
  "EffectConsumption": {
    "name": "EffectConsumption",
    "type": "table",
    "link": "/Types/Effect#consumption",
    "value": {
      "properties": [
        {
          "name": "bonus",
          "type": "double",
          "description": "Precision is ignored beyond two decimals - 17.567 results in 17.56 etc.",
          "default": "0",
          "optional": true
        }
      ]
    }
  },
  "AmbientSoundTrackType": {
    "name": "AmbientSoundTrackType",
    "type": "string",
    "link": "/Prototype/AmbientSound#track_type",
    "value": {
      "early-game": "",
      "main-track": "",
      "interlude": "",
      "late-game": ""
    }
  },
  "TechnologyData": {
    "name": "TechnologyData",
    "type": "table",
    "link": "/Prototypes/Technology",
    "value": {
      "properties": [
        {
          "name": "unit",
          "type": "TechnologyUnit",
          "optional": false
        },
        {
          "name": "effects",
          "type": "Modifier[]",
          "description": "List of effects of the technology (applied when the technology is researched).",
          "optional": true
        },
        {
          "name": "enabled",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "hidden",
          "type": "bool",
          "description": "Hides the technology from the tech screen.",
          "default": "false",
          "optional": true
        },
        {
          "name": "max_level",
          "type": "uint32|string",
          "description": "\"infinite\" for infinite technologies, otherwise uint.",
          "optional": true
        },
        {
          "name": "prerequisites",
          "type": "string[]",
          "description": "List of technologies needed to be researched before this one can be researched.",
          "optional": true
        },
        {
          "name": "upgrade",
          "type": "bool",
          "description": "When set to true, and the technology contains several levels, only the relevant one is displayed in the technology screen.",
          "default": "false",
          "optional": true
        },
        {
          "name": "visible_when_disabled",
          "type": "bool",
          "description": "Controls whether the technology is shown in the tech GUI when it is disabled (enabled \u003d false).",
          "default": "false",
          "optional": true
        }
      ]
    }
  },
  "uint64": {
    "name": "uint64",
    "type": "alias",
    "link": "/Types/uint64",
    "description": "64 bit unsigned number.",
    "value": "number"
  },
  "CreateStickerTriggerEffectItem": {
    "name": "CreateStickerTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateStickerTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "sticker",
          "type": "string",
          "description": "Name of the \u003ca href\u003d\"/Prototype/Sticker\" title\u003d\"Prototype/Sticker\"\u003ePrototype/Sticker\u003c/a\u003e that should be created.",
          "optional": false
        },
        {
          "name": "show_in_tooltip",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "trigger_created_entity",
          "type": "bool",
          "description": "If this is true, \u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity\"\u003eon_trigger_created_entity\u003c/a\u003e is raised when the entity is created.",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "DestroyDecorativesTriggerEffectItem": {
    "name": "DestroyDecorativesTriggerEffectItem",
    "type": "table",
    "link": "/Types/DestroyDecorativesTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "radius",
          "type": "float",
          "optional": false
        },
        {
          "name": "from_render_layer",
          "type": "RenderLayer",
          "optional": true
        },
        {
          "name": "to_render_layer",
          "type": "RenderLayer",
          "optional": true
        },
        {
          "name": "include_soft_decoratives",
          "type": "bool",
          "description": "Soft decoratives are decoratives with \u003ca href\u003d\"/Prototype/Decorative#grows_through_rail_path\" title\u003d\"Prototype/Decorative\"\u003ePrototype/Decorative#grows_through_rail_path\u003c/a\u003e \u003d true.",
          "default": "false",
          "optional": true
        },
        {
          "name": "include_decals",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "invoke_decorative_trigger",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "decoratives_with_trigger_only",
          "type": "bool",
          "description": "If true, destroys only decoratives that have a \u003ca href\u003d\"/Prototype/Decorative#trigger_effect\" title\u003d\"Prototype/Decorative\"\u003ePrototype/Decorative#trigger_effect\u003c/a\u003e set.",
          "default": "false",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "UtilityConstantsColorFilter": {
    "name": "UtilityConstantsColorFilter",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false
        },
        {
          "name": "localised_name",
          "type": "LocalisedString",
          "optional": false
        },
        {
          "name": "matrix",
          "type": "float[][]",
          "description": "4 arrays of 4-length float arrays, essentially a 4x4 matrix",
          "optional": false
        }
      ]
    }
  },
  "ItemCountType": {
    "name": "ItemCountType",
    "type": "alias",
    "link": "/Types/ItemCountType",
    "value": "uint32"
  },
  "AnimationRunMode": {
    "name": "AnimationRunMode",
    "type": "string",
    "link": "/Prototype/Animation#run_mode",
    "value": {
      "forward": "",
      "backward": "",
      "forward-then-backward": ""
    }
  },
  "RealOrientation": {
    "name": "RealOrientation",
    "type": "alias",
    "link": "/Types/RealOrientation",
    "description": "Specified by a \u003ca href\u003d\"/Types/float\" title\u003d\"Types/float\"\u003eTypes/float\u003c/a\u003e between 0 and 1, including 0 and excluding 1.",
    "value": "number"
  },
  "LineTriggerItem": {
    "name": "LineTriggerItem",
    "type": "table",
    "link": "/Types/LineTriggerItem",
    "value": {
      "properties": [
        {
          "name": "range",
          "type": "double",
          "optional": false
        },
        {
          "name": "width",
          "type": "double",
          "optional": false
        }
      ],
      "parent": "TriggerItem"
    }
  },
  "SelectionToolSelectionMode": {
    "name": "SelectionToolSelectionMode",
    "type": "stringArray",
    "link": "/Types/SelectionTool#selection_mode",
    "value": {
      "blueprint": "The normal rules for acceptable entities in blueprints",
      "deconstruct": "The normal rules for acceptable entities for deconstruction",
      "cancel-deconstruct": "The normal rules for acceptable entities for cancel deconstruction",
      "items": "Item entities",
      "trees": "Trees",
      "buildable-type": "Buildable entities as defined by the game",
      "nothing": "Nothing",
      "items-to-place": "The entity has an item that builds the entity",
      "any-entity": "Any entity",
      "any-tile": "Any tile",
      "same-force": "The entity force matches that of the player doing the selection",
      "not-same-force": "The entity force does not match that of the player doing the selection",
      "friend": "The entity force is friend to that of the player doing the selection",
      "enemy": "The entity force is enemy to that of the player doing the selection",
      "upgrade": "The normal rules for acceptable entities in upgrade planners",
      "cancel-upgrade": "The normal rules for acceptable entities for cancel upgrade",
      "entity-with-health": "",
      "entity-with-force": "",
      "entity-with-owner": ""
    }
  },
  "SpriteVariationsSheet": {
    "name": "SpriteVariationsSheet",
    "type": "table",
    "link": "/Types/SpriteVariations",
    "value": {
      "properties": [
        {
          "name": "variation_count",
          "type": "uint32",
          "default": "1",
          "optional": true
        },
        {
          "name": "repeat_count",
          "type": "uint32",
          "default": "1",
          "optional": true
        },
        {
          "name": "line_length",
          "type": "uint32",
          "description": "Default is the value of \u003ccode\u003evariation_count\u003c/code\u003e.",
          "optional": true
        }
      ],
      "parent": "SpriteType"
    }
  },
  "UseOnSelfCapsuleAction": {
    "name": "UseOnSelfCapsuleAction",
    "type": "table",
    "link": "/Types/UseOnSelfCapsuleAction",
    "value": {
      "properties": [
        {
          "name": "attack_parameters",
          "type": "AttackParameters",
          "optional": false
        },
        {
          "name": "uses_stack",
          "type": "bool",
          "description": "Whether using the capsule consumes an item from the stack.",
          "default": "true",
          "optional": true
        }
      ],
      "parent": "CapsuleAction"
    }
  },
  "MapSettingsPollution": {
    "name": "MapSettingsPollution",
    "type": "table",
    "link": "/Prototype/MapSettings#pollution",
    "value": {
      "properties": [
        {
          "name": "enabled",
          "type": "bool",
          "optional": false
        },
        {
          "name": "diffusion_ratio",
          "type": "double",
          "description": "Amount that is diffused to neighboring chunks",
          "optional": false
        },
        {
          "name": "min_to_diffuse",
          "type": "double",
          "description": "This much pollution units must be on the chunk to start diffusing",
          "optional": false
        },
        {
          "name": "ageing",
          "type": "double",
          "description": "Constant modifier a percentage of 1; the pollution eaten by a chunks tiles",
          "optional": false
        },
        {
          "name": "expected_max_per_chunk",
          "type": "double",
          "description": "Anything bigger than this is visualised as this value",
          "optional": false
        },
        {
          "name": "min_to_show_per_chunk",
          "type": "double",
          "description": "Anything lower than this (but \u003e 0) is visualised as this value",
          "optional": false
        },
        {
          "name": "min_pollution_to_damage_trees",
          "type": "double",
          "optional": false
        },
        {
          "name": "pollution_with_max_forest_damage",
          "type": "double",
          "optional": false
        },
        {
          "name": "pollution_restored_per_tree_damage",
          "type": "double",
          "optional": false
        },
        {
          "name": "pollution_per_tree_damage",
          "type": "double",
          "optional": false
        },
        {
          "name": "max_pollution_to_restore_trees",
          "type": "double",
          "optional": false
        },
        {
          "name": "enemy_attack_pollution_consumption_modifier",
          "type": "double",
          "optional": false
        }
      ]
    }
  },
  "RailRemnantsBendingType": {
    "name": "RailRemnantsBendingType",
    "type": "string",
    "link": "/Prototype/RailRemnants#bending_type",
    "value": {
      "straight": "",
      "turn": ""
    }
  },
  "Animation4WayValue": {
    "name": "Animation4WayValue",
    "type": "table",
    "link": "/Types/Animation4Way",
    "value": {
      "properties": [
        {
          "name": "north",
          "type": "AnimationType",
          "description": "Optional. If omitted, the game will not look for any other directions and instead try to load the whole definition as one \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e and apply it to all directions.",
          "optional": true
        },
        {
          "name": "east",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "south",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "west",
          "type": "AnimationType",
          "optional": true
        },
        {
          "name": "sheets",
          "type": "SpriteNWaySheet[]",
          "description": "Optional. If given, this is used instead of any other properties that may be present.",
          "optional": true
        },
        {
          "name": "sheet",
          "type": "SpriteNWaySheet",
          "description": "Optional. If given, and #sheets isnt present, this is used instead of any other properties that may be present.",
          "optional": true
        }
      ]
    }
  },
  "UnitSpawnDefinition": {
    "name": "UnitSpawnDefinition",
    "type": "table",
    "link": "/Types/UnitSpawnDefinition",
    "description": "The definition of a spawnable unit for a \u003ca href\u003d\"/Prototype/EnemySpawner\" title\u003d\"Prototype/EnemySpawner\"\u003ePrototype/EnemySpawner\u003c/a\u003e. It can be specified as a table with named or numbered keys, but not a mix of both.",
    "value": {
      "properties": [
        {
          "name": "unit",
          "type": "string",
          "description": "The name of a \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003ePrototype/Entity\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "spawn_points",
          "type": "SpawnPoint[]",
          "description": "Array of evolution and probability info. The evolution_factor must be ascending from entry to entry.",
          "optional": false
        }
      ]
    }
  },
  "ExplosionDefinition": {
    "name": "ExplosionDefinition",
    "type": "alias",
    "link": "/Types/ExplosionDefinition",
    "description": "Used by \u003ca href\u003d\"/Prototype/EntityWithHealth#dying_explosion\" title\u003d\"Prototype/EntityWithHealth\"\u003ePrototype/EntityWithHealth#dying_explosion\u003c/a\u003e. This is either a \u003ca href\u003d\"/Types/string\" title\u003d\"Types/string\"\u003eTypes/string\u003c/a\u003e that is the name of a \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003ePrototype/Entity\u003c/a\u003e, or a table with the below properties.",
    "value": "string|ExplosionDefinitionValue"
  },
  "TechnologyUnit": {
    "name": "TechnologyUnit",
    "type": "table",
    "link": "/Prototype/Technology#unit",
    "value": {
      "properties": [
        {
          "name": "count",
          "type": "double",
          "description": "How many units are needed. Must be positive. May not be specified if count_formula is specified.",
          "optional": true
        },
        {
          "name": "count_formula",
          "type": "string",
          "description": "Formula that specifies how many units are needed per level of the infinite technology. May not be specified if count is specified. The formula is executed following the BODMAS order.",
          "optional": true
        },
        {
          "name": "time",
          "type": "double",
          "description": "How much time is needed per one unit, in lab with crafting speed 1 it is the number of seconds.",
          "optional": true
        },
        {
          "name": "ingredients",
          "type": "IngredientPrototype[]",
          "description": "list of ingredients needed for one unit of research. The item types must all be \u003ca href\u003d\"/Prototype/Tool\" title\u003d\"Prototype/Tool\"\u003etools\u003c/a\u003e.",
          "optional": true
        }
      ]
    }
  },
  "ModuleSpecification": {
    "name": "ModuleSpecification",
    "type": "table",
    "link": "/Types/ModuleSpecification",
    "description": "The number of module slots in this entity, and their icon positions.",
    "value": {
      "properties": [
        {
          "name": "module_slots",
          "type": "ItemStackIndex",
          "description": "The number of module slots in this entity.",
          "default": "0",
          "optional": true
        },
        {
          "name": "module_info_max_icons_per_row",
          "type": "uint8",
          "description": "Default: width of entity selection box / 0.75",
          "optional": true
        },
        {
          "name": "module_info_max_icon_rows",
          "type": "uint8",
          "description": "Default: width of entity selection box / 1.5",
          "optional": true
        },
        {
          "name": "module_info_icon_shift",
          "type": "vector",
          "description": "Default: {0, 0.7}",
          "optional": true
        },
        {
          "name": "module_info_icon_scale",
          "type": "float",
          "default": "0.5",
          "optional": true
        },
        {
          "name": "module_info_separation_multiplier",
          "type": "float",
          "default": "1.1",
          "optional": true
        },
        {
          "name": "module_info_multi_row_initial_height_modifier",
          "type": "float",
          "default": "-0.1",
          "optional": true
        }
      ]
    }
  },
  "RocketSiloRocketResultItems": {
    "name": "RocketSiloRocketResultItems",
    "type": "table",
    "link": "/Prototype/RocketSiloRocket#result_items",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "Name of an item.",
          "optional": false
        },
        {
          "name": "amount",
          "type": "ItemCountType",
          "description": "Must be positive.",
          "optional": false
        },
        {
          "name": "required_item",
          "type": "string",
          "description": "Name of an item.",
          "optional": true
        }
      ]
    }
  },
  "AnimationType": {
    "name": "AnimationType",
    "type": "table",
    "link": "/Types/Animation",
    "description": "\u003cp\u003eSpecifies animation that can be used in the game.\u003c/p\u003e\u003cp\u003eNote that if any frame of the animation is specified from the same source as any other \u003ca href\u003d\"/Types/Sprite\" title\u003d\"Types/Sprite\"\u003eTypes/Sprite\u003c/a\u003e or frame of other animation, it will be shared.\u003c/p\u003e",
    "value": {
      "properties": [
        {
          "name": "layers",
          "type": "AnimationType[]",
          "description": "\u003cp\u003eIf this property is present, all Animation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Animation definition) in the array may also have the \u003ccode\u003elayers\u003c/code\u003e property.\u003c/p\u003e\u003cp\u003eIf this property is present, all other properties are ignored and the mandatory properties do not have to be defined.\u003c/p\u003e\u003cp\u003eLayers may not be an empty table.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "hr_version",
          "type": "AnimationType",
          "description": "If this property exists and high resolution sprites are turned on, its contents are used to load the Animation.",
          "optional": true
        },
        {
          "name": "filename",
          "type": "FileName",
          "description": "Mandatory if \u003ccode\u003e\"stripes\"\u003c/code\u003e is not specified. ",
          "optional": true
        },
        {
          "name": "priority",
          "type": "SpritePriority",
          "default": "medium",
          "optional": true
        },
        {
          "name": "flags",
          "type": "SpriteFlags",
          "optional": true
        },
        {
          "name": "size",
          "type": "SpriteSizeType[]|SpriteSizeType",
          "description": "\u003cp\u003eThe width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.\u003c/p\u003e\u003cp\u003eWidth and height may only be in the range of 0-8192.\u003c/p\u003e",
          "optional": true
        },
        {
          "name": "width",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Width of one frame in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "height",
          "type": "SpriteSizeType",
          "description": "Mandatory if \u003ccode\u003esize\u003c/code\u003e is not given. Height of one frame in pixels, from 0-8192.",
          "optional": true
        },
        {
          "name": "x",
          "type": "SpriteSizeType",
          "description": "Horizontal position of the animation in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "y",
          "type": "SpriteSizeType",
          "description": "Vertical position of the animation in the source file in pixels.",
          "default": "0",
          "optional": true
        },
        {
          "name": "position",
          "type": "SpriteSizeType[]",
          "description": "Loaded only when \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e are both 0. The first member of the array is x and the second is y.",
          "optional": true
        },
        {
          "name": "shift",
          "type": "vector",
          "optional": true
        },
        {
          "name": "scale",
          "type": "double",
          "description": "Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).",
          "default": "1",
          "optional": true
        },
        {
          "name": "draw_as_shadow",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "mipmap_count",
          "type": "uint8",
          "description": "Only loaded if this is an icon (has flag \"group\u003dicon\" or \"group\u003dgui\").",
          "default": "0",
          "optional": true
        },
        {
          "name": "apply_runtime_tint",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "tint",
          "type": "Color",
          "optional": true
        },
        {
          "name": "blend_mode",
          "type": "BlendMode",
          "default": "normal",
          "optional": true
        },
        {
          "name": "load_in_minimal_mode",
          "type": "bool",
          "description": "Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (\u003ca rel\u003d\"nofollow\" class\u003d\"external text\" href\u003d\"https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png\"\u003eExample\u003c/a\u003e). If you are a modder, you can just ignore this property.",
          "default": "false",
          "optional": true
        },
        {
          "name": "premul_alpha",
          "type": "bool",
          "description": "Whether alpha should be premultiplied.",
          "default": "true",
          "optional": true
        },
        {
          "name": "generate_sdf",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "run_mode",
          "type": "AnimationRunMode",
          "default": "forward",
          "optional": true
        },
        {
          "name": "frame_count",
          "type": "uint32",
          "description": "Can\u0027t be 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "animation_speed",
          "type": "float",
          "description": "Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.",
          "default": "0",
          "optional": true
        },
        {
          "name": "max_advance",
          "type": "float",
          "optional": true
        },
        {
          "name": "repeat_count",
          "type": "uint8",
          "description": "Can\u0027t be 0.",
          "default": "1",
          "optional": true
        },
        {
          "name": "dice",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "dice_x",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "dice_y",
          "type": "uint8",
          "optional": true
        },
        {
          "name": "frame_sequence",
          "type": "AnimationFrameSequence",
          "optional": true
        },
        {
          "name": "stripes",
          "type": "Stripe[]",
          "optional": true
        }
      ]
    }
  },
  "PipeToGroundPictures": {
    "name": "PipeToGroundPictures",
    "type": "table",
    "link": "/Prototype/PipeToGround#pictures",
    "value": {
      "properties": [
        {
          "name": "down",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "up",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "left",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "right",
          "type": "SpriteType",
          "optional": false
        }
      ]
    }
  },
  "TransportBeltBeltAnimationSet": {
    "name": "TransportBeltBeltAnimationSet",
    "type": "table",
    "link": "/Prototype/TransportBelt#belt_animation_set",
    "value": {
      "properties": [
        {
          "name": "east_to_north_index",
          "type": "uint8",
          "default": "5",
          "optional": true
        },
        {
          "name": "north_to_east_index",
          "type": "uint8",
          "default": "6",
          "optional": true
        },
        {
          "name": "west_to_north_index",
          "type": "uint8",
          "default": "7",
          "optional": true
        },
        {
          "name": "north_to_west_index",
          "type": "uint8",
          "default": "8",
          "optional": true
        },
        {
          "name": "south_to_east_index",
          "type": "uint8",
          "default": "9",
          "optional": true
        },
        {
          "name": "east_to_south_index",
          "type": "uint8",
          "default": "10",
          "optional": true
        },
        {
          "name": "south_to_west_index",
          "type": "uint8",
          "default": "11",
          "optional": true
        },
        {
          "name": "west_to_south_index",
          "type": "uint8",
          "default": "12",
          "optional": true
        }
      ],
      "parent": "TransportBeltConnectableBeltAnimationSet"
    }
  },
  "ClusterTriggerItem": {
    "name": "ClusterTriggerItem",
    "type": "table",
    "link": "/Types/ClusterTriggerItem",
    "value": {
      "properties": [
        {
          "name": "cluster_count",
          "type": "double",
          "description": "Must be at least 2.",
          "optional": false
        },
        {
          "name": "distance",
          "type": "float",
          "optional": false
        },
        {
          "name": "distance_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        }
      ],
      "parent": "TriggerItem"
    }
  },
  "Sprite4Way": {
    "name": "Sprite4Way",
    "type": "alias",
    "link": "/Types/Sprite4Way",
    "value": "SpriteType|Sprite4WayValue[]"
  },
  "CyclicSound": {
    "name": "CyclicSound",
    "type": "table",
    "link": "/Types/CyclicSound",
    "value": {
      "properties": [
        {
          "name": "begin_sound",
          "type": "SoundType",
          "optional": true
        },
        {
          "name": "middle_sound",
          "type": "SoundType",
          "optional": true
        },
        {
          "name": "end_sound",
          "type": "SoundType",
          "optional": true
        }
      ]
    }
  },
  "PositionValue": {
    "name": "PositionValue",
    "type": "table",
    "link": "/Types/PositionValue",
    "value": {
      "properties": [
        {
          "name": "x",
          "type": "float",
          "optional": false
        },
        {
          "name": "y",
          "type": "float",
          "optional": false
        }
      ]
    }
  },
  "UtilityConstantsBonusGuiOrdering": {
    "name": "UtilityConstantsBonusGuiOrdering",
    "type": "table",
    "link": "/Prototype/UtilityConstants",
    "value": {
      "properties": [
        {
          "name": "artillery_range",
          "type": "Order",
          "optional": false
        },
        {
          "name": "worker_robots",
          "type": "Order",
          "optional": false
        },
        {
          "name": "character",
          "type": "Order",
          "optional": false
        },
        {
          "name": "follower_robots",
          "type": "Order",
          "optional": false
        },
        {
          "name": "research_speed",
          "type": "Order",
          "optional": false
        },
        {
          "name": "inserter",
          "type": "Order",
          "optional": false
        },
        {
          "name": "stack_inserter",
          "type": "Order",
          "optional": false
        },
        {
          "name": "turret_attack",
          "type": "Order",
          "optional": false
        },
        {
          "name": "mining_productivity",
          "type": "Order",
          "optional": false
        },
        {
          "name": "train_braking_force",
          "type": "Order",
          "optional": false
        }
      ]
    }
  },
  "MouseCursorSystemCursor": {
    "name": "MouseCursorSystemCursor",
    "type": "string",
    "link": "/Prototype/MouseCursor#system_cursor",
    "value": {
      "arrow": "",
      "i-beam": "",
      "crosshair": "",
      "wait-arrow": "",
      "size-all": "",
      "no": "",
      "hand": ""
    }
  },
  "float": {
    "name": "float",
    "type": "alias",
    "link": "/Types/float",
    "value": "number"
  },
  "MapSettingsEnemyEvolution": {
    "name": "MapSettingsEnemyEvolution",
    "type": "table",
    "link": "/Prototype/MapSettings#enemy_evolution",
    "value": {
      "properties": [
        {
          "name": "enabled",
          "type": "bool",
          "optional": false
        },
        {
          "name": "time_factor",
          "type": "double",
          "description": "Percentual increase in the evolution factor for every second (60 ticks)",
          "optional": false
        },
        {
          "name": "destroy_factor",
          "type": "double",
          "description": "Percentual increase in the evolution factor for every destroyed spawner",
          "optional": false
        },
        {
          "name": "pollution_factor",
          "type": "double",
          "description": "Percentual increase in the evolution factor for 1 pollution unit",
          "optional": false
        }
      ]
    }
  },
  "ExplosionDefinitionValue": {
    "name": "ExplosionDefinitionValue",
    "type": "table",
    "link": "/Types/ExplosionDefinition",
    "value": {
      "properties": [
        {
          "name": "name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/Entity\" title\u003d\"Prototype/Entity\"\u003ePrototype/Entity\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "offset",
          "type": "vector",
          "optional": true
        }
      ]
    }
  },
  "ProjectileAttackParameters": {
    "name": "ProjectileAttackParameters",
    "type": "table",
    "link": "/Types/ProjectileAttackParameters",
    "value": {
      "properties": [
        {
          "name": "projectile_center",
          "type": "vector",
          "optional": true
        },
        {
          "name": "projectile_creation_distance",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "shell_particle",
          "type": "CircularParticleCreationSpecification",
          "optional": true
        },
        {
          "name": "projectile_creation_parameters",
          "type": "CircularParticleCreationSpecification",
          "optional": true
        },
        {
          "name": "projectile_orientation_offset",
          "type": "float",
          "default": "0",
          "optional": true
        }
      ],
      "parent": "BaseAttackParameters"
    }
  },
  "FluidBoxProductionType": {
    "name": "FluidBoxProductionType",
    "type": "string",
    "link": "/Types/FluidBox#production_type",
    "value": {
      "None": "",
      "input": "",
      "input-output": "",
      "output": ""
    }
  },
  "EquipmentShape": {
    "name": "EquipmentShape",
    "type": "prototype",
    "link": "/Types/EquipmentShape",
    "description": "The shape and dimensions of an equipment module.",
    "value": {
      "full": "EquipmentShapeBase",
      "manual": "EquipmentShapeManual"
    }
  },
  "RadiusVisualisationSpecification": {
    "name": "RadiusVisualisationSpecification",
    "type": "table",
    "link": "/Types/RadiusVisualisationSpecification",
    "description": "Sprite to be shown around the entity when it is selected/held in the cursor.",
    "value": {
      "properties": [
        {
          "name": "sprite",
          "type": "SpriteType",
          "optional": false
        },
        {
          "name": "distance",
          "type": "double",
          "description": "Must be \u003e 0.",
          "default": "0",
          "optional": false
        },
        {
          "name": "offset",
          "type": "vector",
          "optional": false
        },
        {
          "name": "draw_in_cursor",
          "type": "bool",
          "default": "true",
          "optional": false
        },
        {
          "name": "draw_on_selection",
          "type": "bool",
          "default": "true",
          "optional": false
        }
      ]
    }
  },
  "EnergySource": {
    "name": "EnergySource",
    "type": "prototype",
    "link": "/Types/EnergySource",
    "value": {
      "electric": "EnergySourceElectric",
      "burner": "EnergySourceBurner",
      "heat": "EnergySourceHeat",
      "fluid": "",
      "void": "EnergySourceBase"
    }
  },
  "AutoplaceControlCategory": {
    "name": "AutoplaceControlCategory",
    "type": "string",
    "link": "/Prototype/AutoplaceControl#category",
    "value": {
      "resource": "",
      "terrain": "",
      "enemy": ""
    }
  },
  "Animation4Way": {
    "name": "Animation4Way",
    "type": "alias",
    "link": "/Types/Animation4Way",
    "description": "A map of animations for all 4 directions of the entity, or one \u003ca href\u003d\"/Types/Animation\" title\u003d\"Types/Animation\"\u003eTypes/Animation\u003c/a\u003e that is used for all directions.",
    "value": "Animation4WayValue|AnimationType"
  },
  "CreateFireTriggerEffectItem": {
    "name": "CreateFireTriggerEffectItem",
    "type": "table",
    "link": "/Types/CreateFireTriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "initial_ground_flame_count",
          "type": "uint8",
          "optional": true
        }
      ],
      "parent": "CreateEntityTriggerEffectItem"
    }
  },
  "TriggerEffectItem": {
    "name": "TriggerEffectItem",
    "type": "table",
    "link": "/Types/TriggerEffectItem",
    "value": {
      "properties": [
        {
          "name": "repeat_count",
          "type": "uint16",
          "default": "1",
          "optional": true
        },
        {
          "name": "repeat_count_deviation",
          "type": "uint16",
          "default": "0",
          "optional": true
        },
        {
          "name": "probability",
          "type": "float",
          "description": "Must be greater than 0 and less than or equal to 1.",
          "default": "1",
          "optional": true
        },
        {
          "name": "affects_target",
          "type": "bool",
          "default": "false",
          "optional": true
        },
        {
          "name": "show_in_tooltip",
          "type": "bool",
          "default": "true",
          "optional": true
        },
        {
          "name": "damage_type_filters",
          "type": "DamageTypeFilters",
          "description": "Guaranteed to work with \u003ca href\u003d\"/Prototype/EntityWithHealth#damaged_trigger_effect\" title\u003d\"Prototype/EntityWithHealth\"\u003ePrototype/EntityWithHealth#damaged_trigger_effect\u003c/a\u003e and \u003ca href\u003d\"/Prototype/EntityWithHealth#dying_trigger_effect\" title\u003d\"Prototype/EntityWithHealth\"\u003ePrototype/EntityWithHealth#dying_trigger_effect\u003c/a\u003e, unknown if it works with other properties that use \u003ca href\u003d\"/Types/TriggerEffect\" title\u003d\"Types/TriggerEffect\"\u003eTypes/TriggerEffect\u003c/a\u003e.",
          "optional": true
        }
      ]
    }
  },
  "MapSettingsDifficultySettingsResearchQueueSetting": {
    "name": "MapSettingsDifficultySettingsResearchQueueSetting",
    "type": "string",
    "link": "/Prototype/MapSettings#difficulty_settings",
    "value": {
      "always": "",
      "after-victory": "",
      "never": ""
    }
  },
  "TriggerEffect": {
    "name": "TriggerEffect",
    "type": "alias",
    "link": "/Types/TriggerEffect",
    "value": "TriggerEffectValue[]"
  },
  "WireConnectionPoint": {
    "name": "WireConnectionPoint",
    "type": "table",
    "link": "/Types/WireConnectionPoint",
    "description": "Definition of a point where circuit network wires can be connected to an entity.",
    "value": {
      "properties": [
        {
          "name": "wire",
          "type": "WirePosition",
          "optional": true
        },
        {
          "name": "shadow",
          "type": "WirePosition",
          "optional": true
        }
      ]
    }
  },
  "RailRemnantsPictures": {
    "name": "RailRemnantsPictures",
    "type": "table",
    "link": "/Prototype/RailRemnants#pictures",
    "value": {
      "properties": [
        {
          "name": "straight_rail_horizontal",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "straight_rail_vertical",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "straight_rail_diagonal_left_top",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "straight_rail_diagonal_right_top",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "straight_rail_diagonal_right_bottom",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "straight_rail_diagonal_left_bottom",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_vertical_left_top",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_vertical_right_top",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_vertical_right_bottom",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_vertical_left_bottom",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_horizontal_left_top",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_horizontal_right_top",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_horizontal_right_bottom",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "curved_rail_horizontal_left_bottom",
          "type": "RailPieceLayers",
          "optional": false
        },
        {
          "name": "rail_endings",
          "type": "Sprite8Way",
          "optional": false
        }
      ]
    }
  },
  "CreateTrivialSmokeEffectItem": {
    "name": "CreateTrivialSmokeEffectItem",
    "type": "table",
    "link": "/Types/CreateTrivialSmokeEffectItem",
    "description": "Extends \u003ca href\u003d\"/Types/TriggerEffectItem\" title\u003d\"Types/TriggerEffectItem\"\u003eTypes/TriggerEffectItem\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "smoke_name",
          "type": "string",
          "description": "Name of a \u003ca href\u003d\"/Prototype/TrivialSmoke\" title\u003d\"Prototype/TrivialSmoke\"\u003ePrototype/TrivialSmoke\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "offset_deviation",
          "type": "BoundingBox",
          "optional": true
        },
        {
          "name": "offsets",
          "type": "vector[]",
          "optional": true
        },
        {
          "name": "initial_height",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "max_radius",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed",
          "type": "vector",
          "optional": true
        },
        {
          "name": "speed_multiplier",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_multiplier_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_speed",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "starting_frame_speed_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_from_center",
          "type": "float",
          "default": "0",
          "optional": true
        },
        {
          "name": "speed_from_center_deviation",
          "type": "float",
          "default": "0",
          "optional": true
        }
      ],
      "parent": "TriggerEffectItem"
    }
  },
  "Trigger": {
    "name": "Trigger",
    "type": "prototype",
    "link": "/Types/Trigger",
    "value": {
      "direct": "Trigger",
      "area": "AreaTriggerItem",
      "line": "LineTriggerItem",
      "cluster": "ClusterTriggerItem"
    }
  },
  "StreamAttackParameters": {
    "name": "StreamAttackParameters",
    "type": "table",
    "link": "/Types/StreamAttackParameters",
    "value": {
      "properties": [
        {
          "name": "fluid_consumption",
          "type": "float",
          "default": "0.0",
          "optional": true
        },
        {
          "name": "gun_barrel_length",
          "type": "float",
          "default": "0.0",
          "optional": true
        },
        {
          "name": "projectile_creation_parameters",
          "type": "CircularProjectileCreationSpecification",
          "optional": true
        },
        {
          "name": "gun_center_shift",
          "type": "vector|StreamAttackParametersGunCenterShift",
          "optional": true
        },
        {
          "name": "fluids",
          "type": "StreamAttackParametersFluid[]",
          "description": "Controls which fluids can fuel this stream attack and their potential damage bonuses.",
          "optional": true
        }
      ],
      "parent": "BaseAttackParameters"
    }
  },
  "ArtilleryRemoteCapsuleAction": {
    "name": "ArtilleryRemoteCapsuleAction",
    "type": "table",
    "link": "/Types/ArtilleryRemoteCapsuleAction",
    "description": "Used by \u003ca href\u003d\"/Types/CapsuleAction\" title\u003d\"Types/CapsuleAction\"\u003eTypes/CapsuleAction\u003c/a\u003e.",
    "value": {
      "properties": [
        {
          "name": "flare",
          "type": "string",
          "description": "Name of \u003ca href\u003d\"/Prototype/ArtilleryFlare\" title\u003d\"Prototype/ArtilleryFlare\"\u003ePrototype/ArtilleryFlare\u003c/a\u003e.",
          "optional": false
        },
        {
          "name": "play_sound_on_failure",
          "type": "bool",
          "default": "true",
          "optional": false
        }
      ]
    }
  }
}
