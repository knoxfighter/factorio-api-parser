---When a character dies, this entity will immediately respawn the character at the entities location, so there is no respawn time. If there are multiple player ports in the world, the character will respawn at the nearest player port to their death location.
---@class PlayerPort
local PlayerPort = {}

---@optional false
---@type AnimationType
PlayerPort.animation = nil

---@default true
---@optional true
---@type bool
PlayerPort.alert_when_damaged = nil

---@optional true
---@type AttackReaction
PlayerPort.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
PlayerPort.corpse = nil

---@default true
---@optional true
---@type bool
PlayerPort.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
PlayerPort.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
PlayerPort.dying_explosion = nil

---@optional true
---@type TriggerEffect
PlayerPort.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
PlayerPort.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
PlayerPort.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
PlayerPort.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
PlayerPort.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
PlayerPort.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
PlayerPort.max_health = nil

---@default false
---@optional true
---@type bool
PlayerPort.random_corpse_variation = nil

---@optional true
---@type SoundType
PlayerPort.repair_sound = nil

---@default 1
---@optional true
---@type float
PlayerPort.repair_speed_modifier = nil

---@optional true
---@type Resistances
PlayerPort.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
PlayerPort.additional_pastable_entities = nil

---@optional true
---@type float
PlayerPort.alert_icon_scale = nil

---@optional true
---@type vector
PlayerPort.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
PlayerPort.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
PlayerPort.autoplace = nil

---@default 0
---@optional true
---@type double
PlayerPort.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
PlayerPort.build_sound = nil

---@optional true
---@type SoundType
PlayerPort.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
PlayerPort.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
PlayerPort.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
PlayerPort.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
PlayerPort.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
PlayerPort.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
PlayerPort.emissions_per_second = nil

---@optional true
---@type Color
PlayerPort.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
PlayerPort.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
PlayerPort.flags = nil

---@optional true
---@type Color
PlayerPort.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
PlayerPort.hit_visualization_box = nil

---@optional true
---@type Color
PlayerPort.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
PlayerPort.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
PlayerPort.minable = nil

---@optional true
---@type SoundType
PlayerPort.mined_sound = nil

---@optional true
---@type SoundType
PlayerPort.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
PlayerPort.next_upgrade = nil

---@optional true
---@type SoundType
PlayerPort.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
PlayerPort.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
PlayerPort.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
PlayerPort.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
PlayerPort.remove_decoratives = nil

---@optional true
---@type SoundType
PlayerPort.rotated_sound = nil

---@default true
---@optional true
---@type bool
PlayerPort.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
PlayerPort.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
PlayerPort.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
PlayerPort.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
PlayerPort.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
PlayerPort.subgroup = nil

---@optional true
---@type uint32
PlayerPort.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
PlayerPort.tile_width = nil

---@optional true
---@type TriggerTargetMask
PlayerPort.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
PlayerPort.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
PlayerPort.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
PlayerPort.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
PlayerPort.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
PlayerPort.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
PlayerPort.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
PlayerPort.order = nil

---Path to the icon file.
---@optional true
---@type FileName
PlayerPort.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
PlayerPort.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
PlayerPort.icon_size = nil

---@default 0
---@optional true
---@type uint8
PlayerPort.icon_mipmaps = nil

---Entity that spawns in water tiles, which can be mined. Moves around unless deactived with entity.active = false.
---@class Fish
local Fish = {}

---@optional false
---@type SpriteVariations
Fish.pictures = nil

---@default true
---@optional true
---@type bool
Fish.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Fish.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Fish.corpse = nil

---@default true
---@optional true
---@type bool
Fish.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Fish.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Fish.dying_explosion = nil

---@optional true
---@type TriggerEffect
Fish.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Fish.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Fish.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Fish.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Fish.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Fish.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Fish.max_health = nil

---@default false
---@optional true
---@type bool
Fish.random_corpse_variation = nil

---@optional true
---@type SoundType
Fish.repair_sound = nil

---@default 1
---@optional true
---@type float
Fish.repair_speed_modifier = nil

---@optional true
---@type Resistances
Fish.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Fish.additional_pastable_entities = nil

---@optional true
---@type float
Fish.alert_icon_scale = nil

---@optional true
---@type vector
Fish.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Fish.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Fish.autoplace = nil

---@default 0
---@optional true
---@type double
Fish.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Fish.build_sound = nil

---@optional true
---@type SoundType
Fish.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Fish.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Fish.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Fish.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Fish.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Fish.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Fish.emissions_per_second = nil

---@optional true
---@type Color
Fish.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Fish.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Fish.flags = nil

---@optional true
---@type Color
Fish.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Fish.hit_visualization_box = nil

---@optional true
---@type Color
Fish.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Fish.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Fish.minable = nil

---@optional true
---@type SoundType
Fish.mined_sound = nil

---@optional true
---@type SoundType
Fish.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Fish.next_upgrade = nil

---@optional true
---@type SoundType
Fish.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Fish.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Fish.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Fish.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Fish.remove_decoratives = nil

---@optional true
---@type SoundType
Fish.rotated_sound = nil

---@default true
---@optional true
---@type bool
Fish.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Fish.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Fish.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Fish.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Fish.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Fish.subgroup = nil

---@optional true
---@type uint32
Fish.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Fish.tile_width = nil

---@optional true
---@type TriggerTargetMask
Fish.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Fish.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Fish.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Fish.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Fish.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Fish.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Fish.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Fish.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Fish.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Fish.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Fish.icon_size = nil

---@default 0
---@optional true
---@type uint8
Fish.icon_mipmaps = nil

---null
---@class ItemWithTags
local ItemWithTags = {}

---The default label color the item will use.
---@optional true
---@type Color
ItemWithTags.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
ItemWithTags.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
ItemWithTags.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
ItemWithTags.burnt_result = nil

---@optional true
---@type SoundType
ItemWithTags.close_sound = nil

---@optional true
---@type IconData[]
ItemWithTags.dark_background_icons = nil

---@optional true
---@type FileName
ItemWithTags.dark_background_icon = nil

---@optional true
---@type ItemCountType
ItemWithTags.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
ItemWithTags.flags = nil

---@default 1.0
---@optional true
---@type double
ItemWithTags.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
ItemWithTags.fuel_category = nil

---@default 1.0
---@optional true
---@type double
ItemWithTags.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
ItemWithTags.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
ItemWithTags.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
ItemWithTags.fuel_value = nil

---@optional true
---@type SoundType
ItemWithTags.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
ItemWithTags.pictures = nil

---@optional true
---@type PlaceAsTile
ItemWithTags.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
ItemWithTags.place_result = nil

---@optional true
---@type string
ItemWithTags.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
ItemWithTags.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
ItemWithTags.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
ItemWithTags.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
ItemWithTags.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemWithTags.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemWithTags.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemWithTags.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemWithTags.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemWithTags.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemWithTags.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemWithTags.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemWithTags.icon_mipmaps = nil

---The Pump is used to transfer liquids or gas between tanks, and pipes.
---@class Pump
local Pump = {}

---The animation for the pump.
---@optional false
---@type Animation4Way
Pump.animations = nil

---The type of energy the pump uses.
---@optional false
---@type EnergySource
Pump.energy_source = nil

---The amount of energy the pump uses.
---@optional false
---@type Energy
Pump.energy_usage = nil

---The area of the entity where fluid inputs and outputs.
---@optional false
---@type FluidBox
Pump.fluid_box = nil

---The amount of fluid this pump transfers per tick.
---@optional false
---@type double
Pump.pumping_speed = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
Pump.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
Pump.circuit_wire_connection_points = nil

---@default 0
---@optional true
---@type double
Pump.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
Pump.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Pump.draw_copper_wires = nil

---@optional true
---@type Animation4Way
Pump.fluid_animation = nil

---@default 0.0625
---@optional true
---@type double
Pump.fluid_wagon_connector_alignment_tolerance = nil

---@default 1
---@optional true
---@type uint8
Pump.fluid_wagon_connector_frame_count = nil

---Needs <code>load_animations</code> and <code>unload_animations</code> keys, both with a <a href="/Types/PumpConnectorGraphics" title="Types/PumpConnectorGraphics">PumpConnectorGraphics</a> as the value.
---@optional true
---@type PumpConnectorGraphics[]
Pump.fluid_wagon_connector_graphics = nil

---@default 0.015625
---@optional true
---@type double
Pump.fluid_wagon_connector_speed = nil

---@optional true
---@type Sprite4Way
Pump.glass_pictures = nil

---@default true
---@optional true
---@type bool
Pump.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Pump.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Pump.corpse = nil

---@default true
---@optional true
---@type bool
Pump.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Pump.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Pump.dying_explosion = nil

---@optional true
---@type TriggerEffect
Pump.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Pump.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Pump.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Pump.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Pump.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Pump.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Pump.max_health = nil

---@default false
---@optional true
---@type bool
Pump.random_corpse_variation = nil

---@optional true
---@type SoundType
Pump.repair_sound = nil

---@default 1
---@optional true
---@type float
Pump.repair_speed_modifier = nil

---@optional true
---@type Resistances
Pump.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Pump.additional_pastable_entities = nil

---@optional true
---@type float
Pump.alert_icon_scale = nil

---@optional true
---@type vector
Pump.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Pump.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Pump.autoplace = nil

---@default 0
---@optional true
---@type double
Pump.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Pump.build_sound = nil

---@optional true
---@type SoundType
Pump.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Pump.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Pump.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Pump.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Pump.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Pump.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Pump.emissions_per_second = nil

---@optional true
---@type Color
Pump.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Pump.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Pump.flags = nil

---@optional true
---@type Color
Pump.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Pump.hit_visualization_box = nil

---@optional true
---@type Color
Pump.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Pump.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Pump.minable = nil

---@optional true
---@type SoundType
Pump.mined_sound = nil

---@optional true
---@type SoundType
Pump.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Pump.next_upgrade = nil

---@optional true
---@type SoundType
Pump.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Pump.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Pump.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Pump.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Pump.remove_decoratives = nil

---@optional true
---@type SoundType
Pump.rotated_sound = nil

---@default true
---@optional true
---@type bool
Pump.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Pump.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Pump.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Pump.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Pump.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Pump.subgroup = nil

---@optional true
---@type uint32
Pump.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Pump.tile_width = nil

---@optional true
---@type TriggerTargetMask
Pump.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Pump.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Pump.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Pump.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Pump.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Pump.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Pump.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Pump.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Pump.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Pump.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Pump.icon_size = nil

---@default 0
---@optional true
---@type uint8
Pump.icon_mipmaps = nil

---A wind sound.
---@class WindSound
local WindSound = {}

---Unique textual identification of the prototype.
---@optional false
---@type string
WindSound.name = nil

---The sound file and volume.
---@optional false
---@type SoundType
WindSound.sound = nil

---A turret that consumes fluid as ammo.
---@class FluidTurret
local FluidTurret = {}

---@optional false
---@type float
FluidTurret.activation_buffer_ratio = nil

---@optional false
---@type FluidBox
FluidTurret.fluid_box = nil

---@optional false
---@type float
FluidTurret.fluid_buffer_input_flow = nil

---@optional false
---@type float
FluidTurret.fluid_buffer_size = nil

---@optional true
---@type AnimatedVector
FluidTurret.attacking_muzzle_animation_shift = nil

---@optional true
---@type AnimatedVector
FluidTurret.ending_attack_muzzle_animation_shift = nil

---@optional true
---@type Sprite4Way
FluidTurret.enough_fuel_indicator_picture = nil

---@optional true
---@type AnimatedVector
FluidTurret.folded_muzzle_animation_shift = nil

---@optional true
---@type AnimatedVector
FluidTurret.folding_muzzle_animation_shift = nil

---@optional true
---@type LightDefinition
FluidTurret.indicator_light = nil

---@optional true
---@type AnimationType
FluidTurret.muzzle_animation = nil

---@optional true
---@type LightDefinition
FluidTurret.muzzle_light = nil

---@optional true
---@type Sprite4Way
FluidTurret.not_enough_fuel_indicator_picture = nil

---@optional true
---@type SpriteType
FluidTurret.out_of_ammo_alert_icon = nil

---@optional true
---@type AnimatedVector
FluidTurret.prepared_muzzle_animation_shift = nil

---@optional true
---@type AnimatedVector
FluidTurret.preparing_muzzle_animation_shift = nil

---@optional true
---@type AnimatedVector
FluidTurret.starting_attack_muzzle_animation_shift = nil

---Requires ammo_type in attack_parameters.
---@optional false
---@type AttackParameters
FluidTurret.attack_parameters = nil

---@optional false
---@type double
FluidTurret.call_for_help_radius = nil

---@optional false
---@type RotatedAnimation4Way
FluidTurret.folded_animation = nil

---@default true
---@optional true
---@type bool
FluidTurret.alert_when_attacking = nil

---@default false
---@optional true
---@type bool
FluidTurret.allow_turning_when_starting_attack = nil

---@default false
---@optional true
---@type bool
FluidTurret.attack_from_start_frame = nil

---@optional true
---@type TriggerTargetMask
FluidTurret.attack_target_mask = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.attacking_animation = nil

---@default 1
---@optional true
---@type float
FluidTurret.attacking_speed = nil

---@optional true
---@type Animation4Way
FluidTurret.base_picture = nil

---@default lower-object
---@optional true
---@type RenderLayer
FluidTurret.base_picture_render_layer = nil

---@default 0
---@optional true
---@type uint8
FluidTurret.base_picture_secondary_draw_order = nil

---The name of an entity. Note that this overrides how EntityWithHealth loads the corpse, forcing it to be a string instead of an array of strings.
---@optional true
---@type string
FluidTurret.corpse = nil

---@optional true
---@type SoundType
FluidTurret.dying_sound = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.ending_attack_animation = nil

---@default 1
---@optional true
---@type float
FluidTurret.ending_attack_speed = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.energy_glow_animation = nil

---@default 1
---@optional true
---@type float
FluidTurret.folded_speed = nil

---@default 1
---@optional true
---@type float
FluidTurret.folded_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.folding_animation = nil

---@optional true
---@type SoundType
FluidTurret.folding_sound = nil

---@default 1
---@optional true
---@type float
FluidTurret.folding_speed = nil

---The intensity of light in the form of <code>energy_glow_animation</code> drawn on top of <code>energy_glow_animation</code>.
---@default 0
---@optional true
---@type float
FluidTurret.glow_light_intensity = nil

---@default object
---@optional true
---@type RenderLayer
FluidTurret.gun_animation_render_layer = nil

---@default 0
---@optional true
---@type uint8
FluidTurret.gun_animation_secondary_draw_order = nil

---@optional true
---@type TriggerTargetMask
FluidTurret.ignore_target_mask = nil

---@optional true
---@type SpriteType
FluidTurret.integration = nil

---Default: The range defined in the <code>attack_parameters</code>
---@optional true
---@type double
FluidTurret.prepare_range = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.prepared_alternative_animation = nil

---@default 0
---@optional true
---@type float
FluidTurret.prepared_alternative_chance = nil

---@optional true
---@type SoundType
FluidTurret.prepared_alternative_sound = nil

---@default 1
---@optional true
---@type float
FluidTurret.prepared_alternative_speed = nil

---@default 1
---@optional true
---@type float
FluidTurret.prepared_alternative_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.prepared_animation = nil

---@optional true
---@type SoundType
FluidTurret.prepared_sound = nil

---@default 1
---@optional true
---@type float
FluidTurret.prepared_speed = nil

---@default 1
---@optional true
---@type float
FluidTurret.prepared_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.preparing_animation = nil

---@optional true
---@type SoundType
FluidTurret.preparing_sound = nil

---@default 1
---@optional true
---@type float
FluidTurret.preparing_speed = nil

---@default false
---@optional true
---@type bool
FluidTurret.random_animation_offset = nil

---@default 1
---@optional true
---@type float
FluidTurret.rotation_speed = nil

---@default false
---@optional true
---@type bool
FluidTurret.secondary_animation = nil

---@default false
---@optional true
---@type bool
FluidTurret.shoot_in_prepare_state = nil

---@optional true
---@type RotatedAnimation4Way
FluidTurret.starting_attack_animation = nil

---@optional true
---@type SoundType
FluidTurret.starting_attack_sound = nil

---@default 1
---@optional true
---@type float
FluidTurret.starting_attack_speed = nil

---@default false
---@optional true
---@type bool
FluidTurret.turret_base_has_direction = nil

---@default true
---@optional true
---@type bool
FluidTurret.alert_when_damaged = nil

---@optional true
---@type AttackReaction
FluidTurret.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
FluidTurret.corpse = nil

---@default true
---@optional true
---@type bool
FluidTurret.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
FluidTurret.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
FluidTurret.dying_explosion = nil

---@optional true
---@type TriggerEffect
FluidTurret.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
FluidTurret.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
FluidTurret.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
FluidTurret.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
FluidTurret.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
FluidTurret.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
FluidTurret.max_health = nil

---@default false
---@optional true
---@type bool
FluidTurret.random_corpse_variation = nil

---@optional true
---@type SoundType
FluidTurret.repair_sound = nil

---@default 1
---@optional true
---@type float
FluidTurret.repair_speed_modifier = nil

---@optional true
---@type Resistances
FluidTurret.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FluidTurret.additional_pastable_entities = nil

---@optional true
---@type float
FluidTurret.alert_icon_scale = nil

---@optional true
---@type vector
FluidTurret.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FluidTurret.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FluidTurret.autoplace = nil

---@default 0
---@optional true
---@type double
FluidTurret.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FluidTurret.build_sound = nil

---@optional true
---@type SoundType
FluidTurret.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FluidTurret.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FluidTurret.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FluidTurret.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FluidTurret.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FluidTurret.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FluidTurret.emissions_per_second = nil

---@optional true
---@type Color
FluidTurret.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FluidTurret.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FluidTurret.flags = nil

---@optional true
---@type Color
FluidTurret.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FluidTurret.hit_visualization_box = nil

---@optional true
---@type Color
FluidTurret.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FluidTurret.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FluidTurret.minable = nil

---@optional true
---@type SoundType
FluidTurret.mined_sound = nil

---@optional true
---@type SoundType
FluidTurret.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FluidTurret.next_upgrade = nil

---@optional true
---@type SoundType
FluidTurret.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FluidTurret.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FluidTurret.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FluidTurret.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FluidTurret.remove_decoratives = nil

---@optional true
---@type SoundType
FluidTurret.rotated_sound = nil

---@default true
---@optional true
---@type bool
FluidTurret.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FluidTurret.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FluidTurret.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FluidTurret.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FluidTurret.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FluidTurret.subgroup = nil

---@optional true
---@type uint32
FluidTurret.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FluidTurret.tile_width = nil

---@optional true
---@type TriggerTargetMask
FluidTurret.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FluidTurret.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FluidTurret.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FluidTurret.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FluidTurret.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FluidTurret.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FluidTurret.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FluidTurret.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FluidTurret.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FluidTurret.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FluidTurret.icon_size = nil

---@default 0
---@optional true
---@type uint8
FluidTurret.icon_mipmaps = nil

---A resource category. The built-in categories can be found <a href="/Data.raw#resource-category" title="Data.raw">here</a>. See <a href="/Prototype/ResourceEntity#category" title="Prototype/ResourceEntity">Prototype/ResourceEntity#category</a>.
---@class ResourceCategory
local ResourceCategory = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ResourceCategory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ResourceCategory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ResourceCategory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ResourceCategory.order = nil

---A <a href="/Land_mine" title="Land mine">land mine</a>.
---@class LandMine
local LandMine = {}

---The sprite of the landmine before it is armed (just after placing).
---@optional false
---@type SpriteType
LandMine.picture_safe = nil

---The sprite of the landmine of a friendly force when it is armed.
---@optional false
---@type SpriteType
LandMine.picture_set = nil

---@optional false
---@type double
LandMine.trigger_radius = nil

---@optional true
---@type Trigger
LandMine.action = nil

---Name of a <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategory</a>.
---@optional true
---@type string
LandMine.ammo_category = nil

---Force the landmine to kill itself when exploding.
---@default true
---@optional true
---@type bool
LandMine.force_die_on_attack = nil

---The sprite of the landmine of an enemy force when it is armed.
---@optional true
---@type SpriteType
LandMine.picture_set_enemy = nil

---Time between placing and the landmine being armed, in ticks.
---@default 120
---@optional true
---@type uint32
LandMine.timeout = nil

---@default enemy
---@optional true
---@type ForceCondition
LandMine.trigger_force = nil

---@default true
---@optional true
---@type bool
LandMine.alert_when_damaged = nil

---@optional true
---@type AttackReaction
LandMine.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
LandMine.corpse = nil

---@default true
---@optional true
---@type bool
LandMine.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
LandMine.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
LandMine.dying_explosion = nil

---@optional true
---@type TriggerEffect
LandMine.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
LandMine.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
LandMine.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
LandMine.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
LandMine.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
LandMine.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
LandMine.max_health = nil

---@default false
---@optional true
---@type bool
LandMine.random_corpse_variation = nil

---@optional true
---@type SoundType
LandMine.repair_sound = nil

---@default 1
---@optional true
---@type float
LandMine.repair_speed_modifier = nil

---@optional true
---@type Resistances
LandMine.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
LandMine.additional_pastable_entities = nil

---@optional true
---@type float
LandMine.alert_icon_scale = nil

---@optional true
---@type vector
LandMine.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
LandMine.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
LandMine.autoplace = nil

---@default 0
---@optional true
---@type double
LandMine.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
LandMine.build_sound = nil

---@optional true
---@type SoundType
LandMine.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
LandMine.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
LandMine.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
LandMine.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
LandMine.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
LandMine.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
LandMine.emissions_per_second = nil

---@optional true
---@type Color
LandMine.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
LandMine.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
LandMine.flags = nil

---@optional true
---@type Color
LandMine.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
LandMine.hit_visualization_box = nil

---@optional true
---@type Color
LandMine.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
LandMine.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
LandMine.minable = nil

---@optional true
---@type SoundType
LandMine.mined_sound = nil

---@optional true
---@type SoundType
LandMine.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
LandMine.next_upgrade = nil

---@optional true
---@type SoundType
LandMine.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
LandMine.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
LandMine.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
LandMine.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
LandMine.remove_decoratives = nil

---@optional true
---@type SoundType
LandMine.rotated_sound = nil

---@default true
---@optional true
---@type bool
LandMine.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
LandMine.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
LandMine.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
LandMine.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
LandMine.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
LandMine.subgroup = nil

---@optional true
---@type uint32
LandMine.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
LandMine.tile_width = nil

---@optional true
---@type TriggerTargetMask
LandMine.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
LandMine.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
LandMine.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
LandMine.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
LandMine.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
LandMine.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
LandMine.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
LandMine.order = nil

---Path to the icon file.
---@optional true
---@type FileName
LandMine.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
LandMine.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
LandMine.icon_size = nil

---@default 0
---@optional true
---@type uint8
LandMine.icon_mipmaps = nil

---Specifies a sound that can be used with <a rel="nofollow" class="external free" href="https://lua-api.factorio.com/latest/Concepts.html#SoundPath">https://lua-api.factorio.com/latest/Concepts.html#SoundPath</a> during runtime.
---@class Sound
local Sound = {}

---Name of the sound. Must be unique. Used as a <a rel="nofollow" class="external free" href="https://lua-api.factorio.com/latest/Concepts.html#SoundPath">https://lua-api.factorio.com/latest/Concepts.html#SoundPath</a>.
---@optional false
---@type string
Sound.name = nil

---@optional true
---@type SoundAggregation
Sound.aggregation = nil

---@default false
---@optional true
---@type bool
Sound.allow_random_repeat = nil

---@default 1.0
---@optional true
---@type double
Sound.audible_distance_modifier = nil

---One of "game-effect", "gui-effect", "ambient", "environment", "walking", "alert" and "wind".
---@default game-effect
---@optional true
---@type string
Sound.category = nil

---Mandatory if <code>variations</code> is not given.
---@optional true
---@type FileName
Sound.filename = nil

---Only loaded if <code>variations</code> is not given. Mandatory if min_speed is present, otherwise not loaded. Must be >= min_speed.
---@default 1.0
---@optional true
---@type float
Sound.max_speed = nil

---Only loaded if <code>variations</code> is not given. Not loaded if speed is present. Speed must be >= 1 / 64.
---@default 1.0
---@optional true
---@type float
Sound.min_speed = nil

---Only loaded if <code>variations</code> is not given.
---@optional true
---@type bool
Sound.preload = nil

---Only loaded if <code>variations</code> is not given. Speed must be >= 1 / 64. This sets both min and max speed.
---@default 1.0
---@optional true
---@type float
Sound.speed = nil

---@optional true
---@type SoundValue2[]
Sound.variations = nil

---Mandatory if <code>variations</code> is not given.
---@default 1.0
---@optional true
---@type float
Sound.volume = nil

---This prototype definition is used for receiving an achievement, when the player requests — and receives — enough items using logistic robots.
---@class DeliverByRobotsAchievement
local DeliverByRobotsAchievement = {}

---This will trigger the achievement, when the player receives enough items through logistic robots.
---@optional false
---@type MaterialAmountType
DeliverByRobotsAchievement.amount = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
DeliverByRobotsAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
DeliverByRobotsAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
DeliverByRobotsAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DeliverByRobotsAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DeliverByRobotsAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DeliverByRobotsAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DeliverByRobotsAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DeliverByRobotsAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DeliverByRobotsAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DeliverByRobotsAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
DeliverByRobotsAchievement.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player finishes the game without receiving energy from a specific energy source.
---@class DontUseEntityInEnergyProductionAchievement
local DontUseEntityInEnergyProductionAchievement = {}

---This will <b>not</b> disable the achievement, if this entity is placed, and you have received any amount of power from it.
---@optional false
---@type string|string[]
DontUseEntityInEnergyProductionAchievement.excluded = nil

---This will disable the achievement, if this entity is placed, and you have received any amount of power from it. If you finish the game without receiving power from this entity, you receive the achievement.
---@optional false
---@type string|string[]
DontUseEntityInEnergyProductionAchievement.included = nil

---@default false
---@optional true
---@type bool
DontUseEntityInEnergyProductionAchievement.last_hour_only = nil

---@default 0W
---@optional true
---@type Energy
DontUseEntityInEnergyProductionAchievement.minimum_energy_produced = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
DontUseEntityInEnergyProductionAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
DontUseEntityInEnergyProductionAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
DontUseEntityInEnergyProductionAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DontUseEntityInEnergyProductionAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DontUseEntityInEnergyProductionAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DontUseEntityInEnergyProductionAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DontUseEntityInEnergyProductionAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DontUseEntityInEnergyProductionAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DontUseEntityInEnergyProductionAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DontUseEntityInEnergyProductionAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
DontUseEntityInEnergyProductionAchievement.icon_mipmaps = nil

---Exists only for migration, cannot be used by mods.
---@class MiningTool
local MiningTool = {}

---The durability of this tool. Must be positive. Mandatory if <code>infinite</code> is false.
---@optional true
---@type double
MiningTool.durability = nil

---May not be longer than 200 characters.
---@default description.durability-key
---@optional true
---@type string
MiningTool.durability_description_key = nil

---May not be longer than 200 characters.
---@default description.durability-value
---@optional true
---@type string
MiningTool.durability_description_value = nil

---Whether this tool has infinite durability.
---@default true
---@optional true
---@type bool
MiningTool.infinite = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
MiningTool.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
MiningTool.burnt_result = nil

---@optional true
---@type SoundType
MiningTool.close_sound = nil

---@optional true
---@type IconData[]
MiningTool.dark_background_icons = nil

---@optional true
---@type FileName
MiningTool.dark_background_icon = nil

---@optional true
---@type ItemCountType
MiningTool.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
MiningTool.flags = nil

---@default 1.0
---@optional true
---@type double
MiningTool.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
MiningTool.fuel_category = nil

---@default 1.0
---@optional true
---@type double
MiningTool.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
MiningTool.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
MiningTool.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
MiningTool.fuel_value = nil

---@optional true
---@type SoundType
MiningTool.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
MiningTool.pictures = nil

---@optional true
---@type PlaceAsTile
MiningTool.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
MiningTool.place_result = nil

---@optional true
---@type string
MiningTool.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
MiningTool.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
MiningTool.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
MiningTool.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
MiningTool.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
MiningTool.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
MiningTool.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
MiningTool.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
MiningTool.order = nil

---Path to the icon file.
---@optional true
---@type FileName
MiningTool.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
MiningTool.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
MiningTool.icon_size = nil

---@default 0
---@optional true
---@type uint8
MiningTool.icon_mipmaps = nil

---A <a href="/Roboport" title="Roboport">roboport</a>.
---@class Roboport
local Roboport = {}

---@optional false
---@type SpriteType
Roboport.base = nil

---The animation played when the roboport is idle.
---@optional false
---@type AnimationType
Roboport.base_animation = nil

---@optional false
---@type SpriteType
Roboport.base_patch = nil

---Presumably, the distance from the roboport at which robots will wait to charge.
---@optional false
---@type float
Roboport.charge_approach_distance = nil

---The amount of energy that is given to a robot per tick.
---@optional false
---@type Energy
Roboport.charging_energy = nil

---Can't be negative.
---@optional false
---@type float
Roboport.construction_radius = nil

---@optional false
---@type AnimationType
Roboport.door_animation_down = nil

---@optional false
---@type AnimationType
Roboport.door_animation_up = nil

---The roboport's energy source. Must be an electric or void energy source.
---@optional false
---@type EnergySource
Roboport.energy_source = nil

---The amount of energy the roboport uses when idle.
---@optional false
---@type Energy
Roboport.energy_usage = nil

---Can't be negative.
---@optional false
---@type float
Roboport.logistics_radius = nil

---The number of repair pack slots in the roboport.
---@optional false
---@type ItemStackIndex
Roboport.material_slots_count = nil

---@optional false
---@type Energy
Roboport.recharge_minimum = nil

---The animation played at each charging point when a robot is charging there.
---@optional false
---@type AnimationType
Roboport.recharging_animation = nil

---@optional false
---@type uint32
Roboport.request_to_open_door_timeout = nil

---The number of robot slots in the roboport.
---@optional false
---@type ItemStackIndex
Roboport.robot_slots_count = nil

---Presumably states the height of the charging stations and thus an additive offset for the charging_offsets.
---@optional false
---@type float
Roboport.spawn_and_station_height = nil

---@default 0.0
---@optional true
---@type float
Roboport.charging_distance = nil

---The offsets from the centre of the roboport at which robots will charge.
---@optional true
---@type vector[]
Roboport.charging_offsets = nil

---@default 0
---@optional true
---@type uint32
Roboport.charging_station_count = nil

---@optional true
---@type vector
Roboport.charging_station_shift = nil

---@default 1.0
---@optional true
---@type float
Roboport.charging_threshold_distance = nil

---@optional true
---@type CircuitConnectorSprites
Roboport.circuit_connector_sprites = nil

---@optional true
---@type WireConnectionPoint
Roboport.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
Roboport.circuit_wire_max_distance = nil

---@optional true
---@type TriggerEffect
Roboport.close_door_trigger_effect = nil

---@optional true
---@type SignalIDConnector
Roboport.default_available_construction_output_signal = nil

---@optional true
---@type SignalIDConnector
Roboport.default_available_logistic_output_signal = nil

---@optional true
---@type SignalIDConnector
Roboport.default_total_construction_output_signal = nil

---@optional true
---@type SignalIDConnector
Roboport.default_total_logistic_output_signal = nil

---@default true
---@optional true
---@type bool
Roboport.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Roboport.draw_construction_radius_visualization = nil

---@default true
---@optional true
---@type bool
Roboport.draw_copper_wires = nil

---@default true
---@optional true
---@type bool
Roboport.draw_logistic_radius_visualization = nil

---Must be >= <code>logistics_radius</code>.
---@optional true
---@type float
Roboport.logistics_connection_distance = nil

---@optional true
---@type TriggerEffect
Roboport.open_door_trigger_effect = nil

---The light emitted when charging a robot.
---@optional true
---@type LightDefinition
Roboport.recharging_light = nil

---How many robots can exist in the network (cumulative).
---@optional true
---@type ItemCountType
Roboport.robot_limit = nil

---@default 0.01
---@optional true
---@type float
Roboport.robot_vertical_acceleration = nil

---@default false
---@optional true
---@type bool
Roboport.robots_shrink_when_entering_and_exiting = nil

---@default 0
---@optional true
---@type float
Roboport.spawn_and_station_shadow_height_offset = nil

---The offset from the centre of the roboport at which robots will enter and exit.
---@optional true
---@type vector
Roboport.stationing_offset = nil

---@default true
---@optional true
---@type bool
Roboport.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Roboport.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Roboport.corpse = nil

---@default true
---@optional true
---@type bool
Roboport.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Roboport.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Roboport.dying_explosion = nil

---@optional true
---@type TriggerEffect
Roboport.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Roboport.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Roboport.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Roboport.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Roboport.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Roboport.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Roboport.max_health = nil

---@default false
---@optional true
---@type bool
Roboport.random_corpse_variation = nil

---@optional true
---@type SoundType
Roboport.repair_sound = nil

---@default 1
---@optional true
---@type float
Roboport.repair_speed_modifier = nil

---@optional true
---@type Resistances
Roboport.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Roboport.additional_pastable_entities = nil

---@optional true
---@type float
Roboport.alert_icon_scale = nil

---@optional true
---@type vector
Roboport.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Roboport.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Roboport.autoplace = nil

---@default 0
---@optional true
---@type double
Roboport.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Roboport.build_sound = nil

---@optional true
---@type SoundType
Roboport.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Roboport.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Roboport.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Roboport.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Roboport.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Roboport.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Roboport.emissions_per_second = nil

---@optional true
---@type Color
Roboport.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Roboport.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Roboport.flags = nil

---@optional true
---@type Color
Roboport.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Roboport.hit_visualization_box = nil

---@optional true
---@type Color
Roboport.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Roboport.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Roboport.minable = nil

---@optional true
---@type SoundType
Roboport.mined_sound = nil

---@optional true
---@type SoundType
Roboport.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Roboport.next_upgrade = nil

---@optional true
---@type SoundType
Roboport.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Roboport.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Roboport.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Roboport.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Roboport.remove_decoratives = nil

---@optional true
---@type SoundType
Roboport.rotated_sound = nil

---@default true
---@optional true
---@type bool
Roboport.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Roboport.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Roboport.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Roboport.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Roboport.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Roboport.subgroup = nil

---@optional true
---@type uint32
Roboport.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Roboport.tile_width = nil

---@optional true
---@type TriggerTargetMask
Roboport.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Roboport.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Roboport.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Roboport.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Roboport.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Roboport.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Roboport.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Roboport.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Roboport.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Roboport.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Roboport.icon_size = nil

---@default 0
---@optional true
---@type uint8
Roboport.icon_mipmaps = nil

---A turret that consumes electricity as ammo.
---@class ElectricTurret
local ElectricTurret = {}

---Must be an electric or void energy source.
---@optional false
---@type EnergySource
ElectricTurret.energy_source = nil

---Requires ammo_type in attack_parameters.
---@optional false
---@type AttackParameters
ElectricTurret.attack_parameters = nil

---@optional false
---@type double
ElectricTurret.call_for_help_radius = nil

---@optional false
---@type RotatedAnimation4Way
ElectricTurret.folded_animation = nil

---@default true
---@optional true
---@type bool
ElectricTurret.alert_when_attacking = nil

---@default false
---@optional true
---@type bool
ElectricTurret.allow_turning_when_starting_attack = nil

---@default false
---@optional true
---@type bool
ElectricTurret.attack_from_start_frame = nil

---@optional true
---@type TriggerTargetMask
ElectricTurret.attack_target_mask = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.attacking_animation = nil

---@default 1
---@optional true
---@type float
ElectricTurret.attacking_speed = nil

---@optional true
---@type Animation4Way
ElectricTurret.base_picture = nil

---@default lower-object
---@optional true
---@type RenderLayer
ElectricTurret.base_picture_render_layer = nil

---@default 0
---@optional true
---@type uint8
ElectricTurret.base_picture_secondary_draw_order = nil

---The name of an entity. Note that this overrides how EntityWithHealth loads the corpse, forcing it to be a string instead of an array of strings.
---@optional true
---@type string
ElectricTurret.corpse = nil

---@optional true
---@type SoundType
ElectricTurret.dying_sound = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.ending_attack_animation = nil

---@default 1
---@optional true
---@type float
ElectricTurret.ending_attack_speed = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.energy_glow_animation = nil

---@default 1
---@optional true
---@type float
ElectricTurret.folded_speed = nil

---@default 1
---@optional true
---@type float
ElectricTurret.folded_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.folding_animation = nil

---@optional true
---@type SoundType
ElectricTurret.folding_sound = nil

---@default 1
---@optional true
---@type float
ElectricTurret.folding_speed = nil

---The intensity of light in the form of <code>energy_glow_animation</code> drawn on top of <code>energy_glow_animation</code>.
---@default 0
---@optional true
---@type float
ElectricTurret.glow_light_intensity = nil

---@default object
---@optional true
---@type RenderLayer
ElectricTurret.gun_animation_render_layer = nil

---@default 0
---@optional true
---@type uint8
ElectricTurret.gun_animation_secondary_draw_order = nil

---@optional true
---@type TriggerTargetMask
ElectricTurret.ignore_target_mask = nil

---@optional true
---@type SpriteType
ElectricTurret.integration = nil

---Default: The range defined in the <code>attack_parameters</code>
---@optional true
---@type double
ElectricTurret.prepare_range = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.prepared_alternative_animation = nil

---@default 0
---@optional true
---@type float
ElectricTurret.prepared_alternative_chance = nil

---@optional true
---@type SoundType
ElectricTurret.prepared_alternative_sound = nil

---@default 1
---@optional true
---@type float
ElectricTurret.prepared_alternative_speed = nil

---@default 1
---@optional true
---@type float
ElectricTurret.prepared_alternative_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.prepared_animation = nil

---@optional true
---@type SoundType
ElectricTurret.prepared_sound = nil

---@default 1
---@optional true
---@type float
ElectricTurret.prepared_speed = nil

---@default 1
---@optional true
---@type float
ElectricTurret.prepared_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.preparing_animation = nil

---@optional true
---@type SoundType
ElectricTurret.preparing_sound = nil

---@default 1
---@optional true
---@type float
ElectricTurret.preparing_speed = nil

---@default false
---@optional true
---@type bool
ElectricTurret.random_animation_offset = nil

---@default 1
---@optional true
---@type float
ElectricTurret.rotation_speed = nil

---@default false
---@optional true
---@type bool
ElectricTurret.secondary_animation = nil

---@default false
---@optional true
---@type bool
ElectricTurret.shoot_in_prepare_state = nil

---@optional true
---@type RotatedAnimation4Way
ElectricTurret.starting_attack_animation = nil

---@optional true
---@type SoundType
ElectricTurret.starting_attack_sound = nil

---@default 1
---@optional true
---@type float
ElectricTurret.starting_attack_speed = nil

---@default false
---@optional true
---@type bool
ElectricTurret.turret_base_has_direction = nil

---@default true
---@optional true
---@type bool
ElectricTurret.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ElectricTurret.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ElectricTurret.corpse = nil

---@default true
---@optional true
---@type bool
ElectricTurret.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ElectricTurret.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ElectricTurret.dying_explosion = nil

---@optional true
---@type TriggerEffect
ElectricTurret.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ElectricTurret.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ElectricTurret.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ElectricTurret.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ElectricTurret.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ElectricTurret.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ElectricTurret.max_health = nil

---@default false
---@optional true
---@type bool
ElectricTurret.random_corpse_variation = nil

---@optional true
---@type SoundType
ElectricTurret.repair_sound = nil

---@default 1
---@optional true
---@type float
ElectricTurret.repair_speed_modifier = nil

---@optional true
---@type Resistances
ElectricTurret.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ElectricTurret.additional_pastable_entities = nil

---@optional true
---@type float
ElectricTurret.alert_icon_scale = nil

---@optional true
---@type vector
ElectricTurret.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ElectricTurret.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ElectricTurret.autoplace = nil

---@default 0
---@optional true
---@type double
ElectricTurret.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ElectricTurret.build_sound = nil

---@optional true
---@type SoundType
ElectricTurret.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ElectricTurret.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ElectricTurret.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ElectricTurret.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ElectricTurret.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ElectricTurret.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ElectricTurret.emissions_per_second = nil

---@optional true
---@type Color
ElectricTurret.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ElectricTurret.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ElectricTurret.flags = nil

---@optional true
---@type Color
ElectricTurret.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ElectricTurret.hit_visualization_box = nil

---@optional true
---@type Color
ElectricTurret.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ElectricTurret.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ElectricTurret.minable = nil

---@optional true
---@type SoundType
ElectricTurret.mined_sound = nil

---@optional true
---@type SoundType
ElectricTurret.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ElectricTurret.next_upgrade = nil

---@optional true
---@type SoundType
ElectricTurret.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ElectricTurret.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ElectricTurret.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ElectricTurret.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ElectricTurret.remove_decoratives = nil

---@optional true
---@type SoundType
ElectricTurret.rotated_sound = nil

---@default true
---@optional true
---@type bool
ElectricTurret.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ElectricTurret.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ElectricTurret.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ElectricTurret.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ElectricTurret.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ElectricTurret.subgroup = nil

---@optional true
---@type uint32
ElectricTurret.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ElectricTurret.tile_width = nil

---@optional true
---@type TriggerTargetMask
ElectricTurret.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ElectricTurret.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ElectricTurret.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ElectricTurret.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ElectricTurret.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ElectricTurret.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ElectricTurret.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ElectricTurret.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ElectricTurret.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ElectricTurret.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ElectricTurret.icon_size = nil

---@default 0
---@optional true
---@type uint8
ElectricTurret.icon_mipmaps = nil

---Each item which has a fuel_value must have a fuel category. The fuel categories are used to allow only certain fuels to be used in <a href="/Types/EnergySource" title="Types/EnergySource">Types/EnergySource</a>.
---@class FuelCategory
local FuelCategory = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FuelCategory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FuelCategory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FuelCategory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FuelCategory.order = nil

---This prototype definition is used for receiving an achievement when the player crafts a specified item a certain amount, in an hour.
---@class ProducePerHourAchievement
local ProducePerHourAchievement = {}

---This is how much the player has to craft in an hour, to receive the achievement.
---@optional false
---@type MaterialAmountType
ProducePerHourAchievement.amount = nil

---This will tell the achievement what fluid the player needs to craft, to get the achievement.
---@optional true
---@type string
ProducePerHourAchievement.fluid_product = nil

---This will tell the achievement what item the player needs to craft, to get the achievement.
---@optional true
---@type string
ProducePerHourAchievement.item_product = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
ProducePerHourAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
ProducePerHourAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
ProducePerHourAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ProducePerHourAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ProducePerHourAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ProducePerHourAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ProducePerHourAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ProducePerHourAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ProducePerHourAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ProducePerHourAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
ProducePerHourAchievement.icon_mipmaps = nil

---This entity produces or consumes fluids. Its fluid settings can be changed runtime.
---@class InfinityPipe
local InfinityPipe = {}

---@default all
---@optional true
---@type GuiMode
InfinityPipe.gui_mode = nil

---The area of the entity where fluid/gas inputs, and outputs.
---@optional false
---@type FluidBox
InfinityPipe.fluid_box = nil

---@optional false
---@type BoundingBox
InfinityPipe.horizontal_window_bounding_box = nil

---@optional false
---@type PipePictures
InfinityPipe.pictures = nil

---@optional false
---@type BoundingBox
InfinityPipe.vertical_window_bounding_box = nil

---@default true
---@optional true
---@type bool
InfinityPipe.alert_when_damaged = nil

---@optional true
---@type AttackReaction
InfinityPipe.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
InfinityPipe.corpse = nil

---@default true
---@optional true
---@type bool
InfinityPipe.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
InfinityPipe.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
InfinityPipe.dying_explosion = nil

---@optional true
---@type TriggerEffect
InfinityPipe.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
InfinityPipe.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
InfinityPipe.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
InfinityPipe.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
InfinityPipe.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
InfinityPipe.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
InfinityPipe.max_health = nil

---@default false
---@optional true
---@type bool
InfinityPipe.random_corpse_variation = nil

---@optional true
---@type SoundType
InfinityPipe.repair_sound = nil

---@default 1
---@optional true
---@type float
InfinityPipe.repair_speed_modifier = nil

---@optional true
---@type Resistances
InfinityPipe.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
InfinityPipe.additional_pastable_entities = nil

---@optional true
---@type float
InfinityPipe.alert_icon_scale = nil

---@optional true
---@type vector
InfinityPipe.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
InfinityPipe.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
InfinityPipe.autoplace = nil

---@default 0
---@optional true
---@type double
InfinityPipe.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
InfinityPipe.build_sound = nil

---@optional true
---@type SoundType
InfinityPipe.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
InfinityPipe.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
InfinityPipe.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
InfinityPipe.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
InfinityPipe.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
InfinityPipe.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
InfinityPipe.emissions_per_second = nil

---@optional true
---@type Color
InfinityPipe.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
InfinityPipe.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
InfinityPipe.flags = nil

---@optional true
---@type Color
InfinityPipe.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
InfinityPipe.hit_visualization_box = nil

---@optional true
---@type Color
InfinityPipe.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
InfinityPipe.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
InfinityPipe.minable = nil

---@optional true
---@type SoundType
InfinityPipe.mined_sound = nil

---@optional true
---@type SoundType
InfinityPipe.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
InfinityPipe.next_upgrade = nil

---@optional true
---@type SoundType
InfinityPipe.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
InfinityPipe.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
InfinityPipe.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
InfinityPipe.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
InfinityPipe.remove_decoratives = nil

---@optional true
---@type SoundType
InfinityPipe.rotated_sound = nil

---@default true
---@optional true
---@type bool
InfinityPipe.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
InfinityPipe.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
InfinityPipe.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
InfinityPipe.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
InfinityPipe.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
InfinityPipe.subgroup = nil

---@optional true
---@type uint32
InfinityPipe.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
InfinityPipe.tile_width = nil

---@optional true
---@type TriggerTargetMask
InfinityPipe.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
InfinityPipe.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
InfinityPipe.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
InfinityPipe.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
InfinityPipe.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
InfinityPipe.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
InfinityPipe.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
InfinityPipe.order = nil

---Path to the icon file.
---@optional true
---@type FileName
InfinityPipe.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
InfinityPipe.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
InfinityPipe.icon_size = nil

---@default 0
---@optional true
---@type uint8
InfinityPipe.icon_mipmaps = nil

---An extremely basic entity with no special functionality. Used for minable rocks.
---@class SimpleEntity
local SimpleEntity = {}

---Simple entity must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type AnimationVariations
SimpleEntity.animations = nil

---Whether this entity should be treated as a rock for the purpose of deconstruction and for <a href="/Prototype/Car#immune_to_rock_impacts" title="Prototype/Car">Prototype/Car#immune_to_rock_impacts</a>.
---@default false
---@optional true
---@type bool
SimpleEntity.count_as_rock_for_filtered_deconstruction = nil

---Simple entity must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type SpriteType
SimpleEntity.picture = nil

---Simple entity must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type SpriteVariations
SimpleEntity.pictures = nil

---@default false
---@optional true
---@type bool
SimpleEntity.random_animation_offset = nil

---Whether a random graphics variation is chosen when placing the entity/creating it via script/creating it via map generation. If this is false, the entity will use the first variation instead of a random one.
---@default true
---@optional true
---@type bool
SimpleEntity.random_variation_on_create = nil

---@default object
---@optional true
---@type RenderLayer
SimpleEntity.render_layer = nil

---@default 0
---@optional true
---@type int8
SimpleEntity.secondary_draw_order = nil

---@default true
---@optional true
---@type bool
SimpleEntity.alert_when_damaged = nil

---@optional true
---@type AttackReaction
SimpleEntity.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
SimpleEntity.corpse = nil

---@default true
---@optional true
---@type bool
SimpleEntity.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
SimpleEntity.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
SimpleEntity.dying_explosion = nil

---@optional true
---@type TriggerEffect
SimpleEntity.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
SimpleEntity.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
SimpleEntity.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
SimpleEntity.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
SimpleEntity.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
SimpleEntity.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
SimpleEntity.max_health = nil

---@default false
---@optional true
---@type bool
SimpleEntity.random_corpse_variation = nil

---@optional true
---@type SoundType
SimpleEntity.repair_sound = nil

---@default 1
---@optional true
---@type float
SimpleEntity.repair_speed_modifier = nil

---@optional true
---@type Resistances
SimpleEntity.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SimpleEntity.additional_pastable_entities = nil

---@optional true
---@type float
SimpleEntity.alert_icon_scale = nil

---@optional true
---@type vector
SimpleEntity.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SimpleEntity.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SimpleEntity.autoplace = nil

---@default 0
---@optional true
---@type double
SimpleEntity.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SimpleEntity.build_sound = nil

---@optional true
---@type SoundType
SimpleEntity.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SimpleEntity.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SimpleEntity.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SimpleEntity.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SimpleEntity.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SimpleEntity.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SimpleEntity.emissions_per_second = nil

---@optional true
---@type Color
SimpleEntity.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SimpleEntity.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SimpleEntity.flags = nil

---@optional true
---@type Color
SimpleEntity.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SimpleEntity.hit_visualization_box = nil

---@optional true
---@type Color
SimpleEntity.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SimpleEntity.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SimpleEntity.minable = nil

---@optional true
---@type SoundType
SimpleEntity.mined_sound = nil

---@optional true
---@type SoundType
SimpleEntity.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SimpleEntity.next_upgrade = nil

---@optional true
---@type SoundType
SimpleEntity.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SimpleEntity.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SimpleEntity.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SimpleEntity.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SimpleEntity.remove_decoratives = nil

---@optional true
---@type SoundType
SimpleEntity.rotated_sound = nil

---@default true
---@optional true
---@type bool
SimpleEntity.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SimpleEntity.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SimpleEntity.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SimpleEntity.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SimpleEntity.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SimpleEntity.subgroup = nil

---@optional true
---@type uint32
SimpleEntity.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SimpleEntity.tile_width = nil

---@optional true
---@type TriggerTargetMask
SimpleEntity.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SimpleEntity.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SimpleEntity.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SimpleEntity.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SimpleEntity.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SimpleEntity.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SimpleEntity.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SimpleEntity.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SimpleEntity.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SimpleEntity.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SimpleEntity.icon_size = nil

---@default 0
---@optional true
---@type uint8
SimpleEntity.icon_mipmaps = nil

---A <a href="/Radar" title="Radar">radar</a>.
---@class Radar
local Radar = {}

---The amount of energy the radar has to consume for nearby scan to be performed. Performance warning: nearby scan causes recharting of many chunks, which is expensive operation. If you want to make a radar that updates map more in real time, you should keep its range low. If you are making radar with high range, you should set this value such that nearby scan is performed once a second or so. For example if you set energy_usage to 100kW, setting energy_per_nearby_scan to 100kJ will cause nearby scan happen once per second. This value doesn't have any effect on sector scanning.
---@optional false
---@type Energy
Radar.energy_per_nearby_scan = nil

---The amount of energy it takes to scan a sector. This value doesn't have any effect on nearby scanning.
---@optional false
---@type Energy
Radar.energy_per_sector = nil

---The amount of energy this radar uses.
---@optional false
---@type EnergySource
Radar.energy_source = nil

---The amount of energy this radar uses.
---@optional false
---@type Energy
Radar.energy_usage = nil

---The radius of the area constantly revealed by this radar, in chunks.
---@optional false
---@type uint32
Radar.max_distance_of_nearby_sector_revealed = nil

---The radius of the area this radar can chart, in chunks.
---@optional false
---@type uint32
Radar.max_distance_of_sector_revealed = nil

---@optional false
---@type RotatedSprite
Radar.pictures = nil

---@optional true
---@type Color
Radar.radius_minimap_visualisation_color = nil

---@default 0.01
---@optional true
---@type double
Radar.rotation_speed = nil

---@default true
---@optional true
---@type bool
Radar.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Radar.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Radar.corpse = nil

---@default true
---@optional true
---@type bool
Radar.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Radar.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Radar.dying_explosion = nil

---@optional true
---@type TriggerEffect
Radar.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Radar.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Radar.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Radar.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Radar.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Radar.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Radar.max_health = nil

---@default false
---@optional true
---@type bool
Radar.random_corpse_variation = nil

---@optional true
---@type SoundType
Radar.repair_sound = nil

---@default 1
---@optional true
---@type float
Radar.repair_speed_modifier = nil

---@optional true
---@type Resistances
Radar.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Radar.additional_pastable_entities = nil

---@optional true
---@type float
Radar.alert_icon_scale = nil

---@optional true
---@type vector
Radar.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Radar.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Radar.autoplace = nil

---@default 0
---@optional true
---@type double
Radar.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Radar.build_sound = nil

---@optional true
---@type SoundType
Radar.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Radar.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Radar.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Radar.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Radar.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Radar.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Radar.emissions_per_second = nil

---@optional true
---@type Color
Radar.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Radar.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Radar.flags = nil

---@optional true
---@type Color
Radar.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Radar.hit_visualization_box = nil

---@optional true
---@type Color
Radar.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Radar.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Radar.minable = nil

---@optional true
---@type SoundType
Radar.mined_sound = nil

---@optional true
---@type SoundType
Radar.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Radar.next_upgrade = nil

---@optional true
---@type SoundType
Radar.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Radar.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Radar.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Radar.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Radar.remove_decoratives = nil

---@optional true
---@type SoundType
Radar.rotated_sound = nil

---@default true
---@optional true
---@type bool
Radar.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Radar.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Radar.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Radar.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Radar.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Radar.subgroup = nil

---@optional true
---@type uint32
Radar.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Radar.tile_width = nil

---@optional true
---@type TriggerTargetMask
Radar.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Radar.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Radar.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Radar.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Radar.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Radar.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Radar.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Radar.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Radar.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Radar.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Radar.icon_size = nil

---@default 0
---@optional true
---@type uint8
Radar.icon_mipmaps = nil

---A <a href="/Rail_signal" title="Rail signal">rail signal</a>.
---@class RailSignal
local RailSignal = {}

---@optional false
---@type RotatedAnimation
RailSignal.animation = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
RailSignal.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
RailSignal.circuit_wire_connection_points = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
RailSignal.circuit_wire_max_distance = nil

---@optional true
---@type SignalIDConnector
RailSignal.default_green_output_signal = nil

---@optional true
---@type SignalIDConnector
RailSignal.default_orange_output_signal = nil

---@optional true
---@type SignalIDConnector
RailSignal.default_red_output_signal = nil

---@default true
---@optional true
---@type bool
RailSignal.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
RailSignal.draw_copper_wires = nil

---@optional true
---@type LightDefinition
RailSignal.green_light = nil

---@optional true
---@type LightDefinition
RailSignal.orange_light = nil

---@optional true
---@type AnimationType
RailSignal.rail_piece = nil

---@optional true
---@type LightDefinition
RailSignal.red_light = nil

---@default true
---@optional true
---@type bool
RailSignal.alert_when_damaged = nil

---@optional true
---@type AttackReaction
RailSignal.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
RailSignal.corpse = nil

---@default true
---@optional true
---@type bool
RailSignal.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
RailSignal.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
RailSignal.dying_explosion = nil

---@optional true
---@type TriggerEffect
RailSignal.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
RailSignal.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
RailSignal.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
RailSignal.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
RailSignal.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
RailSignal.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
RailSignal.max_health = nil

---@default false
---@optional true
---@type bool
RailSignal.random_corpse_variation = nil

---@optional true
---@type SoundType
RailSignal.repair_sound = nil

---@default 1
---@optional true
---@type float
RailSignal.repair_speed_modifier = nil

---@optional true
---@type Resistances
RailSignal.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RailSignal.additional_pastable_entities = nil

---@optional true
---@type float
RailSignal.alert_icon_scale = nil

---@optional true
---@type vector
RailSignal.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RailSignal.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RailSignal.autoplace = nil

---@default 0
---@optional true
---@type double
RailSignal.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RailSignal.build_sound = nil

---@optional true
---@type SoundType
RailSignal.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RailSignal.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RailSignal.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RailSignal.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RailSignal.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RailSignal.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RailSignal.emissions_per_second = nil

---@optional true
---@type Color
RailSignal.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RailSignal.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RailSignal.flags = nil

---@optional true
---@type Color
RailSignal.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RailSignal.hit_visualization_box = nil

---@optional true
---@type Color
RailSignal.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RailSignal.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RailSignal.minable = nil

---@optional true
---@type SoundType
RailSignal.mined_sound = nil

---@optional true
---@type SoundType
RailSignal.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RailSignal.next_upgrade = nil

---@optional true
---@type SoundType
RailSignal.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RailSignal.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RailSignal.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RailSignal.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RailSignal.remove_decoratives = nil

---@optional true
---@type SoundType
RailSignal.rotated_sound = nil

---@default true
---@optional true
---@type bool
RailSignal.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RailSignal.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RailSignal.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RailSignal.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RailSignal.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RailSignal.subgroup = nil

---@optional true
---@type uint32
RailSignal.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RailSignal.tile_width = nil

---@optional true
---@type TriggerTargetMask
RailSignal.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RailSignal.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RailSignal.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RailSignal.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RailSignal.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RailSignal.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RailSignal.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RailSignal.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RailSignal.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RailSignal.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RailSignal.icon_size = nil

---@default 0
---@optional true
---@type uint8
RailSignal.icon_mipmaps = nil

---Fonts are used in all gui in the game.
---@class Font
local Font = {}

---The name of the fonts .ttf descriptor. This descriptor must be defined in the locale info.json. Refer to data/core/locale/_language_/info.json for examples.
---@optional false
---@type string
Font.from = nil

---Name of the font.
---@optional false
---@type string
Font.name = nil

---Size of the font.
---@optional false
---@type int32
Font.size = nil

---Whether the font has a border.
---@default false
---@optional true
---@type bool
Font.border = nil

---The color of the border, if enabled.
---@optional true
---@type Color
Font.border_color = nil

---@default false
---@optional true
---@type bool
Font.filtered = nil

---@default 0
---@optional true
---@type float
Font.spacing = nil

---This prototype definition is used for receiving an achievement when the player completes a specific research.
---@class ResearchAchievement
local ResearchAchievement = {}

---This will only trigger if the player has learned every research in the game.
---@default false
---@optional true
---@type bool
ResearchAchievement.research_all = nil

---Researching this technology will trigger the achievement.
---@optional true
---@type string
ResearchAchievement.technology = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
ResearchAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
ResearchAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
ResearchAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ResearchAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ResearchAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ResearchAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ResearchAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ResearchAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ResearchAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ResearchAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
ResearchAchievement.icon_mipmaps = nil

---The entity used for items on the ground.
---@class ItemEntity
local ItemEntity = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ItemEntity.additional_pastable_entities = nil

---@optional true
---@type float
ItemEntity.alert_icon_scale = nil

---@optional true
---@type vector
ItemEntity.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ItemEntity.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ItemEntity.autoplace = nil

---@default 0
---@optional true
---@type double
ItemEntity.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ItemEntity.build_sound = nil

---@optional true
---@type SoundType
ItemEntity.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ItemEntity.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ItemEntity.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ItemEntity.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ItemEntity.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ItemEntity.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ItemEntity.emissions_per_second = nil

---@optional true
---@type Color
ItemEntity.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ItemEntity.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ItemEntity.flags = nil

---@optional true
---@type Color
ItemEntity.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ItemEntity.hit_visualization_box = nil

---@optional true
---@type Color
ItemEntity.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ItemEntity.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ItemEntity.minable = nil

---@optional true
---@type SoundType
ItemEntity.mined_sound = nil

---@optional true
---@type SoundType
ItemEntity.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ItemEntity.next_upgrade = nil

---@optional true
---@type SoundType
ItemEntity.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ItemEntity.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ItemEntity.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ItemEntity.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ItemEntity.remove_decoratives = nil

---@optional true
---@type SoundType
ItemEntity.rotated_sound = nil

---@default true
---@optional true
---@type bool
ItemEntity.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ItemEntity.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ItemEntity.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ItemEntity.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ItemEntity.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ItemEntity.subgroup = nil

---@optional true
---@type uint32
ItemEntity.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ItemEntity.tile_width = nil

---@optional true
---@type TriggerTargetMask
ItemEntity.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ItemEntity.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ItemEntity.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ItemEntity.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemEntity.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemEntity.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemEntity.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemEntity.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemEntity.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemEntity.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemEntity.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemEntity.icon_mipmaps = nil

---<p>Continuously loads and unloads machines, as an alternative to inserters.<br>This loader type is identical to <a href="/Prototype/Loader1x2" title="Prototype/Loader1x2">Prototype/Loader1x2</a> with the exception of its hardcoded belt_distance:</p><ul><li>The belt_distance of the loader determines the distance between the position of this loader and the tile of the loader's belt target.</li><li>This loader type always has a belt_distance of 0, meaning by default it is 1 tile long in total.</li><li>For a loader type with a belt_distance of 0.5, see <a href="/Prototype/Loader1x2" title="Prototype/Loader1x2">Prototype/Loader1x2</a>.</li></ul>
---@class Loader1x1
local Loader1x1 = {}

---How many item filters this loader has. Maximum count of filtered items in loader is 5.
---@optional false
---@type uint8
Loader1x1.filter_count = nil

---@optional false
---@type LoaderStructure
Loader1x1.structure = nil

---How long this loader's belt is. Should be the same as belt_distance, which is hardcoded to 0 for this loader type. <a href="/Prototype/Loader1x2" title="Prototype/Loader1x2">Prototype/Loader1x2</a> can be used if a belt_distance of 0.5 is desired.
---@default 0.5
---@optional true
---@type double
Loader1x1.belt_length = nil

---The distance between the position of this loader and the tile of the loader's container target.
---@default 1.5
---@optional true
---@type double
Loader1x1.container_distance = nil

---@default object
---@optional true
---@type RenderLayer
Loader1x1.structure_render_layer = nil

---<p>The speed of the belt (since 0.17): <code>speed × 480 = x Items/second</code></p><p>The raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt's maximum density - e.g. <code>x items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) = &lt;speed&gt; belts/tick</code> where a "belt" is the size of one tile. See <a href="/Transport_belts/Physics" title="Transport belts/Physics">Transport_belts/Physics</a> for more details.</p>
---@optional false
---@type double
Loader1x1.speed = nil

---@default 1
---@optional true
---@type double
Loader1x1.animation_speed_coefficient = nil

---Either this, or all of the properties below this one have to present.
---@optional true
---@type TransportBeltConnectableBeltAnimationSet
Loader1x1.belt_animation_set = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.belt_horizontal = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.belt_vertical = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.ending_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type Sprite4Way
Loader1x1.ending_patch = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.ending_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.ending_top = nil

---@default false
---@optional true
---@type bool
Loader1x1.ends_with_stopper = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.starting_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.starting_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x1.starting_top = nil

---@default true
---@optional true
---@type bool
Loader1x1.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Loader1x1.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Loader1x1.corpse = nil

---@default true
---@optional true
---@type bool
Loader1x1.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Loader1x1.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Loader1x1.dying_explosion = nil

---@optional true
---@type TriggerEffect
Loader1x1.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Loader1x1.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Loader1x1.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Loader1x1.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Loader1x1.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Loader1x1.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Loader1x1.max_health = nil

---@default false
---@optional true
---@type bool
Loader1x1.random_corpse_variation = nil

---@optional true
---@type SoundType
Loader1x1.repair_sound = nil

---@default 1
---@optional true
---@type float
Loader1x1.repair_speed_modifier = nil

---@optional true
---@type Resistances
Loader1x1.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Loader1x1.additional_pastable_entities = nil

---@optional true
---@type float
Loader1x1.alert_icon_scale = nil

---@optional true
---@type vector
Loader1x1.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Loader1x1.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Loader1x1.autoplace = nil

---@default 0
---@optional true
---@type double
Loader1x1.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Loader1x1.build_sound = nil

---@optional true
---@type SoundType
Loader1x1.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Loader1x1.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Loader1x1.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Loader1x1.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Loader1x1.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Loader1x1.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Loader1x1.emissions_per_second = nil

---@optional true
---@type Color
Loader1x1.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Loader1x1.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Loader1x1.flags = nil

---@optional true
---@type Color
Loader1x1.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Loader1x1.hit_visualization_box = nil

---@optional true
---@type Color
Loader1x1.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Loader1x1.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Loader1x1.minable = nil

---@optional true
---@type SoundType
Loader1x1.mined_sound = nil

---@optional true
---@type SoundType
Loader1x1.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Loader1x1.next_upgrade = nil

---@optional true
---@type SoundType
Loader1x1.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Loader1x1.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Loader1x1.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Loader1x1.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Loader1x1.remove_decoratives = nil

---@optional true
---@type SoundType
Loader1x1.rotated_sound = nil

---@default true
---@optional true
---@type bool
Loader1x1.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Loader1x1.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Loader1x1.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Loader1x1.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Loader1x1.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Loader1x1.subgroup = nil

---@optional true
---@type uint32
Loader1x1.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Loader1x1.tile_width = nil

---@optional true
---@type TriggerTargetMask
Loader1x1.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Loader1x1.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Loader1x1.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Loader1x1.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Loader1x1.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Loader1x1.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Loader1x1.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Loader1x1.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Loader1x1.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Loader1x1.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Loader1x1.icon_size = nil

---@default 0
---@optional true
---@type uint8
Loader1x1.icon_mipmaps = nil

---<p>Continuously loads and unloads machines, as an alternative to inserters.<br>This loader type is identical to <a href="/Prototype/Loader1x1" title="Prototype/Loader1x1">Prototype/Loader1x1</a> with the exception of its hardcoded belt_distance:</p><ul><li>The belt_distance of the loader determines the distance between the position of this loader and the tile of the loader's belt target.</li><li>This loader type always has a belt_distance of 0.5, meaning by default it is 2 tiles long in total.</li><li>For a loader type with a belt_distance of 0, see <a href="/Prototype/Loader1x1" title="Prototype/Loader1x1">Prototype/Loader1x1</a>.</li></ul>
---@class Loader1x2
local Loader1x2 = {}

---How many item filters this loader has. Maximum count of filtered items in loader is 5.
---@optional false
---@type uint8
Loader1x2.filter_count = nil

---@optional false
---@type LoaderStructure
Loader1x2.structure = nil

---How long this loader's belt is. Should be the same as belt_distance, which is hardcoded to 0.5 for this loader type. <a href="/Prototype/Loader1x1" title="Prototype/Loader1x1">Prototype/Loader1x1</a> can be used if a belt_distance of 0 is desired.
---@default 0.5
---@optional true
---@type double
Loader1x2.belt_length = nil

---The distance between the position of this loader and the tile of the loader's container target.
---@default 1.5
---@optional true
---@type double
Loader1x2.container_distance = nil

---@default object
---@optional true
---@type RenderLayer
Loader1x2.structure_render_layer = nil

---<p>The speed of the belt (since 0.17): <code>speed × 480 = x Items/second</code></p><p>The raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt's maximum density - e.g. <code>x items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) = &lt;speed&gt; belts/tick</code> where a "belt" is the size of one tile. See <a href="/Transport_belts/Physics" title="Transport belts/Physics">Transport_belts/Physics</a> for more details.</p>
---@optional false
---@type double
Loader1x2.speed = nil

---@default 1
---@optional true
---@type double
Loader1x2.animation_speed_coefficient = nil

---Either this, or all of the properties below this one have to present.
---@optional true
---@type TransportBeltConnectableBeltAnimationSet
Loader1x2.belt_animation_set = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.belt_horizontal = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.belt_vertical = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.ending_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type Sprite4Way
Loader1x2.ending_patch = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.ending_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.ending_top = nil

---@default false
---@optional true
---@type bool
Loader1x2.ends_with_stopper = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.starting_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.starting_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Loader1x2.starting_top = nil

---@default true
---@optional true
---@type bool
Loader1x2.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Loader1x2.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Loader1x2.corpse = nil

---@default true
---@optional true
---@type bool
Loader1x2.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Loader1x2.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Loader1x2.dying_explosion = nil

---@optional true
---@type TriggerEffect
Loader1x2.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Loader1x2.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Loader1x2.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Loader1x2.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Loader1x2.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Loader1x2.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Loader1x2.max_health = nil

---@default false
---@optional true
---@type bool
Loader1x2.random_corpse_variation = nil

---@optional true
---@type SoundType
Loader1x2.repair_sound = nil

---@default 1
---@optional true
---@type float
Loader1x2.repair_speed_modifier = nil

---@optional true
---@type Resistances
Loader1x2.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Loader1x2.additional_pastable_entities = nil

---@optional true
---@type float
Loader1x2.alert_icon_scale = nil

---@optional true
---@type vector
Loader1x2.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Loader1x2.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Loader1x2.autoplace = nil

---@default 0
---@optional true
---@type double
Loader1x2.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Loader1x2.build_sound = nil

---@optional true
---@type SoundType
Loader1x2.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Loader1x2.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Loader1x2.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Loader1x2.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Loader1x2.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Loader1x2.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Loader1x2.emissions_per_second = nil

---@optional true
---@type Color
Loader1x2.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Loader1x2.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Loader1x2.flags = nil

---@optional true
---@type Color
Loader1x2.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Loader1x2.hit_visualization_box = nil

---@optional true
---@type Color
Loader1x2.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Loader1x2.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Loader1x2.minable = nil

---@optional true
---@type SoundType
Loader1x2.mined_sound = nil

---@optional true
---@type SoundType
Loader1x2.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Loader1x2.next_upgrade = nil

---@optional true
---@type SoundType
Loader1x2.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Loader1x2.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Loader1x2.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Loader1x2.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Loader1x2.remove_decoratives = nil

---@optional true
---@type SoundType
Loader1x2.rotated_sound = nil

---@default true
---@optional true
---@type bool
Loader1x2.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Loader1x2.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Loader1x2.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Loader1x2.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Loader1x2.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Loader1x2.subgroup = nil

---@optional true
---@type uint32
Loader1x2.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Loader1x2.tile_width = nil

---@optional true
---@type TriggerTargetMask
Loader1x2.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Loader1x2.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Loader1x2.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Loader1x2.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Loader1x2.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Loader1x2.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Loader1x2.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Loader1x2.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Loader1x2.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Loader1x2.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Loader1x2.icon_size = nil

---@default 0
---@optional true
---@type uint8
Loader1x2.icon_mipmaps = nil

---An item group. Item groups are shown above the list of craftable items in the player's inventory. The built-in groups are "logistics", "production", "intermediate-products" and "combat" but mods can define their own. See also <a href="/Prototype/Item#group" title="Prototype/Item">Prototype/Item#group</a>.
---@class ItemGroup
local ItemGroup = {}

---Items in recipes are ordered by item group. The <code>order_in_recipe</code> property can be used to specify the ordering in recipes without affecting the inventory order.
---@optional true
---@type Order
ItemGroup.order_in_recipe = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemGroup.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemGroup.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemGroup.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemGroup.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemGroup.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemGroup.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemGroup.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemGroup.icon_mipmaps = nil

---A <a href="/Splitter" title="Splitter">splitter</a>.
---@class Splitter
local Splitter = {}

---@optional false
---@type Animation4Way
Splitter.structure = nil

---@default 10
---@optional true
---@type uint32
Splitter.structure_animation_movement_cooldown = nil

---@default 1
---@optional true
---@type double
Splitter.structure_animation_speed_coefficient = nil

---Drawn 1 tile north of <code>structure</code> when the splitter is facing east or west.
---@optional true
---@type Animation4Way
Splitter.structure_patch = nil

---<p>The speed of the belt (since 0.17): <code>speed × 480 = x Items/second</code></p><p>The raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt's maximum density - e.g. <code>x items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) = &lt;speed&gt; belts/tick</code> where a "belt" is the size of one tile. See <a href="/Transport_belts/Physics" title="Transport belts/Physics">Transport_belts/Physics</a> for more details.</p>
---@optional false
---@type double
Splitter.speed = nil

---@default 1
---@optional true
---@type double
Splitter.animation_speed_coefficient = nil

---Either this, or all of the properties below this one have to present.
---@optional true
---@type TransportBeltConnectableBeltAnimationSet
Splitter.belt_animation_set = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.belt_horizontal = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.belt_vertical = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.ending_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type Sprite4Way
Splitter.ending_patch = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.ending_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.ending_top = nil

---@default false
---@optional true
---@type bool
Splitter.ends_with_stopper = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.starting_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.starting_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
Splitter.starting_top = nil

---@default true
---@optional true
---@type bool
Splitter.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Splitter.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Splitter.corpse = nil

---@default true
---@optional true
---@type bool
Splitter.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Splitter.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Splitter.dying_explosion = nil

---@optional true
---@type TriggerEffect
Splitter.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Splitter.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Splitter.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Splitter.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Splitter.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Splitter.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Splitter.max_health = nil

---@default false
---@optional true
---@type bool
Splitter.random_corpse_variation = nil

---@optional true
---@type SoundType
Splitter.repair_sound = nil

---@default 1
---@optional true
---@type float
Splitter.repair_speed_modifier = nil

---@optional true
---@type Resistances
Splitter.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Splitter.additional_pastable_entities = nil

---@optional true
---@type float
Splitter.alert_icon_scale = nil

---@optional true
---@type vector
Splitter.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Splitter.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Splitter.autoplace = nil

---@default 0
---@optional true
---@type double
Splitter.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Splitter.build_sound = nil

---@optional true
---@type SoundType
Splitter.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Splitter.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Splitter.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Splitter.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Splitter.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Splitter.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Splitter.emissions_per_second = nil

---@optional true
---@type Color
Splitter.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Splitter.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Splitter.flags = nil

---@optional true
---@type Color
Splitter.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Splitter.hit_visualization_box = nil

---@optional true
---@type Color
Splitter.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Splitter.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Splitter.minable = nil

---@optional true
---@type SoundType
Splitter.mined_sound = nil

---@optional true
---@type SoundType
Splitter.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Splitter.next_upgrade = nil

---@optional true
---@type SoundType
Splitter.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Splitter.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Splitter.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Splitter.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Splitter.remove_decoratives = nil

---@optional true
---@type SoundType
Splitter.rotated_sound = nil

---@default true
---@optional true
---@type bool
Splitter.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Splitter.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Splitter.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Splitter.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Splitter.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Splitter.subgroup = nil

---@optional true
---@type uint32
Splitter.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Splitter.tile_width = nil

---@optional true
---@type TriggerTargetMask
Splitter.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Splitter.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Splitter.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Splitter.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Splitter.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Splitter.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Splitter.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Splitter.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Splitter.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Splitter.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Splitter.icon_size = nil

---@default 0
---@optional true
---@type uint8
Splitter.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player finishes the game.
---@class FinishTheGameAchievement
local FinishTheGameAchievement = {}

---This lets the game know how long into a game, before you can no longer complete the achievement.
---@default 0
---@optional true
---@type uint32
FinishTheGameAchievement.until_second = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
FinishTheGameAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
FinishTheGameAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
FinishTheGameAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FinishTheGameAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FinishTheGameAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FinishTheGameAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FinishTheGameAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FinishTheGameAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FinishTheGameAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FinishTheGameAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
FinishTheGameAchievement.icon_mipmaps = nil

---An <a href="/Artillery_wagon" title="Artillery wagon">artillery wagon</a>.
---@class ArtilleryWagon
local ArtilleryWagon = {}

---Must be > 0.
---@optional false
---@type ItemCountType
ArtilleryWagon.ammo_stack_limit = nil

---Name of a <a href="/Prototype/Gun" title="Prototype/Gun">Prototype/Gun</a>.
---@optional false
---@type string
ArtilleryWagon.gun = nil

---Must be > 0.
---@optional false
---@type ItemStackIndex
ArtilleryWagon.inventory_size = nil

---Must be > 0.
---@optional false
---@type double
ArtilleryWagon.manual_range_modifier = nil

---@optional false
---@type double
ArtilleryWagon.turret_rotation_speed = nil

---Only loaded if <code>cannon_barrel_recoil_shiftings</code> is loaded.
---@optional true
---@type Vector3D
ArtilleryWagon.cannon_barrel_light_direction = nil

---@optional true
---@type RotatedSprite
ArtilleryWagon.cannon_barrel_pictures = nil

---@optional true
---@type Vector3D[]
ArtilleryWagon.cannon_barrel_recoil_shiftings = nil

---Only loaded if <code>cannon_barrel_recoil_shiftings</code> is loaded.
---@optional true
---@type Vector3D[]
ArtilleryWagon.cannon_barrel_recoil_shiftings_load_correction_matrix = nil

---@optional true
---@type RotatedSprite
ArtilleryWagon.cannon_base_pictures = nil

---Must match <code>cannon_base_pictures</code> frame count.
---@optional true
---@type vector[]
ArtilleryWagon.cannon_base_shiftings = nil

---@default 0
---@optional true
---@type uint16
ArtilleryWagon.cannon_parking_frame_count = nil

---@default 1
---@optional true
---@type float
ArtilleryWagon.cannon_parking_speed = nil

---@default false
---@optional true
---@type bool
ArtilleryWagon.disable_automatic_firing = nil

---@optional true
---@type InterruptibleSound
ArtilleryWagon.rotating_sound = nil

---l
---@optional true
---@type SoundType
ArtilleryWagon.rotating_stopped_sound = nil

---@default 0
---@optional true
---@type uint16
ArtilleryWagon.turn_after_shooting_cooldown = nil

---@optional false
---@type double
ArtilleryWagon.air_resistance = nil

---The distance between the joint of this rolling stock and its connected rolling stocks joint.
---@optional false
---@type double
ArtilleryWagon.connection_distance = nil

---<p>The length between this rolling stocks front and rear joints. Joints are the point where connection_distance is measured from when rolling stock are connected to one another. Wheels sprite are placed based on the joint position.</p><p>Maximum joint distance is 15.</p><p>Note: There needs to be border at least 0.2 between the bounding box edge and joint.</p>
---@optional false
---@type double
ArtilleryWagon.joint_distance = nil

---@optional false
---@type double
ArtilleryWagon.max_speed = nil

---@optional false
---@type RotatedSprite
ArtilleryWagon.pictures = nil

---@optional false
---@type double
ArtilleryWagon.vertical_selection_shift = nil

---@default true
---@optional true
---@type bool
ArtilleryWagon.allow_manual_color = nil

---@default false
---@optional true
---@type bool
ArtilleryWagon.allow_robot_dispatch_in_automatic_mode = nil

---@optional true
---@type LightDefinition
ArtilleryWagon.back_light = nil

---@optional true
---@type Color
ArtilleryWagon.color = nil

---Usually a sound to play when the rolling stock drives over a tie.
---@optional true
---@type TriggerEffect
ArtilleryWagon.drive_over_tie_trigger = nil

---@optional true
---@type AnimationType
ArtilleryWagon.horizontal_doors = nil

---@optional true
---@type LightDefinition
ArtilleryWagon.stand_by_light = nil

---@default 10.0
---@optional true
---@type double
ArtilleryWagon.tie_distance = nil

---@optional true
---@type AnimationType
ArtilleryWagon.vertical_doors = nil

---@optional true
---@type RotatedSprite
ArtilleryWagon.wheels = nil

---@optional true
---@type double
ArtilleryWagon.braking_force = nil

---@optional true
---@type Energy
ArtilleryWagon.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
ArtilleryWagon.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
ArtilleryWagon.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
ArtilleryWagon.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
ArtilleryWagon.weight = nil

---@optional true
---@type TriggerEffect
ArtilleryWagon.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
ArtilleryWagon.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
ArtilleryWagon.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
ArtilleryWagon.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
ArtilleryWagon.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
ArtilleryWagon.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
ArtilleryWagon.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
ArtilleryWagon.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
ArtilleryWagon.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
ArtilleryWagon.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ArtilleryWagon.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ArtilleryWagon.corpse = nil

---@default true
---@optional true
---@type bool
ArtilleryWagon.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ArtilleryWagon.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ArtilleryWagon.dying_explosion = nil

---@optional true
---@type TriggerEffect
ArtilleryWagon.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ArtilleryWagon.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ArtilleryWagon.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ArtilleryWagon.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ArtilleryWagon.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ArtilleryWagon.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ArtilleryWagon.max_health = nil

---@default false
---@optional true
---@type bool
ArtilleryWagon.random_corpse_variation = nil

---@optional true
---@type SoundType
ArtilleryWagon.repair_sound = nil

---@default 1
---@optional true
---@type float
ArtilleryWagon.repair_speed_modifier = nil

---@optional true
---@type Resistances
ArtilleryWagon.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ArtilleryWagon.additional_pastable_entities = nil

---@optional true
---@type float
ArtilleryWagon.alert_icon_scale = nil

---@optional true
---@type vector
ArtilleryWagon.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ArtilleryWagon.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ArtilleryWagon.autoplace = nil

---@default 0
---@optional true
---@type double
ArtilleryWagon.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ArtilleryWagon.build_sound = nil

---@optional true
---@type SoundType
ArtilleryWagon.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ArtilleryWagon.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ArtilleryWagon.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ArtilleryWagon.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ArtilleryWagon.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ArtilleryWagon.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ArtilleryWagon.emissions_per_second = nil

---@optional true
---@type Color
ArtilleryWagon.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ArtilleryWagon.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ArtilleryWagon.flags = nil

---@optional true
---@type Color
ArtilleryWagon.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ArtilleryWagon.hit_visualization_box = nil

---@optional true
---@type Color
ArtilleryWagon.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ArtilleryWagon.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ArtilleryWagon.minable = nil

---@optional true
---@type SoundType
ArtilleryWagon.mined_sound = nil

---@optional true
---@type SoundType
ArtilleryWagon.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ArtilleryWagon.next_upgrade = nil

---@optional true
---@type SoundType
ArtilleryWagon.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ArtilleryWagon.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ArtilleryWagon.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ArtilleryWagon.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ArtilleryWagon.remove_decoratives = nil

---@optional true
---@type SoundType
ArtilleryWagon.rotated_sound = nil

---@default true
---@optional true
---@type bool
ArtilleryWagon.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ArtilleryWagon.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ArtilleryWagon.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ArtilleryWagon.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ArtilleryWagon.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ArtilleryWagon.subgroup = nil

---@optional true
---@type uint32
ArtilleryWagon.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ArtilleryWagon.tile_width = nil

---@optional true
---@type TriggerTargetMask
ArtilleryWagon.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ArtilleryWagon.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ArtilleryWagon.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ArtilleryWagon.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ArtilleryWagon.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ArtilleryWagon.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ArtilleryWagon.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ArtilleryWagon.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ArtilleryWagon.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ArtilleryWagon.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ArtilleryWagon.icon_size = nil

---@default 0
---@optional true
---@type uint8
ArtilleryWagon.icon_mipmaps = nil

---Used by <a href="/Nightvision" title="Nightvision">nightvision</a>.
---@class NightVisionEquipment
local NightVisionEquipment = {}

---@optional false
---@type DaytimeColorLookupTable
NightVisionEquipment.color_lookup = nil

---@optional false
---@type Energy
NightVisionEquipment.energy_input = nil

---@optional true
---@type SoundType
NightVisionEquipment.activate_sound = nil

---Must be >= 0 and <= 1.
---@default 0.5
---@optional true
---@type float
NightVisionEquipment.darkness_to_turn_on = nil

---@optional true
---@type SoundType
NightVisionEquipment.deactivate_sound = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
NightVisionEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
NightVisionEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
NightVisionEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
NightVisionEquipment.sprite = nil

---@optional true
---@type SpriteType
NightVisionEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
NightVisionEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
NightVisionEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
NightVisionEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
NightVisionEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
NightVisionEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
NightVisionEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
NightVisionEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
NightVisionEquipment.order = nil

---The arrows used for example in the campaign, they are literally just arrows.
---@class Arrow
local Arrow = {}

---@optional false
---@type SpriteType
Arrow.arrow_picture = nil

---@default false
---@optional true
---@type bool
Arrow.blinking = nil

---@optional true
---@type SpriteType
Arrow.circle_picture = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Arrow.additional_pastable_entities = nil

---@optional true
---@type float
Arrow.alert_icon_scale = nil

---@optional true
---@type vector
Arrow.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Arrow.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Arrow.autoplace = nil

---@default 0
---@optional true
---@type double
Arrow.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Arrow.build_sound = nil

---@optional true
---@type SoundType
Arrow.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Arrow.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Arrow.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Arrow.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Arrow.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Arrow.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Arrow.emissions_per_second = nil

---@optional true
---@type Color
Arrow.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Arrow.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Arrow.flags = nil

---@optional true
---@type Color
Arrow.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Arrow.hit_visualization_box = nil

---@optional true
---@type Color
Arrow.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Arrow.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Arrow.minable = nil

---@optional true
---@type SoundType
Arrow.mined_sound = nil

---@optional true
---@type SoundType
Arrow.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Arrow.next_upgrade = nil

---@optional true
---@type SoundType
Arrow.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Arrow.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Arrow.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Arrow.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Arrow.remove_decoratives = nil

---@optional true
---@type SoundType
Arrow.rotated_sound = nil

---@default true
---@optional true
---@type bool
Arrow.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Arrow.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Arrow.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Arrow.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Arrow.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Arrow.subgroup = nil

---@optional true
---@type uint32
Arrow.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Arrow.tile_width = nil

---@optional true
---@type TriggerTargetMask
Arrow.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Arrow.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Arrow.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Arrow.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Arrow.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Arrow.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Arrow.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Arrow.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Arrow.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Arrow.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Arrow.icon_size = nil

---@default 0
---@optional true
---@type uint8
Arrow.icon_mipmaps = nil

---A <a href="/Nuclear_reactor" title="Nuclear reactor">reactor</a>.
---@class Reactor
local Reactor = {}

---@optional false
---@type Energy
Reactor.consumption = nil

---May not be a heat energy source.
---@optional false
---@type EnergySource
Reactor.energy_source = nil

---@optional false
---@type HeatBuffer
Reactor.heat_buffer = nil

---@optional false
---@type SpriteType
Reactor.working_light_picture = nil

---If defined, number of variations must be at least equal to count of <a href="/Types/HeatBuffer#connections" title="Types/HeatBuffer">connections</a> defined in <code>heat_buffer</code>. Each variation represents connected heat buffer connection of corresponding index.
---@optional true
---@type SpriteVariations
Reactor.connection_patches_connected = nil

---If defined, number of variations must be at least equal to count of <a href="/Types/HeatBuffer#connections" title="Types/HeatBuffer">connections</a> defined in <code>heat_buffer</code>. Each variation represents unconnected heat buffer connection of corresponding index.
---@optional true
---@type SpriteVariations
Reactor.connection_patches_disconnected = nil

---When <code>use_fuel_glow_color</code> is true, this is the color used as <code>working_light_picture</code> tint for fuels that don't have glow color defined.
---@default {1,1,1,1}
---@optional true
---@type Color
Reactor.default_fuel_glow_color = nil

---If defined, number of variations must be at least equal to count of <a href="/Types/HeatBuffer#connections" title="Types/HeatBuffer">connections</a> defined in <code>heat_buffer</code>. When reactor is heated, corresponding variations are drawn over <code>connection_patches_connected</code>.
---@optional true
---@type SpriteVariations
Reactor.heat_connection_patches_connected = nil

---If defined, number of variations must be at least equal to count of <a href="/Types/HeatBuffer#connections" title="Types/HeatBuffer">connections</a> defined in <code>heat_buffer</code>. When reactor is heated, corresponding variations are drawn over <code>connection_patches_disconnected</code>.
---@optional true
---@type SpriteVariations
Reactor.heat_connection_patches_disconnected = nil

---@optional true
---@type SpriteType
Reactor.heat_lower_layer_picture = nil

---@optional true
---@type LightDefinition
Reactor.light = nil

---@optional true
---@type SpriteType
Reactor.lower_layer_picture = nil

---The action is triggered when the reactor dies (is destroyed) at over 90% of max temperature.
---@optional true
---@type Trigger
Reactor.meltdown_action = nil

---@default 1
---@optional true
---@type double
Reactor.neighbour_bonus = nil

---The collision box of a reactor is increased by this on the sides where it connects to another reactor. Cannot be negative.
---@default 0.25
---@optional true
---@type double
Reactor.neighbour_collision_increase = nil

---@optional true
---@type SpriteType
Reactor.picture = nil

---@default false
---@optional true
---@type bool
Reactor.scale_energy_usage = nil

---Whether the reactor should use <a href="/Prototype/Item#fuel_glow_color" title="Prototype/Item">fuel_glow_color</a> from the fuel item prototype as light color and tint for <code>working_light_picture</code>.<a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/71121">[1]</a>
---@default false
---@optional true
---@type bool
Reactor.use_fuel_glow_color = nil

---@default true
---@optional true
---@type bool
Reactor.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Reactor.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Reactor.corpse = nil

---@default true
---@optional true
---@type bool
Reactor.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Reactor.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Reactor.dying_explosion = nil

---@optional true
---@type TriggerEffect
Reactor.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Reactor.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Reactor.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Reactor.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Reactor.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Reactor.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Reactor.max_health = nil

---@default false
---@optional true
---@type bool
Reactor.random_corpse_variation = nil

---@optional true
---@type SoundType
Reactor.repair_sound = nil

---@default 1
---@optional true
---@type float
Reactor.repair_speed_modifier = nil

---@optional true
---@type Resistances
Reactor.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Reactor.additional_pastable_entities = nil

---@optional true
---@type float
Reactor.alert_icon_scale = nil

---@optional true
---@type vector
Reactor.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Reactor.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Reactor.autoplace = nil

---@default 0
---@optional true
---@type double
Reactor.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Reactor.build_sound = nil

---@optional true
---@type SoundType
Reactor.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Reactor.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Reactor.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Reactor.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Reactor.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Reactor.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Reactor.emissions_per_second = nil

---@optional true
---@type Color
Reactor.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Reactor.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Reactor.flags = nil

---@optional true
---@type Color
Reactor.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Reactor.hit_visualization_box = nil

---@optional true
---@type Color
Reactor.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Reactor.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Reactor.minable = nil

---@optional true
---@type SoundType
Reactor.mined_sound = nil

---@optional true
---@type SoundType
Reactor.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Reactor.next_upgrade = nil

---@optional true
---@type SoundType
Reactor.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Reactor.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Reactor.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Reactor.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Reactor.remove_decoratives = nil

---@optional true
---@type SoundType
Reactor.rotated_sound = nil

---@default true
---@optional true
---@type bool
Reactor.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Reactor.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Reactor.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Reactor.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Reactor.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Reactor.subgroup = nil

---@optional true
---@type uint32
Reactor.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Reactor.tile_width = nil

---@optional true
---@type TriggerTargetMask
Reactor.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Reactor.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Reactor.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Reactor.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Reactor.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Reactor.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Reactor.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Reactor.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Reactor.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Reactor.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Reactor.icon_size = nil

---@default 0
---@optional true
---@type uint8
Reactor.icon_mipmaps = nil

---A speech bubble. It floats in the world and can display text.
---@class SpeechBubble
local SpeechBubble = {}

---Needs a style of the type "speech_bubble_style", defined inside the gui styles.
---@optional false
---@type string
SpeechBubble.style = nil

---@default 60
---@optional true
---@type uint32
SpeechBubble.fade_in_out_ticks = nil

---Needs a style of the type "flow_style", defined inside the gui styles.
---@default flow_style
---@optional true
---@type string
SpeechBubble.wrapper_flow_style = nil

---@default 0
---@optional true
---@type double
SpeechBubble.y_offset = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SpeechBubble.additional_pastable_entities = nil

---@optional true
---@type float
SpeechBubble.alert_icon_scale = nil

---@optional true
---@type vector
SpeechBubble.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SpeechBubble.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SpeechBubble.autoplace = nil

---@default 0
---@optional true
---@type double
SpeechBubble.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SpeechBubble.build_sound = nil

---@optional true
---@type SoundType
SpeechBubble.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SpeechBubble.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SpeechBubble.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SpeechBubble.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SpeechBubble.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SpeechBubble.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SpeechBubble.emissions_per_second = nil

---@optional true
---@type Color
SpeechBubble.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SpeechBubble.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SpeechBubble.flags = nil

---@optional true
---@type Color
SpeechBubble.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SpeechBubble.hit_visualization_box = nil

---@optional true
---@type Color
SpeechBubble.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SpeechBubble.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SpeechBubble.minable = nil

---@optional true
---@type SoundType
SpeechBubble.mined_sound = nil

---@optional true
---@type SoundType
SpeechBubble.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SpeechBubble.next_upgrade = nil

---@optional true
---@type SoundType
SpeechBubble.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SpeechBubble.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SpeechBubble.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SpeechBubble.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SpeechBubble.remove_decoratives = nil

---@optional true
---@type SoundType
SpeechBubble.rotated_sound = nil

---@default true
---@optional true
---@type bool
SpeechBubble.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SpeechBubble.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SpeechBubble.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SpeechBubble.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SpeechBubble.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SpeechBubble.subgroup = nil

---@optional true
---@type uint32
SpeechBubble.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SpeechBubble.tile_width = nil

---@optional true
---@type TriggerTargetMask
SpeechBubble.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SpeechBubble.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SpeechBubble.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SpeechBubble.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SpeechBubble.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SpeechBubble.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SpeechBubble.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SpeechBubble.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SpeechBubble.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SpeechBubble.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SpeechBubble.icon_size = nil

---@default 0
---@optional true
---@type uint8
SpeechBubble.icon_mipmaps = nil

---A <a href="/Repair_pack" title="Repair pack">repair pack</a>.
---@class RepairTool
local RepairTool = {}

---@optional false
---@type float
RepairTool.speed = nil

---@optional true
---@type Trigger
RepairTool.repair_result = nil

---The durability of this tool. Must be positive. Mandatory if <code>infinite</code> is false.
---@optional true
---@type double
RepairTool.durability = nil

---May not be longer than 200 characters.
---@default description.durability-key
---@optional true
---@type string
RepairTool.durability_description_key = nil

---May not be longer than 200 characters.
---@default description.durability-value
---@optional true
---@type string
RepairTool.durability_description_value = nil

---Whether this tool has infinite durability.
---@default true
---@optional true
---@type bool
RepairTool.infinite = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
RepairTool.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
RepairTool.burnt_result = nil

---@optional true
---@type SoundType
RepairTool.close_sound = nil

---@optional true
---@type IconData[]
RepairTool.dark_background_icons = nil

---@optional true
---@type FileName
RepairTool.dark_background_icon = nil

---@optional true
---@type ItemCountType
RepairTool.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
RepairTool.flags = nil

---@default 1.0
---@optional true
---@type double
RepairTool.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
RepairTool.fuel_category = nil

---@default 1.0
---@optional true
---@type double
RepairTool.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
RepairTool.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
RepairTool.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
RepairTool.fuel_value = nil

---@optional true
---@type SoundType
RepairTool.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
RepairTool.pictures = nil

---@optional true
---@type PlaceAsTile
RepairTool.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
RepairTool.place_result = nil

---@optional true
---@type string
RepairTool.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
RepairTool.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
RepairTool.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
RepairTool.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
RepairTool.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RepairTool.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RepairTool.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RepairTool.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RepairTool.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RepairTool.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RepairTool.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RepairTool.icon_size = nil

---@default 0
---@optional true
---@type uint8
RepairTool.icon_mipmaps = nil

---The abstract base of all rolling stock.
---@class RollingStock
local RollingStock = {}

---@optional false
---@type double
RollingStock.air_resistance = nil

---The distance between the joint of this rolling stock and its connected rolling stocks joint.
---@optional false
---@type double
RollingStock.connection_distance = nil

---<p>The length between this rolling stocks front and rear joints. Joints are the point where connection_distance is measured from when rolling stock are connected to one another. Wheels sprite are placed based on the joint position.</p><p>Maximum joint distance is 15.</p><p>Note: There needs to be border at least 0.2 between the bounding box edge and joint.</p>
---@optional false
---@type double
RollingStock.joint_distance = nil

---@optional false
---@type double
RollingStock.max_speed = nil

---@optional false
---@type RotatedSprite
RollingStock.pictures = nil

---@optional false
---@type double
RollingStock.vertical_selection_shift = nil

---@default true
---@optional true
---@type bool
RollingStock.allow_manual_color = nil

---@default false
---@optional true
---@type bool
RollingStock.allow_robot_dispatch_in_automatic_mode = nil

---@optional true
---@type LightDefinition
RollingStock.back_light = nil

---@optional true
---@type Color
RollingStock.color = nil

---Usually a sound to play when the rolling stock drives over a tie.
---@optional true
---@type TriggerEffect
RollingStock.drive_over_tie_trigger = nil

---@optional true
---@type AnimationType
RollingStock.horizontal_doors = nil

---@optional true
---@type LightDefinition
RollingStock.stand_by_light = nil

---@default 10.0
---@optional true
---@type double
RollingStock.tie_distance = nil

---@optional true
---@type AnimationType
RollingStock.vertical_doors = nil

---@optional true
---@type RotatedSprite
RollingStock.wheels = nil

---@optional true
---@type double
RollingStock.braking_force = nil

---@optional true
---@type Energy
RollingStock.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
RollingStock.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
RollingStock.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
RollingStock.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
RollingStock.weight = nil

---@optional true
---@type TriggerEffect
RollingStock.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
RollingStock.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
RollingStock.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
RollingStock.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
RollingStock.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
RollingStock.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
RollingStock.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
RollingStock.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
RollingStock.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
RollingStock.alert_when_damaged = nil

---@optional true
---@type AttackReaction
RollingStock.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
RollingStock.corpse = nil

---@default true
---@optional true
---@type bool
RollingStock.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
RollingStock.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
RollingStock.dying_explosion = nil

---@optional true
---@type TriggerEffect
RollingStock.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
RollingStock.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
RollingStock.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
RollingStock.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
RollingStock.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
RollingStock.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
RollingStock.max_health = nil

---@default false
---@optional true
---@type bool
RollingStock.random_corpse_variation = nil

---@optional true
---@type SoundType
RollingStock.repair_sound = nil

---@default 1
---@optional true
---@type float
RollingStock.repair_speed_modifier = nil

---@optional true
---@type Resistances
RollingStock.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RollingStock.additional_pastable_entities = nil

---@optional true
---@type float
RollingStock.alert_icon_scale = nil

---@optional true
---@type vector
RollingStock.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RollingStock.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RollingStock.autoplace = nil

---@default 0
---@optional true
---@type double
RollingStock.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RollingStock.build_sound = nil

---@optional true
---@type SoundType
RollingStock.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RollingStock.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RollingStock.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RollingStock.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RollingStock.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RollingStock.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RollingStock.emissions_per_second = nil

---@optional true
---@type Color
RollingStock.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RollingStock.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RollingStock.flags = nil

---@optional true
---@type Color
RollingStock.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RollingStock.hit_visualization_box = nil

---@optional true
---@type Color
RollingStock.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RollingStock.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RollingStock.minable = nil

---@optional true
---@type SoundType
RollingStock.mined_sound = nil

---@optional true
---@type SoundType
RollingStock.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RollingStock.next_upgrade = nil

---@optional true
---@type SoundType
RollingStock.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RollingStock.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RollingStock.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RollingStock.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RollingStock.remove_decoratives = nil

---@optional true
---@type SoundType
RollingStock.rotated_sound = nil

---@default true
---@optional true
---@type bool
RollingStock.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RollingStock.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RollingStock.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RollingStock.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RollingStock.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RollingStock.subgroup = nil

---@optional true
---@type uint32
RollingStock.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RollingStock.tile_width = nil

---@optional true
---@type TriggerTargetMask
RollingStock.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RollingStock.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RollingStock.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RollingStock.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RollingStock.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RollingStock.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RollingStock.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RollingStock.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RollingStock.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RollingStock.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RollingStock.icon_size = nil

---@default 0
---@optional true
---@type uint8
RollingStock.icon_mipmaps = nil

---The default map settings. Only 1 instance of this prototype can exist.
---@class MapSettings
local MapSettings = {}

---@optional false
---@type MapSettingsDifficultySettings
MapSettings.difficulty_settings = nil

---@optional false
---@type MapSettingsEnemyEvolution
MapSettings.enemy_evolution = nil

---@optional false
---@type MapSettingsEnemyExpansion
MapSettings.enemy_expansion = nil

---If a behavior fails this many times, the enemy (or enemy group) is destroyed. This solves biters stuck within their own base.
---@optional false
---@type uint32
MapSettings.max_failed_behavior_count = nil

---Name of the map-settings. Must be "map-settings" since only one instances of this prototype can be defined.
---@optional false
---@type string
MapSettings.name = nil

---@optional false
---@type MapSettingsPathFinder
MapSettings.path_finder = nil

---The pollution settings, the values are for 60 ticks (1 second).
---@optional false
---@type MapSettingsPollution
MapSettings.pollution = nil

---@optional false
---@type MapSettingsSteering
MapSettings.steering = nil

---@optional false
---@type MapSettingsSteeringUnitGroup
MapSettings.unit_group = nil

---A straight rail.
---@class StraightRail
local StraightRail = {}

---Must be "straight".
---@default straight
---@optional true
---@type string
StraightRail.bending_type = nil

---@optional false
---@type RailRemnantsPictures
StraightRail.pictures = nil

---Sound played when a character walks over this rail.
---@optional true
---@type SoundType
StraightRail.walking_sound = nil

---@default true
---@optional true
---@type bool
StraightRail.alert_when_damaged = nil

---@optional true
---@type AttackReaction
StraightRail.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
StraightRail.corpse = nil

---@default true
---@optional true
---@type bool
StraightRail.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
StraightRail.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
StraightRail.dying_explosion = nil

---@optional true
---@type TriggerEffect
StraightRail.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
StraightRail.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
StraightRail.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
StraightRail.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
StraightRail.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
StraightRail.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
StraightRail.max_health = nil

---@default false
---@optional true
---@type bool
StraightRail.random_corpse_variation = nil

---@optional true
---@type SoundType
StraightRail.repair_sound = nil

---@default 1
---@optional true
---@type float
StraightRail.repair_speed_modifier = nil

---@optional true
---@type Resistances
StraightRail.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
StraightRail.additional_pastable_entities = nil

---@optional true
---@type float
StraightRail.alert_icon_scale = nil

---@optional true
---@type vector
StraightRail.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
StraightRail.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
StraightRail.autoplace = nil

---@default 0
---@optional true
---@type double
StraightRail.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
StraightRail.build_sound = nil

---@optional true
---@type SoundType
StraightRail.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
StraightRail.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
StraightRail.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
StraightRail.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
StraightRail.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
StraightRail.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
StraightRail.emissions_per_second = nil

---@optional true
---@type Color
StraightRail.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
StraightRail.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
StraightRail.flags = nil

---@optional true
---@type Color
StraightRail.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
StraightRail.hit_visualization_box = nil

---@optional true
---@type Color
StraightRail.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
StraightRail.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
StraightRail.minable = nil

---@optional true
---@type SoundType
StraightRail.mined_sound = nil

---@optional true
---@type SoundType
StraightRail.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
StraightRail.next_upgrade = nil

---@optional true
---@type SoundType
StraightRail.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
StraightRail.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
StraightRail.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
StraightRail.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
StraightRail.remove_decoratives = nil

---@optional true
---@type SoundType
StraightRail.rotated_sound = nil

---@default true
---@optional true
---@type bool
StraightRail.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
StraightRail.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
StraightRail.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
StraightRail.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
StraightRail.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
StraightRail.subgroup = nil

---@optional true
---@type uint32
StraightRail.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
StraightRail.tile_width = nil

---@optional true
---@type TriggerTargetMask
StraightRail.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
StraightRail.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
StraightRail.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
StraightRail.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
StraightRail.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
StraightRail.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
StraightRail.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
StraightRail.order = nil

---Path to the icon file.
---@optional true
---@type FileName
StraightRail.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
StraightRail.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
StraightRail.icon_size = nil

---@default 0
---@optional true
---@type uint8
StraightRail.icon_mipmaps = nil

---A <a href="/Fluid_wagon" title="Fluid wagon">fluid wagon</a>.
---@class FluidWagon
local FluidWagon = {}

---@optional false
---@type double
FluidWagon.capacity = nil

---Must be 1, 2 or 3.
---@default 3
---@optional true
---@type uint8
FluidWagon.tank_count = nil

---@optional false
---@type double
FluidWagon.air_resistance = nil

---The distance between the joint of this rolling stock and its connected rolling stocks joint.
---@optional false
---@type double
FluidWagon.connection_distance = nil

---<p>The length between this rolling stocks front and rear joints. Joints are the point where connection_distance is measured from when rolling stock are connected to one another. Wheels sprite are placed based on the joint position.</p><p>Maximum joint distance is 15.</p><p>Note: There needs to be border at least 0.2 between the bounding box edge and joint.</p>
---@optional false
---@type double
FluidWagon.joint_distance = nil

---@optional false
---@type double
FluidWagon.max_speed = nil

---@optional false
---@type RotatedSprite
FluidWagon.pictures = nil

---@optional false
---@type double
FluidWagon.vertical_selection_shift = nil

---@default true
---@optional true
---@type bool
FluidWagon.allow_manual_color = nil

---@default false
---@optional true
---@type bool
FluidWagon.allow_robot_dispatch_in_automatic_mode = nil

---@optional true
---@type LightDefinition
FluidWagon.back_light = nil

---@optional true
---@type Color
FluidWagon.color = nil

---Usually a sound to play when the rolling stock drives over a tie.
---@optional true
---@type TriggerEffect
FluidWagon.drive_over_tie_trigger = nil

---@optional true
---@type AnimationType
FluidWagon.horizontal_doors = nil

---@optional true
---@type LightDefinition
FluidWagon.stand_by_light = nil

---@default 10.0
---@optional true
---@type double
FluidWagon.tie_distance = nil

---@optional true
---@type AnimationType
FluidWagon.vertical_doors = nil

---@optional true
---@type RotatedSprite
FluidWagon.wheels = nil

---@optional true
---@type double
FluidWagon.braking_force = nil

---@optional true
---@type Energy
FluidWagon.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
FluidWagon.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
FluidWagon.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
FluidWagon.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
FluidWagon.weight = nil

---@optional true
---@type TriggerEffect
FluidWagon.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
FluidWagon.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
FluidWagon.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
FluidWagon.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
FluidWagon.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
FluidWagon.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
FluidWagon.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
FluidWagon.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
FluidWagon.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
FluidWagon.alert_when_damaged = nil

---@optional true
---@type AttackReaction
FluidWagon.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
FluidWagon.corpse = nil

---@default true
---@optional true
---@type bool
FluidWagon.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
FluidWagon.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
FluidWagon.dying_explosion = nil

---@optional true
---@type TriggerEffect
FluidWagon.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
FluidWagon.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
FluidWagon.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
FluidWagon.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
FluidWagon.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
FluidWagon.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
FluidWagon.max_health = nil

---@default false
---@optional true
---@type bool
FluidWagon.random_corpse_variation = nil

---@optional true
---@type SoundType
FluidWagon.repair_sound = nil

---@default 1
---@optional true
---@type float
FluidWagon.repair_speed_modifier = nil

---@optional true
---@type Resistances
FluidWagon.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FluidWagon.additional_pastable_entities = nil

---@optional true
---@type float
FluidWagon.alert_icon_scale = nil

---@optional true
---@type vector
FluidWagon.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FluidWagon.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FluidWagon.autoplace = nil

---@default 0
---@optional true
---@type double
FluidWagon.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FluidWagon.build_sound = nil

---@optional true
---@type SoundType
FluidWagon.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FluidWagon.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FluidWagon.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FluidWagon.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FluidWagon.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FluidWagon.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FluidWagon.emissions_per_second = nil

---@optional true
---@type Color
FluidWagon.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FluidWagon.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FluidWagon.flags = nil

---@optional true
---@type Color
FluidWagon.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FluidWagon.hit_visualization_box = nil

---@optional true
---@type Color
FluidWagon.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FluidWagon.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FluidWagon.minable = nil

---@optional true
---@type SoundType
FluidWagon.mined_sound = nil

---@optional true
---@type SoundType
FluidWagon.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FluidWagon.next_upgrade = nil

---@optional true
---@type SoundType
FluidWagon.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FluidWagon.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FluidWagon.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FluidWagon.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FluidWagon.remove_decoratives = nil

---@optional true
---@type SoundType
FluidWagon.rotated_sound = nil

---@default true
---@optional true
---@type bool
FluidWagon.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FluidWagon.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FluidWagon.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FluidWagon.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FluidWagon.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FluidWagon.subgroup = nil

---@optional true
---@type uint32
FluidWagon.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FluidWagon.tile_width = nil

---@optional true
---@type TriggerTargetMask
FluidWagon.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FluidWagon.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FluidWagon.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FluidWagon.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FluidWagon.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FluidWagon.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FluidWagon.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FluidWagon.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FluidWagon.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FluidWagon.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FluidWagon.icon_size = nil

---@default 0
---@optional true
---@type uint8
FluidWagon.icon_mipmaps = nil

---Creates particles.
---@class ParticleSource
local ParticleSource = {}

---@optional false
---@type float
ParticleSource.height = nil

---@optional false
---@type float
ParticleSource.horizontal_speed = nil

---Name of a <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a>. Either this or <code>smoke</code> must be defined.
---@optional false
---@type string
ParticleSource.particle = nil

---@optional false
---@type float
ParticleSource.time_before_start = nil

---@optional false
---@type float
ParticleSource.time_to_live = nil

---@optional false
---@type float
ParticleSource.vertical_speed = nil

---@default 0
---@optional true
---@type float
ParticleSource.height_deviation = nil

---@default 0
---@optional true
---@type float
ParticleSource.horizontal_speed_deviation = nil

---@default 0
---@optional true
---@type float
ParticleSource.time_before_start_deviation = nil

---@default 0
---@optional true
---@type float
ParticleSource.time_to_live_deviation = nil

---@default 0
---@optional true
---@type float
ParticleSource.vertical_speed_deviation = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ParticleSource.additional_pastable_entities = nil

---@optional true
---@type float
ParticleSource.alert_icon_scale = nil

---@optional true
---@type vector
ParticleSource.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ParticleSource.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ParticleSource.autoplace = nil

---@default 0
---@optional true
---@type double
ParticleSource.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ParticleSource.build_sound = nil

---@optional true
---@type SoundType
ParticleSource.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ParticleSource.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ParticleSource.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ParticleSource.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ParticleSource.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ParticleSource.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ParticleSource.emissions_per_second = nil

---@optional true
---@type Color
ParticleSource.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ParticleSource.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ParticleSource.flags = nil

---@optional true
---@type Color
ParticleSource.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ParticleSource.hit_visualization_box = nil

---@optional true
---@type Color
ParticleSource.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ParticleSource.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ParticleSource.minable = nil

---@optional true
---@type SoundType
ParticleSource.mined_sound = nil

---@optional true
---@type SoundType
ParticleSource.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ParticleSource.next_upgrade = nil

---@optional true
---@type SoundType
ParticleSource.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ParticleSource.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ParticleSource.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ParticleSource.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ParticleSource.remove_decoratives = nil

---@optional true
---@type SoundType
ParticleSource.rotated_sound = nil

---@default true
---@optional true
---@type bool
ParticleSource.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ParticleSource.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ParticleSource.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ParticleSource.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ParticleSource.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ParticleSource.subgroup = nil

---@optional true
---@type uint32
ParticleSource.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ParticleSource.tile_width = nil

---@optional true
---@type TriggerTargetMask
ParticleSource.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ParticleSource.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ParticleSource.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ParticleSource.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ParticleSource.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ParticleSource.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ParticleSource.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ParticleSource.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ParticleSource.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ParticleSource.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ParticleSource.icon_size = nil

---@default 0
---@optional true
---@type uint8
ParticleSource.icon_mipmaps = nil

---Abstract base type for decider and arithmetic combinators.
---@class Combinator
local Combinator = {}

---@optional false
---@type Energy
Combinator.active_energy_usage = nil

---Array of 4 vectors.
---@optional false
---@type vector[]
Combinator.activity_led_light_offsets = nil

---@optional false
---@type Sprite4Way
Combinator.activity_led_sprites = nil

---Must be an electric or void energy source.
---@optional false
---@type EnergySource
Combinator.energy_source = nil

---@optional false
---@type BoundingBox
Combinator.input_connection_bounding_box = nil

---Array of 4 WireConnectionPoints.
---@optional false
---@type WireConnectionPoint[]
Combinator.input_connection_points = nil

---@optional false
---@type BoundingBox
Combinator.output_connection_bounding_box = nil

---Array of 4 WireConnectionPoints.
---@optional false
---@type WireConnectionPoint[]
Combinator.output_connection_points = nil

---Array of 4 vectors.
---@optional false
---@type vector[]
Combinator.screen_light_offsets = nil

---@optional false
---@type Sprite4Way
Combinator.sprites = nil

---@default 5
---@optional true
---@type uint8
Combinator.activity_led_hold_time = nil

---@optional true
---@type LightDefinition
Combinator.activity_led_light = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
Combinator.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
Combinator.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Combinator.draw_copper_wires = nil

---@optional true
---@type LightDefinition
Combinator.screen_light = nil

---@default true
---@optional true
---@type bool
Combinator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Combinator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Combinator.corpse = nil

---@default true
---@optional true
---@type bool
Combinator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Combinator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Combinator.dying_explosion = nil

---@optional true
---@type TriggerEffect
Combinator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Combinator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Combinator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Combinator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Combinator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Combinator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Combinator.max_health = nil

---@default false
---@optional true
---@type bool
Combinator.random_corpse_variation = nil

---@optional true
---@type SoundType
Combinator.repair_sound = nil

---@default 1
---@optional true
---@type float
Combinator.repair_speed_modifier = nil

---@optional true
---@type Resistances
Combinator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Combinator.additional_pastable_entities = nil

---@optional true
---@type float
Combinator.alert_icon_scale = nil

---@optional true
---@type vector
Combinator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Combinator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Combinator.autoplace = nil

---@default 0
---@optional true
---@type double
Combinator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Combinator.build_sound = nil

---@optional true
---@type SoundType
Combinator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Combinator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Combinator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Combinator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Combinator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Combinator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Combinator.emissions_per_second = nil

---@optional true
---@type Color
Combinator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Combinator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Combinator.flags = nil

---@optional true
---@type Color
Combinator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Combinator.hit_visualization_box = nil

---@optional true
---@type Color
Combinator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Combinator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Combinator.minable = nil

---@optional true
---@type SoundType
Combinator.mined_sound = nil

---@optional true
---@type SoundType
Combinator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Combinator.next_upgrade = nil

---@optional true
---@type SoundType
Combinator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Combinator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Combinator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Combinator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Combinator.remove_decoratives = nil

---@optional true
---@type SoundType
Combinator.rotated_sound = nil

---@default true
---@optional true
---@type bool
Combinator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Combinator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Combinator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Combinator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Combinator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Combinator.subgroup = nil

---@optional true
---@type uint32
Combinator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Combinator.tile_width = nil

---@optional true
---@type TriggerTargetMask
Combinator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Combinator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Combinator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Combinator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Combinator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Combinator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Combinator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Combinator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Combinator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Combinator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Combinator.icon_size = nil

---@default 0
---@optional true
---@type uint8
Combinator.icon_mipmaps = nil

---A <a href="/Rocket_silo" title="Rocket silo">rocket silo</a>.
---@class RocketSilo
local RocketSilo = {}

---@optional false
---@type Energy
RocketSilo.active_energy_usage = nil

---@optional false
---@type AnimationType
RocketSilo.arm_01_back_animation = nil

---@optional false
---@type AnimationType
RocketSilo.arm_02_right_animation = nil

---@optional false
---@type AnimationType
RocketSilo.arm_03_front_animation = nil

---@optional false
---@type SpriteType
RocketSilo.base_day_sprite = nil

---@optional false
---@type SpriteType
RocketSilo.base_front_sprite = nil

---@optional false
---@type vector
RocketSilo.door_back_open_offset = nil

---@optional false
---@type SpriteType
RocketSilo.door_back_sprite = nil

---@optional false
---@type vector
RocketSilo.door_front_open_offset = nil

---@optional false
---@type SpriteType
RocketSilo.door_front_sprite = nil

---@optional false
---@type double
RocketSilo.door_opening_speed = nil

---@optional false
---@type Energy
RocketSilo.energy_usage = nil

---@optional false
---@type BoundingBox
RocketSilo.hole_clipping_box = nil

---@optional false
---@type SpriteType
RocketSilo.hole_light_sprite = nil

---@optional false
---@type SpriteType
RocketSilo.hole_sprite = nil

---@optional false
---@type Energy
RocketSilo.idle_energy_usage = nil

---@optional false
---@type Energy
RocketSilo.lamp_energy_usage = nil

---@optional false
---@type double
RocketSilo.light_blinking_speed = nil

---@optional false
---@type SpriteType
RocketSilo.red_lights_back_sprites = nil

---@optional false
---@type SpriteType
RocketSilo.red_lights_front_sprites = nil

---Name of a <a href="/Prototype/RocketSiloRocket" title="Prototype/RocketSiloRocket">Prototype/RocketSiloRocket</a>.
---@optional false
---@type string
RocketSilo.rocket_entity = nil

---@optional false
---@type SpriteType
RocketSilo.rocket_glow_overlay_sprite = nil

---@optional false
---@type uint32
RocketSilo.rocket_parts_required = nil

---@optional false
---@type SpriteType
RocketSilo.rocket_shadow_overlay_sprite = nil

---@optional false
---@type AnimationType
RocketSilo.satellite_animation = nil

---@optional false
---@type AnimationType
RocketSilo.satellite_shadow_animation = nil

---@optional false
---@type SpriteType
RocketSilo.shadow_sprite = nil

---@optional false
---@type double
RocketSilo.silo_fade_out_end_distance = nil

---@optional false
---@type double
RocketSilo.silo_fade_out_start_distance = nil

---@optional false
---@type uint8
RocketSilo.times_to_blink = nil

---@optional true
---@type SoundType
RocketSilo.alarm_sound = nil

---@optional true
---@type TriggerEffect
RocketSilo.alarm_trigger = nil

---@optional true
---@type LightDefinition
RocketSilo.base_engine_light = nil

---@optional true
---@type LightDefinition
RocketSilo.base_light = nil

---@optional true
---@type SpriteType
RocketSilo.base_night_sprite = nil

---@optional true
---@type SoundType
RocketSilo.clamps_off_sound = nil

---@optional true
---@type TriggerEffect
RocketSilo.clamps_off_trigger = nil

---@optional true
---@type SoundType
RocketSilo.clamps_on_sound = nil

---@optional true
---@type TriggerEffect
RocketSilo.clamps_on_trigger = nil

---@optional true
---@type SoundType
RocketSilo.doors_sound = nil

---@optional true
---@type TriggerEffect
RocketSilo.doors_trigger = nil

---@optional true
---@type SoundType
RocketSilo.flying_sound = nil

---@optional true
---@type SoundType
RocketSilo.raise_rocket_sound = nil

---@optional true
---@type TriggerEffect
RocketSilo.raise_rocket_trigger = nil

---@optional true
---@type ItemStackIndex
RocketSilo.rocket_result_inventory_size = nil

---The preset recipe of this machine. This machine does not show a recipe selection if this is set. The base game uses this for the <a href="/Rocket_silo" title="Rocket silo">rocket silo</a>.
---@optional true
---@type string
RocketSilo.fixed_recipe = nil

---The locale key of the title of the GUI that is shown when the player opens the assembling machine.
---@optional true
---@type string
RocketSilo.gui_title_key = nil

---<p>Sets the maximum number of ingredients this machine can craft with. Any recipe with more ingredients than this will be unavailable in this machine.</p><p>This only counts item ingredients, not fluid ingredients! This means if ingredient count is 2, and the recipe has 2 item ingredients and 1 fluid ingredient, it can still be crafted in the machine.</p>
---@default 255
---@optional true
---@type uint8
RocketSilo.ingredient_count = nil

---A list of recipe categories this crafting machine can use.
---@optional false
---@type strings[]
RocketSilo.crafting_categories = nil

---<p>How fast this crafting machine can craft. 1 means that for example a 1 second long recipe take 1 second to craft. 0.5 means it takes 2 seconds, and 2 means it takes 0.5 seconds.</p><p>Crafting speed has to be positive.</p>
---@optional false
---@type double
RocketSilo.crafting_speed = nil

---<p>Defines how the crafting machine is powered.</p><p>When using an electric energy source and <code>drain</code> is not specified, it will be set to <code>energy_usage ÷ 30</code> automatically.</p>
---@optional false
---@type EnergySource
RocketSilo.energy_source = nil

---Sets how much energy this machine uses while crafting. Energy usage has to be positive.
---@optional false
---@type Energy
RocketSilo.energy_usage = nil

---Sets the module effects that are allowed to be used on this machine.
---@optional true
---@type EffectTypeLimitation
RocketSilo.allowed_effects = nil

---Only loaded if <code>idle_animation</code> is present.
---@default false
---@optional true
---@type bool
RocketSilo.always_draw_idle_animation = nil

---<p>The animation played when crafting. When the crafting machine is idle, the animation will be paused.</p><p>When a crafting machine cannot be rotated, only the north rotation of the animation will be used.</p>
---@optional true
---@type Animation4Way
RocketSilo.animation = nil

---Productivity bonus that this machine always has.
---@default 0
---@optional true
---@type float
RocketSilo.base_productivity = nil

---Each key/value pair is optional and defaults to the above value.
---@optional true
---@type TintColors
RocketSilo.default_recipe_tint = nil

---Whether the "alt-mode icon" should have a black background.
---@default true
---@optional true
---@type bool
RocketSilo.draw_entity_info_icon_background = nil

---Shift of the "alt-mode icon" relative to the machine's center.
---@optional true
---@type vector
RocketSilo.entity_info_icon_shift = nil

---<p>Can have off_when_no_fluid_recipe key that has a <a href="/Types/bool" title="Types/bool">bool</a> value. off_when_no_fluid_recipe defaults to false. off_when_no_fluid_recipe is ignored by <a href="/Prototype/Furnace" title="Prototype/Furnace">Prototype/Furnaces</a> and considered to always be false.</p><p>If a crafting machine has fluid boxes and off_when_no_fluid_recipe is true, the crafting machine can only be rotated when a recipe consuming or producing fluid is set, or it has one of the other properties listed at the top of the page.</p>
---@optional true
---@type FluidBox[]
RocketSilo.fluid_boxes = nil

---<p>Idle animation must have the same frame count as animation. It is used for drawing the machine in idle state, but the is animation frozen on a single frame when the machine is idle.</p><p>This is an animation and not just sprite to make it possible for idle state and working state to match their visuals when the machine switches from one state to another.</p><p>When a crafting machine cannot be rotated, only the north rotation of the idle animation will be used.</p>
---@optional true
---@type Animation4Way
RocketSilo.idle_animation = nil

---Whether the speed of the animation and working visualization should be based on the machine's speed (boosted or slowed by modules).
---@default false
---@optional true
---@type bool
RocketSilo.match_animation_speed_to_activity = nil

---The number of module slots in this machine, and their icon positions.
---@optional true
---@type ModuleSpecification
RocketSilo.module_specification = nil

---Controls whether the ingredients of an in-progress recipe are destroyed when mining the machine/changing the recipe. If set to true, the ingredients do not get destroyed. This affects only the ingredients of the recipe that is currently in progress, so those that visually have already been consumed while their resulting product has not yet been produced.
---@default true
---@optional true
---@type bool
RocketSilo.return_ingredients_on_change = nil

---Whether the "alt-mode icon" should be scaled to the size of the machine.
---@default false
---@optional true
---@type bool
RocketSilo.scale_entity_info_icon = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
RocketSilo.shift_animation_transition_duration = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
RocketSilo.shift_animation_waypoint_stop_duration = nil

---Only loaded if one of <code>shift_animation_waypoint_stop_duration</code> or <code>shift_animation_transition_duration</code> is not 0.
---@optional true
---@type CraftingMachineShiftAnimationWaypoints
RocketSilo.shift_animation_waypoints = nil

---Whether the "alt-mode icon" should be drawn at all.
---@default true
---@optional true
---@type bool
RocketSilo.show_recipe_icon = nil

---@optional true
---@type CraftingMachineStatusColors
RocketSilo.status_colors = nil

---@optional true
---@type WorkingVisualisation[]
RocketSilo.working_visualisations = nil

---@default true
---@optional true
---@type bool
RocketSilo.alert_when_damaged = nil

---@optional true
---@type AttackReaction
RocketSilo.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
RocketSilo.corpse = nil

---@default true
---@optional true
---@type bool
RocketSilo.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
RocketSilo.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
RocketSilo.dying_explosion = nil

---@optional true
---@type TriggerEffect
RocketSilo.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
RocketSilo.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
RocketSilo.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
RocketSilo.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
RocketSilo.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
RocketSilo.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
RocketSilo.max_health = nil

---@default false
---@optional true
---@type bool
RocketSilo.random_corpse_variation = nil

---@optional true
---@type SoundType
RocketSilo.repair_sound = nil

---@default 1
---@optional true
---@type float
RocketSilo.repair_speed_modifier = nil

---@optional true
---@type Resistances
RocketSilo.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RocketSilo.additional_pastable_entities = nil

---@optional true
---@type float
RocketSilo.alert_icon_scale = nil

---@optional true
---@type vector
RocketSilo.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RocketSilo.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RocketSilo.autoplace = nil

---@default 0
---@optional true
---@type double
RocketSilo.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RocketSilo.build_sound = nil

---@optional true
---@type SoundType
RocketSilo.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RocketSilo.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RocketSilo.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RocketSilo.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RocketSilo.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RocketSilo.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RocketSilo.emissions_per_second = nil

---@optional true
---@type Color
RocketSilo.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RocketSilo.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RocketSilo.flags = nil

---@optional true
---@type Color
RocketSilo.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RocketSilo.hit_visualization_box = nil

---@optional true
---@type Color
RocketSilo.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RocketSilo.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RocketSilo.minable = nil

---@optional true
---@type SoundType
RocketSilo.mined_sound = nil

---@optional true
---@type SoundType
RocketSilo.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RocketSilo.next_upgrade = nil

---@optional true
---@type SoundType
RocketSilo.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RocketSilo.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RocketSilo.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RocketSilo.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RocketSilo.remove_decoratives = nil

---@optional true
---@type SoundType
RocketSilo.rotated_sound = nil

---@default true
---@optional true
---@type bool
RocketSilo.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RocketSilo.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RocketSilo.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RocketSilo.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RocketSilo.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RocketSilo.subgroup = nil

---@optional true
---@type uint32
RocketSilo.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RocketSilo.tile_width = nil

---@optional true
---@type TriggerTargetMask
RocketSilo.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RocketSilo.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RocketSilo.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RocketSilo.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RocketSilo.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RocketSilo.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RocketSilo.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RocketSilo.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RocketSilo.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RocketSilo.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RocketSilo.icon_size = nil

---@default 0
---@optional true
---@type uint8
RocketSilo.icon_mipmaps = nil

---This Prototype definition is used for receiving an achievement when you build an entity.
---@class BuildEntityAchievement
local BuildEntityAchievement = {}

---This will trigger the achievement, if this entity is placed.
---@optional false
---@type string
BuildEntityAchievement.to_build = nil

---How many entities need to be built.
---@default 1
---@optional true
---@type uint32
BuildEntityAchievement.amount = nil

---If this is false, the player carries over their statistics from this achievement through all their saves.
---@default false
---@optional true
---@type bool
BuildEntityAchievement.limited_to_one_game = nil

---This lets the game know how long into a game, before you can no longer complete the achievement.
---@default 0
---@optional true
---@type uint32
BuildEntityAchievement.until_second = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
BuildEntityAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
BuildEntityAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
BuildEntityAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
BuildEntityAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
BuildEntityAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
BuildEntityAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
BuildEntityAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
BuildEntityAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
BuildEntityAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
BuildEntityAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
BuildEntityAchievement.icon_mipmaps = nil

---Used in the base game as a base for the blueprint item and the deconstruction item.
---@class SelectionTool
local SelectionTool = {}

---The color of the rectangle used when alt-selection is done in-game.
---@optional false
---@type Color
SelectionTool.alt_selection_color = nil

---The type of cursor box used to render selection of entities/tiles when alt selecting. Possible values are identical to normal selection_cursor_box_type.
---@optional false
---@type string
SelectionTool.alt_selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool alt-selects things in-game. Possible values are identical to normal selection_mode.
---@optional false
---@type SelectionToolSelectionMode
SelectionTool.alt_selection_mode = nil

---The color of the rectangle used when standard selection is done in-game.
---@optional false
---@type Color
SelectionTool.selection_color = nil

---The type of cursor box used to render selection of entities/tiles when standard selecting.
---@optional false
---@type string
SelectionTool.selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool selects things in-game.
---@optional false
---@type SelectionToolSelectionMode
SelectionTool.selection_mode = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
SelectionTool.alt_entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
SelectionTool.alt_entity_filters = nil

---@optional true
---@type string[]
SelectionTool.alt_entity_type_filters = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
SelectionTool.alt_tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
SelectionTool.alt_tile_filters = nil

---If tiles should be included in the selection regardless of entities also being in the selection. This is a visual only setting.
---@default false
---@optional true
---@type bool
SelectionTool.always_include_tiles = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
SelectionTool.entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
SelectionTool.entity_filters = nil

---@optional true
---@type string[]
SelectionTool.entity_type_filters = nil

---Name of a <a href="/Prototype/MouseCursor" title="Prototype/MouseCursor">Prototype/MouseCursor</a>.
---@default selection-tool-cursor
---@optional true
---@type string
SelectionTool.mouse_cursor = nil

---Whether this is shown in the blueprint library. Unused as of 0.18.13 as the ability to show any selection tools in the blueprint library was removed.
---@default false
---@optional true
---@type bool
SelectionTool.show_in_library = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
SelectionTool.tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
SelectionTool.tile_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
SelectionTool.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
SelectionTool.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
SelectionTool.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
SelectionTool.burnt_result = nil

---@optional true
---@type SoundType
SelectionTool.close_sound = nil

---@optional true
---@type IconData[]
SelectionTool.dark_background_icons = nil

---@optional true
---@type FileName
SelectionTool.dark_background_icon = nil

---@optional true
---@type ItemCountType
SelectionTool.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
SelectionTool.flags = nil

---@default 1.0
---@optional true
---@type double
SelectionTool.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
SelectionTool.fuel_category = nil

---@default 1.0
---@optional true
---@type double
SelectionTool.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
SelectionTool.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
SelectionTool.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
SelectionTool.fuel_value = nil

---@optional true
---@type SoundType
SelectionTool.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
SelectionTool.pictures = nil

---@optional true
---@type PlaceAsTile
SelectionTool.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
SelectionTool.place_result = nil

---@optional true
---@type string
SelectionTool.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
SelectionTool.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
SelectionTool.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
SelectionTool.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
SelectionTool.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SelectionTool.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SelectionTool.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SelectionTool.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SelectionTool.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SelectionTool.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SelectionTool.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SelectionTool.icon_size = nil

---@default 0
---@optional true
---@type uint8
SelectionTool.icon_mipmaps = nil

---A <a href="/Train_stop" title="Train stop">train stop</a>.
---@class TrainStop
local TrainStop = {}

---@optional false
---@type uint32
TrainStop.animation_ticks_per_frame = nil

---@optional true
---@type Animation4Way
TrainStop.animations = nil

---@default true
---@optional true
---@type bool
TrainStop.chart_name = nil

---Array of 4 CircuitConnectorSpritess. Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
TrainStop.circuit_connector_sprites = nil

---Array of 4 WireConnectionPoints. Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
TrainStop.circuit_wire_connection_points = nil

---@default 0
---@optional true
---@type double
TrainStop.circuit_wire_max_distance = nil

---@optional true
---@type Color
TrainStop.color = nil

---@optional true
---@type SignalIDConnector
TrainStop.default_train_stopped_signal = nil

---@default true
---@optional true
---@type bool
TrainStop.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
TrainStop.draw_copper_wires = nil

---@optional true
---@type TrainStopDrawingBoxes
TrainStop.drawing_boxes = nil

---@optional true
---@type TrainStopLight
TrainStop.light1 = nil

---@optional true
---@type TrainStopLight
TrainStop.light2 = nil

---@optional true
---@type Animation4Way
TrainStop.rail_overlay_animations = nil

---@optional true
---@type Animation4Way
TrainStop.top_animations = nil

---@default true
---@optional true
---@type bool
TrainStop.alert_when_damaged = nil

---@optional true
---@type AttackReaction
TrainStop.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
TrainStop.corpse = nil

---@default true
---@optional true
---@type bool
TrainStop.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
TrainStop.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
TrainStop.dying_explosion = nil

---@optional true
---@type TriggerEffect
TrainStop.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
TrainStop.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
TrainStop.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
TrainStop.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
TrainStop.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
TrainStop.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
TrainStop.max_health = nil

---@default false
---@optional true
---@type bool
TrainStop.random_corpse_variation = nil

---@optional true
---@type SoundType
TrainStop.repair_sound = nil

---@default 1
---@optional true
---@type float
TrainStop.repair_speed_modifier = nil

---@optional true
---@type Resistances
TrainStop.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
TrainStop.additional_pastable_entities = nil

---@optional true
---@type float
TrainStop.alert_icon_scale = nil

---@optional true
---@type vector
TrainStop.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
TrainStop.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
TrainStop.autoplace = nil

---@default 0
---@optional true
---@type double
TrainStop.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
TrainStop.build_sound = nil

---@optional true
---@type SoundType
TrainStop.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
TrainStop.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
TrainStop.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
TrainStop.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
TrainStop.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
TrainStop.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
TrainStop.emissions_per_second = nil

---@optional true
---@type Color
TrainStop.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
TrainStop.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
TrainStop.flags = nil

---@optional true
---@type Color
TrainStop.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
TrainStop.hit_visualization_box = nil

---@optional true
---@type Color
TrainStop.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
TrainStop.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
TrainStop.minable = nil

---@optional true
---@type SoundType
TrainStop.mined_sound = nil

---@optional true
---@type SoundType
TrainStop.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
TrainStop.next_upgrade = nil

---@optional true
---@type SoundType
TrainStop.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
TrainStop.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
TrainStop.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
TrainStop.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
TrainStop.remove_decoratives = nil

---@optional true
---@type SoundType
TrainStop.rotated_sound = nil

---@default true
---@optional true
---@type bool
TrainStop.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
TrainStop.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
TrainStop.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
TrainStop.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
TrainStop.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
TrainStop.subgroup = nil

---@optional true
---@type uint32
TrainStop.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
TrainStop.tile_width = nil

---@optional true
---@type TriggerTargetMask
TrainStop.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
TrainStop.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
TrainStop.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
TrainStop.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TrainStop.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TrainStop.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TrainStop.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TrainStop.order = nil

---Path to the icon file.
---@optional true
---@type FileName
TrainStop.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
TrainStop.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
TrainStop.icon_size = nil

---@default 0
---@optional true
---@type uint8
TrainStop.icon_mipmaps = nil

---Sprites used by the game that are not specific to certain prototypes. Only one instance of UtilityConstants can be defined, the base uses <code>"default"</code> as the name, so unless the base game definition is completely removed, <code>name</code> will have to be <code>"default"</code>.
---@class UtilitySprites
local UtilitySprites = {}

---@optional false
---@type UtilitySpritesCursorBox
UtilitySprites.cursor_box = nil

---@optional false
---@type AnimationType
UtilitySprites.clouds = nil

---@optional false
---@type AnimationType
UtilitySprites.arrow_button = nil

---@optional false
---@type AnimationType
UtilitySprites.explosion_chart_visualization = nil

---@optional false
---@type AnimationType
UtilitySprites.refresh_white = nil

---@optional false
---@type SpriteType
UtilitySprites.center = nil

---@optional false
---@type SpriteType
UtilitySprites.check_mark = nil

---@optional false
---@type SpriteType
UtilitySprites.check_mark_white = nil

---@optional false
---@type SpriteType
UtilitySprites.check_mark_green = nil

---@optional false
---@type SpriteType
UtilitySprites.check_mark_dark_green = nil

---@optional false
---@type SpriteType
UtilitySprites.not_played_yet_green = nil

---@optional false
---@type SpriteType
UtilitySprites.not_played_yet_dark_green = nil

---@optional false
---@type SpriteType
UtilitySprites.played_green = nil

---@optional false
---@type SpriteType
UtilitySprites.played_dark_green = nil

---@optional false
---@type SpriteType
UtilitySprites.close_fat = nil

---@optional false
---@type SpriteType
UtilitySprites.close_white = nil

---@optional false
---@type SpriteType
UtilitySprites.close_black = nil

---@optional false
---@type SpriteType
UtilitySprites.color_picker = nil

---@optional false
---@type SpriteType
UtilitySprites.change_recipe = nil

---@optional false
---@type SpriteType
UtilitySprites.dropdown = nil

---@optional false
---@type SpriteType
UtilitySprites.downloading = nil

---@optional false
---@type SpriteType
UtilitySprites.downloading_white = nil

---@optional false
---@type SpriteType
UtilitySprites.downloaded = nil

---@optional false
---@type SpriteType
UtilitySprites.downloaded_white = nil

---@optional false
---@type SpriteType
UtilitySprites.equipment_grid = nil

---@optional false
---@type SpriteType
UtilitySprites.expand_dots = nil

---@optional false
---@type SpriteType
UtilitySprites.expand_dots_white = nil

---@optional false
---@type SpriteType
UtilitySprites.export = nil

---@optional false
---@type SpriteType
UtilitySprites.import = nil

---@optional false
---@type SpriteType
UtilitySprites.map = nil

---@optional false
---@type SpriteType
UtilitySprites.map_exchange_string = nil

---@optional false
---@type SpriteType
UtilitySprites.missing_mod_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.not_available = nil

---@optional false
---@type SpriteType
UtilitySprites.play = nil

---@optional false
---@type SpriteType
UtilitySprites.stop = nil

---@optional false
---@type SpriteType
UtilitySprites.preset = nil

---@optional false
---@type SpriteType
UtilitySprites.refresh = nil

---@optional false
---@type SpriteType
UtilitySprites.reset = nil

---@optional false
---@type SpriteType
UtilitySprites.reset_white = nil

---@optional false
---@type SpriteType
UtilitySprites.shuffle = nil

---@optional false
---@type SpriteType
UtilitySprites.station_name = nil

---@optional false
---@type SpriteType
UtilitySprites.search_black = nil

---@optional false
---@type SpriteType
UtilitySprites.search_white = nil

---@optional false
---@type SpriteType
UtilitySprites.sync_mods = nil

---@optional false
---@type SpriteType
UtilitySprites.trash = nil

---@optional false
---@type SpriteType
UtilitySprites.trash_white = nil

---@optional false
---@type SpriteType
UtilitySprites.copy = nil

---@optional false
---@type SpriteType
UtilitySprites.reassign = nil

---@optional false
---@type SpriteType
UtilitySprites.warning = nil

---@optional false
---@type SpriteType
UtilitySprites.warning_white = nil

---@optional false
---@type SpriteType
UtilitySprites.list_view = nil

---@optional false
---@type SpriteType
UtilitySprites.grid_view = nil

---@optional false
---@type SpriteType
UtilitySprites.reference_point = nil

---@optional false
---@type SpriteType
UtilitySprites.mouse_cursor = nil

---@optional false
---@type SpriteType
UtilitySprites.mod_dependency_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.add = nil

---@optional false
---@type SpriteType
UtilitySprites.clone = nil

---@optional false
---@type SpriteType
UtilitySprites.go_to_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.pause = nil

---@optional false
---@type SpriteType
UtilitySprites.speed_down = nil

---@optional false
---@type SpriteType
UtilitySprites.speed_up = nil

---@optional false
---@type SpriteType
UtilitySprites.editor_speed_down = nil

---@optional false
---@type SpriteType
UtilitySprites.editor_pause = nil

---@optional false
---@type SpriteType
UtilitySprites.editor_play = nil

---@optional false
---@type SpriteType
UtilitySprites.editor_speed_up = nil

---@optional false
---@type SpriteType
UtilitySprites.tick_once = nil

---@optional false
---@type SpriteType
UtilitySprites.tick_sixty = nil

---@optional false
---@type SpriteType
UtilitySprites.tick_custom = nil

---@optional false
---@type SpriteType
UtilitySprites.search_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.too_far = nil

---@optional false
---@type SpriteType
UtilitySprites.shoot_cursor_green = nil

---@optional false
---@type SpriteType
UtilitySprites.shoot_cursor_red = nil

---@optional false
---@type SpriteType
UtilitySprites.electricity_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.fuel_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.ammo_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.fluid_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.warning_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.danger_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.destroyed_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.recharge_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.too_far_from_roboport_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.pump_cannot_connect_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.not_enough_repair_packs_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.not_enough_construction_robots_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.no_building_material_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.no_storage_space_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.electricity_icon_unplugged = nil

---@optional false
---@type SpriteType
UtilitySprites.game_stopped_visualization = nil

---@optional false
---@type SpriteType
UtilitySprites.pollution_visualization = nil

---@optional false
---@type SpriteType
UtilitySprites.health_bar_green_pip = nil

---@optional false
---@type SpriteType
UtilitySprites.health_bar_yellow_pip = nil

---@optional false
---@type SpriteType
UtilitySprites.health_bar_red_pip = nil

---@optional false
---@type SpriteType
UtilitySprites.ghost_bar_pip = nil

---@optional false
---@type SpriteType
UtilitySprites.bar_gray_pip = nil

---@optional false
---@type SpriteType
UtilitySprites.shield_bar_pip = nil

---@optional false
---@type SpriteType
UtilitySprites.hand = nil

---@optional false
---@type SpriteType
UtilitySprites.hand_black = nil

---@optional false
---@type SpriteType
UtilitySprites.entity_info_dark_background = nil

---@optional false
---@type SpriteType
UtilitySprites.medium_gui_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.small_gui_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.light_medium = nil

---@optional false
---@type SpriteType
UtilitySprites.light_small = nil

---@optional false
---@type SpriteType
UtilitySprites.light_cone = nil

---@optional false
---@type SpriteType
UtilitySprites.color_effect = nil

---@optional false
---@type SpriteType
UtilitySprites.clock = nil

---@optional false
---@type SpriteType
UtilitySprites.default_ammo_damage_modifier_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.default_gun_speed_modifier_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.default_turret_attack_modifier_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.hint_arrow_up = nil

---@optional false
---@type SpriteType
UtilitySprites.hint_arrow_down = nil

---@optional false
---@type SpriteType
UtilitySprites.hint_arrow_right = nil

---@optional false
---@type SpriteType
UtilitySprites.hint_arrow_left = nil

---@optional false
---@type SpriteType
UtilitySprites.fluid_indication_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.fluid_indication_arrow_both_ways = nil

---@optional false
---@type SpriteType
UtilitySprites.heat_exchange_indication = nil

---@optional false
---@type SpriteType
UtilitySprites.indication_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.rail_planner_indication_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.rail_planner_indication_arrow_too_far = nil

---@optional false
---@type SpriteType
UtilitySprites.rail_path_not_possible = nil

---@optional false
---@type SpriteType
UtilitySprites.indication_line = nil

---@optional false
---@type SpriteType
UtilitySprites.short_indication_line = nil

---@optional false
---@type SpriteType
UtilitySprites.short_indication_line_green = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_module = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_module_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_armor = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_armor_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_gun = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_gun_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_ammo = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_ammo_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_resource = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_resource_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_fuel = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_fuel_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_result = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_result_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_robot = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_robot_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_robot_material = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_robot_material_black = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_inserter_hand = nil

---@optional false
---@type SpriteType
UtilitySprites.slot_icon_inserter_hand_black = nil

---@optional false
---@type SpriteType
UtilitySprites.upgrade_blueprint = nil

---@optional false
---@type SpriteType
UtilitySprites.slot = nil

---@optional false
---@type SpriteType
UtilitySprites.equipment_slot = nil

---@optional false
---@type SpriteType
UtilitySprites.equipment_collision = nil

---@optional false
---@type SpriteType
UtilitySprites.battery = nil

---@optional false
---@type SpriteType
UtilitySprites.green_circle = nil

---@optional false
---@type SpriteType
UtilitySprites.green_dot = nil

---@optional false
---@type SpriteType
UtilitySprites.robot_slot = nil

---@optional false
---@type SpriteType
UtilitySprites.set_bar_slot = nil

---@optional false
---@type SpriteType
UtilitySprites.missing_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.deconstruction_mark = nil

---@optional false
---@type SpriteType
UtilitySprites.upgrade_mark = nil

---@optional false
---@type SpriteType
UtilitySprites.confirm_slot = nil

---@optional false
---@type SpriteType
UtilitySprites.export_slot = nil

---@optional false
---@type SpriteType
UtilitySprites.import_slot = nil

---@optional false
---@type SpriteType
UtilitySprites.none_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.cable_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.tile_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.decorative_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.resource_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.entity_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.item_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.force_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.clone_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.scripting_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.paint_bucket_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.surface_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.time_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.cliff_editor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.brush_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.spray_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.cursor_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.area_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.line_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.variations_tool_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.lua_snippet_tool_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.editor_selection = nil

---@optional false
---@type SpriteType
UtilitySprites.brush_square_shape = nil

---@optional false
---@type SpriteType
UtilitySprites.brush_circle_shape = nil

---@optional false
---@type SpriteType
UtilitySprites.player_force_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.neutral_force_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.enemy_force_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.nature_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.no_nature_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.multiplayer_waiting_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.spawn_flag = nil

---@optional false
---@type SpriteType
UtilitySprites.questionmark = nil

---@optional false
---@type SpriteType
UtilitySprites.copper_wire = nil

---@optional false
---@type SpriteType
UtilitySprites.green_wire = nil

---@optional false
---@type SpriteType
UtilitySprites.red_wire = nil

---@optional false
---@type SpriteType
UtilitySprites.green_wire_hightlight = nil

---@optional false
---@type SpriteType
UtilitySprites.red_wire_hightlight = nil

---@optional false
---@type SpriteType
UtilitySprites.wire_shadow = nil

---@optional false
---@type SpriteType
UtilitySprites.and_or = nil

---@optional false
---@type SpriteType
UtilitySprites.left_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.right_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.down_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.enter = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_blueprint_library_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_production_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_bonus_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_tutorials_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_train_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_achievements_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_menu_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_map_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_blueprint_library_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_production_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_bonus_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_tutorials_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_train_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_achievements_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_menu_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.side_menu_map_hover_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.circuit_network_panel_black = nil

---@optional false
---@type SpriteType
UtilitySprites.circuit_network_panel_white = nil

---@optional false
---@type SpriteType
UtilitySprites.logistic_network_panel_black = nil

---@optional false
---@type SpriteType
UtilitySprites.logistic_network_panel_white = nil

---@optional false
---@type SpriteType
UtilitySprites.rename_icon_small_black = nil

---@optional false
---@type SpriteType
UtilitySprites.rename_icon_small_white = nil

---@optional false
---@type SpriteType
UtilitySprites.rename_icon_normal = nil

---@optional false
---@type SpriteType
UtilitySprites.achievement_label_locked = nil

---@optional false
---@type SpriteType
UtilitySprites.achievement_label_unlocked_off = nil

---@optional false
---@type SpriteType
UtilitySprites.achievement_label_unlocked = nil

---@optional false
---@type SpriteType
UtilitySprites.achievement_label_failed = nil

---@optional false
---@type SpriteType
UtilitySprites.rail_signal_placement_indicator = nil

---@optional false
---@type SpriteType
UtilitySprites.train_stop_placement_indicator = nil

---@optional false
---@type SpriteType
UtilitySprites.placement_indicator_leg = nil

---@optional false
---@type SpriteType
UtilitySprites.grey_rail_signal_placement_indicator = nil

---@optional false
---@type SpriteType
UtilitySprites.grey_placement_indicator_leg = nil

---@optional false
---@type SpriteType
UtilitySprites.logistic_radius_visualization = nil

---@optional false
---@type SpriteType
UtilitySprites.construction_radius_visualization = nil

---@optional false
---@type SpriteType
UtilitySprites.track_button = nil

---@optional false
---@type SpriteType
UtilitySprites.show_logistics_network_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_electric_network_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_turret_range_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_pollution_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_train_station_names_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_player_names_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_tags_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_worker_robots_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_rail_signal_states_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_recipe_icons_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.show_logistics_network_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_electric_network_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_turret_range_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_pollution_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_train_station_names_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_player_names_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_tags_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_worker_robots_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_rail_signal_states_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.show_recipe_icons_in_map_view_black = nil

---@optional false
---@type SpriteType
UtilitySprites.train_stop_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.train_stop_disabled_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.train_stop_full_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.custom_tag_in_map_view = nil

---@optional false
---@type SpriteType
UtilitySprites.covered_chunk = nil

---@optional false
---@type SpriteType
UtilitySprites.white_square = nil

---@optional false
---@type SpriteType
UtilitySprites.white_mask = nil

---@optional false
---@type SpriteType
UtilitySprites.favourite_server_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.crafting_machine_recipe_not_unlocked = nil

---@optional false
---@type SpriteType
UtilitySprites.gps_map_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.custom_tag_icon = nil

---@optional false
---@type SpriteType
UtilitySprites.underground_remove_belts = nil

---@optional false
---@type SpriteType
UtilitySprites.underground_remove_pipes = nil

---@optional false
---@type SpriteType
UtilitySprites.underground_pipe_connection = nil

---@optional false
---@type SpriteType
UtilitySprites.ghost_cursor = nil

---@optional false
---@type SpriteType
UtilitySprites.tile_ghost_cursor = nil

---@optional false
---@type SpriteType
UtilitySprites.expand = nil

---@optional false
---@type SpriteType
UtilitySprites.expand_dark = nil

---@optional false
---@type SpriteType
UtilitySprites.collapse = nil

---@optional false
---@type SpriteType
UtilitySprites.collapse_dark = nil

---@optional false
---@type SpriteType
UtilitySprites.status_working = nil

---@optional false
---@type SpriteType
UtilitySprites.status_not_working = nil

---@optional false
---@type SpriteType
UtilitySprites.status_yellow = nil

---@optional false
---@type SpriteType
UtilitySprites.gradient = nil

---@optional false
---@type SpriteType
UtilitySprites.output_console_gradient = nil

---@optional false
---@type SpriteType
UtilitySprites.select_icon_black = nil

---@optional false
---@type SpriteType
UtilitySprites.select_icon_white = nil

---@optional false
---@type SpriteType
UtilitySprites.notification = nil

---@optional false
---@type SpriteType
UtilitySprites.alert_arrow = nil

---@optional false
---@type SpriteType
UtilitySprites.technology_black = nil

---@optional false
---@type SpriteType
UtilitySprites.technology_white = nil

---@optional false
---@type SpriteType
UtilitySprites.inserter_stack_size_bonus_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.inserter_stack_size_bonus_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.stack_inserter_capacity_bonus_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.stack_inserter_capacity_bonus_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.laboratory_speed_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.laboratory_speed_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_logistic_slots_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_logistic_slots_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_logistic_trash_slots_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_logistic_trash_slots_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.maximum_following_robots_count_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.maximum_following_robots_count_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.worker_robot_speed_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.worker_robot_speed_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.worker_robot_storage_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.worker_robot_storage_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.ghost_time_to_live_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.ghost_time_to_live_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.turret_attack_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.turret_attack_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.ammo_damage_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.ammo_damage_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.give_item_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.give_item_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.gun_speed_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.gun_speed_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.unlock_recipe_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.unlock_recipe_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_crafting_speed_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_crafting_speed_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_mining_speed_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_mining_speed_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_running_speed_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_running_speed_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_build_distance_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_build_distance_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_item_drop_distance_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_item_drop_distance_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_reach_distance_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_reach_distance_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_resource_reach_distance_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_resource_reach_distance_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_item_pickup_distance_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_item_pickup_distance_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_loot_pickup_distance_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_loot_pickup_distance_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_inventory_slots_bonus_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_inventory_slots_bonus_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.deconstruction_time_to_live_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.deconstruction_time_to_live_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.max_failed_attempts_per_tick_per_construction_queue_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.max_failed_attempts_per_tick_per_construction_queue_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.max_successful_attempts_per_tick_per_construction_queue_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.max_successful_attempts_per_tick_per_construction_queue_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_health_bonus_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_health_bonus_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.mining_drill_productivity_bonus_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.mining_drill_productivity_bonus_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.train_braking_force_bonus_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.train_braking_force_bonus_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.zoom_to_world_enabled_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.zoom_to_world_enabled_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.zoom_to_world_ghost_building_enabled_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.zoom_to_world_ghost_building_enabled_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.zoom_to_world_blueprint_enabled_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.zoom_to_world_blueprint_enabled_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.zoom_to_world_deconstruction_planner_enabled_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.zoom_to_world_deconstruction_planner_enabled_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.zoom_to_world_upgrade_planner_enabled_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.zoom_to_world_upgrade_planner_enabled_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.zoom_to_world_selection_tool_enabled_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.zoom_to_world_selection_tool_enabled_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.worker_robot_battery_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.worker_robot_battery_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.laboratory_productivity_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.laboratory_productivity_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.follower_robot_lifetime_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.follower_robot_lifetime_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.artillery_range_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.artillery_range_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.nothing_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.nothing_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_additional_mining_categories_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_additional_mining_categories_modifier_constant = nil

---@optional false
---@type SpriteType
UtilitySprites.character_logistic_requests_modifier_icon = nil

---@optional true
---@type SpriteType
UtilitySprites.character_logistic_requests_modifier_constant = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
UtilitySprites.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
UtilitySprites.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
UtilitySprites.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
UtilitySprites.order = nil

---An entity with animation and a trigger.
---@class SmokeWithTrigger
local SmokeWithTrigger = {}

---@optional true
---@type Trigger
SmokeWithTrigger.action = nil

---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.action_cooldown = nil

---@default 1
---@optional true
---@type uint8
SmokeWithTrigger.particle_count = nil

---@default 0.0
---@optional true
---@type float
SmokeWithTrigger.particle_distance_scale_factor = nil

---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.particle_duration_variation = nil

---@optional true
---@type vector
SmokeWithTrigger.particle_scale_factor = nil

---@optional true
---@type vector
SmokeWithTrigger.particle_spread = nil

---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.spread_duration_variation = nil

---@optional true
---@type vector
SmokeWithTrigger.wave_distance = nil

---@optional true
---@type vector
SmokeWithTrigger.wave_speed = nil

---@optional false
---@type AnimationType
SmokeWithTrigger.animation = nil

---Smoke always moves randomly unless <code>movement_slow_down_factor</code> is 0. If <code>affected_by_wind</code> is true, the smoke will also be moved by wind.
---@default true
---@optional true
---@type bool
SmokeWithTrigger.affected_by_wind = nil

---@optional true
---@type Color
SmokeWithTrigger.color = nil

---@default false
---@optional true
---@type bool
SmokeWithTrigger.cyclic = nil

---May not be 0 if cyclic is true.
---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.duration = nil

---@default 1.0
---@optional true
---@type double
SmokeWithTrigger.end_scale = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.fade_away_duration = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.fade_in_duration = nil

---@optional true
---@type AnimationType
SmokeWithTrigger.glow_animation = nil

---@optional true
---@type uint32
SmokeWithTrigger.glow_fade_away_duration = nil

---Value between 0 and 1, with 0 being no movement.
---@default 0.995
---@optional true
---@type double
SmokeWithTrigger.movement_slow_down_factor = nil

---@default smoke
---@optional true
---@type RenderLayer
SmokeWithTrigger.render_layer = nil

---@default false
---@optional true
---@type bool
SmokeWithTrigger.show_when_smoke_off = nil

---@default 0
---@optional true
---@type uint32
SmokeWithTrigger.spread_duration = nil

---@default 1.0
---@optional true
---@type double
SmokeWithTrigger.start_scale = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SmokeWithTrigger.additional_pastable_entities = nil

---@optional true
---@type float
SmokeWithTrigger.alert_icon_scale = nil

---@optional true
---@type vector
SmokeWithTrigger.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SmokeWithTrigger.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SmokeWithTrigger.autoplace = nil

---@default 0
---@optional true
---@type double
SmokeWithTrigger.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SmokeWithTrigger.build_sound = nil

---@optional true
---@type SoundType
SmokeWithTrigger.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SmokeWithTrigger.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SmokeWithTrigger.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SmokeWithTrigger.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SmokeWithTrigger.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SmokeWithTrigger.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SmokeWithTrigger.emissions_per_second = nil

---@optional true
---@type Color
SmokeWithTrigger.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SmokeWithTrigger.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SmokeWithTrigger.flags = nil

---@optional true
---@type Color
SmokeWithTrigger.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SmokeWithTrigger.hit_visualization_box = nil

---@optional true
---@type Color
SmokeWithTrigger.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SmokeWithTrigger.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SmokeWithTrigger.minable = nil

---@optional true
---@type SoundType
SmokeWithTrigger.mined_sound = nil

---@optional true
---@type SoundType
SmokeWithTrigger.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SmokeWithTrigger.next_upgrade = nil

---@optional true
---@type SoundType
SmokeWithTrigger.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SmokeWithTrigger.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SmokeWithTrigger.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SmokeWithTrigger.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SmokeWithTrigger.remove_decoratives = nil

---@optional true
---@type SoundType
SmokeWithTrigger.rotated_sound = nil

---@default true
---@optional true
---@type bool
SmokeWithTrigger.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SmokeWithTrigger.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SmokeWithTrigger.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SmokeWithTrigger.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SmokeWithTrigger.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SmokeWithTrigger.subgroup = nil

---@optional true
---@type uint32
SmokeWithTrigger.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SmokeWithTrigger.tile_width = nil

---@optional true
---@type TriggerTargetMask
SmokeWithTrigger.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SmokeWithTrigger.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SmokeWithTrigger.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SmokeWithTrigger.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SmokeWithTrigger.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SmokeWithTrigger.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SmokeWithTrigger.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SmokeWithTrigger.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SmokeWithTrigger.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SmokeWithTrigger.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SmokeWithTrigger.icon_size = nil

---@default 0
---@optional true
---@type uint8
SmokeWithTrigger.icon_mipmaps = nil

---A generic container, such as a chest, that interacts with the logistics network.
---@class LogisticContainer
local LogisticContainer = {}

---The way this chest interacts with the logistic network. Valid values are "passive-provider", "active-provider", "storage", "buffer" and "requester".
---@optional false
---@type string
LogisticContainer.logistic_mode = nil

---Drawn when a robot brings/takes items from this container.
---@optional true
---@type AnimationType
LogisticContainer.animation = nil

---Played when a robot brings/takes items from this container. Ignored if <code>animation</code> is not defined.
---@optional true
---@type SoundType
LogisticContainer.animation_sound = nil

---The offset from the center of this container where a robot visually brings/takes items.
---@optional true
---@type vector
LogisticContainer.landing_location_offset = nil

---The number of request slots this logistics container has. Requester-type containers must have > 0 slots and can have a maximum of 1000 slots. Storage-type containers must have <= 1 slot.
---@optional true
---@type uint16
LogisticContainer.max_logistic_slots = nil

---@default 0
---@optional true
---@type uint8
LogisticContainer.opened_duration = nil

---Whether the Too-far-from-roboport-icon.png icon should be rendered on this entity if the entity is not within a logistics network.
---@default true
---@optional true
---@type bool
LogisticContainer.render_not_in_network_icon = nil

---The number of slots in this container.
---@optional false
---@type uint16
LogisticContainer.inventory_size = nil

---The picture displayed for this entity.
---@optional false
---@type SpriteType
LogisticContainer.picture = nil

---The pictures displayed for circuit connections to this container.
---@optional true
---@type CircuitConnectorSprites
LogisticContainer.circuit_connector_sprites = nil

---Defines how wires visually connect to this container.
---@optional true
---@type WireConnectionPoint
LogisticContainer.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this container.
---@default 0
---@optional true
---@type double
LogisticContainer.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
LogisticContainer.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
LogisticContainer.draw_copper_wires = nil

---If the red inventory limiter bar is enabled.
---@default true
---@optional true
---@type bool
LogisticContainer.enable_inventory_bar = nil

---If the icons of items shown in alt-mode should be scaled to the containers size.
---@default false
---@optional true
---@type bool
LogisticContainer.scale_info_icons = nil

---@default true
---@optional true
---@type bool
LogisticContainer.alert_when_damaged = nil

---@optional true
---@type AttackReaction
LogisticContainer.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
LogisticContainer.corpse = nil

---@default true
---@optional true
---@type bool
LogisticContainer.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
LogisticContainer.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
LogisticContainer.dying_explosion = nil

---@optional true
---@type TriggerEffect
LogisticContainer.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
LogisticContainer.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
LogisticContainer.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
LogisticContainer.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
LogisticContainer.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
LogisticContainer.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
LogisticContainer.max_health = nil

---@default false
---@optional true
---@type bool
LogisticContainer.random_corpse_variation = nil

---@optional true
---@type SoundType
LogisticContainer.repair_sound = nil

---@default 1
---@optional true
---@type float
LogisticContainer.repair_speed_modifier = nil

---@optional true
---@type Resistances
LogisticContainer.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
LogisticContainer.additional_pastable_entities = nil

---@optional true
---@type float
LogisticContainer.alert_icon_scale = nil

---@optional true
---@type vector
LogisticContainer.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
LogisticContainer.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
LogisticContainer.autoplace = nil

---@default 0
---@optional true
---@type double
LogisticContainer.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
LogisticContainer.build_sound = nil

---@optional true
---@type SoundType
LogisticContainer.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
LogisticContainer.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
LogisticContainer.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
LogisticContainer.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
LogisticContainer.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
LogisticContainer.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
LogisticContainer.emissions_per_second = nil

---@optional true
---@type Color
LogisticContainer.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
LogisticContainer.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
LogisticContainer.flags = nil

---@optional true
---@type Color
LogisticContainer.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
LogisticContainer.hit_visualization_box = nil

---@optional true
---@type Color
LogisticContainer.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
LogisticContainer.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
LogisticContainer.minable = nil

---@optional true
---@type SoundType
LogisticContainer.mined_sound = nil

---@optional true
---@type SoundType
LogisticContainer.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
LogisticContainer.next_upgrade = nil

---@optional true
---@type SoundType
LogisticContainer.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
LogisticContainer.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
LogisticContainer.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
LogisticContainer.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
LogisticContainer.remove_decoratives = nil

---@optional true
---@type SoundType
LogisticContainer.rotated_sound = nil

---@default true
---@optional true
---@type bool
LogisticContainer.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
LogisticContainer.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
LogisticContainer.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
LogisticContainer.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
LogisticContainer.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
LogisticContainer.subgroup = nil

---@optional true
---@type uint32
LogisticContainer.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
LogisticContainer.tile_width = nil

---@optional true
---@type TriggerTargetMask
LogisticContainer.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
LogisticContainer.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
LogisticContainer.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
LogisticContainer.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
LogisticContainer.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
LogisticContainer.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
LogisticContainer.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
LogisticContainer.order = nil

---Path to the icon file.
---@optional true
---@type FileName
LogisticContainer.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
LogisticContainer.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
LogisticContainer.icon_size = nil

---@default 0
---@optional true
---@type uint8
LogisticContainer.icon_mipmaps = nil

---A <a href="/Heat_pipe" title="Heat pipe">heat pipe</a>.
---@class HeatPipe
local HeatPipe = {}

---@optional false
---@type ConnectableEntityGraphics
HeatPipe.connection_sprites = nil

---@optional false
---@type HeatBuffer
HeatPipe.heat_buffer = nil

---@optional false
---@type ConnectableEntityGraphics
HeatPipe.heat_glow_sprites = nil

---@default true
---@optional true
---@type bool
HeatPipe.alert_when_damaged = nil

---@optional true
---@type AttackReaction
HeatPipe.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
HeatPipe.corpse = nil

---@default true
---@optional true
---@type bool
HeatPipe.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
HeatPipe.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
HeatPipe.dying_explosion = nil

---@optional true
---@type TriggerEffect
HeatPipe.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
HeatPipe.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
HeatPipe.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
HeatPipe.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
HeatPipe.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
HeatPipe.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
HeatPipe.max_health = nil

---@default false
---@optional true
---@type bool
HeatPipe.random_corpse_variation = nil

---@optional true
---@type SoundType
HeatPipe.repair_sound = nil

---@default 1
---@optional true
---@type float
HeatPipe.repair_speed_modifier = nil

---@optional true
---@type Resistances
HeatPipe.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
HeatPipe.additional_pastable_entities = nil

---@optional true
---@type float
HeatPipe.alert_icon_scale = nil

---@optional true
---@type vector
HeatPipe.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
HeatPipe.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
HeatPipe.autoplace = nil

---@default 0
---@optional true
---@type double
HeatPipe.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
HeatPipe.build_sound = nil

---@optional true
---@type SoundType
HeatPipe.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
HeatPipe.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
HeatPipe.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
HeatPipe.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
HeatPipe.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
HeatPipe.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
HeatPipe.emissions_per_second = nil

---@optional true
---@type Color
HeatPipe.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
HeatPipe.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
HeatPipe.flags = nil

---@optional true
---@type Color
HeatPipe.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
HeatPipe.hit_visualization_box = nil

---@optional true
---@type Color
HeatPipe.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
HeatPipe.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
HeatPipe.minable = nil

---@optional true
---@type SoundType
HeatPipe.mined_sound = nil

---@optional true
---@type SoundType
HeatPipe.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
HeatPipe.next_upgrade = nil

---@optional true
---@type SoundType
HeatPipe.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
HeatPipe.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
HeatPipe.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
HeatPipe.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
HeatPipe.remove_decoratives = nil

---@optional true
---@type SoundType
HeatPipe.rotated_sound = nil

---@default true
---@optional true
---@type bool
HeatPipe.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
HeatPipe.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
HeatPipe.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
HeatPipe.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
HeatPipe.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
HeatPipe.subgroup = nil

---@optional true
---@type uint32
HeatPipe.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
HeatPipe.tile_width = nil

---@optional true
---@type TriggerTargetMask
HeatPipe.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
HeatPipe.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
HeatPipe.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
HeatPipe.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
HeatPipe.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
HeatPipe.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
HeatPipe.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
HeatPipe.order = nil

---Path to the icon file.
---@optional true
---@type FileName
HeatPipe.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
HeatPipe.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
HeatPipe.icon_size = nil

---@default 0
---@optional true
---@type uint8
HeatPipe.icon_mipmaps = nil

---An entity that produces power from a burner energy source.
---@class BurnerGenerator
local BurnerGenerator = {}

---Plays when the generator is active. Idle animation must have the same frame count as animation.
---@optional false
---@type Animation4Way
BurnerGenerator.animation = nil

---The input energy source of the generator. Must be a burner energy source.
---@optional false
---@type EnergySource
BurnerGenerator.burner = nil

---The output energy source of the generator. Any emissions specified on this energy source are ignored, they must be specified on <code>burner</code>. Must be an electric energy source.
---@optional false
---@type EnergySource
BurnerGenerator.energy_source = nil

---How much energy this generator can produce.
---@optional false
---@type Energy
BurnerGenerator.max_power_output = nil

---Whether the <code>idle_animation</code> should also play when the generator is active.
---@default false
---@optional true
---@type bool
BurnerGenerator.always_draw_idle_animation = nil

---Plays when the generator is inactive. Idle animation must have the same frame count as animation.
---@optional true
---@type Animation4Way
BurnerGenerator.idle_animation = nil

---Animation runs at least this fast.
---@default 0.25
---@optional true
---@type double
BurnerGenerator.min_perceived_performance = nil

---@default 0.5
---@optional true
---@type double
BurnerGenerator.performance_to_sound_speedup = nil

---@default true
---@optional true
---@type bool
BurnerGenerator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
BurnerGenerator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
BurnerGenerator.corpse = nil

---@default true
---@optional true
---@type bool
BurnerGenerator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
BurnerGenerator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
BurnerGenerator.dying_explosion = nil

---@optional true
---@type TriggerEffect
BurnerGenerator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
BurnerGenerator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
BurnerGenerator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
BurnerGenerator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
BurnerGenerator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
BurnerGenerator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
BurnerGenerator.max_health = nil

---@default false
---@optional true
---@type bool
BurnerGenerator.random_corpse_variation = nil

---@optional true
---@type SoundType
BurnerGenerator.repair_sound = nil

---@default 1
---@optional true
---@type float
BurnerGenerator.repair_speed_modifier = nil

---@optional true
---@type Resistances
BurnerGenerator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
BurnerGenerator.additional_pastable_entities = nil

---@optional true
---@type float
BurnerGenerator.alert_icon_scale = nil

---@optional true
---@type vector
BurnerGenerator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
BurnerGenerator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
BurnerGenerator.autoplace = nil

---@default 0
---@optional true
---@type double
BurnerGenerator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
BurnerGenerator.build_sound = nil

---@optional true
---@type SoundType
BurnerGenerator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
BurnerGenerator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
BurnerGenerator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
BurnerGenerator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
BurnerGenerator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
BurnerGenerator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
BurnerGenerator.emissions_per_second = nil

---@optional true
---@type Color
BurnerGenerator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
BurnerGenerator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
BurnerGenerator.flags = nil

---@optional true
---@type Color
BurnerGenerator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
BurnerGenerator.hit_visualization_box = nil

---@optional true
---@type Color
BurnerGenerator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
BurnerGenerator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
BurnerGenerator.minable = nil

---@optional true
---@type SoundType
BurnerGenerator.mined_sound = nil

---@optional true
---@type SoundType
BurnerGenerator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
BurnerGenerator.next_upgrade = nil

---@optional true
---@type SoundType
BurnerGenerator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
BurnerGenerator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
BurnerGenerator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
BurnerGenerator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
BurnerGenerator.remove_decoratives = nil

---@optional true
---@type SoundType
BurnerGenerator.rotated_sound = nil

---@default true
---@optional true
---@type bool
BurnerGenerator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
BurnerGenerator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
BurnerGenerator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
BurnerGenerator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
BurnerGenerator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
BurnerGenerator.subgroup = nil

---@optional true
---@type uint32
BurnerGenerator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
BurnerGenerator.tile_width = nil

---@optional true
---@type TriggerTargetMask
BurnerGenerator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
BurnerGenerator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
BurnerGenerator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
BurnerGenerator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
BurnerGenerator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
BurnerGenerator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
BurnerGenerator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
BurnerGenerator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
BurnerGenerator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
BurnerGenerator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
BurnerGenerator.icon_size = nil

---@default 0
---@optional true
---@type uint8
BurnerGenerator.icon_mipmaps = nil

---Used for rail corpses.
---@class RailRemnants
local RailRemnants = {}

---Either "straight" or "turn".
---@optional false
---@type RailRemnantsBendingType
RailRemnants.bending_type = nil

---@optional false
---@type RailRemnantsPictures
RailRemnants.pictures = nil

---@optional true
---@type RotatedAnimationVariations
RailRemnants.animation = nil

---Variation count must be the same as <code>animation</code> variation count. Direction count must be the same as <code>animation</code> direction count. Frame count must be the same as <code>animation</code> frame count.
---@optional true
---@type RotatedAnimationVariations
RailRemnants.animation_overlay = nil

---@default corpse
---@optional true
---@type RenderLayer
RailRemnants.animation_overlay_final_render_layer = nil

---@default object
---@optional true
---@type RenderLayer
RailRemnants.animation_overlay_render_layer = nil

---@default object
---@optional true
---@type RenderLayer
RailRemnants.animation_render_layer = nil

---An array of arrays of integers. Arrays are called "groups" and must all have the same size.
---@optional true
---@type tables[] of uint16
RailRemnants.direction_shuffle = nil

---Multiplier for #time_before_shading_off and #time_before_removed. Must be positive.
---@default 1
---@optional true
---@type float
RailRemnants.dying_speed = nil

---@default corpse
---@optional true
---@type RenderLayer
RailRemnants.final_render_layer = nil

---@optional true
---@type AnimationVariations
RailRemnants.ground_patch = nil

---@default 0
---@optional true
---@type float
RailRemnants.ground_patch_fade_in_delay = nil

---@default 0
---@optional true
---@type float
RailRemnants.ground_patch_fade_in_speed = nil

---@default 0
---@optional true
---@type float
RailRemnants.ground_patch_fade_out_duration = nil

---@default 0
---@optional true
---@type float
RailRemnants.ground_patch_fade_out_start = nil

---@optional true
---@type AnimationVariations
RailRemnants.ground_patch_higher = nil

---@default ground-patch
---@optional true
---@type RenderLayer
RailRemnants.ground_patch_render_layer = nil

---@default true
---@optional true
---@type bool
RailRemnants.remove_on_entity_placement = nil

---@default true
---@optional true
---@type bool
RailRemnants.remove_on_tile_placement = nil

---@default 1
---@optional true
---@type uint8
RailRemnants.shuffle_directions_at_frame = nil

---@optional true
---@type AnimationVariations
RailRemnants.splash = nil

---@default object
---@optional true
---@type RenderLayer
RailRemnants.splash_render_layer = nil

---@default 1
---@optional true
---@type float
RailRemnants.splash_speed = nil

---Time in ticks this corpse lasts. May not be 0.
---@default 7200
---@optional true
---@type int32
RailRemnants.time_before_removed = nil

---Controls how long the corpse takes to fade, as in how long it takes to get from no transparency to full tranparency/removed. This time is not added to #time_before_removed, it is instead substracted from it. So by default, the corpse starts fading about 15 seconds before it gets removed.
---@default 900
---@optional true
---@type int32
RailRemnants.time_before_shading_off = nil

---@default false
---@optional true
---@type bool
RailRemnants.use_tile_color_for_ground_patch_tint = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RailRemnants.additional_pastable_entities = nil

---@optional true
---@type float
RailRemnants.alert_icon_scale = nil

---@optional true
---@type vector
RailRemnants.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RailRemnants.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RailRemnants.autoplace = nil

---@default 0
---@optional true
---@type double
RailRemnants.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RailRemnants.build_sound = nil

---@optional true
---@type SoundType
RailRemnants.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RailRemnants.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RailRemnants.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RailRemnants.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RailRemnants.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RailRemnants.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RailRemnants.emissions_per_second = nil

---@optional true
---@type Color
RailRemnants.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RailRemnants.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RailRemnants.flags = nil

---@optional true
---@type Color
RailRemnants.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RailRemnants.hit_visualization_box = nil

---@optional true
---@type Color
RailRemnants.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RailRemnants.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RailRemnants.minable = nil

---@optional true
---@type SoundType
RailRemnants.mined_sound = nil

---@optional true
---@type SoundType
RailRemnants.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RailRemnants.next_upgrade = nil

---@optional true
---@type SoundType
RailRemnants.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RailRemnants.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RailRemnants.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RailRemnants.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RailRemnants.remove_decoratives = nil

---@optional true
---@type SoundType
RailRemnants.rotated_sound = nil

---@default true
---@optional true
---@type bool
RailRemnants.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RailRemnants.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RailRemnants.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RailRemnants.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RailRemnants.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RailRemnants.subgroup = nil

---@optional true
---@type uint32
RailRemnants.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RailRemnants.tile_width = nil

---@optional true
---@type TriggerTargetMask
RailRemnants.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RailRemnants.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RailRemnants.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RailRemnants.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RailRemnants.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RailRemnants.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RailRemnants.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RailRemnants.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RailRemnants.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RailRemnants.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RailRemnants.icon_size = nil

---@default 0
---@optional true
---@type uint8
RailRemnants.icon_mipmaps = nil

---<p>The abstract basis of the assembling machines and furnaces. Contains the properties that both of them have.</p><p>Note that a crafting machine cannot be rotated unless it has at least one of the following: a fluid box, a heat energy source, a fluid energy source, or a non-square collision box. Crafting machines with non-square collision boxes can only be rotated before placement, not after.</p>
---@class CraftingMachine
local CraftingMachine = {}

---A list of recipe categories this crafting machine can use.
---@optional false
---@type strings[]
CraftingMachine.crafting_categories = nil

---<p>How fast this crafting machine can craft. 1 means that for example a 1 second long recipe take 1 second to craft. 0.5 means it takes 2 seconds, and 2 means it takes 0.5 seconds.</p><p>Crafting speed has to be positive.</p>
---@optional false
---@type double
CraftingMachine.crafting_speed = nil

---<p>Defines how the crafting machine is powered.</p><p>When using an electric energy source and <code>drain</code> is not specified, it will be set to <code>energy_usage ÷ 30</code> automatically.</p>
---@optional false
---@type EnergySource
CraftingMachine.energy_source = nil

---Sets how much energy this machine uses while crafting. Energy usage has to be positive.
---@optional false
---@type Energy
CraftingMachine.energy_usage = nil

---Sets the module effects that are allowed to be used on this machine.
---@optional true
---@type EffectTypeLimitation
CraftingMachine.allowed_effects = nil

---Only loaded if <code>idle_animation</code> is present.
---@default false
---@optional true
---@type bool
CraftingMachine.always_draw_idle_animation = nil

---<p>The animation played when crafting. When the crafting machine is idle, the animation will be paused.</p><p>When a crafting machine cannot be rotated, only the north rotation of the animation will be used.</p>
---@optional true
---@type Animation4Way
CraftingMachine.animation = nil

---Productivity bonus that this machine always has.
---@default 0
---@optional true
---@type float
CraftingMachine.base_productivity = nil

---Each key/value pair is optional and defaults to the above value.
---@optional true
---@type TintColors
CraftingMachine.default_recipe_tint = nil

---Whether the "alt-mode icon" should have a black background.
---@default true
---@optional true
---@type bool
CraftingMachine.draw_entity_info_icon_background = nil

---Shift of the "alt-mode icon" relative to the machine's center.
---@optional true
---@type vector
CraftingMachine.entity_info_icon_shift = nil

---<p>Can have off_when_no_fluid_recipe key that has a <a href="/Types/bool" title="Types/bool">bool</a> value. off_when_no_fluid_recipe defaults to false. off_when_no_fluid_recipe is ignored by <a href="/Prototype/Furnace" title="Prototype/Furnace">Prototype/Furnaces</a> and considered to always be false.</p><p>If a crafting machine has fluid boxes and off_when_no_fluid_recipe is true, the crafting machine can only be rotated when a recipe consuming or producing fluid is set, or it has one of the other properties listed at the top of the page.</p>
---@optional true
---@type FluidBox[]
CraftingMachine.fluid_boxes = nil

---<p>Idle animation must have the same frame count as animation. It is used for drawing the machine in idle state, but the is animation frozen on a single frame when the machine is idle.</p><p>This is an animation and not just sprite to make it possible for idle state and working state to match their visuals when the machine switches from one state to another.</p><p>When a crafting machine cannot be rotated, only the north rotation of the idle animation will be used.</p>
---@optional true
---@type Animation4Way
CraftingMachine.idle_animation = nil

---Whether the speed of the animation and working visualization should be based on the machine's speed (boosted or slowed by modules).
---@default false
---@optional true
---@type bool
CraftingMachine.match_animation_speed_to_activity = nil

---The number of module slots in this machine, and their icon positions.
---@optional true
---@type ModuleSpecification
CraftingMachine.module_specification = nil

---Controls whether the ingredients of an in-progress recipe are destroyed when mining the machine/changing the recipe. If set to true, the ingredients do not get destroyed. This affects only the ingredients of the recipe that is currently in progress, so those that visually have already been consumed while their resulting product has not yet been produced.
---@default true
---@optional true
---@type bool
CraftingMachine.return_ingredients_on_change = nil

---Whether the "alt-mode icon" should be scaled to the size of the machine.
---@default false
---@optional true
---@type bool
CraftingMachine.scale_entity_info_icon = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
CraftingMachine.shift_animation_transition_duration = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
CraftingMachine.shift_animation_waypoint_stop_duration = nil

---Only loaded if one of <code>shift_animation_waypoint_stop_duration</code> or <code>shift_animation_transition_duration</code> is not 0.
---@optional true
---@type CraftingMachineShiftAnimationWaypoints
CraftingMachine.shift_animation_waypoints = nil

---Whether the "alt-mode icon" should be drawn at all.
---@default true
---@optional true
---@type bool
CraftingMachine.show_recipe_icon = nil

---@optional true
---@type CraftingMachineStatusColors
CraftingMachine.status_colors = nil

---@optional true
---@type WorkingVisualisation[]
CraftingMachine.working_visualisations = nil

---@default true
---@optional true
---@type bool
CraftingMachine.alert_when_damaged = nil

---@optional true
---@type AttackReaction
CraftingMachine.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
CraftingMachine.corpse = nil

---@default true
---@optional true
---@type bool
CraftingMachine.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
CraftingMachine.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
CraftingMachine.dying_explosion = nil

---@optional true
---@type TriggerEffect
CraftingMachine.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
CraftingMachine.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
CraftingMachine.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
CraftingMachine.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
CraftingMachine.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
CraftingMachine.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
CraftingMachine.max_health = nil

---@default false
---@optional true
---@type bool
CraftingMachine.random_corpse_variation = nil

---@optional true
---@type SoundType
CraftingMachine.repair_sound = nil

---@default 1
---@optional true
---@type float
CraftingMachine.repair_speed_modifier = nil

---@optional true
---@type Resistances
CraftingMachine.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
CraftingMachine.additional_pastable_entities = nil

---@optional true
---@type float
CraftingMachine.alert_icon_scale = nil

---@optional true
---@type vector
CraftingMachine.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
CraftingMachine.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
CraftingMachine.autoplace = nil

---@default 0
---@optional true
---@type double
CraftingMachine.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
CraftingMachine.build_sound = nil

---@optional true
---@type SoundType
CraftingMachine.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
CraftingMachine.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
CraftingMachine.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
CraftingMachine.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
CraftingMachine.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
CraftingMachine.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
CraftingMachine.emissions_per_second = nil

---@optional true
---@type Color
CraftingMachine.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
CraftingMachine.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
CraftingMachine.flags = nil

---@optional true
---@type Color
CraftingMachine.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
CraftingMachine.hit_visualization_box = nil

---@optional true
---@type Color
CraftingMachine.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
CraftingMachine.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
CraftingMachine.minable = nil

---@optional true
---@type SoundType
CraftingMachine.mined_sound = nil

---@optional true
---@type SoundType
CraftingMachine.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
CraftingMachine.next_upgrade = nil

---@optional true
---@type SoundType
CraftingMachine.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
CraftingMachine.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
CraftingMachine.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
CraftingMachine.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
CraftingMachine.remove_decoratives = nil

---@optional true
---@type SoundType
CraftingMachine.rotated_sound = nil

---@default true
---@optional true
---@type bool
CraftingMachine.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
CraftingMachine.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
CraftingMachine.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
CraftingMachine.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
CraftingMachine.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
CraftingMachine.subgroup = nil

---@optional true
---@type uint32
CraftingMachine.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
CraftingMachine.tile_width = nil

---@optional true
---@type TriggerTargetMask
CraftingMachine.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
CraftingMachine.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
CraftingMachine.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
CraftingMachine.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CraftingMachine.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CraftingMachine.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CraftingMachine.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CraftingMachine.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CraftingMachine.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CraftingMachine.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CraftingMachine.icon_size = nil

---@default 0
---@optional true
---@type uint8
CraftingMachine.icon_mipmaps = nil

---Specifies a animation that can be used by <a rel="nofollow" class="external free" href="https://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation">https://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation</a> during runtime.
---@class Animation
local Animation = {}

---Name of the animation. Must be unique. Used in <a rel="nofollow" class="external free" href="https://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation">https://lua-api.factorio.com/latest/LuaRendering.html#LuaRendering.draw_animation</a>.
---@optional false
---@type string
Animation.name = nil

---Modifier of the animation playing speed, the default is 1, which means one animation frame per tick (60 fps). The speed of playing can often vary depending on the usage (output of steam engine for example). Has to be greater than 0.
---@default 1
---@optional true
---@type float
Animation.animation_speed = nil

---@default false
---@optional true
---@type bool
Animation.apply_runtime_tint = nil

---@default normal
---@optional true
---@type BlendMode
Animation.blend_mode = nil

---Mandatory if <code>stripes</code> is not specified.
---@optional true
---@type FileName
Animation.filename = nil

---@optional true
---@type SpriteFlags
Animation.flags = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint32
Animation.frame_count = nil

---@optional true
---@type AnimationFrameSequence
Animation.frame_sequence = nil

---@default false
---@optional true
---@type bool
Animation.generate_sdf = nil

---Mandatory if <code>size</code> is not given. Height of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
Animation.height = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the Animation.
---@optional true
---@type AnimationType
Animation.hr_version = nil

---<p>If this property is present, all Animation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Animation definition) in the array may also have the layers property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type AnimationType[]
Animation.layers = nil

---Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.
---@default 0
---@optional true
---@type uint32
Animation.line_length = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
Animation.load_in_minimal_mode = nil

---@optional true
---@type float
Animation.max_advance = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
Animation.mipmap_count = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
Animation.position = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
Animation.premul_alpha = nil

---@default medium
---@optional true
---@type SpritePriority
Animation.priority = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint8
Animation.repeat_count = nil

---@default forward
---@optional true
---@type AnimationRunMode
Animation.run_mode = nil

---Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
Animation.scale = nil

---@default {0, 0}
---@optional true
---@type vector
Animation.shift = nil

---<p>The width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
Animation.size = nil

---@optional true
---@type Stripe[]
Animation.stripes = nil

---@optional true
---@type Color
Animation.tint = nil

---Mandatory if <code>size</code> is not given. Width of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
Animation.width = nil

---Horizontal position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
Animation.x = nil

---Vertical position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
Animation.y = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
Animation.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
Animation.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
Animation.draw_as_shadow = nil

---A turret that needs no extra ammunition. See the extensions for turrets that need some kind of ammunition.
---@class Turret
local Turret = {}

---Requires ammo_type in attack_parameters.
---@optional false
---@type AttackParameters
Turret.attack_parameters = nil

---@optional false
---@type double
Turret.call_for_help_radius = nil

---@optional false
---@type RotatedAnimation4Way
Turret.folded_animation = nil

---@default true
---@optional true
---@type bool
Turret.alert_when_attacking = nil

---@default false
---@optional true
---@type bool
Turret.allow_turning_when_starting_attack = nil

---@default false
---@optional true
---@type bool
Turret.attack_from_start_frame = nil

---@optional true
---@type TriggerTargetMask
Turret.attack_target_mask = nil

---@optional true
---@type RotatedAnimation4Way
Turret.attacking_animation = nil

---@default 1
---@optional true
---@type float
Turret.attacking_speed = nil

---@optional true
---@type Animation4Way
Turret.base_picture = nil

---@default lower-object
---@optional true
---@type RenderLayer
Turret.base_picture_render_layer = nil

---@default 0
---@optional true
---@type uint8
Turret.base_picture_secondary_draw_order = nil

---The name of an entity. Note that this overrides how EntityWithHealth loads the corpse, forcing it to be a string instead of an array of strings.
---@optional true
---@type string
Turret.corpse = nil

---@optional true
---@type SoundType
Turret.dying_sound = nil

---@optional true
---@type RotatedAnimation4Way
Turret.ending_attack_animation = nil

---@default 1
---@optional true
---@type float
Turret.ending_attack_speed = nil

---@optional true
---@type RotatedAnimation4Way
Turret.energy_glow_animation = nil

---@default 1
---@optional true
---@type float
Turret.folded_speed = nil

---@default 1
---@optional true
---@type float
Turret.folded_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
Turret.folding_animation = nil

---@optional true
---@type SoundType
Turret.folding_sound = nil

---@default 1
---@optional true
---@type float
Turret.folding_speed = nil

---The intensity of light in the form of <code>energy_glow_animation</code> drawn on top of <code>energy_glow_animation</code>.
---@default 0
---@optional true
---@type float
Turret.glow_light_intensity = nil

---@default object
---@optional true
---@type RenderLayer
Turret.gun_animation_render_layer = nil

---@default 0
---@optional true
---@type uint8
Turret.gun_animation_secondary_draw_order = nil

---@optional true
---@type TriggerTargetMask
Turret.ignore_target_mask = nil

---@optional true
---@type SpriteType
Turret.integration = nil

---Default: The range defined in the <code>attack_parameters</code>
---@optional true
---@type double
Turret.prepare_range = nil

---@optional true
---@type RotatedAnimation4Way
Turret.prepared_alternative_animation = nil

---@default 0
---@optional true
---@type float
Turret.prepared_alternative_chance = nil

---@optional true
---@type SoundType
Turret.prepared_alternative_sound = nil

---@default 1
---@optional true
---@type float
Turret.prepared_alternative_speed = nil

---@default 1
---@optional true
---@type float
Turret.prepared_alternative_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
Turret.prepared_animation = nil

---@optional true
---@type SoundType
Turret.prepared_sound = nil

---@default 1
---@optional true
---@type float
Turret.prepared_speed = nil

---@default 1
---@optional true
---@type float
Turret.prepared_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
Turret.preparing_animation = nil

---@optional true
---@type SoundType
Turret.preparing_sound = nil

---@default 1
---@optional true
---@type float
Turret.preparing_speed = nil

---@default false
---@optional true
---@type bool
Turret.random_animation_offset = nil

---@default 1
---@optional true
---@type float
Turret.rotation_speed = nil

---@default false
---@optional true
---@type bool
Turret.secondary_animation = nil

---@default false
---@optional true
---@type bool
Turret.shoot_in_prepare_state = nil

---@optional true
---@type RotatedAnimation4Way
Turret.starting_attack_animation = nil

---@optional true
---@type SoundType
Turret.starting_attack_sound = nil

---@default 1
---@optional true
---@type float
Turret.starting_attack_speed = nil

---@default false
---@optional true
---@type bool
Turret.turret_base_has_direction = nil

---@default true
---@optional true
---@type bool
Turret.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Turret.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Turret.corpse = nil

---@default true
---@optional true
---@type bool
Turret.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Turret.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Turret.dying_explosion = nil

---@optional true
---@type TriggerEffect
Turret.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Turret.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Turret.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Turret.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Turret.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Turret.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Turret.max_health = nil

---@default false
---@optional true
---@type bool
Turret.random_corpse_variation = nil

---@optional true
---@type SoundType
Turret.repair_sound = nil

---@default 1
---@optional true
---@type float
Turret.repair_speed_modifier = nil

---@optional true
---@type Resistances
Turret.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Turret.additional_pastable_entities = nil

---@optional true
---@type float
Turret.alert_icon_scale = nil

---@optional true
---@type vector
Turret.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Turret.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Turret.autoplace = nil

---@default 0
---@optional true
---@type double
Turret.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Turret.build_sound = nil

---@optional true
---@type SoundType
Turret.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Turret.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Turret.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Turret.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Turret.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Turret.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Turret.emissions_per_second = nil

---@optional true
---@type Color
Turret.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Turret.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Turret.flags = nil

---@optional true
---@type Color
Turret.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Turret.hit_visualization_box = nil

---@optional true
---@type Color
Turret.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Turret.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Turret.minable = nil

---@optional true
---@type SoundType
Turret.mined_sound = nil

---@optional true
---@type SoundType
Turret.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Turret.next_upgrade = nil

---@optional true
---@type SoundType
Turret.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Turret.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Turret.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Turret.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Turret.remove_decoratives = nil

---@optional true
---@type SoundType
Turret.rotated_sound = nil

---@default true
---@optional true
---@type bool
Turret.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Turret.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Turret.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Turret.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Turret.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Turret.subgroup = nil

---@optional true
---@type uint32
Turret.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Turret.tile_width = nil

---@optional true
---@type TriggerTargetMask
Turret.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Turret.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Turret.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Turret.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Turret.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Turret.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Turret.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Turret.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Turret.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Turret.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Turret.icon_size = nil

---@default 0
---@optional true
---@type uint8
Turret.icon_mipmaps = nil

---A <a href="/Deconstruction_planner" title="Deconstruction planner">deconstruction planner</a>.
---@class DeconstructionItem
local DeconstructionItem = {}

---@default 0
---@optional true
---@type Types/ItemStackIndex
DeconstructionItem.entity_filter_count = nil

---@default 0
---@optional true
---@type Types/ItemStackIndex
DeconstructionItem.tile_filter_count = nil

---The color of the rectangle used when alt-selection is done in-game.
---@optional false
---@type Color
DeconstructionItem.alt_selection_color = nil

---The type of cursor box used to render selection of entities/tiles when alt selecting. Possible values are identical to normal selection_cursor_box_type.
---@optional false
---@type string
DeconstructionItem.alt_selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool alt-selects things in-game. Possible values are identical to normal selection_mode.
---@optional false
---@type SelectionToolSelectionMode
DeconstructionItem.alt_selection_mode = nil

---The color of the rectangle used when standard selection is done in-game.
---@optional false
---@type Color
DeconstructionItem.selection_color = nil

---The type of cursor box used to render selection of entities/tiles when standard selecting.
---@optional false
---@type string
DeconstructionItem.selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool selects things in-game.
---@optional false
---@type SelectionToolSelectionMode
DeconstructionItem.selection_mode = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
DeconstructionItem.alt_entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
DeconstructionItem.alt_entity_filters = nil

---@optional true
---@type string[]
DeconstructionItem.alt_entity_type_filters = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
DeconstructionItem.alt_tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
DeconstructionItem.alt_tile_filters = nil

---If tiles should be included in the selection regardless of entities also being in the selection. This is a visual only setting.
---@default false
---@optional true
---@type bool
DeconstructionItem.always_include_tiles = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
DeconstructionItem.entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
DeconstructionItem.entity_filters = nil

---@optional true
---@type string[]
DeconstructionItem.entity_type_filters = nil

---Name of a <a href="/Prototype/MouseCursor" title="Prototype/MouseCursor">Prototype/MouseCursor</a>.
---@default selection-tool-cursor
---@optional true
---@type string
DeconstructionItem.mouse_cursor = nil

---Whether this is shown in the blueprint library. Unused as of 0.18.13 as the ability to show any selection tools in the blueprint library was removed.
---@default false
---@optional true
---@type bool
DeconstructionItem.show_in_library = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
DeconstructionItem.tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
DeconstructionItem.tile_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
DeconstructionItem.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
DeconstructionItem.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
DeconstructionItem.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
DeconstructionItem.burnt_result = nil

---@optional true
---@type SoundType
DeconstructionItem.close_sound = nil

---@optional true
---@type IconData[]
DeconstructionItem.dark_background_icons = nil

---@optional true
---@type FileName
DeconstructionItem.dark_background_icon = nil

---@optional true
---@type ItemCountType
DeconstructionItem.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
DeconstructionItem.flags = nil

---@default 1.0
---@optional true
---@type double
DeconstructionItem.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
DeconstructionItem.fuel_category = nil

---@default 1.0
---@optional true
---@type double
DeconstructionItem.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
DeconstructionItem.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
DeconstructionItem.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
DeconstructionItem.fuel_value = nil

---@optional true
---@type SoundType
DeconstructionItem.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
DeconstructionItem.pictures = nil

---@optional true
---@type PlaceAsTile
DeconstructionItem.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
DeconstructionItem.place_result = nil

---@optional true
---@type string
DeconstructionItem.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
DeconstructionItem.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
DeconstructionItem.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
DeconstructionItem.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
DeconstructionItem.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DeconstructionItem.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DeconstructionItem.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DeconstructionItem.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DeconstructionItem.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DeconstructionItem.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DeconstructionItem.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DeconstructionItem.icon_size = nil

---@default 0
---@optional true
---@type uint8
DeconstructionItem.icon_mipmaps = nil

---Entity with the ability to transfer module's effects to its neighboring entities.
---@class Beacon
local Beacon = {}

---The multiplier of the module's effects, when shared between neighbors.
---@optional false
---@type double
Beacon.distribution_effectivity = nil

---Must be an electric or void energy source.
---@optional false
---@type EnergySource
Beacon.energy_source = nil

---@optional false
---@type Energy
Beacon.energy_usage = nil

---The number of module slots in this beacon, and their icon positions.
---@optional false
---@type ModuleSpecification
Beacon.module_specification = nil

---The maximum distance that this Beacon can supply it's neighbors with it's module's effects. Max distance is 64.
---@optional false
---@type double
Beacon.supply_area_distance = nil

---The types of modules that a player can place inside of the Beacon.
---@optional true
---@type EffectTypeLimitation
Beacon.allowed_effects = nil

---The animation for the beacon, when in use. Loaded only if <code>graphics_set</code> is not present.
---@optional true
---@type AnimationType
Beacon.animation = nil

---The picture of the beacon when it is not on. Loaded only if <code>graphics_set</code> is not present.
---@optional true
---@type SpriteType
Beacon.base_picture = nil

---The graphics for the beacon.
---@optional true
---@type BeaconGraphicsSet
Beacon.graphics_set = nil

---@optional true
---@type SpriteType
Beacon.radius_visualisation_picture = nil

---@default true
---@optional true
---@type bool
Beacon.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Beacon.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Beacon.corpse = nil

---@default true
---@optional true
---@type bool
Beacon.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Beacon.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Beacon.dying_explosion = nil

---@optional true
---@type TriggerEffect
Beacon.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Beacon.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Beacon.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Beacon.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Beacon.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Beacon.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Beacon.max_health = nil

---@default false
---@optional true
---@type bool
Beacon.random_corpse_variation = nil

---@optional true
---@type SoundType
Beacon.repair_sound = nil

---@default 1
---@optional true
---@type float
Beacon.repair_speed_modifier = nil

---@optional true
---@type Resistances
Beacon.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Beacon.additional_pastable_entities = nil

---@optional true
---@type float
Beacon.alert_icon_scale = nil

---@optional true
---@type vector
Beacon.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Beacon.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Beacon.autoplace = nil

---@default 0
---@optional true
---@type double
Beacon.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Beacon.build_sound = nil

---@optional true
---@type SoundType
Beacon.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Beacon.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Beacon.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Beacon.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Beacon.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Beacon.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Beacon.emissions_per_second = nil

---@optional true
---@type Color
Beacon.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Beacon.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Beacon.flags = nil

---@optional true
---@type Color
Beacon.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Beacon.hit_visualization_box = nil

---@optional true
---@type Color
Beacon.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Beacon.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Beacon.minable = nil

---@optional true
---@type SoundType
Beacon.mined_sound = nil

---@optional true
---@type SoundType
Beacon.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Beacon.next_upgrade = nil

---@optional true
---@type SoundType
Beacon.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Beacon.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Beacon.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Beacon.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Beacon.remove_decoratives = nil

---@optional true
---@type SoundType
Beacon.rotated_sound = nil

---@default true
---@optional true
---@type bool
Beacon.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Beacon.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Beacon.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Beacon.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Beacon.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Beacon.subgroup = nil

---@optional true
---@type uint32
Beacon.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Beacon.tile_width = nil

---@optional true
---@type TriggerTargetMask
Beacon.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Beacon.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Beacon.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Beacon.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Beacon.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Beacon.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Beacon.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Beacon.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Beacon.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Beacon.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Beacon.icon_size = nil

---@default 0
---@optional true
---@type uint8
Beacon.icon_mipmaps = nil

---An <a href="/Offshore_pump" title="Offshore pump">offshore pump</a>.
---@class OffshorePump
local OffshorePump = {}

---The name of the fluid that is produced by the pump.
---@optional false
---@type string
OffshorePump.fluid = nil

---@optional false
---@type FluidBox
OffshorePump.fluid_box = nil

---How many units of fluid are produced per tick. Must be > 0.
---@optional false
---@type float
OffshorePump.pumping_speed = nil

---@optional true
---@type BoundingBox
OffshorePump.adjacent_tile_collision_box = nil

---Tiles colliding with adjacent_tile_collision_box must NOT collide with this collision mask.
---@default none
---@optional true
---@type CollisionMask
OffshorePump.adjacent_tile_collision_mask = nil

---Tiles colliding with adjacent_tile_collision_box must collide with this collision mask (unless it's empty).
---@default water-tile
---@optional true
---@type CollisionMask
OffshorePump.adjacent_tile_collision_test = nil

---@default true
---@optional true
---@type bool
OffshorePump.always_draw_fluid = nil

---Tile at placement position must NOT collide with this collision mask.
---@default none
---@optional true
---@type CollisionMask
OffshorePump.center_collision_mask = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
OffshorePump.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
OffshorePump.circuit_wire_connection_points = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
OffshorePump.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
OffshorePump.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
OffshorePump.draw_copper_wires = nil

---@default ground-tile
---@optional true
---@type CollisionMask
OffshorePump.fluid_box_tile_collision_test = nil

---Mandatory if <code>picture</code> is not defined.
---@optional true
---@type OffshorePumpGraphicsSet
OffshorePump.graphics_set = nil

---Animation runs at least this fast.
---@default 0.25
---@optional true
---@type float
OffshorePump.min_perceived_performance = nil

---Deprecated, use <code>graphics_set</code> instead. Ignored if <code>graphics_set</code> is defined.
---@optional true
---@type Sprite4Way
OffshorePump.picture = nil

---@optional true
---@type SpriteType
OffshorePump.placeable_position_visualization = nil

---@default false
---@optional true
---@type bool
OffshorePump.remove_on_tile_collision = nil

---@default true
---@optional true
---@type bool
OffshorePump.alert_when_damaged = nil

---@optional true
---@type AttackReaction
OffshorePump.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
OffshorePump.corpse = nil

---@default true
---@optional true
---@type bool
OffshorePump.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
OffshorePump.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
OffshorePump.dying_explosion = nil

---@optional true
---@type TriggerEffect
OffshorePump.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
OffshorePump.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
OffshorePump.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
OffshorePump.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
OffshorePump.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
OffshorePump.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
OffshorePump.max_health = nil

---@default false
---@optional true
---@type bool
OffshorePump.random_corpse_variation = nil

---@optional true
---@type SoundType
OffshorePump.repair_sound = nil

---@default 1
---@optional true
---@type float
OffshorePump.repair_speed_modifier = nil

---@optional true
---@type Resistances
OffshorePump.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
OffshorePump.additional_pastable_entities = nil

---@optional true
---@type float
OffshorePump.alert_icon_scale = nil

---@optional true
---@type vector
OffshorePump.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
OffshorePump.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
OffshorePump.autoplace = nil

---@default 0
---@optional true
---@type double
OffshorePump.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
OffshorePump.build_sound = nil

---@optional true
---@type SoundType
OffshorePump.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
OffshorePump.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
OffshorePump.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
OffshorePump.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
OffshorePump.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
OffshorePump.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
OffshorePump.emissions_per_second = nil

---@optional true
---@type Color
OffshorePump.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
OffshorePump.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
OffshorePump.flags = nil

---@optional true
---@type Color
OffshorePump.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
OffshorePump.hit_visualization_box = nil

---@optional true
---@type Color
OffshorePump.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
OffshorePump.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
OffshorePump.minable = nil

---@optional true
---@type SoundType
OffshorePump.mined_sound = nil

---@optional true
---@type SoundType
OffshorePump.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
OffshorePump.next_upgrade = nil

---@optional true
---@type SoundType
OffshorePump.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
OffshorePump.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
OffshorePump.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
OffshorePump.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
OffshorePump.remove_decoratives = nil

---@optional true
---@type SoundType
OffshorePump.rotated_sound = nil

---@default true
---@optional true
---@type bool
OffshorePump.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
OffshorePump.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
OffshorePump.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
OffshorePump.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
OffshorePump.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
OffshorePump.subgroup = nil

---@optional true
---@type uint32
OffshorePump.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
OffshorePump.tile_width = nil

---@optional true
---@type TriggerTargetMask
OffshorePump.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
OffshorePump.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
OffshorePump.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
OffshorePump.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
OffshorePump.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
OffshorePump.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
OffshorePump.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
OffshorePump.order = nil

---Path to the icon file.
---@optional true
---@type FileName
OffshorePump.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
OffshorePump.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
OffshorePump.icon_size = nil

---@default 0
---@optional true
---@type uint8
OffshorePump.icon_mipmaps = nil

---Entity with energy source with specialised animation for charging/decharging.
---@class Accumulator
local Accumulator = {}

---Count of ticks to preserve the animation even when the charging ends. Used to prevent rapid blinking of the accumulator with unstable need to use it.
---@optional false
---@type uint16
Accumulator.charge_cooldown = nil

---How long (in ticks) the animation will last after discharge has been initialized.
---@optional false
---@type uint16
Accumulator.discharge_cooldown = nil

---The capacity of the energy source buffer specifies the capacity of the accumulator. Must be an electric energy source.
---@optional false
---@type EnergySource
Accumulator.energy_source = nil

---@optional false
---@type SpriteType
Accumulator.picture = nil

---@optional true
---@type AnimationType
Accumulator.charge_animation = nil

---@optional true
---@type LightDefinition
Accumulator.charge_light = nil

---The pictures displayed for circuit connections to this accumulator.
---@optional true
---@type CircuitConnectorSprites
Accumulator.circuit_connector_sprites = nil

---Defines how wires visually connect to this accumulator.
---@optional true
---@type WireConnectionPoint
Accumulator.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
Accumulator.circuit_wire_max_distance = nil

---The name of the signal that is the default for when an accumulator is connected to the circuit network.
---@optional true
---@type SignalIDConnector
Accumulator.default_output_signal = nil

---@optional true
---@type AnimationType
Accumulator.discharge_animation = nil

---@optional true
---@type LightDefinition
Accumulator.discharge_light = nil

---@default true
---@optional true
---@type bool
Accumulator.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Accumulator.draw_copper_wires = nil

---@default true
---@optional true
---@type bool
Accumulator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Accumulator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Accumulator.corpse = nil

---@default true
---@optional true
---@type bool
Accumulator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Accumulator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Accumulator.dying_explosion = nil

---@optional true
---@type TriggerEffect
Accumulator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Accumulator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Accumulator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Accumulator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Accumulator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Accumulator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Accumulator.max_health = nil

---@default false
---@optional true
---@type bool
Accumulator.random_corpse_variation = nil

---@optional true
---@type SoundType
Accumulator.repair_sound = nil

---@default 1
---@optional true
---@type float
Accumulator.repair_speed_modifier = nil

---@optional true
---@type Resistances
Accumulator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Accumulator.additional_pastable_entities = nil

---@optional true
---@type float
Accumulator.alert_icon_scale = nil

---@optional true
---@type vector
Accumulator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Accumulator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Accumulator.autoplace = nil

---@default 0
---@optional true
---@type double
Accumulator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Accumulator.build_sound = nil

---@optional true
---@type SoundType
Accumulator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Accumulator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Accumulator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Accumulator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Accumulator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Accumulator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Accumulator.emissions_per_second = nil

---@optional true
---@type Color
Accumulator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Accumulator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Accumulator.flags = nil

---@optional true
---@type Color
Accumulator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Accumulator.hit_visualization_box = nil

---@optional true
---@type Color
Accumulator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Accumulator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Accumulator.minable = nil

---@optional true
---@type SoundType
Accumulator.mined_sound = nil

---@optional true
---@type SoundType
Accumulator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Accumulator.next_upgrade = nil

---@optional true
---@type SoundType
Accumulator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Accumulator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Accumulator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Accumulator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Accumulator.remove_decoratives = nil

---@optional true
---@type SoundType
Accumulator.rotated_sound = nil

---@default true
---@optional true
---@type bool
Accumulator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Accumulator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Accumulator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Accumulator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Accumulator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Accumulator.subgroup = nil

---@optional true
---@type uint32
Accumulator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Accumulator.tile_width = nil

---@optional true
---@type TriggerTargetMask
Accumulator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Accumulator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Accumulator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Accumulator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Accumulator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Accumulator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Accumulator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Accumulator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Accumulator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Accumulator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Accumulator.icon_size = nil

---@default 0
---@optional true
---@type uint8
Accumulator.icon_mipmaps = nil

---A setting in the map creation GUI. Used by the <a href="/Types/AutoplaceSpecification#control" title="Types/AutoplaceSpecification">autoplace system</a>.
---@class AutoplaceControl
local AutoplaceControl = {}

---Controls in what tab the autoplace is shown in the map generator GUI.
---@optional false
---@type AutoplaceControlCategory
AutoplaceControl.category = nil

---<p>Sets whether this control's richness can be set by the player or not.</p><p>If your autoplace control is used to generate ores, you probably want this to be true.</p>
---@default false
---@optional true
---@type bool
AutoplaceControl.richness = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
AutoplaceControl.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
AutoplaceControl.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
AutoplaceControl.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
AutoplaceControl.order = nil

---A copy-paste or cut-paste tool.
---@class CopyPasteTool
local CopyPasteTool = {}

---@default false
---@optional true
---@type bool
CopyPasteTool.cuts = nil

---The color of the rectangle used when alt-selection is done in-game.
---@optional false
---@type Color
CopyPasteTool.alt_selection_color = nil

---The type of cursor box used to render selection of entities/tiles when alt selecting. Possible values are identical to normal selection_cursor_box_type.
---@optional false
---@type string
CopyPasteTool.alt_selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool alt-selects things in-game. Possible values are identical to normal selection_mode.
---@optional false
---@type SelectionToolSelectionMode
CopyPasteTool.alt_selection_mode = nil

---The color of the rectangle used when standard selection is done in-game.
---@optional false
---@type Color
CopyPasteTool.selection_color = nil

---The type of cursor box used to render selection of entities/tiles when standard selecting.
---@optional false
---@type string
CopyPasteTool.selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool selects things in-game.
---@optional false
---@type SelectionToolSelectionMode
CopyPasteTool.selection_mode = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
CopyPasteTool.alt_entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
CopyPasteTool.alt_entity_filters = nil

---@optional true
---@type string[]
CopyPasteTool.alt_entity_type_filters = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
CopyPasteTool.alt_tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
CopyPasteTool.alt_tile_filters = nil

---If tiles should be included in the selection regardless of entities also being in the selection. This is a visual only setting.
---@default false
---@optional true
---@type bool
CopyPasteTool.always_include_tiles = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
CopyPasteTool.entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
CopyPasteTool.entity_filters = nil

---@optional true
---@type string[]
CopyPasteTool.entity_type_filters = nil

---Name of a <a href="/Prototype/MouseCursor" title="Prototype/MouseCursor">Prototype/MouseCursor</a>.
---@default selection-tool-cursor
---@optional true
---@type string
CopyPasteTool.mouse_cursor = nil

---Whether this is shown in the blueprint library. Unused as of 0.18.13 as the ability to show any selection tools in the blueprint library was removed.
---@default false
---@optional true
---@type bool
CopyPasteTool.show_in_library = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
CopyPasteTool.tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
CopyPasteTool.tile_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
CopyPasteTool.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
CopyPasteTool.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
CopyPasteTool.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
CopyPasteTool.burnt_result = nil

---@optional true
---@type SoundType
CopyPasteTool.close_sound = nil

---@optional true
---@type IconData[]
CopyPasteTool.dark_background_icons = nil

---@optional true
---@type FileName
CopyPasteTool.dark_background_icon = nil

---@optional true
---@type ItemCountType
CopyPasteTool.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
CopyPasteTool.flags = nil

---@default 1.0
---@optional true
---@type double
CopyPasteTool.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
CopyPasteTool.fuel_category = nil

---@default 1.0
---@optional true
---@type double
CopyPasteTool.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
CopyPasteTool.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
CopyPasteTool.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
CopyPasteTool.fuel_value = nil

---@optional true
---@type SoundType
CopyPasteTool.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
CopyPasteTool.pictures = nil

---@optional true
---@type PlaceAsTile
CopyPasteTool.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
CopyPasteTool.place_result = nil

---@optional true
---@type string
CopyPasteTool.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
CopyPasteTool.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
CopyPasteTool.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
CopyPasteTool.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
CopyPasteTool.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CopyPasteTool.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CopyPasteTool.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CopyPasteTool.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CopyPasteTool.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CopyPasteTool.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CopyPasteTool.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CopyPasteTool.icon_size = nil

---@default 0
---@optional true
---@type uint8
CopyPasteTool.icon_mipmaps = nil

---Used by <a href="/Belt_immunity_equipment" title="Belt immunity equipment">belt immunity equipment</a>.
---@class BeltImmunityEquipment
local BeltImmunityEquipment = {}

---The continuous power consumption of the belt immunity equipment.
---@optional false
---@type Energy
BeltImmunityEquipment.energy_consumption = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
BeltImmunityEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
BeltImmunityEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
BeltImmunityEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
BeltImmunityEquipment.sprite = nil

---@optional true
---@type SpriteType
BeltImmunityEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
BeltImmunityEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
BeltImmunityEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
BeltImmunityEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
BeltImmunityEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
BeltImmunityEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
BeltImmunityEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
BeltImmunityEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
BeltImmunityEquipment.order = nil

---Entity that you move around on the screen during the campaign and freeplay.
---@class Character
local Character = {}

---@optional false
---@type CharacterArmorAnimation[]
Character.animations = nil

---@optional false
---@type uint32
Character.build_distance = nil

---@optional false
---@type Color
Character.damage_hit_tint = nil

---@optional false
---@type double
Character.distance_per_frame = nil

---@optional false
---@type uint32
Character.drop_item_distance = nil

---The sound file played when the character eats (fish for example).
---@optional false
---@type SoundType
Character.eat = nil

---The sound file played when the character's health is low.
---@optional false
---@type SoundType
Character.heartbeat = nil

---@optional false
---@type ItemStackIndex
Character.inventory_size = nil

---@optional false
---@type double
Character.item_pickup_distance = nil

---@optional false
---@type double
Character.loot_pickup_distance = nil

---@optional false
---@type double
Character.maximum_corner_sliding_distance = nil

---@optional false
---@type double
Character.mining_speed = nil

---List of positions in the mining with tool animation when the mining sound and mining particles are created.
---@optional false
---@type float[]
Character.mining_with_tool_particles_animation_positions = nil

---@optional false
---@type uint32
Character.reach_distance = nil

---@optional false
---@type double
Character.reach_resource_distance = nil

---List of positions in the running animation when the walking sound is played.
---@optional false
---@type float[]
Character.running_sound_animation_positions = nil

---@optional false
---@type double
Character.running_speed = nil

---@optional false
---@type uint32
Character.ticks_to_keep_aiming_direction = nil

---@optional false
---@type uint32
Character.ticks_to_keep_gun = nil

---@optional false
---@type uint32
Character.ticks_to_stay_in_combat = nil

---Name of the character corpse that is spawned when this character dies.
---@optional true
---@type string
Character.character_corpse = nil

---Names of the crafting categories the character can craft recipes from. The built-in categories can be found <a href="/Data.raw#recipe-category" title="Data.raw">here</a>. See also <a href="/Prototype/RecipeCategory" title="Prototype/RecipeCategory">Prototype/RecipeCategory</a>.
---@optional true
---@type string[]
Character.crafting_categories = nil

---Must be >= 0.
---@default 3.0
---@optional true
---@type double
Character.enter_vehicle_distance = nil

---Array of footprint particles. Triggered when the running animation (#animations) rolls over the frames defined in <code>right_footprint_frames</code> and <code>left_footprint_frames</code>.
---@optional true
---@type FootprintParticle[]
Character.footprint_particles = nil

---Triggered every tick of the running animation.
---@optional true
---@type FootstepTriggerEffectList
Character.footstep_particle_triggers = nil

---Whether this character is moved by belts when standing on them.
---@default false
---@optional true
---@type bool
Character.has_belt_immunity = nil

---An array of float. The frames in the running animation (#animations) where the left foot touches the ground.
---@optional true
---@type float[]
Character.left_footprint_frames = nil

---Offset from the center of the entity for the left footprint. Used by <code>footprint_particles</code>.
---@optional true
---@type vector
Character.left_footprint_offset = nil

---@optional true
---@type LightDefinition
Character.light = nil

---Names of the resource categories the character can mine resources from.
---@optional true
---@type string[]
Character.mining_categories = nil

---Time in seconds. Must be positive
---@default 10
---@optional true
---@type uint32
Character.respawn_time = nil

---An array of float. The frames in the running animation (#animations) where the right foot touches the ground.
---@optional true
---@type float[]
Character.right_footprint_frames = nil

---Offset from the center of the entity for the right footprint. Used by <code>footprint_particles</code>.
---@optional true
---@type vector
Character.right_footprint_offset = nil

---Triggered when the running animation (#animations) rolls over the frames defined in <code>right_footprint_frames</code> and <code>left_footprint_frames</code>.
---@optional true
---@type FootstepTriggerEffectList
Character.synced_footstep_particle_triggers = nil

---@default 1.5
---@optional true
---@type double
Character.tool_attack_distance = nil

---@optional true
---@type Trigger
Character.tool_attack_result = nil

---@default true
---@optional true
---@type bool
Character.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Character.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Character.corpse = nil

---@default true
---@optional true
---@type bool
Character.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Character.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Character.dying_explosion = nil

---@optional true
---@type TriggerEffect
Character.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Character.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Character.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Character.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Character.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Character.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Character.max_health = nil

---@default false
---@optional true
---@type bool
Character.random_corpse_variation = nil

---@optional true
---@type SoundType
Character.repair_sound = nil

---@default 1
---@optional true
---@type float
Character.repair_speed_modifier = nil

---@optional true
---@type Resistances
Character.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Character.additional_pastable_entities = nil

---@optional true
---@type float
Character.alert_icon_scale = nil

---@optional true
---@type vector
Character.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Character.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Character.autoplace = nil

---@default 0
---@optional true
---@type double
Character.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Character.build_sound = nil

---@optional true
---@type SoundType
Character.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Character.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Character.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Character.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Character.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Character.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Character.emissions_per_second = nil

---@optional true
---@type Color
Character.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Character.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Character.flags = nil

---@optional true
---@type Color
Character.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Character.hit_visualization_box = nil

---@optional true
---@type Color
Character.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Character.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Character.minable = nil

---@optional true
---@type SoundType
Character.mined_sound = nil

---@optional true
---@type SoundType
Character.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Character.next_upgrade = nil

---@optional true
---@type SoundType
Character.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Character.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Character.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Character.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Character.remove_decoratives = nil

---@optional true
---@type SoundType
Character.rotated_sound = nil

---@default true
---@optional true
---@type bool
Character.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Character.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Character.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Character.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Character.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Character.subgroup = nil

---@optional true
---@type uint32
Character.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Character.tile_width = nil

---@optional true
---@type TriggerTargetMask
Character.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Character.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Character.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Character.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Character.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Character.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Character.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Character.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Character.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Character.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Character.icon_size = nil

---@default 0
---@optional true
---@type uint8
Character.icon_mipmaps = nil

---A generic container, such as a chest, that can spawn or void items and interact with the logistics network.
---@class InfinityContainer
local InfinityContainer = {}

---@optional false
---@type bool
InfinityContainer.erase_contents_when_mined = nil

---Controls which players can control what the chest spawns.
---@default all
---@optional true
---@type GuiMode
InfinityContainer.gui_mode = nil

---The way this chest interacts with the logistic network. Valid values are "passive-provider", "active-provider", "storage", "buffer" and "requester".
---@optional false
---@type string
InfinityContainer.logistic_mode = nil

---Drawn when a robot brings/takes items from this container.
---@optional true
---@type AnimationType
InfinityContainer.animation = nil

---Played when a robot brings/takes items from this container. Ignored if <code>animation</code> is not defined.
---@optional true
---@type SoundType
InfinityContainer.animation_sound = nil

---The offset from the center of this container where a robot visually brings/takes items.
---@optional true
---@type vector
InfinityContainer.landing_location_offset = nil

---The number of request slots this logistics container has. Requester-type containers must have > 0 slots and can have a maximum of 1000 slots. Storage-type containers must have <= 1 slot.
---@optional true
---@type uint16
InfinityContainer.max_logistic_slots = nil

---@default 0
---@optional true
---@type uint8
InfinityContainer.opened_duration = nil

---Whether the Too-far-from-roboport-icon.png icon should be rendered on this entity if the entity is not within a logistics network.
---@default true
---@optional true
---@type bool
InfinityContainer.render_not_in_network_icon = nil

---The number of slots in this container.
---@optional false
---@type uint16
InfinityContainer.inventory_size = nil

---The picture displayed for this entity.
---@optional false
---@type SpriteType
InfinityContainer.picture = nil

---The pictures displayed for circuit connections to this container.
---@optional true
---@type CircuitConnectorSprites
InfinityContainer.circuit_connector_sprites = nil

---Defines how wires visually connect to this container.
---@optional true
---@type WireConnectionPoint
InfinityContainer.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this container.
---@default 0
---@optional true
---@type double
InfinityContainer.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
InfinityContainer.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
InfinityContainer.draw_copper_wires = nil

---If the red inventory limiter bar is enabled.
---@default true
---@optional true
---@type bool
InfinityContainer.enable_inventory_bar = nil

---If the icons of items shown in alt-mode should be scaled to the containers size.
---@default false
---@optional true
---@type bool
InfinityContainer.scale_info_icons = nil

---@default true
---@optional true
---@type bool
InfinityContainer.alert_when_damaged = nil

---@optional true
---@type AttackReaction
InfinityContainer.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
InfinityContainer.corpse = nil

---@default true
---@optional true
---@type bool
InfinityContainer.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
InfinityContainer.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
InfinityContainer.dying_explosion = nil

---@optional true
---@type TriggerEffect
InfinityContainer.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
InfinityContainer.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
InfinityContainer.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
InfinityContainer.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
InfinityContainer.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
InfinityContainer.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
InfinityContainer.max_health = nil

---@default false
---@optional true
---@type bool
InfinityContainer.random_corpse_variation = nil

---@optional true
---@type SoundType
InfinityContainer.repair_sound = nil

---@default 1
---@optional true
---@type float
InfinityContainer.repair_speed_modifier = nil

---@optional true
---@type Resistances
InfinityContainer.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
InfinityContainer.additional_pastable_entities = nil

---@optional true
---@type float
InfinityContainer.alert_icon_scale = nil

---@optional true
---@type vector
InfinityContainer.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
InfinityContainer.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
InfinityContainer.autoplace = nil

---@default 0
---@optional true
---@type double
InfinityContainer.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
InfinityContainer.build_sound = nil

---@optional true
---@type SoundType
InfinityContainer.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
InfinityContainer.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
InfinityContainer.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
InfinityContainer.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
InfinityContainer.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
InfinityContainer.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
InfinityContainer.emissions_per_second = nil

---@optional true
---@type Color
InfinityContainer.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
InfinityContainer.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
InfinityContainer.flags = nil

---@optional true
---@type Color
InfinityContainer.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
InfinityContainer.hit_visualization_box = nil

---@optional true
---@type Color
InfinityContainer.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
InfinityContainer.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
InfinityContainer.minable = nil

---@optional true
---@type SoundType
InfinityContainer.mined_sound = nil

---@optional true
---@type SoundType
InfinityContainer.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
InfinityContainer.next_upgrade = nil

---@optional true
---@type SoundType
InfinityContainer.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
InfinityContainer.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
InfinityContainer.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
InfinityContainer.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
InfinityContainer.remove_decoratives = nil

---@optional true
---@type SoundType
InfinityContainer.rotated_sound = nil

---@default true
---@optional true
---@type bool
InfinityContainer.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
InfinityContainer.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
InfinityContainer.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
InfinityContainer.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
InfinityContainer.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
InfinityContainer.subgroup = nil

---@optional true
---@type uint32
InfinityContainer.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
InfinityContainer.tile_width = nil

---@optional true
---@type TriggerTargetMask
InfinityContainer.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
InfinityContainer.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
InfinityContainer.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
InfinityContainer.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
InfinityContainer.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
InfinityContainer.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
InfinityContainer.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
InfinityContainer.order = nil

---Path to the icon file.
---@optional true
---@type FileName
InfinityContainer.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
InfinityContainer.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
InfinityContainer.icon_size = nil

---@default 0
---@optional true
---@type uint8
InfinityContainer.icon_mipmaps = nil

---The rocket inside the rocket silo.
---@class RocketSiloRocket
local RocketSiloRocket = {}

---@optional false
---@type double
RocketSiloRocket.effects_fade_in_end_distance = nil

---@optional false
---@type double
RocketSiloRocket.effects_fade_in_start_distance = nil

---@optional false
---@type double
RocketSiloRocket.engine_starting_speed = nil

---@optional false
---@type double
RocketSiloRocket.flying_acceleration = nil

---@optional false
---@type double
RocketSiloRocket.flying_speed = nil

---@optional false
---@type double
RocketSiloRocket.full_render_layer_switch_distance = nil

---@optional false
---@type ItemStackIndex
RocketSiloRocket.inventory_size = nil

---@optional false
---@type double
RocketSiloRocket.rising_speed = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_flame_animation = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_flame_left_animation = nil

---@optional false
---@type float
RocketSiloRocket.rocket_flame_left_rotation = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_flame_right_animation = nil

---@optional false
---@type float
RocketSiloRocket.rocket_flame_right_rotation = nil

---@optional false
---@type SpriteType
RocketSiloRocket.rocket_glare_overlay_sprite = nil

---@optional false
---@type vector
RocketSiloRocket.rocket_launch_offset = nil

---@optional false
---@type double
RocketSiloRocket.rocket_render_layer_switch_distance = nil

---@optional false
---@type vector
RocketSiloRocket.rocket_rise_offset = nil

---@optional false
---@type SpriteType
RocketSiloRocket.rocket_shadow_sprite = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_smoke_bottom1_animation = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_smoke_bottom2_animation = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_smoke_top1_animation = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_smoke_top2_animation = nil

---@optional false
---@type AnimationType
RocketSiloRocket.rocket_smoke_top3_animation = nil

---@optional false
---@type SpriteType
RocketSiloRocket.rocket_sprite = nil

---@optional false
---@type double
RocketSiloRocket.rocket_visible_distance_from_center = nil

---@optional false
---@type double
RocketSiloRocket.shadow_fade_out_end_ratio = nil

---@optional false
---@type double
RocketSiloRocket.shadow_fade_out_start_ratio = nil

---Name of an entity.
---@optional false
---@type string
RocketSiloRocket.shadow_slave_entity = nil

---Name of an entity.
---@optional true
---@type string
RocketSiloRocket.dying_explosion = nil

---@optional true
---@type TriggerEffect
RocketSiloRocket.flying_trigger = nil

---@optional true
---@type LightDefinition
RocketSiloRocket.glow_light = nil

---@optional true
---@type vector
RocketSiloRocket.rocket_initial_offset = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RocketSiloRocket.additional_pastable_entities = nil

---@optional true
---@type float
RocketSiloRocket.alert_icon_scale = nil

---@optional true
---@type vector
RocketSiloRocket.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RocketSiloRocket.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RocketSiloRocket.autoplace = nil

---@default 0
---@optional true
---@type double
RocketSiloRocket.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RocketSiloRocket.build_sound = nil

---@optional true
---@type SoundType
RocketSiloRocket.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RocketSiloRocket.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RocketSiloRocket.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RocketSiloRocket.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RocketSiloRocket.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RocketSiloRocket.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RocketSiloRocket.emissions_per_second = nil

---@optional true
---@type Color
RocketSiloRocket.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RocketSiloRocket.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RocketSiloRocket.flags = nil

---@optional true
---@type Color
RocketSiloRocket.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RocketSiloRocket.hit_visualization_box = nil

---@optional true
---@type Color
RocketSiloRocket.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RocketSiloRocket.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RocketSiloRocket.minable = nil

---@optional true
---@type SoundType
RocketSiloRocket.mined_sound = nil

---@optional true
---@type SoundType
RocketSiloRocket.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RocketSiloRocket.next_upgrade = nil

---@optional true
---@type SoundType
RocketSiloRocket.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RocketSiloRocket.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RocketSiloRocket.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RocketSiloRocket.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RocketSiloRocket.remove_decoratives = nil

---@optional true
---@type SoundType
RocketSiloRocket.rotated_sound = nil

---@default true
---@optional true
---@type bool
RocketSiloRocket.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RocketSiloRocket.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RocketSiloRocket.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RocketSiloRocket.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RocketSiloRocket.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RocketSiloRocket.subgroup = nil

---@optional true
---@type uint32
RocketSiloRocket.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RocketSiloRocket.tile_width = nil

---@optional true
---@type TriggerTargetMask
RocketSiloRocket.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RocketSiloRocket.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RocketSiloRocket.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RocketSiloRocket.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RocketSiloRocket.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RocketSiloRocket.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RocketSiloRocket.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RocketSiloRocket.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RocketSiloRocket.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RocketSiloRocket.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RocketSiloRocket.icon_size = nil

---@default 0
---@optional true
---@type uint8
RocketSiloRocket.icon_mipmaps = nil

---A curved rail.
---@class CurvedRail
local CurvedRail = {}

---Must be "turn".
---@default turn
---@optional true
---@type string
CurvedRail.bending_type = nil

---@optional false
---@type RailRemnantsPictures
CurvedRail.pictures = nil

---Sound played when a character walks over this rail.
---@optional true
---@type SoundType
CurvedRail.walking_sound = nil

---@default true
---@optional true
---@type bool
CurvedRail.alert_when_damaged = nil

---@optional true
---@type AttackReaction
CurvedRail.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
CurvedRail.corpse = nil

---@default true
---@optional true
---@type bool
CurvedRail.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
CurvedRail.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
CurvedRail.dying_explosion = nil

---@optional true
---@type TriggerEffect
CurvedRail.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
CurvedRail.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
CurvedRail.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
CurvedRail.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
CurvedRail.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
CurvedRail.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
CurvedRail.max_health = nil

---@default false
---@optional true
---@type bool
CurvedRail.random_corpse_variation = nil

---@optional true
---@type SoundType
CurvedRail.repair_sound = nil

---@default 1
---@optional true
---@type float
CurvedRail.repair_speed_modifier = nil

---@optional true
---@type Resistances
CurvedRail.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
CurvedRail.additional_pastable_entities = nil

---@optional true
---@type float
CurvedRail.alert_icon_scale = nil

---@optional true
---@type vector
CurvedRail.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
CurvedRail.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
CurvedRail.autoplace = nil

---@default 0
---@optional true
---@type double
CurvedRail.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
CurvedRail.build_sound = nil

---@optional true
---@type SoundType
CurvedRail.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
CurvedRail.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
CurvedRail.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
CurvedRail.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
CurvedRail.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
CurvedRail.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
CurvedRail.emissions_per_second = nil

---@optional true
---@type Color
CurvedRail.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
CurvedRail.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
CurvedRail.flags = nil

---@optional true
---@type Color
CurvedRail.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
CurvedRail.hit_visualization_box = nil

---@optional true
---@type Color
CurvedRail.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
CurvedRail.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
CurvedRail.minable = nil

---@optional true
---@type SoundType
CurvedRail.mined_sound = nil

---@optional true
---@type SoundType
CurvedRail.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
CurvedRail.next_upgrade = nil

---@optional true
---@type SoundType
CurvedRail.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
CurvedRail.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
CurvedRail.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
CurvedRail.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
CurvedRail.remove_decoratives = nil

---@optional true
---@type SoundType
CurvedRail.rotated_sound = nil

---@default true
---@optional true
---@type bool
CurvedRail.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
CurvedRail.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
CurvedRail.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
CurvedRail.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
CurvedRail.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
CurvedRail.subgroup = nil

---@optional true
---@type uint32
CurvedRail.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
CurvedRail.tile_width = nil

---@optional true
---@type TriggerTargetMask
CurvedRail.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
CurvedRail.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
CurvedRail.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
CurvedRail.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CurvedRail.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CurvedRail.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CurvedRail.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CurvedRail.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CurvedRail.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CurvedRail.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CurvedRail.icon_size = nil

---@default 0
---@optional true
---@type uint8
CurvedRail.icon_mipmaps = nil

---The entity used for ghosts of entities.
---@class EntityGhost
local EntityGhost = {}

---@optional true
---@type SoundType
EntityGhost.large_build_sound = nil

---@optional true
---@type SoundType
EntityGhost.medium_build_sound = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
EntityGhost.additional_pastable_entities = nil

---@optional true
---@type float
EntityGhost.alert_icon_scale = nil

---@optional true
---@type vector
EntityGhost.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
EntityGhost.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
EntityGhost.autoplace = nil

---@default 0
---@optional true
---@type double
EntityGhost.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
EntityGhost.build_sound = nil

---@optional true
---@type SoundType
EntityGhost.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
EntityGhost.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
EntityGhost.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
EntityGhost.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
EntityGhost.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
EntityGhost.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
EntityGhost.emissions_per_second = nil

---@optional true
---@type Color
EntityGhost.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
EntityGhost.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
EntityGhost.flags = nil

---@optional true
---@type Color
EntityGhost.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
EntityGhost.hit_visualization_box = nil

---@optional true
---@type Color
EntityGhost.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
EntityGhost.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
EntityGhost.minable = nil

---@optional true
---@type SoundType
EntityGhost.mined_sound = nil

---@optional true
---@type SoundType
EntityGhost.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
EntityGhost.next_upgrade = nil

---@optional true
---@type SoundType
EntityGhost.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
EntityGhost.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
EntityGhost.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
EntityGhost.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
EntityGhost.remove_decoratives = nil

---@optional true
---@type SoundType
EntityGhost.rotated_sound = nil

---@default true
---@optional true
---@type bool
EntityGhost.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
EntityGhost.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
EntityGhost.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
EntityGhost.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
EntityGhost.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
EntityGhost.subgroup = nil

---@optional true
---@type uint32
EntityGhost.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
EntityGhost.tile_width = nil

---@optional true
---@type TriggerTargetMask
EntityGhost.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
EntityGhost.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
EntityGhost.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
EntityGhost.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EntityGhost.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EntityGhost.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EntityGhost.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EntityGhost.order = nil

---Path to the icon file.
---@optional true
---@type FileName
EntityGhost.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
EntityGhost.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
EntityGhost.icon_size = nil

---@default 0
---@optional true
---@type uint8
EntityGhost.icon_mipmaps = nil

---An item subgroup. The built-in subgroups can be found <a href="/Data.raw#item-subgroup" title="Data.raw">here</a>. See <a href="/Prototype/Item#subgroup" title="Prototype/Item">Prototype/Item#subgroup</a>.
---@class ItemSubGroup
local ItemSubGroup = {}

---Name of a <a href="/Prototype/ItemGroup" title="Prototype/ItemGroup">Prototype/ItemGroup</a>. The item group this subgroup is located in.
---@optional false
---@type string
ItemSubGroup.group = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemSubGroup.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemSubGroup.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemSubGroup.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemSubGroup.order = nil

---The inventory allows setting player defined filters similar to the quickbar and cargo wagon inventories.
---@class ItemWithInventory
local ItemWithInventory = {}

---The inventory size of the item.
---@optional false
---@type ItemStackIndex
ItemWithInventory.inventory_size = nil

---When true, this item-with-inventory will extend the inventory it sits in by default. This is a runtime property on the result item that can be changed through the Lua interface and only determines the initial value.
---@default false
---@optional true
---@type bool
ItemWithInventory.extends_inventory_by_default = nil

---The locale key used when the player attempts to put an item that doesn't match the filter rules into the item-with-inventory.
---@default item-limitation.item-not-allowed-in-this-container-item
---@optional true
---@type string
ItemWithInventory.filter_message_key = nil

---This determines how filters are applied. If no filters are defined this is automatically set to "none".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
ItemWithInventory.filter_mode = nil

---The insertion priority mode for this item. This determines if items are first attempted to be put into this items inventory if the item extends the inventory it sits in when items are put into the parent inventory.
---@default default
---@optional true
---@type ItemWithInventoryInsertionPriorityMode
ItemWithInventory.insertion_priority_mode = nil

---A list of explicit item names to be used as filters.
---@optional true
---@type string[]
ItemWithInventory.item_filters = nil

---A list of explicit item group names to be used as filters.
---@optional true
---@type string[]
ItemWithInventory.item_group_filters = nil

---A list of explicit item subgroup names to be used as filters.
---@optional true
---@type string[]
ItemWithInventory.item_subgroup_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
ItemWithInventory.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
ItemWithInventory.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
ItemWithInventory.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
ItemWithInventory.burnt_result = nil

---@optional true
---@type SoundType
ItemWithInventory.close_sound = nil

---@optional true
---@type IconData[]
ItemWithInventory.dark_background_icons = nil

---@optional true
---@type FileName
ItemWithInventory.dark_background_icon = nil

---@optional true
---@type ItemCountType
ItemWithInventory.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
ItemWithInventory.flags = nil

---@default 1.0
---@optional true
---@type double
ItemWithInventory.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
ItemWithInventory.fuel_category = nil

---@default 1.0
---@optional true
---@type double
ItemWithInventory.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
ItemWithInventory.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
ItemWithInventory.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
ItemWithInventory.fuel_value = nil

---@optional true
---@type SoundType
ItemWithInventory.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
ItemWithInventory.pictures = nil

---@optional true
---@type PlaceAsTile
ItemWithInventory.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
ItemWithInventory.place_result = nil

---@optional true
---@type string
ItemWithInventory.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
ItemWithInventory.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
ItemWithInventory.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
ItemWithInventory.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
ItemWithInventory.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemWithInventory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemWithInventory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemWithInventory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemWithInventory.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemWithInventory.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemWithInventory.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemWithInventory.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemWithInventory.icon_mipmaps = nil

---An <a href="/Arithmetic_combinator" title="Arithmetic combinator">arithmetic combinator</a>.
---@class ArithmeticCombinator
local ArithmeticCombinator = {}

---@optional false
---@type Sprite4Way
ArithmeticCombinator.and_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.divide_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.left_shift_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.minus_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.modulo_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.multiply_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.or_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.plus_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.power_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.right_shift_symbol_sprites = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.xor_symbol_sprites = nil

---@optional false
---@type Energy
ArithmeticCombinator.active_energy_usage = nil

---Array of 4 vectors.
---@optional false
---@type vector[]
ArithmeticCombinator.activity_led_light_offsets = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.activity_led_sprites = nil

---Must be an electric or void energy source.
---@optional false
---@type EnergySource
ArithmeticCombinator.energy_source = nil

---@optional false
---@type BoundingBox
ArithmeticCombinator.input_connection_bounding_box = nil

---Array of 4 WireConnectionPoints.
---@optional false
---@type WireConnectionPoint[]
ArithmeticCombinator.input_connection_points = nil

---@optional false
---@type BoundingBox
ArithmeticCombinator.output_connection_bounding_box = nil

---Array of 4 WireConnectionPoints.
---@optional false
---@type WireConnectionPoint[]
ArithmeticCombinator.output_connection_points = nil

---Array of 4 vectors.
---@optional false
---@type vector[]
ArithmeticCombinator.screen_light_offsets = nil

---@optional false
---@type Sprite4Way
ArithmeticCombinator.sprites = nil

---@default 5
---@optional true
---@type uint8
ArithmeticCombinator.activity_led_hold_time = nil

---@optional true
---@type LightDefinition
ArithmeticCombinator.activity_led_light = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
ArithmeticCombinator.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
ArithmeticCombinator.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
ArithmeticCombinator.draw_copper_wires = nil

---@optional true
---@type LightDefinition
ArithmeticCombinator.screen_light = nil

---@default true
---@optional true
---@type bool
ArithmeticCombinator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ArithmeticCombinator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ArithmeticCombinator.corpse = nil

---@default true
---@optional true
---@type bool
ArithmeticCombinator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ArithmeticCombinator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ArithmeticCombinator.dying_explosion = nil

---@optional true
---@type TriggerEffect
ArithmeticCombinator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ArithmeticCombinator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ArithmeticCombinator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ArithmeticCombinator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ArithmeticCombinator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ArithmeticCombinator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ArithmeticCombinator.max_health = nil

---@default false
---@optional true
---@type bool
ArithmeticCombinator.random_corpse_variation = nil

---@optional true
---@type SoundType
ArithmeticCombinator.repair_sound = nil

---@default 1
---@optional true
---@type float
ArithmeticCombinator.repair_speed_modifier = nil

---@optional true
---@type Resistances
ArithmeticCombinator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ArithmeticCombinator.additional_pastable_entities = nil

---@optional true
---@type float
ArithmeticCombinator.alert_icon_scale = nil

---@optional true
---@type vector
ArithmeticCombinator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ArithmeticCombinator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ArithmeticCombinator.autoplace = nil

---@default 0
---@optional true
---@type double
ArithmeticCombinator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ArithmeticCombinator.build_sound = nil

---@optional true
---@type SoundType
ArithmeticCombinator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ArithmeticCombinator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ArithmeticCombinator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ArithmeticCombinator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ArithmeticCombinator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ArithmeticCombinator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ArithmeticCombinator.emissions_per_second = nil

---@optional true
---@type Color
ArithmeticCombinator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ArithmeticCombinator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ArithmeticCombinator.flags = nil

---@optional true
---@type Color
ArithmeticCombinator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ArithmeticCombinator.hit_visualization_box = nil

---@optional true
---@type Color
ArithmeticCombinator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ArithmeticCombinator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ArithmeticCombinator.minable = nil

---@optional true
---@type SoundType
ArithmeticCombinator.mined_sound = nil

---@optional true
---@type SoundType
ArithmeticCombinator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ArithmeticCombinator.next_upgrade = nil

---@optional true
---@type SoundType
ArithmeticCombinator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ArithmeticCombinator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ArithmeticCombinator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ArithmeticCombinator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ArithmeticCombinator.remove_decoratives = nil

---@optional true
---@type SoundType
ArithmeticCombinator.rotated_sound = nil

---@default true
---@optional true
---@type bool
ArithmeticCombinator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ArithmeticCombinator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ArithmeticCombinator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ArithmeticCombinator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ArithmeticCombinator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ArithmeticCombinator.subgroup = nil

---@optional true
---@type uint32
ArithmeticCombinator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ArithmeticCombinator.tile_width = nil

---@optional true
---@type TriggerTargetMask
ArithmeticCombinator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ArithmeticCombinator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ArithmeticCombinator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ArithmeticCombinator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ArithmeticCombinator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ArithmeticCombinator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ArithmeticCombinator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ArithmeticCombinator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ArithmeticCombinator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ArithmeticCombinator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ArithmeticCombinator.icon_size = nil

---@default 0
---@optional true
---@type uint8
ArithmeticCombinator.icon_mipmaps = nil

---A <a href="/Cliff" title="Cliff">cliff</a>.
---@class Cliff
local Cliff = {}

---@optional false
---@type vector
Cliff.grid_offset = nil

---@optional false
---@type vector
Cliff.grid_size = nil

---@optional false
---@type CliffOrientations
Cliff.orientations = nil

---Name of a capsule that has a robot_action to explode cliffs.
---@optional true
---@type string
Cliff.cliff_explosive = nil

---@default 4
---@optional true
---@type float
Cliff.cliff_height = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Cliff.additional_pastable_entities = nil

---@optional true
---@type float
Cliff.alert_icon_scale = nil

---@optional true
---@type vector
Cliff.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Cliff.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Cliff.autoplace = nil

---@default 0
---@optional true
---@type double
Cliff.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Cliff.build_sound = nil

---@optional true
---@type SoundType
Cliff.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Cliff.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Cliff.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Cliff.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Cliff.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Cliff.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Cliff.emissions_per_second = nil

---@optional true
---@type Color
Cliff.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Cliff.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Cliff.flags = nil

---@optional true
---@type Color
Cliff.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Cliff.hit_visualization_box = nil

---@optional true
---@type Color
Cliff.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Cliff.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Cliff.minable = nil

---@optional true
---@type SoundType
Cliff.mined_sound = nil

---@optional true
---@type SoundType
Cliff.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Cliff.next_upgrade = nil

---@optional true
---@type SoundType
Cliff.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Cliff.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Cliff.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Cliff.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Cliff.remove_decoratives = nil

---@optional true
---@type SoundType
Cliff.rotated_sound = nil

---@default true
---@optional true
---@type bool
Cliff.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Cliff.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Cliff.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Cliff.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Cliff.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Cliff.subgroup = nil

---@optional true
---@type uint32
Cliff.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Cliff.tile_width = nil

---@optional true
---@type TriggerTargetMask
Cliff.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Cliff.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Cliff.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Cliff.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Cliff.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Cliff.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Cliff.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Cliff.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Cliff.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Cliff.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Cliff.icon_size = nil

---@default 0
---@optional true
---@type uint8
Cliff.icon_mipmaps = nil

---A recipe. It can be a crafting recipe, a smelting recipe, or a custom type of recipe (see Prototype/RecipeCategory).
---@class Recipe
local Recipe = {}

---Optional. The category of this recipe. The built-in categories can be found <a href="/Data.raw#recipe-category" title="Data.raw">here</a>. See also <a href="/Prototype/RecipeCategory" title="Prototype/RecipeCategory">Prototype/RecipeCategory</a>.
---@default crafting
---@optional true
---@type string
Recipe.category = nil

---Used by crafting machine <code><a href="/Prototype/CraftingMachine#working_visualisations" title="Prototype/CraftingMachine">working_visualisations</a></code> to tint certain layers with the recipe color. <a href="/Types/WorkingVisualisation#apply_recipe_tint" title="Types/WorkingVisualisation">apply_recipe_tint</a> on the working visualisation determines which of the 4 colors is used for that layer (if any).
---@optional true
---@type TintColors
Recipe.crafting_machine_tint = nil

---@optional true
---@type RecipeData|bool
Recipe.expensive = nil

---@optional true
---@type RecipeData|bool
Recipe.normal = nil

---The subgroup of this recipe. If not specified, defaults to the subgroup of the product if there is only 1, or main_product if multiple products exist. If multiple products exist and no main_product is specified, the subgroup is required.
---@optional true
---@type string
Recipe.subgroup = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Recipe.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Recipe.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Recipe.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Recipe.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Recipe.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Recipe.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Recipe.icon_size = nil

---@default 0
---@optional true
---@type uint8
Recipe.icon_mipmaps = nil

---<p>A table containing ingredient names and counts. Can also contain information about fluid temperature and catalyst amounts.</p><p>Maximal ingredient amount is 65535. The catalyst amounts are automatically calculated from the recipe, or can be set manually.<a rel="nofollow" class="external autonumber" href="https://factorio.com/blog/post/fff-256">[1]</a></p>
---@optional false
---@type IngredientPrototype[]
Recipe.ingredients = nil

---Optional. Whether the recipe can be used as an intermediate recipe in hand-crafting.
---@default true
---@optional true
---@type bool
Recipe.allow_as_intermediate = nil

---Optional. Whether this recipe is allowed to be broken down for the recipe tooltip "Total raw" calculations.
---@default true
---@optional true
---@type bool
Recipe.allow_decomposition = nil

---Optional. Whether the recipe is allowed to use intermediate recipes when hand-crafting.
---@default true
---@optional true
---@type bool
Recipe.allow_intermediates = nil

---Optional. Whether the "Made in: {Machine}" part of the tool-tip should always be present, not only when the recipe can not be hand-crafted.
---@default false
---@optional true
---@type bool
Recipe.always_show_made_in = nil

---Optional. Whether the products are always shown in the recipe tool-tip.
---@default false
---@optional true
---@type bool
Recipe.always_show_products = nil

---@default 1.0
---@optional true
---@type double
Recipe.emissions_multiplier = nil

---<p>Optional. This can be false to disable the recipe at the start of the game, or "true" to leave it enabled.</p><p>If your recipe is unlocked by a technology, you should set this to "false".</p>
---@default true
---@optional true
---@type bool
Recipe.enabled = nil

---<p>Optional. The amount of time it takes to make this recipe.</p><p>This is the number of seconds it takes to craft at crafting speed 1.</p>
---@default 0.5
---@optional true
---@type double
Recipe.energy_required = nil

---Optional. Hides the recipe from crafting menus.
---@default false
---@optional true
---@type bool
Recipe.hidden = nil

---Optional. Hides the recipe from the player's crafting screen. The recipe will still show up for selection in machines.
---@default false
---@optional true
---@type bool
Recipe.hide_from_player_crafting = nil

---Optional. Hides the recipe from flow stats (item/fluid production statistics).
---@default false
---@optional true
---@type bool
Recipe.hide_from_stats = nil

---<p>For recipes with more than one product: This defines of which result the icon, subgroup and name is used. If it is not set and the recipe has more than 1 result the recipe will use the recipe-name and recipe-description locale and its own subgroup and icon.</p><p>For recipes with 1 result: The recipe uses the icon, subgroup and name of the result by default. If set this property is set to an empty string, the recipe will use the properties of the recipe instead of the result.</p>
---@optional true
---@type string
Recipe.main_product = nil

---<p>Used to determine how many extra items are put into an assembling machine before it's considered "full enough". See Inserters#Insertion_limits.</p><p>If set to 0, it instead uses the following formula: 1.166 / (energy_required / the assembler's crafting_speed), rounded up, and clamped between 2 and 100.</p>
---@default 0
---@optional true
---@type uint32
Recipe.overload_multiplier = nil

---@default 30
---@optional true
---@type uint32
Recipe.requester_paste_multiplier = nil

---Can be replaced with the results parameter. The item created by this recipe. Must be the name of an item, such as "iron-gear-wheel".
---@optional true
---@type string
Recipe.result = nil

---Optional. The number of items created by this recipe.
---@default 1
---@optional true
---@type uint32
Recipe.result_count = nil

---A table containing result names and counts. Can also contain information about fluid temperature and catalyst amounts. The catalyst amounts are automatically calculated from the recipe, or can be set manually.<a rel="nofollow" class="external autonumber" href="https://factorio.com/blog/post/fff-256">[2]</a>
---@optional true
---@type ProductPrototype[]
Recipe.results = nil

---Optional. Whether the recipe name should have the product amount in front of it, e.g. "2 <a href="/Transport_belt" title="Transport belt">transport belt</a>"
---@default true
---@optional true
---@type bool
Recipe.show_amount_in_title = nil

---Optional. Whether enabling this recipe unlocks its item products to show in selection lists (item filter, logistic request etc.).
---@default true
---@optional true
---@type bool
Recipe.unlock_results = nil

---The definition of the tutorial to be used in the tips and tricks, see <a href="/Prototype/TipsAndTricksItem" title="Prototype/TipsAndTricksItem">Prototype/TipsAndTricksItem</a>. The actual tutorial code is defined in the tutorials folder, in the folder that has the name of the scenario property.
---@class Tutorial
local Tutorial = {}

---Name of the folder for this tutorial in the tutorials folder.
---@optional false
---@type string
Tutorial.scenario = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Tutorial.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Tutorial.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Tutorial.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Tutorial.order = nil

---A <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a>.
---@class UpgradeItem
local UpgradeItem = {}

---Can't be > 255.
---@default 0
---@optional true
---@type ItemStackIndex
UpgradeItem.mapper_count = nil

---The color of the rectangle used when alt-selection is done in-game.
---@optional false
---@type Color
UpgradeItem.alt_selection_color = nil

---The type of cursor box used to render selection of entities/tiles when alt selecting. Possible values are identical to normal selection_cursor_box_type.
---@optional false
---@type string
UpgradeItem.alt_selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool alt-selects things in-game. Possible values are identical to normal selection_mode.
---@optional false
---@type SelectionToolSelectionMode
UpgradeItem.alt_selection_mode = nil

---The color of the rectangle used when standard selection is done in-game.
---@optional false
---@type Color
UpgradeItem.selection_color = nil

---The type of cursor box used to render selection of entities/tiles when standard selecting.
---@optional false
---@type string
UpgradeItem.selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool selects things in-game.
---@optional false
---@type SelectionToolSelectionMode
UpgradeItem.selection_mode = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
UpgradeItem.alt_entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
UpgradeItem.alt_entity_filters = nil

---@optional true
---@type string[]
UpgradeItem.alt_entity_type_filters = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
UpgradeItem.alt_tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
UpgradeItem.alt_tile_filters = nil

---If tiles should be included in the selection regardless of entities also being in the selection. This is a visual only setting.
---@default false
---@optional true
---@type bool
UpgradeItem.always_include_tiles = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
UpgradeItem.entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
UpgradeItem.entity_filters = nil

---@optional true
---@type string[]
UpgradeItem.entity_type_filters = nil

---Name of a <a href="/Prototype/MouseCursor" title="Prototype/MouseCursor">Prototype/MouseCursor</a>.
---@default selection-tool-cursor
---@optional true
---@type string
UpgradeItem.mouse_cursor = nil

---Whether this is shown in the blueprint library. Unused as of 0.18.13 as the ability to show any selection tools in the blueprint library was removed.
---@default false
---@optional true
---@type bool
UpgradeItem.show_in_library = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
UpgradeItem.tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
UpgradeItem.tile_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
UpgradeItem.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
UpgradeItem.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
UpgradeItem.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
UpgradeItem.burnt_result = nil

---@optional true
---@type SoundType
UpgradeItem.close_sound = nil

---@optional true
---@type IconData[]
UpgradeItem.dark_background_icons = nil

---@optional true
---@type FileName
UpgradeItem.dark_background_icon = nil

---@optional true
---@type ItemCountType
UpgradeItem.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
UpgradeItem.flags = nil

---@default 1.0
---@optional true
---@type double
UpgradeItem.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
UpgradeItem.fuel_category = nil

---@default 1.0
---@optional true
---@type double
UpgradeItem.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
UpgradeItem.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
UpgradeItem.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
UpgradeItem.fuel_value = nil

---@optional true
---@type SoundType
UpgradeItem.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
UpgradeItem.pictures = nil

---@optional true
---@type PlaceAsTile
UpgradeItem.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
UpgradeItem.place_result = nil

---@optional true
---@type string
UpgradeItem.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
UpgradeItem.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
UpgradeItem.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
UpgradeItem.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
UpgradeItem.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
UpgradeItem.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
UpgradeItem.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
UpgradeItem.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
UpgradeItem.order = nil

---Path to the icon file.
---@optional true
---@type FileName
UpgradeItem.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
UpgradeItem.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
UpgradeItem.icon_size = nil

---@default 0
---@optional true
---@type uint8
UpgradeItem.icon_mipmaps = nil

---This prototype definition is used for the in-game achievements.
---@class Achievement
local Achievement = {}

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
Achievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
Achievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
Achievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Achievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Achievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Achievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Achievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Achievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Achievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Achievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
Achievement.icon_mipmaps = nil

---A <a href="/Gate" title="Gate">gate</a>.
---@class Gate
local Gate = {}

---@optional false
---@type double
Gate.activation_distance = nil

---@optional false
---@type SoundType
Gate.close_sound = nil

---@optional false
---@type AnimationType
Gate.horizontal_animation = nil

---@optional false
---@type AnimationType
Gate.horizontal_rail_animation_left = nil

---@optional false
---@type AnimationType
Gate.horizontal_rail_animation_right = nil

---@optional false
---@type AnimationType
Gate.horizontal_rail_base = nil

---@optional false
---@type SoundType
Gate.open_sound = nil

---@optional false
---@type float
Gate.opening_speed = nil

---@optional false
---@type uint32
Gate.timeout_to_close = nil

---@optional false
---@type AnimationType
Gate.vertical_animation = nil

---@optional false
---@type AnimationType
Gate.vertical_rail_animation_left = nil

---@optional false
---@type AnimationType
Gate.vertical_rail_animation_right = nil

---@optional false
---@type AnimationType
Gate.vertical_rail_base = nil

---@optional false
---@type AnimationType
Gate.wall_patch = nil

---@default 0
---@optional true
---@type uint32
Gate.fadeout_interval = nil

---This collision mask is used when the gate is open.
---@default {"object-layer", "item-layer", "floor-layer", "water-tile"}
---@optional true
---@type CollisionMask
Gate.opened_collision_mask = nil

---@default true
---@optional true
---@type bool
Gate.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Gate.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Gate.corpse = nil

---@default true
---@optional true
---@type bool
Gate.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Gate.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Gate.dying_explosion = nil

---@optional true
---@type TriggerEffect
Gate.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Gate.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Gate.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Gate.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Gate.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Gate.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Gate.max_health = nil

---@default false
---@optional true
---@type bool
Gate.random_corpse_variation = nil

---@optional true
---@type SoundType
Gate.repair_sound = nil

---@default 1
---@optional true
---@type float
Gate.repair_speed_modifier = nil

---@optional true
---@type Resistances
Gate.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Gate.additional_pastable_entities = nil

---@optional true
---@type float
Gate.alert_icon_scale = nil

---@optional true
---@type vector
Gate.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Gate.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Gate.autoplace = nil

---@default 0
---@optional true
---@type double
Gate.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Gate.build_sound = nil

---@optional true
---@type SoundType
Gate.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Gate.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Gate.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Gate.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Gate.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Gate.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Gate.emissions_per_second = nil

---@optional true
---@type Color
Gate.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Gate.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Gate.flags = nil

---@optional true
---@type Color
Gate.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Gate.hit_visualization_box = nil

---@optional true
---@type Color
Gate.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Gate.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Gate.minable = nil

---@optional true
---@type SoundType
Gate.mined_sound = nil

---@optional true
---@type SoundType
Gate.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Gate.next_upgrade = nil

---@optional true
---@type SoundType
Gate.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Gate.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Gate.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Gate.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Gate.remove_decoratives = nil

---@optional true
---@type SoundType
Gate.rotated_sound = nil

---@default true
---@optional true
---@type bool
Gate.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Gate.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Gate.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Gate.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Gate.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Gate.subgroup = nil

---@optional true
---@type uint32
Gate.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Gate.tile_width = nil

---@optional true
---@type TriggerTargetMask
Gate.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Gate.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Gate.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Gate.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Gate.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Gate.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Gate.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Gate.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Gate.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Gate.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Gate.icon_size = nil

---@default 0
---@optional true
---@type uint8
Gate.icon_mipmaps = nil

---A combat robot. Can attack enemies.
---@class CombatRobot
local CombatRobot = {}

---@optional false
---@type AttackParameters
CombatRobot.attack_parameters = nil

---@optional false
---@type RotatedAnimation
CombatRobot.idle = nil

---@optional false
---@type RotatedAnimation
CombatRobot.in_motion = nil

---@optional false
---@type RotatedAnimation
CombatRobot.shadow_idle = nil

---@optional false
---@type RotatedAnimation
CombatRobot.shadow_in_motion = nil

---@optional false
---@type uint32
CombatRobot.time_to_live = nil

---@optional true
---@type Trigger
CombatRobot.destroy_action = nil

---@default false
---@optional true
---@type bool
CombatRobot.follows_player = nil

---@default 0
---@optional true
---@type double
CombatRobot.friction = nil

---@optional true
---@type LightDefinition
CombatRobot.light = nil

---@default 0
---@optional true
---@type double
CombatRobot.range_from_player = nil

---@optional false
---@type double
CombatRobot.speed = nil

---How much does it cost to move 1 meter.
---@default 0
---@optional true
---@type Energy
CombatRobot.energy_per_move = nil

---@default 0
---@optional true
---@type Energy
CombatRobot.energy_per_tick = nil

---How much energy can be stored in the batteries.
---@default 0
---@optional true
---@type Energy
CombatRobot.max_energy = nil

---The maximum speed of the robot. Useful to limit the impact of <a href="/Worker_robot_speed_(research)" title="Worker robot speed (research)">worker robot speed (research)</a>.
---@optional true
---@type double
CombatRobot.max_speed = nil

---The robot will never go to charge when it has more energy than this.
---@default 0.95
---@optional true
---@type float
CombatRobot.max_to_charge = nil

---The robot will always go to charge when it has less energy than this.
---@default 0.2
---@optional true
---@type float
CombatRobot.min_to_charge = nil

---Some robots simply crash, some slowdown but keep going. 0 means crash.
---@default 0
---@optional true
---@type float
CombatRobot.speed_multiplier_when_out_of_energy = nil

---@default true
---@optional true
---@type bool
CombatRobot.alert_when_damaged = nil

---@optional true
---@type AttackReaction
CombatRobot.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
CombatRobot.corpse = nil

---@default true
---@optional true
---@type bool
CombatRobot.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
CombatRobot.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
CombatRobot.dying_explosion = nil

---@optional true
---@type TriggerEffect
CombatRobot.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
CombatRobot.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
CombatRobot.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
CombatRobot.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
CombatRobot.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
CombatRobot.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
CombatRobot.max_health = nil

---@default false
---@optional true
---@type bool
CombatRobot.random_corpse_variation = nil

---@optional true
---@type SoundType
CombatRobot.repair_sound = nil

---@default 1
---@optional true
---@type float
CombatRobot.repair_speed_modifier = nil

---@optional true
---@type Resistances
CombatRobot.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
CombatRobot.additional_pastable_entities = nil

---@optional true
---@type float
CombatRobot.alert_icon_scale = nil

---@optional true
---@type vector
CombatRobot.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
CombatRobot.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
CombatRobot.autoplace = nil

---@default 0
---@optional true
---@type double
CombatRobot.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
CombatRobot.build_sound = nil

---@optional true
---@type SoundType
CombatRobot.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
CombatRobot.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
CombatRobot.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
CombatRobot.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
CombatRobot.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
CombatRobot.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
CombatRobot.emissions_per_second = nil

---@optional true
---@type Color
CombatRobot.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
CombatRobot.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
CombatRobot.flags = nil

---@optional true
---@type Color
CombatRobot.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
CombatRobot.hit_visualization_box = nil

---@optional true
---@type Color
CombatRobot.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
CombatRobot.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
CombatRobot.minable = nil

---@optional true
---@type SoundType
CombatRobot.mined_sound = nil

---@optional true
---@type SoundType
CombatRobot.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
CombatRobot.next_upgrade = nil

---@optional true
---@type SoundType
CombatRobot.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
CombatRobot.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
CombatRobot.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
CombatRobot.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
CombatRobot.remove_decoratives = nil

---@optional true
---@type SoundType
CombatRobot.rotated_sound = nil

---@default true
---@optional true
---@type bool
CombatRobot.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
CombatRobot.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
CombatRobot.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
CombatRobot.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
CombatRobot.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
CombatRobot.subgroup = nil

---@optional true
---@type uint32
CombatRobot.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
CombatRobot.tile_width = nil

---@optional true
---@type TriggerTargetMask
CombatRobot.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
CombatRobot.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
CombatRobot.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
CombatRobot.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CombatRobot.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CombatRobot.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CombatRobot.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CombatRobot.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CombatRobot.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CombatRobot.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CombatRobot.icon_size = nil

---@default 0
---@optional true
---@type uint8
CombatRobot.icon_mipmaps = nil

---Like a normal item but with the ability to have a colored label.
---@class ItemWithLabel
local ItemWithLabel = {}

---The default label color the item will use.
---@optional true
---@type Color
ItemWithLabel.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
ItemWithLabel.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
ItemWithLabel.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
ItemWithLabel.burnt_result = nil

---@optional true
---@type SoundType
ItemWithLabel.close_sound = nil

---@optional true
---@type IconData[]
ItemWithLabel.dark_background_icons = nil

---@optional true
---@type FileName
ItemWithLabel.dark_background_icon = nil

---@optional true
---@type ItemCountType
ItemWithLabel.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
ItemWithLabel.flags = nil

---@default 1.0
---@optional true
---@type double
ItemWithLabel.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
ItemWithLabel.fuel_category = nil

---@default 1.0
---@optional true
---@type double
ItemWithLabel.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
ItemWithLabel.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
ItemWithLabel.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
ItemWithLabel.fuel_value = nil

---@optional true
---@type SoundType
ItemWithLabel.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
ItemWithLabel.pictures = nil

---@optional true
---@type PlaceAsTile
ItemWithLabel.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
ItemWithLabel.place_result = nil

---@optional true
---@type string
ItemWithLabel.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
ItemWithLabel.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
ItemWithLabel.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
ItemWithLabel.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
ItemWithLabel.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemWithLabel.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemWithLabel.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemWithLabel.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemWithLabel.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemWithLabel.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemWithLabel.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemWithLabel.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemWithLabel.icon_mipmaps = nil

---Defines a category to be available to <a href="/Prototype/Equipment" title="Prototype/Equipment">Prototype/Equipment</a> and <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">Prototype/EquipmentGrid</a>.
---@class EquipmentCategory
local EquipmentCategory = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EquipmentCategory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EquipmentCategory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EquipmentCategory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EquipmentCategory.order = nil

---The entity used for tile ghosts.
---@class TileGhost
local TileGhost = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
TileGhost.additional_pastable_entities = nil

---@optional true
---@type float
TileGhost.alert_icon_scale = nil

---@optional true
---@type vector
TileGhost.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
TileGhost.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
TileGhost.autoplace = nil

---@default 0
---@optional true
---@type double
TileGhost.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
TileGhost.build_sound = nil

---@optional true
---@type SoundType
TileGhost.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
TileGhost.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
TileGhost.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
TileGhost.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
TileGhost.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
TileGhost.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
TileGhost.emissions_per_second = nil

---@optional true
---@type Color
TileGhost.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
TileGhost.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
TileGhost.flags = nil

---@optional true
---@type Color
TileGhost.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
TileGhost.hit_visualization_box = nil

---@optional true
---@type Color
TileGhost.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
TileGhost.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
TileGhost.minable = nil

---@optional true
---@type SoundType
TileGhost.mined_sound = nil

---@optional true
---@type SoundType
TileGhost.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
TileGhost.next_upgrade = nil

---@optional true
---@type SoundType
TileGhost.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
TileGhost.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
TileGhost.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
TileGhost.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
TileGhost.remove_decoratives = nil

---@optional true
---@type SoundType
TileGhost.rotated_sound = nil

---@default true
---@optional true
---@type bool
TileGhost.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
TileGhost.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
TileGhost.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
TileGhost.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
TileGhost.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
TileGhost.subgroup = nil

---@optional true
---@type uint32
TileGhost.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
TileGhost.tile_width = nil

---@optional true
---@type TriggerTargetMask
TileGhost.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
TileGhost.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
TileGhost.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
TileGhost.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TileGhost.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TileGhost.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TileGhost.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TileGhost.order = nil

---Path to the icon file.
---@optional true
---@type FileName
TileGhost.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
TileGhost.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
TileGhost.icon_size = nil

---@default 0
---@optional true
---@type uint8
TileGhost.icon_mipmaps = nil

---Properties of the editor controller.
---@class EditorController
local EditorController = {}

---@optional false
---@type bool
EditorController.adjust_speed_based_off_zoom = nil

---@optional false
---@type bool
EditorController.enable_flash_light = nil

---@optional false
---@type bool
EditorController.fill_built_entity_energy_buffers = nil

---@optional false
---@type bool
EditorController.generate_neighbor_chunks = nil

---@optional false
---@type ItemStackIndex
EditorController.gun_inventory_size = nil

---@optional false
---@type bool
EditorController.instant_blueprint_building = nil

---@optional false
---@type bool
EditorController.instant_deconstruction = nil

---@optional false
---@type bool
EditorController.instant_rail_planner = nil

---@optional false
---@type bool
EditorController.instant_upgrading = nil

---@optional false
---@type ItemStackIndex
EditorController.inventory_size = nil

---@optional false
---@type double
EditorController.item_pickup_distance = nil

---@optional false
---@type double
EditorController.loot_pickup_distance = nil

---@optional false
---@type double
EditorController.mining_speed = nil

---Must be >= 0.34375.
---@optional false
---@type double
EditorController.movement_speed = nil

---Name of the editor-controller. Must be "default" since only one instances of this prototype can be defined.
---@default default
---@optional false
---@type string
EditorController.name = nil

---@optional false
---@type bool
EditorController.placed_corpses_never_expire = nil

---@optional false
---@type bool
EditorController.render_as_day = nil

---@optional false
---@type bool
EditorController.show_additional_entity_info_gui = nil

---@optional false
---@type bool
EditorController.show_character_tab_in_controller_gui = nil

---@optional false
---@type bool
EditorController.show_entity_health_bars = nil

---@optional false
---@type bool
EditorController.show_entity_tags = nil

---@optional false
---@type bool
EditorController.show_hidden_entities = nil

---@optional false
---@type bool
EditorController.show_infinity_filters_in_controller_gui = nil

---@optional false
---@type bool
EditorController.show_status_icons = nil

---Entity used to signify that an entity is requesting items, for example modules for an assembling machine after it was blueprinted with modules inside.
---@class ItemRequestProxy
local ItemRequestProxy = {}

---@optional false
---@type SpriteType
ItemRequestProxy.picture = nil

---@default true
---@optional true
---@type bool
ItemRequestProxy.use_target_entity_alert_icon_shift = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ItemRequestProxy.additional_pastable_entities = nil

---@optional true
---@type float
ItemRequestProxy.alert_icon_scale = nil

---@optional true
---@type vector
ItemRequestProxy.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ItemRequestProxy.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ItemRequestProxy.autoplace = nil

---@default 0
---@optional true
---@type double
ItemRequestProxy.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ItemRequestProxy.build_sound = nil

---@optional true
---@type SoundType
ItemRequestProxy.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ItemRequestProxy.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ItemRequestProxy.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ItemRequestProxy.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ItemRequestProxy.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ItemRequestProxy.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ItemRequestProxy.emissions_per_second = nil

---@optional true
---@type Color
ItemRequestProxy.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ItemRequestProxy.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ItemRequestProxy.flags = nil

---@optional true
---@type Color
ItemRequestProxy.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ItemRequestProxy.hit_visualization_box = nil

---@optional true
---@type Color
ItemRequestProxy.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ItemRequestProxy.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ItemRequestProxy.minable = nil

---@optional true
---@type SoundType
ItemRequestProxy.mined_sound = nil

---@optional true
---@type SoundType
ItemRequestProxy.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ItemRequestProxy.next_upgrade = nil

---@optional true
---@type SoundType
ItemRequestProxy.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ItemRequestProxy.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ItemRequestProxy.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ItemRequestProxy.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ItemRequestProxy.remove_decoratives = nil

---@optional true
---@type SoundType
ItemRequestProxy.rotated_sound = nil

---@default true
---@optional true
---@type bool
ItemRequestProxy.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ItemRequestProxy.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ItemRequestProxy.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ItemRequestProxy.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ItemRequestProxy.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ItemRequestProxy.subgroup = nil

---@optional true
---@type uint32
ItemRequestProxy.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ItemRequestProxy.tile_width = nil

---@optional true
---@type TriggerTargetMask
ItemRequestProxy.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ItemRequestProxy.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ItemRequestProxy.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ItemRequestProxy.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemRequestProxy.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemRequestProxy.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemRequestProxy.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemRequestProxy.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemRequestProxy.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemRequestProxy.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemRequestProxy.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemRequestProxy.icon_mipmaps = nil

---Smoke, but it's not an entity for optimization purposes.
---@class TrivialSmoke
local TrivialSmoke = {}

---@optional false
---@type AnimationType
TrivialSmoke.animation = nil

---Can't be 0 - the smoke will never render.
---@optional false
---@type uint32
TrivialSmoke.duration = nil

---Smoke always moves randomly unless <code>movement_slow_down_factor</code> is 0. If <code>affected_by_wind</code> is true, the smoke will also be moved by wind.
---@default true
---@optional true
---@type bool
TrivialSmoke.affected_by_wind = nil

---@optional true
---@type Color
TrivialSmoke.color = nil

---@default false
---@optional true
---@type bool
TrivialSmoke.cyclic = nil

---@default 1.0
---@optional true
---@type double
TrivialSmoke.end_scale = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
TrivialSmoke.fade_away_duration = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
TrivialSmoke.fade_in_duration = nil

---@optional true
---@type AnimationType
TrivialSmoke.glow_animation = nil

---@optional true
---@type uint32
TrivialSmoke.glow_fade_away_duration = nil

---Value between 0 and 1, with 1 being no slowdown and 0 being no movement.
---@default 0.995
---@optional true
---@type double
TrivialSmoke.movement_slow_down_factor = nil

---@default smoke
---@optional true
---@type RenderLayer
TrivialSmoke.render_layer = nil

---@default false
---@optional true
---@type bool
TrivialSmoke.show_when_smoke_off = nil

---@default 0
---@optional true
---@type uint32
TrivialSmoke.spread_duration = nil

---@default 1.0
---@optional true
---@type double
TrivialSmoke.start_scale = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TrivialSmoke.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TrivialSmoke.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TrivialSmoke.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TrivialSmoke.order = nil

---An assembling machine - like the assembling machines 1/2/3 in the game, but you can use your own recipe categories.
---@class AssemblingMachine
local AssemblingMachine = {}

---The preset recipe of this machine. This machine does not show a recipe selection if this is set. The base game uses this for the <a href="/Rocket_silo" title="Rocket silo">rocket silo</a>.
---@optional true
---@type string
AssemblingMachine.fixed_recipe = nil

---The locale key of the title of the GUI that is shown when the player opens the assembling machine.
---@optional true
---@type string
AssemblingMachine.gui_title_key = nil

---<p>Sets the maximum number of ingredients this machine can craft with. Any recipe with more ingredients than this will be unavailable in this machine.</p><p>This only counts item ingredients, not fluid ingredients! This means if ingredient count is 2, and the recipe has 2 item ingredients and 1 fluid ingredient, it can still be crafted in the machine.</p>
---@default 255
---@optional true
---@type uint8
AssemblingMachine.ingredient_count = nil

---A list of recipe categories this crafting machine can use.
---@optional false
---@type strings[]
AssemblingMachine.crafting_categories = nil

---<p>How fast this crafting machine can craft. 1 means that for example a 1 second long recipe take 1 second to craft. 0.5 means it takes 2 seconds, and 2 means it takes 0.5 seconds.</p><p>Crafting speed has to be positive.</p>
---@optional false
---@type double
AssemblingMachine.crafting_speed = nil

---<p>Defines how the crafting machine is powered.</p><p>When using an electric energy source and <code>drain</code> is not specified, it will be set to <code>energy_usage ÷ 30</code> automatically.</p>
---@optional false
---@type EnergySource
AssemblingMachine.energy_source = nil

---Sets how much energy this machine uses while crafting. Energy usage has to be positive.
---@optional false
---@type Energy
AssemblingMachine.energy_usage = nil

---Sets the module effects that are allowed to be used on this machine.
---@optional true
---@type EffectTypeLimitation
AssemblingMachine.allowed_effects = nil

---Only loaded if <code>idle_animation</code> is present.
---@default false
---@optional true
---@type bool
AssemblingMachine.always_draw_idle_animation = nil

---<p>The animation played when crafting. When the crafting machine is idle, the animation will be paused.</p><p>When a crafting machine cannot be rotated, only the north rotation of the animation will be used.</p>
---@optional true
---@type Animation4Way
AssemblingMachine.animation = nil

---Productivity bonus that this machine always has.
---@default 0
---@optional true
---@type float
AssemblingMachine.base_productivity = nil

---Each key/value pair is optional and defaults to the above value.
---@optional true
---@type TintColors
AssemblingMachine.default_recipe_tint = nil

---Whether the "alt-mode icon" should have a black background.
---@default true
---@optional true
---@type bool
AssemblingMachine.draw_entity_info_icon_background = nil

---Shift of the "alt-mode icon" relative to the machine's center.
---@optional true
---@type vector
AssemblingMachine.entity_info_icon_shift = nil

---<p>Can have off_when_no_fluid_recipe key that has a <a href="/Types/bool" title="Types/bool">bool</a> value. off_when_no_fluid_recipe defaults to false. off_when_no_fluid_recipe is ignored by <a href="/Prototype/Furnace" title="Prototype/Furnace">Prototype/Furnaces</a> and considered to always be false.</p><p>If a crafting machine has fluid boxes and off_when_no_fluid_recipe is true, the crafting machine can only be rotated when a recipe consuming or producing fluid is set, or it has one of the other properties listed at the top of the page.</p>
---@optional true
---@type FluidBox[]
AssemblingMachine.fluid_boxes = nil

---<p>Idle animation must have the same frame count as animation. It is used for drawing the machine in idle state, but the is animation frozen on a single frame when the machine is idle.</p><p>This is an animation and not just sprite to make it possible for idle state and working state to match their visuals when the machine switches from one state to another.</p><p>When a crafting machine cannot be rotated, only the north rotation of the idle animation will be used.</p>
---@optional true
---@type Animation4Way
AssemblingMachine.idle_animation = nil

---Whether the speed of the animation and working visualization should be based on the machine's speed (boosted or slowed by modules).
---@default false
---@optional true
---@type bool
AssemblingMachine.match_animation_speed_to_activity = nil

---The number of module slots in this machine, and their icon positions.
---@optional true
---@type ModuleSpecification
AssemblingMachine.module_specification = nil

---Controls whether the ingredients of an in-progress recipe are destroyed when mining the machine/changing the recipe. If set to true, the ingredients do not get destroyed. This affects only the ingredients of the recipe that is currently in progress, so those that visually have already been consumed while their resulting product has not yet been produced.
---@default true
---@optional true
---@type bool
AssemblingMachine.return_ingredients_on_change = nil

---Whether the "alt-mode icon" should be scaled to the size of the machine.
---@default false
---@optional true
---@type bool
AssemblingMachine.scale_entity_info_icon = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
AssemblingMachine.shift_animation_transition_duration = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
AssemblingMachine.shift_animation_waypoint_stop_duration = nil

---Only loaded if one of <code>shift_animation_waypoint_stop_duration</code> or <code>shift_animation_transition_duration</code> is not 0.
---@optional true
---@type CraftingMachineShiftAnimationWaypoints
AssemblingMachine.shift_animation_waypoints = nil

---Whether the "alt-mode icon" should be drawn at all.
---@default true
---@optional true
---@type bool
AssemblingMachine.show_recipe_icon = nil

---@optional true
---@type CraftingMachineStatusColors
AssemblingMachine.status_colors = nil

---@optional true
---@type WorkingVisualisation[]
AssemblingMachine.working_visualisations = nil

---@default true
---@optional true
---@type bool
AssemblingMachine.alert_when_damaged = nil

---@optional true
---@type AttackReaction
AssemblingMachine.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
AssemblingMachine.corpse = nil

---@default true
---@optional true
---@type bool
AssemblingMachine.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
AssemblingMachine.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
AssemblingMachine.dying_explosion = nil

---@optional true
---@type TriggerEffect
AssemblingMachine.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
AssemblingMachine.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
AssemblingMachine.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
AssemblingMachine.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
AssemblingMachine.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
AssemblingMachine.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
AssemblingMachine.max_health = nil

---@default false
---@optional true
---@type bool
AssemblingMachine.random_corpse_variation = nil

---@optional true
---@type SoundType
AssemblingMachine.repair_sound = nil

---@default 1
---@optional true
---@type float
AssemblingMachine.repair_speed_modifier = nil

---@optional true
---@type Resistances
AssemblingMachine.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
AssemblingMachine.additional_pastable_entities = nil

---@optional true
---@type float
AssemblingMachine.alert_icon_scale = nil

---@optional true
---@type vector
AssemblingMachine.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
AssemblingMachine.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
AssemblingMachine.autoplace = nil

---@default 0
---@optional true
---@type double
AssemblingMachine.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
AssemblingMachine.build_sound = nil

---@optional true
---@type SoundType
AssemblingMachine.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
AssemblingMachine.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
AssemblingMachine.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
AssemblingMachine.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
AssemblingMachine.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
AssemblingMachine.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
AssemblingMachine.emissions_per_second = nil

---@optional true
---@type Color
AssemblingMachine.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
AssemblingMachine.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
AssemblingMachine.flags = nil

---@optional true
---@type Color
AssemblingMachine.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
AssemblingMachine.hit_visualization_box = nil

---@optional true
---@type Color
AssemblingMachine.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
AssemblingMachine.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
AssemblingMachine.minable = nil

---@optional true
---@type SoundType
AssemblingMachine.mined_sound = nil

---@optional true
---@type SoundType
AssemblingMachine.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
AssemblingMachine.next_upgrade = nil

---@optional true
---@type SoundType
AssemblingMachine.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
AssemblingMachine.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
AssemblingMachine.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
AssemblingMachine.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
AssemblingMachine.remove_decoratives = nil

---@optional true
---@type SoundType
AssemblingMachine.rotated_sound = nil

---@default true
---@optional true
---@type bool
AssemblingMachine.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
AssemblingMachine.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
AssemblingMachine.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
AssemblingMachine.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
AssemblingMachine.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
AssemblingMachine.subgroup = nil

---@optional true
---@type uint32
AssemblingMachine.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
AssemblingMachine.tile_width = nil

---@optional true
---@type TriggerTargetMask
AssemblingMachine.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
AssemblingMachine.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
AssemblingMachine.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
AssemblingMachine.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
AssemblingMachine.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
AssemblingMachine.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
AssemblingMachine.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
AssemblingMachine.order = nil

---Path to the icon file.
---@optional true
---@type FileName
AssemblingMachine.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
AssemblingMachine.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
AssemblingMachine.icon_size = nil

---@default 0
---@optional true
---@type uint8
AssemblingMachine.icon_mipmaps = nil

---Used by <a href="/Personal_roboport" title="Personal roboport">personal roboport</a>.
---@class RoboportEquipment
local RoboportEquipment = {}

---Presumably, the distance from the roboport at which robots will wait to charge.
---@optional false
---@type float
RoboportEquipment.charge_approach_distance = nil

---@optional false
---@type Energy
RoboportEquipment.charging_energy = nil

---Can't be negative.
---@optional false
---@type float
RoboportEquipment.construction_radius = nil

---The animation played at each charging point when a robot is charging there.
---@optional false
---@type AnimationType
RoboportEquipment.recharging_animation = nil

---Presumably states the height of the charging stations and thus an additive offset for the charging_offsets.
---@optional false
---@type float
RoboportEquipment.spawn_and_station_height = nil

---Must be a burner energy source. Add this is if the roboport should be fueled directly instead of using power from the equipment grid.
---@optional true
---@type EnergySource
RoboportEquipment.burner = nil

---@default 0.0
---@optional true
---@type float
RoboportEquipment.charging_distance = nil

---The offsets from the centre of the roboport at which robots will charge.
---@optional true
---@type vector[]
RoboportEquipment.charging_offsets = nil

---@default 0
---@optional true
---@type uint32
RoboportEquipment.charging_station_count = nil

---@optional true
---@type vector
RoboportEquipment.charging_station_shift = nil

---@default 1.0
---@optional true
---@type float
RoboportEquipment.charging_threshold_distance = nil

---@default true
---@optional true
---@type bool
RoboportEquipment.draw_construction_radius_visualization = nil

---@default true
---@optional true
---@type bool
RoboportEquipment.draw_logistic_radius_visualization = nil

---Mandatory if <code>burner</code> is present. The size of the buffer of the burner energy source, so effectively the amount of power that the energy source can produce per tick.
---@optional true
---@type Energy
RoboportEquipment.power = nil

---The light emitted when charging a robot.
---@optional true
---@type LightDefinition
RoboportEquipment.recharging_light = nil

---How many robots can exist in the network (cumulative).
---@optional true
---@type ItemCountType
RoboportEquipment.robot_limit = nil

---@default 0.01
---@optional true
---@type float
RoboportEquipment.robot_vertical_acceleration = nil

---@default false
---@optional true
---@type bool
RoboportEquipment.robots_shrink_when_entering_and_exiting = nil

---@default 0
---@optional true
---@type float
RoboportEquipment.spawn_and_station_shadow_height_offset = nil

---Minimum amount of energy that needs to available inside the roboport's buffer so that robots can be spawned.
---@optional true
---@type Energy
RoboportEquipment.spawn_minimum = nil

---The offset from the centre of the roboport at which robots will enter and exit.
---@optional true
---@type vector
RoboportEquipment.stationing_offset = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
RoboportEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
RoboportEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
RoboportEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
RoboportEquipment.sprite = nil

---@optional true
---@type SpriteType
RoboportEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
RoboportEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
RoboportEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
RoboportEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
RoboportEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RoboportEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RoboportEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RoboportEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RoboportEquipment.order = nil

---Entity with limited lifetime that can hit other entities and has triggers when this happens.
---@class Projectile
local Projectile = {}

---Must be != 0 if turning_speed_increases_exponentially_with_projectile_speed is true.
---@optional false
---@type double
Projectile.acceleration = nil

---@optional false
---@type AnimationType
Projectile.animation = nil

---Executed when the projectile hits something.
---@optional true
---@type Trigger
Projectile.action = nil

---Setting this to true can be used to disable projectile homing behaviour.
---@default false
---@optional true
---@type bool
Projectile.direction_only = nil

---@default false
---@optional true
---@type bool
Projectile.enable_drawing_with_mask = nil

---Executed when the projectile hits something, after <code>action</code> and only if the entity that was hit was destroyed. The projectile is destroyed right after the final_action.
---@optional true
---@type Trigger
Projectile.final_action = nil

---@default all
---@optional true
---@type ForceCondition
Projectile.force_condition = nil

---@default 1
---@optional true
---@type double
Projectile.height = nil

---When true the entity is hit at the position on its collision box the projectile first collides with. When false the entity is hit at its own position.
---@default false
---@optional true
---@type bool
Projectile.hit_at_collision_position = nil

---@optional true
---@type CollisionMask
Projectile.hit_collision_mask = nil

---@optional true
---@type LightDefinition
Projectile.light = nil

---Must be greater than or equal to 0.
---@optional true
---@type double
Projectile.max_speed = nil

---Whenever an entity is hit by the projectile, this number gets reduced by the health of the entity. If the number is then below 0, the <code>final_action</code> is applied and the projectile destroyed. Otherwise, the projectile simply continues to its destination.
---@default 0
---@optional true
---@type float
Projectile.piercing_damage = nil

---Whether the animation of the projectile is rotated to match the direction of travel.
---@default true
---@optional true
---@type bool
Projectile.rotatable = nil

---@optional true
---@type AnimationType
Projectile.shadow = nil

---@optional true
---@type SmokeSource[]
Projectile.smoke = nil

---@optional true
---@type float
Projectile.turn_speed = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Projectile.additional_pastable_entities = nil

---@optional true
---@type float
Projectile.alert_icon_scale = nil

---@optional true
---@type vector
Projectile.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Projectile.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Projectile.autoplace = nil

---@default 0
---@optional true
---@type double
Projectile.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Projectile.build_sound = nil

---@optional true
---@type SoundType
Projectile.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Projectile.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Projectile.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Projectile.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Projectile.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Projectile.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Projectile.emissions_per_second = nil

---@optional true
---@type Color
Projectile.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Projectile.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Projectile.flags = nil

---@optional true
---@type Color
Projectile.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Projectile.hit_visualization_box = nil

---@optional true
---@type Color
Projectile.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Projectile.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Projectile.minable = nil

---@optional true
---@type SoundType
Projectile.mined_sound = nil

---@optional true
---@type SoundType
Projectile.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Projectile.next_upgrade = nil

---@optional true
---@type SoundType
Projectile.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Projectile.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Projectile.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Projectile.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Projectile.remove_decoratives = nil

---@optional true
---@type SoundType
Projectile.rotated_sound = nil

---@default true
---@optional true
---@type bool
Projectile.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Projectile.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Projectile.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Projectile.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Projectile.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Projectile.subgroup = nil

---@optional true
---@type uint32
Projectile.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Projectile.tile_width = nil

---@optional true
---@type TriggerTargetMask
Projectile.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Projectile.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Projectile.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Projectile.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Projectile.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Projectile.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Projectile.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Projectile.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Projectile.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Projectile.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Projectile.icon_size = nil

---@default 0
---@optional true
---@type uint8
Projectile.icon_mipmaps = nil

---Used for custom keyboard shortcuts/keybindings in mods. The key associated with the custom input can be changed in the options. This means that <code>key_sequence</code> is simply the default keybinding.
---@class CustomInput
local CustomInput = {}

---<p>The default key sequence for this custom input.</p><ul>"" (empty string) for unassigned<li>"mouse-button-2" etc for mouse buttons, mouse-button-3 for middle mouse button</li><li>"mouse-wheel-up", "mouse-wheel-down", "mouse-wheel-left", "mouse-wheel-right" for mouse wheel</li><li>" + " is used to separate modifier keys from normal keys: <code>"ALT + G"</code></li><li>For modifier keys, the following names are used: "CONTROL", "SHIFT", "ALT", "COMMAND"</li><li>A keybinding can contain an unlimited amount of modifier keys (listed above) but only one normal key (listed below).</li></ul>
---@optional false
---@type string
CustomInput.key_sequence = nil

---A lua event is only raised if the action is "lua".
---@default lua
---@optional true
---@type CustomInputAction
CustomInput.action = nil

---The alternative keybinding for this control. See #key_sequence.
---@optional true
---@type string
CustomInput.alternative_key_sequence = nil

---@default none
---@optional true
---@type ConsumingType
CustomInput.consuming = nil

---If this custom input is enabled. Disabled custom inputs exist but are not used by the game. If disabled, no event is raised when the input is used.
---@default true
---@optional true
---@type bool
CustomInput.enabled = nil

---@default false
---@optional true
---@type bool
CustomInput.enabled_while_in_cutscene = nil

---@default false
---@optional true
---@type bool
CustomInput.enabled_while_spectating = nil

---Name of a <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a>. It will be created when this input is pressed and action is set to "spawn-item". The item must have the <a href="/Types/ItemPrototypeFlags#.22spawnable.22" title="Types/ItemPrototypeFlags">"spawnable"</a> flag set.
---@optional true
---@type string
CustomInput.item_to_spawn = nil

---When a custom-input is linked to a game control it won't show up in the control-settings GUI and will fire when the linked control is pressed. <a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/53591">[1]</a>
---@optional true
---@type string
CustomInput.linked_game_control = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CustomInput.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CustomInput.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CustomInput.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CustomInput.order = nil

---Specifies a picture that can be used with <a rel="nofollow" class="external free" href="https://lua-api.factorio.com/latest/Concepts.html#SpritePath">https://lua-api.factorio.com/latest/Concepts.html#SpritePath</a> during runtime.
---@class Sprite
local Sprite = {}

---Technically optional, but path to sprite cannot be empty.
---@optional false
---@type FileName
Sprite.filename = nil

---Name of the sprite. Must be unique. Can be used as a <a rel="nofollow" class="external free" href="https://lua-api.factorio.com/latest/Concepts.html#SpritePath">https://lua-api.factorio.com/latest/Concepts.html#SpritePath</a>.
---@optional false
---@type string
Sprite.name = nil

---@default false
---@optional true
---@type bool
Sprite.apply_runtime_tint = nil

---@default normal
---@optional true
---@type BlendMode
Sprite.blend_mode = nil

---@default false
---@optional true
---@type bool
Sprite.draw_as_shadow = nil

---@optional true
---@type SpriteFlags
Sprite.flags = nil

---@default false
---@optional true
---@type bool
Sprite.generate_sdf = nil

---Mandatory if <code>size</code> is not given. Height of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
Sprite.height = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the sprite.
---@optional true
---@type SpriteType
Sprite.hr_version = nil

---<p>If this property is present, all Sprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Sprite definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type SpriteType[]
Sprite.layers = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
Sprite.load_in_minimal_mode = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
Sprite.mipmap_count = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
Sprite.position = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
Sprite.premul_alpha = nil

---@default medium
---@optional true
---@type SpritePriority
Sprite.priority = nil

---Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
Sprite.scale = nil

---In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.
---@optional true
---@type vector
Sprite.shift = nil

---<p>The width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
Sprite.size = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
Sprite.slice = nil

---Same as <code>slice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
Sprite.slice_x = nil

---Same as <code>slice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
Sprite.slice_y = nil

---@optional true
---@type Color
Sprite.tint = nil

---Mandatory if <code>size</code> is not given. Width of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
Sprite.width = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
Sprite.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
Sprite.y = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
Sprite.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
Sprite.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
Sprite.draw_as_shadow = nil

---A <a href="/Tile" title="Tile">tile</a>. Only 255 instances of this prototype may be defined.
---@class Tile
local Tile = {}

---@optional false
---@type CollisionMask
Tile.collision_mask = nil

---Specifies transition drawing priority.
---@optional false
---@type uint8
Tile.layer = nil

---@optional false
---@type Color
Tile.map_color = nil

---Emissions absorbed per second by this tile. Use a negative value if pollution is created instead of removed.
---@optional false
---@type double
Tile.pollution_absorption_per_second = nil

---Graphics for this tile.
---@optional false
---@type TileVariants
Tile.variants = nil

---Array of tile names that are allowed next to this one.
---@optional true
---@type string[]
Tile.allowed_neighbors = nil

---@optional true
---@type AutoplaceSpecification
Tile.autoplace = nil

---@optional true
---@type TileBuildSound
Tile.build_sound = nil

---@default true
---@optional true
---@type bool
Tile.can_be_part_of_blueprint = nil

---@default 0.0
---@optional true
---@type float
Tile.decorative_removal_probability = nil

---Used only for the <code>layer_group</code> default, see above.
---@default false
---@optional true
---@type bool
Tile.draw_in_water_layer = nil

---@optional true
---@type string
Tile.effect = nil

---@optional true
---@type Color
Tile.effect_color = nil

---@optional true
---@type bool
Tile.effect_is_opaque = nil

---@optional true
---@type TileLayerGroup
Tile.layer_group = nil

---If you want the tile to not be minable, don't specify the minable property.
---@optional true
---@type MinableProperties
Tile.minable = nil

---@optional true
---@type SoundType
Tile.mined_sound = nil

---@default false
---@optional true
---@type bool
Tile.needs_correction = nil

---Name of a tile.
---@optional true
---@type string
Tile.next_direction = nil

---@optional true
---@type ItemToPlace|ItemToPlace[]
Tile.placeable_by = nil

---@optional true
---@type Color
Tile.scorch_mark_color = nil

---@optional true
---@type Color
Tile.tint = nil

---Name of a tile.
---@optional true
---@type string
Tile.transition_merges_with_tile = nil

---@default 0
---@optional true
---@type uint8
Tile.transition_overlay_layer_offset = nil

---Extra transitions. Array of <a href="/Types/TileTransitions" title="Types/TileTransitions">TileTransitions</a>. Each <a href="/Types/TileTransitions" title="Types/TileTransitions">TileTransitions</a> needs the extra mandatory property <code>to_tiles</code>, which is a <a href="/Types/string" title="Types/string">string</a> which is the name of a tile. Furthermore, each <a href="/Types/TileTransitions" title="Types/TileTransitions">TileTransitions</a> needs the extra mandatory property <code>transition_group</code> which is a <a href="/Types/uint8" title="Types/uint8">uint8</a>.
---@optional true
---@type TileTransitions[]
Tile.transitions = nil

---Array of <a href="/Types/TileTransitions" title="Types/TileTransitions">TileTransitions</a>. Each <a href="/Types/TileTransitions" title="Types/TileTransitions">TileTransitions</a> needs the extra mandatory properties <code>transition_group1</code> and<code>transition_group2</code> , which are of  <a href="/Types/uint8" title="Types/uint8">uint8</a>.
---@optional true
---@type TileTransitions[]
Tile.transitions_between_transitions = nil

---Called by <a href="/Types/InvokeTileEffectTriggerEffectItem" title="Types/InvokeTileEffectTriggerEffectItem">InvokeTileEffectTriggerEffectItem</a>.
---@optional true
---@type TriggerEffect
Tile.trigger_effect = nil

---@default 1
---@optional true
---@type double
Tile.vehicle_friction_modifier = nil

---@optional true
---@type SoundType
Tile.walking_sound = nil

---@default 1
---@optional true
---@type double
Tile.walking_speed_modifier = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Tile.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Tile.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Tile.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Tile.order = nil

---This prototype definition is used for receiving an achievement when the player gets attacked due to pollution.
---@class GroupAttackAchievement
local GroupAttackAchievement = {}

---This will trigger the achievement, if the player receives this amount of attacks. <b>Note:</b> The default achievement "it stinks and they dont like it" uses the amount of 1. (As in getting attacked once.)
---@default 1
---@optional true
---@type uint32
GroupAttackAchievement.amount = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
GroupAttackAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
GroupAttackAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
GroupAttackAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
GroupAttackAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
GroupAttackAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
GroupAttackAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
GroupAttackAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
GroupAttackAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
GroupAttackAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
GroupAttackAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
GroupAttackAchievement.icon_mipmaps = nil

---The corpse of a <a href="/Prototype/Character" title="Prototype/Character">Prototype/Character</a>.
---@class CharacterCorpse
local CharacterCorpse = {}

---@optional false
---@type uint32
CharacterCorpse.time_to_live = nil

---Table of key value pairs, the keys are armor names and the values are numbers. The number is the Animation that is associated with the armor, e.g. using <code>1</code> will associate the armor with the first Animation in the pictures table.
---@optional true
---@type table
CharacterCorpse.armor_picture_mapping = nil

---Either <code>pictures</code> or <code>picture</code> must be defined.
---@optional true
---@type AnimationType
CharacterCorpse.picture = nil

---Either <code>pictures</code> or <code>picture</code> must be defined.
---@optional true
---@type AnimationVariations
CharacterCorpse.pictures = nil

---@default object
---@optional true
---@type RenderLayer
CharacterCorpse.render_layer = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
CharacterCorpse.additional_pastable_entities = nil

---@optional true
---@type float
CharacterCorpse.alert_icon_scale = nil

---@optional true
---@type vector
CharacterCorpse.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
CharacterCorpse.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
CharacterCorpse.autoplace = nil

---@default 0
---@optional true
---@type double
CharacterCorpse.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
CharacterCorpse.build_sound = nil

---@optional true
---@type SoundType
CharacterCorpse.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
CharacterCorpse.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
CharacterCorpse.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
CharacterCorpse.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
CharacterCorpse.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
CharacterCorpse.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
CharacterCorpse.emissions_per_second = nil

---@optional true
---@type Color
CharacterCorpse.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
CharacterCorpse.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
CharacterCorpse.flags = nil

---@optional true
---@type Color
CharacterCorpse.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
CharacterCorpse.hit_visualization_box = nil

---@optional true
---@type Color
CharacterCorpse.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
CharacterCorpse.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
CharacterCorpse.minable = nil

---@optional true
---@type SoundType
CharacterCorpse.mined_sound = nil

---@optional true
---@type SoundType
CharacterCorpse.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
CharacterCorpse.next_upgrade = nil

---@optional true
---@type SoundType
CharacterCorpse.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
CharacterCorpse.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
CharacterCorpse.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
CharacterCorpse.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
CharacterCorpse.remove_decoratives = nil

---@optional true
---@type SoundType
CharacterCorpse.rotated_sound = nil

---@default true
---@optional true
---@type bool
CharacterCorpse.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
CharacterCorpse.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
CharacterCorpse.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
CharacterCorpse.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
CharacterCorpse.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
CharacterCorpse.subgroup = nil

---@optional true
---@type uint32
CharacterCorpse.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
CharacterCorpse.tile_width = nil

---@optional true
---@type TriggerTargetMask
CharacterCorpse.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
CharacterCorpse.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
CharacterCorpse.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
CharacterCorpse.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CharacterCorpse.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CharacterCorpse.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CharacterCorpse.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CharacterCorpse.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CharacterCorpse.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CharacterCorpse.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CharacterCorpse.icon_size = nil

---@default 0
---@optional true
---@type uint8
CharacterCorpse.icon_mipmaps = nil

---<b>Deprecated in 0.16. The type "simple-smoke" has been obsoleted and cannot be created. Use <a href="/Prototype/TrivialSmoke" title="Prototype/TrivialSmoke">Prototype/TrivialSmoke</a> or <a href="/Prototype/SmokeWithTrigger" title="Prototype/SmokeWithTrigger">Prototype/SmokeWithTrigger</a> instead.</b>
---@class SimpleSmoke
local SimpleSmoke = {}

---@optional false
---@type AnimationType
SimpleSmoke.animation = nil

---Smoke always moves randomly unless <code>movement_slow_down_factor</code> is 0. If <code>affected_by_wind</code> is true, the smoke will also be moved by wind.
---@default true
---@optional true
---@type bool
SimpleSmoke.affected_by_wind = nil

---@optional true
---@type Color
SimpleSmoke.color = nil

---@default false
---@optional true
---@type bool
SimpleSmoke.cyclic = nil

---May not be 0 if cyclic is true.
---@default 0
---@optional true
---@type uint32
SimpleSmoke.duration = nil

---@default 1.0
---@optional true
---@type double
SimpleSmoke.end_scale = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
SimpleSmoke.fade_away_duration = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
SimpleSmoke.fade_in_duration = nil

---@optional true
---@type AnimationType
SimpleSmoke.glow_animation = nil

---@optional true
---@type uint32
SimpleSmoke.glow_fade_away_duration = nil

---Value between 0 and 1, with 0 being no movement.
---@default 0.995
---@optional true
---@type double
SimpleSmoke.movement_slow_down_factor = nil

---@default smoke
---@optional true
---@type RenderLayer
SimpleSmoke.render_layer = nil

---@default false
---@optional true
---@type bool
SimpleSmoke.show_when_smoke_off = nil

---@default 0
---@optional true
---@type uint32
SimpleSmoke.spread_duration = nil

---@default 1.0
---@optional true
---@type double
SimpleSmoke.start_scale = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SimpleSmoke.additional_pastable_entities = nil

---@optional true
---@type float
SimpleSmoke.alert_icon_scale = nil

---@optional true
---@type vector
SimpleSmoke.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SimpleSmoke.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SimpleSmoke.autoplace = nil

---@default 0
---@optional true
---@type double
SimpleSmoke.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SimpleSmoke.build_sound = nil

---@optional true
---@type SoundType
SimpleSmoke.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SimpleSmoke.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SimpleSmoke.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SimpleSmoke.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SimpleSmoke.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SimpleSmoke.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SimpleSmoke.emissions_per_second = nil

---@optional true
---@type Color
SimpleSmoke.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SimpleSmoke.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SimpleSmoke.flags = nil

---@optional true
---@type Color
SimpleSmoke.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SimpleSmoke.hit_visualization_box = nil

---@optional true
---@type Color
SimpleSmoke.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SimpleSmoke.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SimpleSmoke.minable = nil

---@optional true
---@type SoundType
SimpleSmoke.mined_sound = nil

---@optional true
---@type SoundType
SimpleSmoke.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SimpleSmoke.next_upgrade = nil

---@optional true
---@type SoundType
SimpleSmoke.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SimpleSmoke.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SimpleSmoke.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SimpleSmoke.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SimpleSmoke.remove_decoratives = nil

---@optional true
---@type SoundType
SimpleSmoke.rotated_sound = nil

---@default true
---@optional true
---@type bool
SimpleSmoke.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SimpleSmoke.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SimpleSmoke.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SimpleSmoke.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SimpleSmoke.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SimpleSmoke.subgroup = nil

---@optional true
---@type uint32
SimpleSmoke.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SimpleSmoke.tile_width = nil

---@optional true
---@type TriggerTargetMask
SimpleSmoke.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SimpleSmoke.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SimpleSmoke.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SimpleSmoke.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SimpleSmoke.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SimpleSmoke.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SimpleSmoke.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SimpleSmoke.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SimpleSmoke.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SimpleSmoke.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SimpleSmoke.icon_size = nil

---@default 0
---@optional true
---@type uint8
SimpleSmoke.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player finishes the game without crafting more than a set amount.
---@class DontCraftManuallyAchievement
local DontCraftManuallyAchievement = {}

---This will disable the achievement, if the player crafts more than this.
---@optional false
---@type MaterialAmountType
DontCraftManuallyAchievement.amount = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
DontCraftManuallyAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
DontCraftManuallyAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
DontCraftManuallyAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DontCraftManuallyAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DontCraftManuallyAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DontCraftManuallyAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DontCraftManuallyAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DontCraftManuallyAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DontCraftManuallyAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DontCraftManuallyAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
DontCraftManuallyAchievement.icon_mipmaps = nil

---A <a href="/Transport_belt" title="Transport belt">transport belt</a>.
---@class TransportBelt
local TransportBelt = {}

---@optional false
---@type TransportBeltConnectorFrame
TransportBelt.connector_frame_sprites = nil

---Transport belts must have 12 animations. Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type RotatedAnimation
TransportBelt.animations = nil

---<p>Either this, or <code>animations</code> has to present.</p><p>This is the same table as the one used by <a href="/Prototype/TransportBeltConnectable" title="Prototype/TransportBeltConnectable">Prototype/TransportBeltConnectable</a>, with additional properties. If this is present, the belt_animation_set will used for all graphics.</p>
---@optional true
---@type TransportBeltBeltAnimationSet
TransportBelt.belt_animation_set = nil

---The pictures displayed for circuit connections to this transport belt.
---@optional true
---@type CircuitConnectorSprites[]
TransportBelt.circuit_connector_sprites = nil

---Defines how wires visually connect to this transport belt.
---@optional true
---@type WireConnectionPoint[]
TransportBelt.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
TransportBelt.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
TransportBelt.draw_circuit_wires = nil

---@default 0
---@optional true
---@type bool
TransportBelt.draw_copper_wires = nil

---<p>The speed of the belt (since 0.17): <code>speed × 480 = x Items/second</code></p><p>The raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt's maximum density - e.g. <code>x items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) = &lt;speed&gt; belts/tick</code> where a "belt" is the size of one tile. See <a href="/Transport_belts/Physics" title="Transport belts/Physics">Transport_belts/Physics</a> for more details.</p>
---@optional false
---@type double
TransportBelt.speed = nil

---@default 1
---@optional true
---@type double
TransportBelt.animation_speed_coefficient = nil

---Either this, or all of the properties below this one have to present.
---@optional true
---@type TransportBeltConnectableBeltAnimationSet
TransportBelt.belt_animation_set = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.belt_horizontal = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.belt_vertical = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.ending_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type Sprite4Way
TransportBelt.ending_patch = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.ending_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.ending_top = nil

---@default false
---@optional true
---@type bool
TransportBelt.ends_with_stopper = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.starting_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.starting_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBelt.starting_top = nil

---@default true
---@optional true
---@type bool
TransportBelt.alert_when_damaged = nil

---@optional true
---@type AttackReaction
TransportBelt.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
TransportBelt.corpse = nil

---@default true
---@optional true
---@type bool
TransportBelt.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
TransportBelt.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
TransportBelt.dying_explosion = nil

---@optional true
---@type TriggerEffect
TransportBelt.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
TransportBelt.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
TransportBelt.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
TransportBelt.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
TransportBelt.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
TransportBelt.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
TransportBelt.max_health = nil

---@default false
---@optional true
---@type bool
TransportBelt.random_corpse_variation = nil

---@optional true
---@type SoundType
TransportBelt.repair_sound = nil

---@default 1
---@optional true
---@type float
TransportBelt.repair_speed_modifier = nil

---@optional true
---@type Resistances
TransportBelt.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
TransportBelt.additional_pastable_entities = nil

---@optional true
---@type float
TransportBelt.alert_icon_scale = nil

---@optional true
---@type vector
TransportBelt.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
TransportBelt.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
TransportBelt.autoplace = nil

---@default 0
---@optional true
---@type double
TransportBelt.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
TransportBelt.build_sound = nil

---@optional true
---@type SoundType
TransportBelt.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
TransportBelt.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
TransportBelt.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
TransportBelt.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
TransportBelt.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
TransportBelt.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
TransportBelt.emissions_per_second = nil

---@optional true
---@type Color
TransportBelt.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
TransportBelt.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
TransportBelt.flags = nil

---@optional true
---@type Color
TransportBelt.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
TransportBelt.hit_visualization_box = nil

---@optional true
---@type Color
TransportBelt.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
TransportBelt.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
TransportBelt.minable = nil

---@optional true
---@type SoundType
TransportBelt.mined_sound = nil

---@optional true
---@type SoundType
TransportBelt.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
TransportBelt.next_upgrade = nil

---@optional true
---@type SoundType
TransportBelt.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
TransportBelt.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
TransportBelt.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
TransportBelt.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
TransportBelt.remove_decoratives = nil

---@optional true
---@type SoundType
TransportBelt.rotated_sound = nil

---@default true
---@optional true
---@type bool
TransportBelt.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
TransportBelt.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
TransportBelt.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
TransportBelt.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
TransportBelt.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
TransportBelt.subgroup = nil

---@optional true
---@type uint32
TransportBelt.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
TransportBelt.tile_width = nil

---@optional true
---@type TriggerTargetMask
TransportBelt.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
TransportBelt.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
TransportBelt.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
TransportBelt.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TransportBelt.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TransportBelt.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TransportBelt.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TransportBelt.order = nil

---Path to the icon file.
---@optional true
---@type FileName
TransportBelt.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
TransportBelt.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
TransportBelt.icon_size = nil

---@default 0
---@optional true
---@type uint8
TransportBelt.icon_mipmaps = nil

---This entity produces or consumes heat. Its heat settings can be changed runtime.
---@class HeatInterface
local HeatInterface = {}

---@optional false
---@type HeatBuffer
HeatInterface.heat_buffer = nil

---@default all
---@optional true
---@type GuiMode
HeatInterface.gui_mode = nil

---@optional true
---@type SpriteType
HeatInterface.picture = nil

---@default true
---@optional true
---@type bool
HeatInterface.alert_when_damaged = nil

---@optional true
---@type AttackReaction
HeatInterface.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
HeatInterface.corpse = nil

---@default true
---@optional true
---@type bool
HeatInterface.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
HeatInterface.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
HeatInterface.dying_explosion = nil

---@optional true
---@type TriggerEffect
HeatInterface.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
HeatInterface.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
HeatInterface.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
HeatInterface.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
HeatInterface.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
HeatInterface.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
HeatInterface.max_health = nil

---@default false
---@optional true
---@type bool
HeatInterface.random_corpse_variation = nil

---@optional true
---@type SoundType
HeatInterface.repair_sound = nil

---@default 1
---@optional true
---@type float
HeatInterface.repair_speed_modifier = nil

---@optional true
---@type Resistances
HeatInterface.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
HeatInterface.additional_pastable_entities = nil

---@optional true
---@type float
HeatInterface.alert_icon_scale = nil

---@optional true
---@type vector
HeatInterface.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
HeatInterface.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
HeatInterface.autoplace = nil

---@default 0
---@optional true
---@type double
HeatInterface.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
HeatInterface.build_sound = nil

---@optional true
---@type SoundType
HeatInterface.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
HeatInterface.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
HeatInterface.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
HeatInterface.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
HeatInterface.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
HeatInterface.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
HeatInterface.emissions_per_second = nil

---@optional true
---@type Color
HeatInterface.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
HeatInterface.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
HeatInterface.flags = nil

---@optional true
---@type Color
HeatInterface.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
HeatInterface.hit_visualization_box = nil

---@optional true
---@type Color
HeatInterface.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
HeatInterface.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
HeatInterface.minable = nil

---@optional true
---@type SoundType
HeatInterface.mined_sound = nil

---@optional true
---@type SoundType
HeatInterface.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
HeatInterface.next_upgrade = nil

---@optional true
---@type SoundType
HeatInterface.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
HeatInterface.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
HeatInterface.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
HeatInterface.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
HeatInterface.remove_decoratives = nil

---@optional true
---@type SoundType
HeatInterface.rotated_sound = nil

---@default true
---@optional true
---@type bool
HeatInterface.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
HeatInterface.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
HeatInterface.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
HeatInterface.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
HeatInterface.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
HeatInterface.subgroup = nil

---@optional true
---@type uint32
HeatInterface.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
HeatInterface.tile_width = nil

---@optional true
---@type TriggerTargetMask
HeatInterface.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
HeatInterface.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
HeatInterface.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
HeatInterface.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
HeatInterface.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
HeatInterface.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
HeatInterface.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
HeatInterface.order = nil

---Path to the icon file.
---@optional true
---@type FileName
HeatInterface.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
HeatInterface.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
HeatInterface.icon_size = nil

---@default 0
---@optional true
---@type uint8
HeatInterface.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player finishes the game without building a specific entity.
---@class DontBuildEntityAchievement
local DontBuildEntityAchievement = {}

---This will disable the achievement, if this entity is placed. If you finish the game without building this entity, you receive the achievement.
---@optional false
---@type string[]|string
DontBuildEntityAchievement.dont_build = nil

---@default 0
---@optional true
---@type uint32
DontBuildEntityAchievement.amount = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
DontBuildEntityAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
DontBuildEntityAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
DontBuildEntityAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DontBuildEntityAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DontBuildEntityAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DontBuildEntityAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DontBuildEntityAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DontBuildEntityAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DontBuildEntityAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DontBuildEntityAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
DontBuildEntityAchievement.icon_mipmaps = nil

---A recipe category. The built-in categories can be found <a href="/Data.raw#recipe-category" title="Data.raw">here</a>. See <a href="/Prototype/Recipe#category" title="Prototype/Recipe">Prototype/Recipe#category</a>. Recipe categories can be used to specify which machine can craft which recipes.
---@class RecipeCategory
local RecipeCategory = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RecipeCategory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RecipeCategory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RecipeCategory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RecipeCategory.order = nil

---Entity with specialized properties for acceleration, braking, and turning.
---@class Car
local Car = {}

---Animation speed 1 means 1 frame per tile.
---@optional false
---@type RotatedAnimation
Car.animation = nil

---Must be a burner energy source.
---@optional true
---@type EnergySource
Car.burner = nil

---Can also be a void energy source.
---@optional true
---@type EnergySource
Car.energy_source = nil

---@optional false
---@type Energy
Car.consumption = nil

---Modifies the efficiency of energy transfer from burner output to wheels.
---@optional false
---@type double
Car.effectivity = nil

---Size of the car inventory.
---@optional false
---@type ItemStackIndex
Car.inventory_size = nil

---@optional false
---@type double
Car.rotation_speed = nil

---The guns this car prototype uses.
---@optional true
---@type strings[]
Car.guns = nil

---If this car is immune to movement by belts.
---@default false
---@optional true
---@type bool
Car.has_belt_immunity = nil

---If this car gets damaged by driving over/against <a href="/Prototype/SimpleEntity#count_as_rock_for_filtered_deconstruction" title="Prototype/SimpleEntity">rocks</a>.
---@default false
---@optional true
---@type bool
Car.immune_to_rock_impacts = nil

---If this car gets damaged by driving over/against <a href="/Prototype/Tree" title="Prototype/Tree">Prototype/Trees</a>.
---@default false
---@optional true
---@type bool
Car.immune_to_tree_impacts = nil

---@optional true
---@type LightDefinition
Car.light = nil

---@default object
---@optional true
---@type RenderLayer
Car.render_layer = nil

---@optional true
---@type SoundType
Car.sound_no_fuel = nil

---If this car prototype uses tank controls to drive.
---@default false
---@optional true
---@type bool
Car.tank_driving = nil

---@optional true
---@type FootstepTriggerEffectList
Car.track_particle_triggers = nil

---Animation speed 1 means 1 frame per tile.
---@optional true
---@type RotatedAnimation
Car.turret_animation = nil

---Timeout in ticks specifying how long the turret must be inactive to return to the default position.
---@default 60
---@optional true
---@type uint32
Car.turret_return_timeout = nil

---@default 0.01
---@optional true
---@type double
Car.turret_rotation_speed = nil

---@optional true
---@type double
Car.braking_force = nil

---@optional true
---@type Energy
Car.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
Car.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
Car.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
Car.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
Car.weight = nil

---@optional true
---@type TriggerEffect
Car.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
Car.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
Car.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
Car.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
Car.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
Car.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
Car.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
Car.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
Car.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
Car.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Car.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Car.corpse = nil

---@default true
---@optional true
---@type bool
Car.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Car.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Car.dying_explosion = nil

---@optional true
---@type TriggerEffect
Car.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Car.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Car.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Car.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Car.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Car.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Car.max_health = nil

---@default false
---@optional true
---@type bool
Car.random_corpse_variation = nil

---@optional true
---@type SoundType
Car.repair_sound = nil

---@default 1
---@optional true
---@type float
Car.repair_speed_modifier = nil

---@optional true
---@type Resistances
Car.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Car.additional_pastable_entities = nil

---@optional true
---@type float
Car.alert_icon_scale = nil

---@optional true
---@type vector
Car.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Car.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Car.autoplace = nil

---@default 0
---@optional true
---@type double
Car.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Car.build_sound = nil

---@optional true
---@type SoundType
Car.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Car.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Car.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Car.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Car.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Car.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Car.emissions_per_second = nil

---@optional true
---@type Color
Car.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Car.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Car.flags = nil

---@optional true
---@type Color
Car.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Car.hit_visualization_box = nil

---@optional true
---@type Color
Car.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Car.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Car.minable = nil

---@optional true
---@type SoundType
Car.mined_sound = nil

---@optional true
---@type SoundType
Car.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Car.next_upgrade = nil

---@optional true
---@type SoundType
Car.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Car.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Car.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Car.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Car.remove_decoratives = nil

---@optional true
---@type SoundType
Car.rotated_sound = nil

---@default true
---@optional true
---@type bool
Car.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Car.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Car.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Car.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Car.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Car.subgroup = nil

---@optional true
---@type uint32
Car.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Car.tile_width = nil

---@optional true
---@type TriggerTargetMask
Car.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Car.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Car.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Car.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Car.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Car.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Car.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Car.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Car.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Car.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Car.icon_size = nil

---@default 0
---@optional true
---@type uint8
Car.icon_mipmaps = nil

---An <a href="/Underground_belt" title="Underground belt">underground belt</a>.
---@class UndergroundBelt
local UndergroundBelt = {}

---@optional false
---@type uint8
UndergroundBelt.max_distance = nil

---@optional false
---@type UndergroundBeltStructure
UndergroundBelt.structure = nil

---@optional false
---@type SpriteType
UndergroundBelt.underground_sprite = nil

---@optional true
---@type SpriteType
UndergroundBelt.underground_remove_belts_sprite = nil

---<p>The speed of the belt (since 0.17): <code>speed × 480 = x Items/second</code></p><p>The raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt's maximum density - e.g. <code>x items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) = &lt;speed&gt; belts/tick</code> where a "belt" is the size of one tile. See <a href="/Transport_belts/Physics" title="Transport belts/Physics">Transport_belts/Physics</a> for more details.</p>
---@optional false
---@type double
UndergroundBelt.speed = nil

---@default 1
---@optional true
---@type double
UndergroundBelt.animation_speed_coefficient = nil

---Either this, or all of the properties below this one have to present.
---@optional true
---@type TransportBeltConnectableBeltAnimationSet
UndergroundBelt.belt_animation_set = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.belt_horizontal = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.belt_vertical = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.ending_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type Sprite4Way
UndergroundBelt.ending_patch = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.ending_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.ending_top = nil

---@default false
---@optional true
---@type bool
UndergroundBelt.ends_with_stopper = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.starting_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.starting_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
UndergroundBelt.starting_top = nil

---@default true
---@optional true
---@type bool
UndergroundBelt.alert_when_damaged = nil

---@optional true
---@type AttackReaction
UndergroundBelt.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
UndergroundBelt.corpse = nil

---@default true
---@optional true
---@type bool
UndergroundBelt.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
UndergroundBelt.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
UndergroundBelt.dying_explosion = nil

---@optional true
---@type TriggerEffect
UndergroundBelt.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
UndergroundBelt.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
UndergroundBelt.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
UndergroundBelt.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
UndergroundBelt.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
UndergroundBelt.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
UndergroundBelt.max_health = nil

---@default false
---@optional true
---@type bool
UndergroundBelt.random_corpse_variation = nil

---@optional true
---@type SoundType
UndergroundBelt.repair_sound = nil

---@default 1
---@optional true
---@type float
UndergroundBelt.repair_speed_modifier = nil

---@optional true
---@type Resistances
UndergroundBelt.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
UndergroundBelt.additional_pastable_entities = nil

---@optional true
---@type float
UndergroundBelt.alert_icon_scale = nil

---@optional true
---@type vector
UndergroundBelt.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
UndergroundBelt.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
UndergroundBelt.autoplace = nil

---@default 0
---@optional true
---@type double
UndergroundBelt.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
UndergroundBelt.build_sound = nil

---@optional true
---@type SoundType
UndergroundBelt.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
UndergroundBelt.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
UndergroundBelt.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
UndergroundBelt.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
UndergroundBelt.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
UndergroundBelt.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
UndergroundBelt.emissions_per_second = nil

---@optional true
---@type Color
UndergroundBelt.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
UndergroundBelt.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
UndergroundBelt.flags = nil

---@optional true
---@type Color
UndergroundBelt.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
UndergroundBelt.hit_visualization_box = nil

---@optional true
---@type Color
UndergroundBelt.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
UndergroundBelt.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
UndergroundBelt.minable = nil

---@optional true
---@type SoundType
UndergroundBelt.mined_sound = nil

---@optional true
---@type SoundType
UndergroundBelt.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
UndergroundBelt.next_upgrade = nil

---@optional true
---@type SoundType
UndergroundBelt.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
UndergroundBelt.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
UndergroundBelt.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
UndergroundBelt.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
UndergroundBelt.remove_decoratives = nil

---@optional true
---@type SoundType
UndergroundBelt.rotated_sound = nil

---@default true
---@optional true
---@type bool
UndergroundBelt.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
UndergroundBelt.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
UndergroundBelt.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
UndergroundBelt.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
UndergroundBelt.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
UndergroundBelt.subgroup = nil

---@optional true
---@type uint32
UndergroundBelt.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
UndergroundBelt.tile_width = nil

---@optional true
---@type TriggerTargetMask
UndergroundBelt.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
UndergroundBelt.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
UndergroundBelt.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
UndergroundBelt.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
UndergroundBelt.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
UndergroundBelt.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
UndergroundBelt.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
UndergroundBelt.order = nil

---Path to the icon file.
---@optional true
---@type FileName
UndergroundBelt.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
UndergroundBelt.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
UndergroundBelt.icon_size = nil

---@default 0
---@optional true
---@type uint8
UndergroundBelt.icon_mipmaps = nil

---Used by <a href="/Personal_battery" title="Personal battery">personal battery</a>.
---@class BatteryEquipment
local BatteryEquipment = {}

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
BatteryEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
BatteryEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
BatteryEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
BatteryEquipment.sprite = nil

---@optional true
---@type SpriteType
BatteryEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
BatteryEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
BatteryEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
BatteryEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
BatteryEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
BatteryEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
BatteryEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
BatteryEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
BatteryEquipment.order = nil

---A module category. The built-in categories can be found <a href="/Data.raw#module-category" title="Data.raw">here</a>. See <a href="/Prototype/Module#category" title="Prototype/Module">Prototype/Module#category</a>.
---@class ModuleCategory
local ModuleCategory = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ModuleCategory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ModuleCategory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ModuleCategory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ModuleCategory.order = nil

---The entity spawned by the <a href="/Artillery_targeting_remote" title="Artillery targeting remote">artillery targeting remote</a>.
---@class ArtilleryFlare
local ArtilleryFlare = {}

---@optional false
---@type uint16
ArtilleryFlare.life_time = nil

---Picture variation count and individual frame count must be equal to shadow variation count.
---@optional false
---@type AnimationVariations
ArtilleryFlare.pictures = nil

---@default object
---@optional false
---@type RenderLayer
ArtilleryFlare.render_layer = nil

---@default lower-object
---@optional false
---@type RenderLayer
ArtilleryFlare.render_layer_when_on_ground = nil

---@optional true
---@type vector
ArtilleryFlare.creation_shift = nil

---How long this flare stays alive after <code>shots_per_flare</code> amount of shots have been shot at it.
---@default 180
---@optional true
---@type uint32
ArtilleryFlare.early_death_ticks = nil

---@optional true
---@type TriggerEffect
ArtilleryFlare.ended_in_water_trigger_effect = nil

---@default 1
---@optional true
---@type float
ArtilleryFlare.initial_frame_speed = nil

---@default 0
---@optional true
---@type float
ArtilleryFlare.initial_height = nil

---@optional true
---@type vector
ArtilleryFlare.initial_speed = nil

---@default 0
---@optional true
---@type float
ArtilleryFlare.initial_vertical_speed = nil

---@default 1
---@optional true
---@type double
ArtilleryFlare.movement_modifier = nil

---@default 0.8
---@optional true
---@type double
ArtilleryFlare.movement_modifier_when_on_ground = nil

---@default 0
---@optional true
---@type TriggerEffect
ArtilleryFlare.regular_trigger_effect = nil

---@default 0
---@optional true
---@type uint32
ArtilleryFlare.regular_trigger_effect_frequency = nil

---Shadow variation variation count and individual frame count must be equal to picture variation count.
---@optional true
---@type AnimationVariations
ArtilleryFlare.shadows = nil

---Name of a <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategory</a>.
---@optional true
---@type string
ArtilleryFlare.shot_category = nil

---How many artillery shots should be fired at the position of this flare.
---@default 1
---@optional true
---@type uint32
ArtilleryFlare.shots_per_flare = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ArtilleryFlare.additional_pastable_entities = nil

---@optional true
---@type float
ArtilleryFlare.alert_icon_scale = nil

---@optional true
---@type vector
ArtilleryFlare.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ArtilleryFlare.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ArtilleryFlare.autoplace = nil

---@default 0
---@optional true
---@type double
ArtilleryFlare.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ArtilleryFlare.build_sound = nil

---@optional true
---@type SoundType
ArtilleryFlare.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ArtilleryFlare.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ArtilleryFlare.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ArtilleryFlare.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ArtilleryFlare.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ArtilleryFlare.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ArtilleryFlare.emissions_per_second = nil

---@optional true
---@type Color
ArtilleryFlare.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ArtilleryFlare.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ArtilleryFlare.flags = nil

---@optional true
---@type Color
ArtilleryFlare.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ArtilleryFlare.hit_visualization_box = nil

---@optional true
---@type Color
ArtilleryFlare.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ArtilleryFlare.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ArtilleryFlare.minable = nil

---@optional true
---@type SoundType
ArtilleryFlare.mined_sound = nil

---@optional true
---@type SoundType
ArtilleryFlare.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ArtilleryFlare.next_upgrade = nil

---@optional true
---@type SoundType
ArtilleryFlare.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ArtilleryFlare.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ArtilleryFlare.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ArtilleryFlare.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ArtilleryFlare.remove_decoratives = nil

---@optional true
---@type SoundType
ArtilleryFlare.rotated_sound = nil

---@default true
---@optional true
---@type bool
ArtilleryFlare.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ArtilleryFlare.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ArtilleryFlare.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ArtilleryFlare.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ArtilleryFlare.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ArtilleryFlare.subgroup = nil

---@optional true
---@type uint32
ArtilleryFlare.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ArtilleryFlare.tile_width = nil

---@optional true
---@type TriggerTargetMask
ArtilleryFlare.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ArtilleryFlare.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ArtilleryFlare.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ArtilleryFlare.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ArtilleryFlare.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ArtilleryFlare.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ArtilleryFlare.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ArtilleryFlare.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ArtilleryFlare.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ArtilleryFlare.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ArtilleryFlare.icon_size = nil

---@default 0
---@optional true
---@type uint8
ArtilleryFlare.icon_mipmaps = nil

---Entity with electric energy source with that can have some of its values changed runtime. Useful for modding in energy consumers/producers.
---@class ElectricEnergyInterface
local ElectricEnergyInterface = {}

---Must be an electric energy source.
---@optional false
---@type EnergySource
ElectricEnergyInterface.energy_source = nil

---@optional true
---@type AnimationType
ElectricEnergyInterface.animation = nil

---@optional true
---@type Animation4Way
ElectricEnergyInterface.animations = nil

---Whether the electric energy interface animation always runs instead of being scaled to activity.
---@optional true
---@type bool
ElectricEnergyInterface.continuous_animation = nil

---@default 0
---@optional true
---@type Energy
ElectricEnergyInterface.energy_production = nil

---@default 0
---@optional true
---@type Energy
ElectricEnergyInterface.energy_usage = nil

---@default none
---@optional true
---@type GuiMode
ElectricEnergyInterface.gui_mode = nil

---The light that this electric energy interface emits.
---@optional true
---@type LightDefinition
ElectricEnergyInterface.light = nil

---@optional true
---@type SpriteType
ElectricEnergyInterface.picture = nil

---@optional true
---@type Sprite4Way
ElectricEnergyInterface.pictures = nil

---@default object
---@optional true
---@type RenderLayer
ElectricEnergyInterface.render_layer = nil

---@default true
---@optional true
---@type bool
ElectricEnergyInterface.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ElectricEnergyInterface.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ElectricEnergyInterface.corpse = nil

---@default true
---@optional true
---@type bool
ElectricEnergyInterface.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ElectricEnergyInterface.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ElectricEnergyInterface.dying_explosion = nil

---@optional true
---@type TriggerEffect
ElectricEnergyInterface.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ElectricEnergyInterface.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ElectricEnergyInterface.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ElectricEnergyInterface.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ElectricEnergyInterface.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ElectricEnergyInterface.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ElectricEnergyInterface.max_health = nil

---@default false
---@optional true
---@type bool
ElectricEnergyInterface.random_corpse_variation = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.repair_sound = nil

---@default 1
---@optional true
---@type float
ElectricEnergyInterface.repair_speed_modifier = nil

---@optional true
---@type Resistances
ElectricEnergyInterface.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ElectricEnergyInterface.additional_pastable_entities = nil

---@optional true
---@type float
ElectricEnergyInterface.alert_icon_scale = nil

---@optional true
---@type vector
ElectricEnergyInterface.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ElectricEnergyInterface.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ElectricEnergyInterface.autoplace = nil

---@default 0
---@optional true
---@type double
ElectricEnergyInterface.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.build_sound = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ElectricEnergyInterface.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ElectricEnergyInterface.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ElectricEnergyInterface.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ElectricEnergyInterface.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ElectricEnergyInterface.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ElectricEnergyInterface.emissions_per_second = nil

---@optional true
---@type Color
ElectricEnergyInterface.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ElectricEnergyInterface.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ElectricEnergyInterface.flags = nil

---@optional true
---@type Color
ElectricEnergyInterface.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ElectricEnergyInterface.hit_visualization_box = nil

---@optional true
---@type Color
ElectricEnergyInterface.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ElectricEnergyInterface.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ElectricEnergyInterface.minable = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.mined_sound = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ElectricEnergyInterface.next_upgrade = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ElectricEnergyInterface.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ElectricEnergyInterface.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ElectricEnergyInterface.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ElectricEnergyInterface.remove_decoratives = nil

---@optional true
---@type SoundType
ElectricEnergyInterface.rotated_sound = nil

---@default true
---@optional true
---@type bool
ElectricEnergyInterface.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ElectricEnergyInterface.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ElectricEnergyInterface.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ElectricEnergyInterface.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ElectricEnergyInterface.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ElectricEnergyInterface.subgroup = nil

---@optional true
---@type uint32
ElectricEnergyInterface.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ElectricEnergyInterface.tile_width = nil

---@optional true
---@type TriggerTargetMask
ElectricEnergyInterface.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ElectricEnergyInterface.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ElectricEnergyInterface.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ElectricEnergyInterface.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ElectricEnergyInterface.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ElectricEnergyInterface.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ElectricEnergyInterface.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ElectricEnergyInterface.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ElectricEnergyInterface.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ElectricEnergyInterface.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ElectricEnergyInterface.icon_size = nil

---@default 0
---@optional true
---@type uint8
ElectricEnergyInterface.icon_mipmaps = nil

---Entity that sticks to another entity, and damages/slows it. Currently stickers can only be attached to <a href="/Prototype/Unit" title="Prototype/Unit">Prototype/Unit</a>, <a href="/Prototype/Character" title="Prototype/Character">Prototype/Character</a> and <a href="/Prototype/Car" title="Prototype/Car">Prototype/Car</a>.
---@class Sticker
local Sticker = {}

---Must be > 0.
---@optional false
---@type uint32
Sticker.duration_in_ticks = nil

---@optional true
---@type AnimationType
Sticker.animation = nil

---Interval between application of <code>damage_per_tick</code>, in ticks.
---@default 1
---@optional true
---@type uint32
Sticker.damage_interval = nil

---Applied every <code>damage_interval</code> ticks, so may not necessarily be "per tick".
---@optional true
---@type DamagePrototype
Sticker.damage_per_tick = nil

---@default 30
---@optional true
---@type uint8
Sticker.fire_spread_cooldown = nil

---@default 1
---@optional true
---@type float
Sticker.fire_spread_radius = nil

---@default all
---@optional true
---@type ForceCondition
Sticker.force_visibility = nil

---Using this property marks the sticker as a "selection sticker", meaning that the selection box will be rendered around the entity when the sticker is on it.
---@default entity
---@optional true
---@type string
Sticker.selection_box_type = nil

---@default false
---@optional true
---@type bool
Sticker.single_particle = nil

---Name of an entity. If this is given, this sticker is considered a "fire sticker" for some functions, such as <a href="/Types/BaseAttackParameters#fire_penalty" title="Types/BaseAttackParameters">BaseAttackParameters#fire_penalty</a> and <a href="/Types/EntityPrototypeFlags#.22not-flammable.22" title="Types/EntityPrototypeFlags">EntityPrototypeFlags#.22not-flammable.22</a>.
---@optional true
---@type string
Sticker.spread_fire_entity = nil

---@default 15
---@optional true
---@type float
Sticker.stickers_per_square_meter = nil

---Less than 1 to reduce movement speed, more than 1 to increase it.
---@default 1
---@optional true
---@type float
Sticker.target_movement_modifier = nil

---@optional true
---@type float
Sticker.target_movement_modifier_from = nil

---@optional true
---@type float
Sticker.target_movement_modifier_to = nil

---@default 1
---@optional true
---@type float
Sticker.vehicle_friction_modifier = nil

---@optional true
---@type float
Sticker.vehicle_friction_modifier_from = nil

---@optional true
---@type float
Sticker.vehicle_friction_modifier_to = nil

---Less than 1 to reduce vehicle speed, more than 1 to increase it.
---@default 1
---@optional true
---@type float
Sticker.vehicle_speed_modifier = nil

---@optional true
---@type float
Sticker.vehicle_speed_modifier_from = nil

---@optional true
---@type float
Sticker.vehicle_speed_modifier_to = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Sticker.additional_pastable_entities = nil

---@optional true
---@type float
Sticker.alert_icon_scale = nil

---@optional true
---@type vector
Sticker.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Sticker.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Sticker.autoplace = nil

---@default 0
---@optional true
---@type double
Sticker.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Sticker.build_sound = nil

---@optional true
---@type SoundType
Sticker.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Sticker.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Sticker.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Sticker.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Sticker.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Sticker.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Sticker.emissions_per_second = nil

---@optional true
---@type Color
Sticker.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Sticker.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Sticker.flags = nil

---@optional true
---@type Color
Sticker.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Sticker.hit_visualization_box = nil

---@optional true
---@type Color
Sticker.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Sticker.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Sticker.minable = nil

---@optional true
---@type SoundType
Sticker.mined_sound = nil

---@optional true
---@type SoundType
Sticker.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Sticker.next_upgrade = nil

---@optional true
---@type SoundType
Sticker.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Sticker.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Sticker.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Sticker.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Sticker.remove_decoratives = nil

---@optional true
---@type SoundType
Sticker.rotated_sound = nil

---@default true
---@optional true
---@type bool
Sticker.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Sticker.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Sticker.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Sticker.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Sticker.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Sticker.subgroup = nil

---@optional true
---@type uint32
Sticker.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Sticker.tile_width = nil

---@optional true
---@type TriggerTargetMask
Sticker.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Sticker.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Sticker.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Sticker.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Sticker.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Sticker.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Sticker.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Sticker.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Sticker.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Sticker.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Sticker.icon_size = nil

---@default 0
---@optional true
---@type uint8
Sticker.icon_mipmaps = nil

---Only 56 instances of this prototype may be defined. The base game always internally defines a "common" trigger target type.
---@class TriggerTargetType
local TriggerTargetType = {}

---@optional false
---@type string
TriggerTargetType.name = nil

---A damage type. This is used in the <a href="/Damage" title="Damage">damage system</a>. <a href="/Damage#Damage_Types" title="Damage">A list of built-in damage types can be found here</a>.
---@class DamageType
local DamageType = {}

---@default false
---@optional true
---@type bool
DamageType.hidden = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DamageType.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DamageType.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DamageType.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DamageType.order = nil

---Armor to wear on your in-game character for defense, and buffs.
---@class Armor
local Armor = {}

---Name of the Prototype/EquipmentGrid that this armor has.
---@optional true
---@type string
Armor.equipment_grid = nil

---By how many slots the inventory of the player is expanded when the armor is worn.
---@optional true
---@type ItemStackIndex
Armor.inventory_size_bonus = nil

---What amount of damage the armor takes on what type of damage is incoming.
---@optional true
---@type Resistances
Armor.resistances = nil

---The durability of this tool. Must be positive. Mandatory if <code>infinite</code> is false.
---@optional true
---@type double
Armor.durability = nil

---May not be longer than 200 characters.
---@default description.durability-key
---@optional true
---@type string
Armor.durability_description_key = nil

---May not be longer than 200 characters.
---@default description.durability-value
---@optional true
---@type string
Armor.durability_description_value = nil

---Whether this tool has infinite durability.
---@default true
---@optional true
---@type bool
Armor.infinite = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
Armor.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
Armor.burnt_result = nil

---@optional true
---@type SoundType
Armor.close_sound = nil

---@optional true
---@type IconData[]
Armor.dark_background_icons = nil

---@optional true
---@type FileName
Armor.dark_background_icon = nil

---@optional true
---@type ItemCountType
Armor.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
Armor.flags = nil

---@default 1.0
---@optional true
---@type double
Armor.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
Armor.fuel_category = nil

---@default 1.0
---@optional true
---@type double
Armor.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
Armor.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
Armor.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
Armor.fuel_value = nil

---@optional true
---@type SoundType
Armor.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
Armor.pictures = nil

---@optional true
---@type PlaceAsTile
Armor.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
Armor.place_result = nil

---@optional true
---@type string
Armor.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
Armor.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
Armor.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
Armor.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
Armor.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Armor.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Armor.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Armor.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Armor.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Armor.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Armor.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Armor.icon_size = nil

---@default 0
---@optional true
---@type uint8
Armor.icon_mipmaps = nil

---A <a href="/Technologies" title="Technologies">technology</a>.
---@class Technology
local Technology = {}

---@optional true
---@type TechnologyData|bool
Technology.expensive = nil

---@optional true
---@type TechnologyData|bool
Technology.normal = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Technology.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Technology.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Technology.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Technology.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Technology.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Technology.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Technology.icon_size = nil

---@default 0
---@optional true
---@type uint8
Technology.icon_mipmaps = nil

---@optional false
---@type TechnologyUnit
Technology.unit = nil

---List of effects of the technology (applied when the technology is researched).
---@optional true
---@type Modifier[]
Technology.effects = nil

---@default true
---@optional true
---@type bool
Technology.enabled = nil

---Hides the technology from the tech screen.
---@default false
---@optional true
---@type bool
Technology.hidden = nil

---"infinite" for infinite technologies, otherwise uint.
---@optional true
---@type uint32|string
Technology.max_level = nil

---List of technologies needed to be researched before this one can be researched.
---@optional true
---@type string[]
Technology.prerequisites = nil

---When set to true, and the technology contains several levels, only the relevant one is displayed in the technology screen.
---@default false
---@optional true
---@type bool
Technology.upgrade = nil

---Controls whether the technology is shown in the tech GUI when it is disabled (enabled = false).
---@default false
---@optional true
---@type bool
Technology.visible_when_disabled = nil

---A <a href="/Decider_combinator" title="Decider combinator">decider combinator</a>.
---@class DeciderCombinator
local DeciderCombinator = {}

---@optional false
---@type Sprite4Way
DeciderCombinator.equal_symbol_sprites = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.greater_or_equal_symbol_sprites = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.greater_symbol_sprites = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.less_or_equal_symbol_sprites = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.less_symbol_sprites = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.not_equal_symbol_sprites = nil

---@optional false
---@type Energy
DeciderCombinator.active_energy_usage = nil

---Array of 4 vectors.
---@optional false
---@type vector[]
DeciderCombinator.activity_led_light_offsets = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.activity_led_sprites = nil

---Must be an electric or void energy source.
---@optional false
---@type EnergySource
DeciderCombinator.energy_source = nil

---@optional false
---@type BoundingBox
DeciderCombinator.input_connection_bounding_box = nil

---Array of 4 WireConnectionPoints.
---@optional false
---@type WireConnectionPoint[]
DeciderCombinator.input_connection_points = nil

---@optional false
---@type BoundingBox
DeciderCombinator.output_connection_bounding_box = nil

---Array of 4 WireConnectionPoints.
---@optional false
---@type WireConnectionPoint[]
DeciderCombinator.output_connection_points = nil

---Array of 4 vectors.
---@optional false
---@type vector[]
DeciderCombinator.screen_light_offsets = nil

---@optional false
---@type Sprite4Way
DeciderCombinator.sprites = nil

---@default 5
---@optional true
---@type uint8
DeciderCombinator.activity_led_hold_time = nil

---@optional true
---@type LightDefinition
DeciderCombinator.activity_led_light = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
DeciderCombinator.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
DeciderCombinator.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
DeciderCombinator.draw_copper_wires = nil

---@optional true
---@type LightDefinition
DeciderCombinator.screen_light = nil

---@default true
---@optional true
---@type bool
DeciderCombinator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
DeciderCombinator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
DeciderCombinator.corpse = nil

---@default true
---@optional true
---@type bool
DeciderCombinator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
DeciderCombinator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
DeciderCombinator.dying_explosion = nil

---@optional true
---@type TriggerEffect
DeciderCombinator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
DeciderCombinator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
DeciderCombinator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
DeciderCombinator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
DeciderCombinator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
DeciderCombinator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
DeciderCombinator.max_health = nil

---@default false
---@optional true
---@type bool
DeciderCombinator.random_corpse_variation = nil

---@optional true
---@type SoundType
DeciderCombinator.repair_sound = nil

---@default 1
---@optional true
---@type float
DeciderCombinator.repair_speed_modifier = nil

---@optional true
---@type Resistances
DeciderCombinator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
DeciderCombinator.additional_pastable_entities = nil

---@optional true
---@type float
DeciderCombinator.alert_icon_scale = nil

---@optional true
---@type vector
DeciderCombinator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
DeciderCombinator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
DeciderCombinator.autoplace = nil

---@default 0
---@optional true
---@type double
DeciderCombinator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
DeciderCombinator.build_sound = nil

---@optional true
---@type SoundType
DeciderCombinator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
DeciderCombinator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
DeciderCombinator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
DeciderCombinator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
DeciderCombinator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
DeciderCombinator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
DeciderCombinator.emissions_per_second = nil

---@optional true
---@type Color
DeciderCombinator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
DeciderCombinator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
DeciderCombinator.flags = nil

---@optional true
---@type Color
DeciderCombinator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
DeciderCombinator.hit_visualization_box = nil

---@optional true
---@type Color
DeciderCombinator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
DeciderCombinator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
DeciderCombinator.minable = nil

---@optional true
---@type SoundType
DeciderCombinator.mined_sound = nil

---@optional true
---@type SoundType
DeciderCombinator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
DeciderCombinator.next_upgrade = nil

---@optional true
---@type SoundType
DeciderCombinator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
DeciderCombinator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
DeciderCombinator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
DeciderCombinator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
DeciderCombinator.remove_decoratives = nil

---@optional true
---@type SoundType
DeciderCombinator.rotated_sound = nil

---@default true
---@optional true
---@type bool
DeciderCombinator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
DeciderCombinator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
DeciderCombinator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
DeciderCombinator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
DeciderCombinator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
DeciderCombinator.subgroup = nil

---@optional true
---@type uint32
DeciderCombinator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
DeciderCombinator.tile_width = nil

---@optional true
---@type TriggerTargetMask
DeciderCombinator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
DeciderCombinator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
DeciderCombinator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
DeciderCombinator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DeciderCombinator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DeciderCombinator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DeciderCombinator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DeciderCombinator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DeciderCombinator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DeciderCombinator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DeciderCombinator.icon_size = nil

---@default 0
---@optional true
---@type uint8
DeciderCombinator.icon_mipmaps = nil

---Used to attach graphics to entities during runtime.
---@class HighlightBoxEntity
local HighlightBoxEntity = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
HighlightBoxEntity.additional_pastable_entities = nil

---@optional true
---@type float
HighlightBoxEntity.alert_icon_scale = nil

---@optional true
---@type vector
HighlightBoxEntity.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
HighlightBoxEntity.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
HighlightBoxEntity.autoplace = nil

---@default 0
---@optional true
---@type double
HighlightBoxEntity.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
HighlightBoxEntity.build_sound = nil

---@optional true
---@type SoundType
HighlightBoxEntity.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
HighlightBoxEntity.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
HighlightBoxEntity.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
HighlightBoxEntity.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
HighlightBoxEntity.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
HighlightBoxEntity.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
HighlightBoxEntity.emissions_per_second = nil

---@optional true
---@type Color
HighlightBoxEntity.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
HighlightBoxEntity.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
HighlightBoxEntity.flags = nil

---@optional true
---@type Color
HighlightBoxEntity.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
HighlightBoxEntity.hit_visualization_box = nil

---@optional true
---@type Color
HighlightBoxEntity.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
HighlightBoxEntity.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
HighlightBoxEntity.minable = nil

---@optional true
---@type SoundType
HighlightBoxEntity.mined_sound = nil

---@optional true
---@type SoundType
HighlightBoxEntity.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
HighlightBoxEntity.next_upgrade = nil

---@optional true
---@type SoundType
HighlightBoxEntity.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
HighlightBoxEntity.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
HighlightBoxEntity.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
HighlightBoxEntity.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
HighlightBoxEntity.remove_decoratives = nil

---@optional true
---@type SoundType
HighlightBoxEntity.rotated_sound = nil

---@default true
---@optional true
---@type bool
HighlightBoxEntity.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
HighlightBoxEntity.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
HighlightBoxEntity.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
HighlightBoxEntity.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
HighlightBoxEntity.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
HighlightBoxEntity.subgroup = nil

---@optional true
---@type uint32
HighlightBoxEntity.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
HighlightBoxEntity.tile_width = nil

---@optional true
---@type TriggerTargetMask
HighlightBoxEntity.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
HighlightBoxEntity.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
HighlightBoxEntity.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
HighlightBoxEntity.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
HighlightBoxEntity.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
HighlightBoxEntity.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
HighlightBoxEntity.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
HighlightBoxEntity.order = nil

---Path to the icon file.
---@optional true
---@type FileName
HighlightBoxEntity.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
HighlightBoxEntity.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
HighlightBoxEntity.icon_size = nil

---@default 0
---@optional true
---@type uint8
HighlightBoxEntity.icon_mipmaps = nil

---The abstract base for prototypes. PrototypeBase defines the common features of prototypes, such as localization and order.
---@class PrototypeBase
local PrototypeBase = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
PrototypeBase.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
PrototypeBase.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
PrototypeBase.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
PrototypeBase.order = nil

---Offers can be added to a market and they are shown when opening the entity. Offers allow to spend items to get research bonuses or items.
---@class Market
local Market = {}

---@optional false
---@type SpriteType
Market.picture = nil

---Whether all forces are allowed to open this market.
---@default true
---@optional true
---@type bool
Market.allow_access_to_all_forces = nil

---@default true
---@optional true
---@type bool
Market.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Market.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Market.corpse = nil

---@default true
---@optional true
---@type bool
Market.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Market.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Market.dying_explosion = nil

---@optional true
---@type TriggerEffect
Market.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Market.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Market.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Market.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Market.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Market.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Market.max_health = nil

---@default false
---@optional true
---@type bool
Market.random_corpse_variation = nil

---@optional true
---@type SoundType
Market.repair_sound = nil

---@default 1
---@optional true
---@type float
Market.repair_speed_modifier = nil

---@optional true
---@type Resistances
Market.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Market.additional_pastable_entities = nil

---@optional true
---@type float
Market.alert_icon_scale = nil

---@optional true
---@type vector
Market.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Market.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Market.autoplace = nil

---@default 0
---@optional true
---@type double
Market.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Market.build_sound = nil

---@optional true
---@type SoundType
Market.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Market.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Market.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Market.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Market.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Market.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Market.emissions_per_second = nil

---@optional true
---@type Color
Market.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Market.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Market.flags = nil

---@optional true
---@type Color
Market.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Market.hit_visualization_box = nil

---@optional true
---@type Color
Market.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Market.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Market.minable = nil

---@optional true
---@type SoundType
Market.mined_sound = nil

---@optional true
---@type SoundType
Market.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Market.next_upgrade = nil

---@optional true
---@type SoundType
Market.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Market.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Market.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Market.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Market.remove_decoratives = nil

---@optional true
---@type SoundType
Market.rotated_sound = nil

---@default true
---@optional true
---@type bool
Market.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Market.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Market.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Market.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Market.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Market.subgroup = nil

---@optional true
---@type uint32
Market.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Market.tile_width = nil

---@optional true
---@type TriggerTargetMask
Market.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Market.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Market.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Market.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Market.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Market.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Market.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Market.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Market.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Market.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Market.icon_size = nil

---@default 0
---@optional true
---@type uint8
Market.icon_mipmaps = nil

---A <a href="/Lab" title="Lab">lab</a>.
---@class Lab
local Lab = {}

---Defines how this lab gets energy.
---@optional false
---@type EnergySource
Lab.energy_source = nil

---The amount of energy this lab uses.
---@optional false
---@type Energy
Lab.energy_usage = nil

---A list of the names of science packs that can be used in this lab.
---@optional false
---@type string[]
Lab.inputs = nil

---The animation that plays when the lab is idle.
---@optional false
---@type AnimationType
Lab.off_animation = nil

---The animation that plays when the lab is active.
---@optional false
---@type AnimationType
Lab.on_animation = nil

---Sets the module effects that are allowed to be used on this lab.
---@optional true
---@type EffectTypeLimitation
Lab.allowed_effects = nil

---Productivity bonus that this machine always has.
---@default 0
---@optional true
---@type float
Lab.base_productivity = nil

---Shift of the "alt-mode icon" relative to the lab's center.
---@optional true
---@type vector
Lab.entity_info_icon_shift = nil

---@optional true
---@type LightDefinition
Lab.light = nil

---The number of module slots.
---@optional true
---@type ModuleSpecification
Lab.module_specification = nil

---@default 1
---@optional true
---@type double
Lab.researching_speed = nil

---@default true
---@optional true
---@type bool
Lab.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Lab.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Lab.corpse = nil

---@default true
---@optional true
---@type bool
Lab.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Lab.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Lab.dying_explosion = nil

---@optional true
---@type TriggerEffect
Lab.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Lab.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Lab.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Lab.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Lab.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Lab.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Lab.max_health = nil

---@default false
---@optional true
---@type bool
Lab.random_corpse_variation = nil

---@optional true
---@type SoundType
Lab.repair_sound = nil

---@default 1
---@optional true
---@type float
Lab.repair_speed_modifier = nil

---@optional true
---@type Resistances
Lab.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Lab.additional_pastable_entities = nil

---@optional true
---@type float
Lab.alert_icon_scale = nil

---@optional true
---@type vector
Lab.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Lab.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Lab.autoplace = nil

---@default 0
---@optional true
---@type double
Lab.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Lab.build_sound = nil

---@optional true
---@type SoundType
Lab.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Lab.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Lab.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Lab.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Lab.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Lab.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Lab.emissions_per_second = nil

---@optional true
---@type Color
Lab.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Lab.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Lab.flags = nil

---@optional true
---@type Color
Lab.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Lab.hit_visualization_box = nil

---@optional true
---@type Color
Lab.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Lab.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Lab.minable = nil

---@optional true
---@type SoundType
Lab.mined_sound = nil

---@optional true
---@type SoundType
Lab.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Lab.next_upgrade = nil

---@optional true
---@type SoundType
Lab.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Lab.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Lab.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Lab.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Lab.remove_decoratives = nil

---@optional true
---@type SoundType
Lab.rotated_sound = nil

---@default true
---@optional true
---@type bool
Lab.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Lab.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Lab.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Lab.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Lab.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Lab.subgroup = nil

---@optional true
---@type uint32
Lab.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Lab.tile_width = nil

---@optional true
---@type TriggerTargetMask
Lab.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Lab.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Lab.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Lab.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Lab.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Lab.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Lab.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Lab.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Lab.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Lab.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Lab.icon_size = nil

---@default 0
---@optional true
---@type uint8
Lab.icon_mipmaps = nil

---The available map gen presets. Only 1 instance of this prototype can exist.
---@class MapGenPresets
local MapGenPresets = {}

---Name of the map-gen-presets. Must be "default" since only one instances of this prototype can be defined.
---@optional false
---@type string
MapGenPresets.name = nil

---Abstract base for construcion/logistics and combat robots.
---@class FlyingRobot
local FlyingRobot = {}

---@optional false
---@type double
FlyingRobot.speed = nil

---How much does it cost to move 1 meter.
---@default 0
---@optional true
---@type Energy
FlyingRobot.energy_per_move = nil

---@default 0
---@optional true
---@type Energy
FlyingRobot.energy_per_tick = nil

---How much energy can be stored in the batteries.
---@default 0
---@optional true
---@type Energy
FlyingRobot.max_energy = nil

---The maximum speed of the robot. Useful to limit the impact of <a href="/Worker_robot_speed_(research)" title="Worker robot speed (research)">worker robot speed (research)</a>.
---@optional true
---@type double
FlyingRobot.max_speed = nil

---The robot will never go to charge when it has more energy than this.
---@default 0.95
---@optional true
---@type float
FlyingRobot.max_to_charge = nil

---The robot will always go to charge when it has less energy than this.
---@default 0.2
---@optional true
---@type float
FlyingRobot.min_to_charge = nil

---Some robots simply crash, some slowdown but keep going. 0 means crash.
---@default 0
---@optional true
---@type float
FlyingRobot.speed_multiplier_when_out_of_energy = nil

---@default true
---@optional true
---@type bool
FlyingRobot.alert_when_damaged = nil

---@optional true
---@type AttackReaction
FlyingRobot.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
FlyingRobot.corpse = nil

---@default true
---@optional true
---@type bool
FlyingRobot.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
FlyingRobot.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
FlyingRobot.dying_explosion = nil

---@optional true
---@type TriggerEffect
FlyingRobot.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
FlyingRobot.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
FlyingRobot.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
FlyingRobot.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
FlyingRobot.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
FlyingRobot.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
FlyingRobot.max_health = nil

---@default false
---@optional true
---@type bool
FlyingRobot.random_corpse_variation = nil

---@optional true
---@type SoundType
FlyingRobot.repair_sound = nil

---@default 1
---@optional true
---@type float
FlyingRobot.repair_speed_modifier = nil

---@optional true
---@type Resistances
FlyingRobot.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FlyingRobot.additional_pastable_entities = nil

---@optional true
---@type float
FlyingRobot.alert_icon_scale = nil

---@optional true
---@type vector
FlyingRobot.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FlyingRobot.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FlyingRobot.autoplace = nil

---@default 0
---@optional true
---@type double
FlyingRobot.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FlyingRobot.build_sound = nil

---@optional true
---@type SoundType
FlyingRobot.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FlyingRobot.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FlyingRobot.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FlyingRobot.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FlyingRobot.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FlyingRobot.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FlyingRobot.emissions_per_second = nil

---@optional true
---@type Color
FlyingRobot.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FlyingRobot.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FlyingRobot.flags = nil

---@optional true
---@type Color
FlyingRobot.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FlyingRobot.hit_visualization_box = nil

---@optional true
---@type Color
FlyingRobot.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FlyingRobot.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FlyingRobot.minable = nil

---@optional true
---@type SoundType
FlyingRobot.mined_sound = nil

---@optional true
---@type SoundType
FlyingRobot.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FlyingRobot.next_upgrade = nil

---@optional true
---@type SoundType
FlyingRobot.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FlyingRobot.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FlyingRobot.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FlyingRobot.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FlyingRobot.remove_decoratives = nil

---@optional true
---@type SoundType
FlyingRobot.rotated_sound = nil

---@default true
---@optional true
---@type bool
FlyingRobot.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FlyingRobot.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FlyingRobot.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FlyingRobot.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FlyingRobot.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FlyingRobot.subgroup = nil

---@optional true
---@type uint32
FlyingRobot.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FlyingRobot.tile_width = nil

---@optional true
---@type TriggerTargetMask
FlyingRobot.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FlyingRobot.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FlyingRobot.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FlyingRobot.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FlyingRobot.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FlyingRobot.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FlyingRobot.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FlyingRobot.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FlyingRobot.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FlyingRobot.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FlyingRobot.icon_size = nil

---@default 0
---@optional true
---@type uint8
FlyingRobot.icon_mipmaps = nil

---Used by Prototype/SelectionTool#mouse_cursor.
---@class MouseCursor
local MouseCursor = {}

---Name of the prototype.
---@optional false
---@type string
MouseCursor.name = nil

---Has to be present if <code>system_cursor</code> is not present.
---@optional true
---@type FileName
MouseCursor.filename = nil

---Has to be present if <code>system_cursor</code> is not present.
---@optional true
---@type int16
MouseCursor.hot_pixel_x = nil

---Has to be present if <code>system_cursor</code> is not present.
---@optional true
---@type int16
MouseCursor.hot_pixel_y = nil

---Either this or the other three properties have to be present.
---@optional true
---@type MouseCursorSystemCursor
MouseCursor.system_cursor = nil

---Abstract base of all equipment modules. Equipment modules can be inserted into Prototype/EquipmentGrids.
---@class Equipment
local Equipment = {}

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
Equipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
Equipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
Equipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
Equipment.sprite = nil

---@optional true
---@type SpriteType
Equipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
Equipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
Equipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
Equipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
Equipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Equipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Equipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Equipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Equipment.order = nil

---Used to define the parameters for the water shader.
---@class TileEffect
local TileEffect = {}

---@optional false
---@type one[]|two float
TileEffect.animation_scale = nil

---@optional false
---@type float
TileEffect.animation_speed = nil

---@optional false
---@type one[]|two float
TileEffect.dark_threshold = nil

---@optional false
---@type Color
TileEffect.foam_color = nil

---@optional false
---@type float
TileEffect.foam_color_multiplier = nil

---Name of the tile-effect. Must be "water" since only one instances of this prototype can be defined.
---@optional false
---@type string
TileEffect.name = nil

---@optional false
---@type one[]|two float
TileEffect.reflection_threshold = nil

---@optional false
---@type Color
TileEffect.specular_lightness = nil

---@optional false
---@type one[]|two float
TileEffect.specular_threshold = nil

---Sprite size must be 512x512.
---@optional false
---@type SpriteType
TileEffect.texture = nil

---@optional false
---@type float
TileEffect.tick_scale = nil

---@default 0.5
---@optional true
---@type float
TileEffect.far_zoom = nil

---@default 2.0
---@optional true
---@type float
TileEffect.near_zoom = nil

---This prototype definition is used for receiving an achievement when the player has a specified train path length.
---@class TrainPathAchievement
local TrainPathAchievement = {}

---The achievement will trigger if a train path is longer than this.
---@optional false
---@type double
TrainPathAchievement.minimum_distance = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
TrainPathAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
TrainPathAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
TrainPathAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TrainPathAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TrainPathAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TrainPathAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TrainPathAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
TrainPathAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
TrainPathAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
TrainPathAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
TrainPathAchievement.icon_mipmaps = nil

---<p>A <a href="/Types/NoiseExpression" title="Types/NoiseExpression">NoiseExpression</a> together with a name.</p><p>The base game uses named noise expressions to specify functions for many map properties to be used in map generation; e.g. the "elevation" expression is used to calculate elevation for every point on a map. For a list of the built-in named noise expressions, see <a href="/Data.raw#noise-expression" title="Data.raw">Data.raw#noise-expression</a>.</p><p>Named noise expressions can be used by <a rel="nofollow" class="external text" href="http://lua-api.factorio.com/latest/Concepts.html#MapGenSettings">MapGenSettings</a> and <a href="/Types/MapGenPreset" title="Types/MapGenPreset">Types/MapGenPreset</a> to override which named expression is used to calculate a given property by having an entry in <code>property_expression_names</code> e.g. <code>elevation = "0.16-elevation"</code>.<br>Alternate expressions can be made available in the map generator GUI by setting their <code>intended_property</code> to the name of the property they should override.<br>Named noise expressions can also be used by <a href="/Types/NoiseExpression#variable" title="Types/NoiseExpression">noise variables</a>, e.g. <code>noise.var("my-named-expression")</code>.</p>
---@class NamedNoiseExpression
local NamedNoiseExpression = {}

---The noise expression itself. This is where most of the noise magic happens.
---@optional false
---@type NoiseExpression
NamedNoiseExpression.expression = nil

---<p>Names the property that this expression is intended to provide a value for, if any. This will make the expression show up as an option in the map generator GUI, unless it is the only expression with that intended property, in which case it will be hidden and selected by default.</p><p>Note that the "Map type" dropdown in the map generation GUI is actually a selector for "elevation" generators. If generators are available for other properties, the "Map type" dropdown in the GUI will be renamed to "elevation" and shown along with selectors for the other selectable properties.</p><p>For example if a noise expression is intended to be used as an alternative temperature generator, <code>intended_property</code> should be "temperature". The base game uses the intended_properties  elevation, temperature, moisture and aux. For how the named noise expression with those intended_properties are used in the base game see the notable named noise expression list on <a href="/Types/NoiseExpression#variable" title="Types/NoiseExpression">Types/NoiseExpression#variable</a>. Mods may add any other intended_property or modify the existing noise expressions to change/remove their intended properties. Furthermore, mods may remove the use of those named noise expressions from the map generation code or change what they affect.</p>
---@optional true
---@type string
NamedNoiseExpression.intended_property = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
NamedNoiseExpression.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
NamedNoiseExpression.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
NamedNoiseExpression.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
NamedNoiseExpression.order = nil

---A <a href="/Constant_combinator" title="Constant combinator">constant combinator</a>.
---@class ConstantCombinator
local ConstantCombinator = {}

---@optional false
---@type vector[]
ConstantCombinator.activity_led_light_offsets = nil

---@optional false
---@type Sprite4Way
ConstantCombinator.activity_led_sprites = nil

---@optional false
---@type WireConnectionPoint[]
ConstantCombinator.circuit_wire_connection_points = nil

---@optional false
---@type uint32
ConstantCombinator.item_slot_count = nil

---@optional false
---@type Sprite4Way
ConstantCombinator.sprites = nil

---@optional true
---@type LightDefinition
ConstantCombinator.activity_led_light = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
ConstantCombinator.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
ConstantCombinator.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
ConstantCombinator.draw_copper_wires = nil

---@default true
---@optional true
---@type bool
ConstantCombinator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ConstantCombinator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ConstantCombinator.corpse = nil

---@default true
---@optional true
---@type bool
ConstantCombinator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ConstantCombinator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ConstantCombinator.dying_explosion = nil

---@optional true
---@type TriggerEffect
ConstantCombinator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ConstantCombinator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ConstantCombinator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ConstantCombinator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ConstantCombinator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ConstantCombinator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ConstantCombinator.max_health = nil

---@default false
---@optional true
---@type bool
ConstantCombinator.random_corpse_variation = nil

---@optional true
---@type SoundType
ConstantCombinator.repair_sound = nil

---@default 1
---@optional true
---@type float
ConstantCombinator.repair_speed_modifier = nil

---@optional true
---@type Resistances
ConstantCombinator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ConstantCombinator.additional_pastable_entities = nil

---@optional true
---@type float
ConstantCombinator.alert_icon_scale = nil

---@optional true
---@type vector
ConstantCombinator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ConstantCombinator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ConstantCombinator.autoplace = nil

---@default 0
---@optional true
---@type double
ConstantCombinator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ConstantCombinator.build_sound = nil

---@optional true
---@type SoundType
ConstantCombinator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ConstantCombinator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ConstantCombinator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ConstantCombinator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ConstantCombinator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ConstantCombinator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ConstantCombinator.emissions_per_second = nil

---@optional true
---@type Color
ConstantCombinator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ConstantCombinator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ConstantCombinator.flags = nil

---@optional true
---@type Color
ConstantCombinator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ConstantCombinator.hit_visualization_box = nil

---@optional true
---@type Color
ConstantCombinator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ConstantCombinator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ConstantCombinator.minable = nil

---@optional true
---@type SoundType
ConstantCombinator.mined_sound = nil

---@optional true
---@type SoundType
ConstantCombinator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ConstantCombinator.next_upgrade = nil

---@optional true
---@type SoundType
ConstantCombinator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ConstantCombinator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ConstantCombinator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ConstantCombinator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ConstantCombinator.remove_decoratives = nil

---@optional true
---@type SoundType
ConstantCombinator.rotated_sound = nil

---@default true
---@optional true
---@type bool
ConstantCombinator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ConstantCombinator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ConstantCombinator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ConstantCombinator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ConstantCombinator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ConstantCombinator.subgroup = nil

---@optional true
---@type uint32
ConstantCombinator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ConstantCombinator.tile_width = nil

---@optional true
---@type TriggerTargetMask
ConstantCombinator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ConstantCombinator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ConstantCombinator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ConstantCombinator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ConstantCombinator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ConstantCombinator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ConstantCombinator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ConstantCombinator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ConstantCombinator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ConstantCombinator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ConstantCombinator.icon_size = nil

---@default 0
---@optional true
---@type uint8
ConstantCombinator.icon_mipmaps = nil

---A <a href="/Circuit_network#Virtual_signals" title="Circuit network">virtual signal</a>.
---@class VirtualSignal
local VirtualSignal = {}

---The name of a <a href="/Prototype/ItemSubGroup" title="Prototype/ItemSubGroup">Prototype/ItemSubGroup</a>.
---@default virtual-signal
---@optional true
---@type string
VirtualSignal.subgroup = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
VirtualSignal.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
VirtualSignal.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
VirtualSignal.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
VirtualSignal.order = nil

---Path to the icon file.
---@optional true
---@type FileName
VirtualSignal.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
VirtualSignal.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
VirtualSignal.icon_size = nil

---@default 0
---@optional true
---@type uint8
VirtualSignal.icon_mipmaps = nil

---This prototype is used to make sound, while playing the game. This includes the in-game's music, composed by Daniel James Taylor.
---@class AmbientSound
local AmbientSound = {}

---Unique textual identification of the prototype.
---@optional false
---@type string
AmbientSound.name = nil

---The sound file and volume.
---@optional false
---@type SoundType
AmbientSound.sound = nil

---This lets the game know in what instances the audio file is played.
---@optional false
---@type AmbientSoundTrackType
AmbientSound.track_type = nil

---@default 1
---@optional true
---@type double
AmbientSound.weight = nil

---A fire.
---@class FireFlame
local FireFlame = {}

---@optional false
---@type DamagePrototype
FireFlame.damage_per_tick = nil

---@optional false
---@type uint32
FireFlame.spread_delay = nil

---@optional false
---@type uint32
FireFlame.spread_delay_deviation = nil

---@default 10
---@optional true
---@type uint32
FireFlame.add_fuel_cooldown = nil

---@default 1
---@optional true
---@type float
FireFlame.burnt_patch_alpha_default = nil

---@optional true
---@type FireFlameBurntPatchAlphaVariations
FireFlame.burnt_patch_alpha_variations = nil

---@default 1800
---@optional true
---@type uint32
FireFlame.burnt_patch_lifetime = nil

---@optional true
---@type SpriteVariations
FireFlame.burnt_patch_pictures = nil

---@default 0.0
---@optional true
---@type float
FireFlame.damage_multiplier_decrease_per_tick = nil

---@default 0.0
---@optional true
---@type float
FireFlame.damage_multiplier_increase_per_added_fuel = nil

---@default 10
---@optional true
---@type uint32
FireFlame.delay_between_initial_flames = nil

---@default 30
---@optional true
---@type uint32
FireFlame.fade_in_duration = nil

---@default 30
---@optional true
---@type uint32
FireFlame.fade_out_duration = nil

---Only loaded if <code>uses_alternative_behavior</code> is false.
---@default 1
---@optional true
---@type float
FireFlame.flame_alpha = nil

---Only loaded if <code>uses_alternative_behavior</code> is false.
---@default 0
---@optional true
---@type float
FireFlame.flame_alpha_deviation = nil

---@default 0
---@optional true
---@type uint8
FireFlame.initial_flame_count = nil

---@default 300
---@optional true
---@type uint32
FireFlame.initial_lifetime = nil

---@default object
---@optional true
---@type RenderLayer
FireFlame.initial_render_layer = nil

---@default 20
---@optional true
---@type uint32
FireFlame.lifetime_increase_by = nil

---@default 10
---@optional true
---@type uint32
FireFlame.lifetime_increase_cooldown = nil

---@optional true
---@type LightDefinition
FireFlame.light = nil

---@default false
---@optional true
---@type bool
FireFlame.limit_overlapping_particles = nil

---@default 1.0
---@optional true
---@type float
FireFlame.maximum_damage_multiplier = nil

---@optional true
---@type uint32
FireFlame.maximum_lifetime = nil

---@default 200
---@optional true
---@type uint16
FireFlame.maximum_spread_count = nil

---@optional true
---@type Trigger
FireFlame.on_damage_tick_effect = nil

---@optional true
---@type Trigger
FireFlame.on_fuel_added_action = nil

---Only loaded if <code>uses_alternative_behavior</code> is true.
---@default 1
---@optional true
---@type float
FireFlame.particle_alpha = nil

---@default 0
---@optional true
---@type uint16
FireFlame.particle_alpha_blend_duration = nil

---Only loaded if <code>uses_alternative_behavior</code> is true.
---@default 0
---@optional true
---@type float
FireFlame.particle_alpha_deviation = nil

---@optional true
---@type AnimationVariations
FireFlame.pictures = nil

---@default object
---@optional true
---@type RenderLayer
FireFlame.render_layer = nil

---@default 30
---@optional true
---@type uint32
FireFlame.secondary_picture_fade_out_duration = nil

---@default 0
---@optional true
---@type uint32
FireFlame.secondary_picture_fade_out_start = nil

---@optional true
---@type AnimationVariations
FireFlame.secondary_pictures = nil

---@default object
---@optional true
---@type RenderLayer
FireFlame.secondary_render_layer = nil

---@optional true
---@type AnimationVariations
FireFlame.small_tree_fire_pictures = nil

---@optional true
---@type SmokeSource[]
FireFlame.smoke = nil

---@default 30
---@optional true
---@type uint32
FireFlame.smoke_fade_in_duration = nil

---@default 30
---@optional true
---@type uint32
FireFlame.smoke_fade_out_duration = nil

---@optional true
---@type AnimationVariations
FireFlame.smoke_source_pictures = nil

---The name of an entity.
---@optional true
---@type string
FireFlame.spawn_entity = nil

---@default 0
---@optional true
---@type float
FireFlame.tree_dying_factor = nil

---@default false
---@optional true
---@type bool
FireFlame.uses_alternative_behavior = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FireFlame.additional_pastable_entities = nil

---@optional true
---@type float
FireFlame.alert_icon_scale = nil

---@optional true
---@type vector
FireFlame.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FireFlame.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FireFlame.autoplace = nil

---@default 0
---@optional true
---@type double
FireFlame.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FireFlame.build_sound = nil

---@optional true
---@type SoundType
FireFlame.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FireFlame.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FireFlame.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FireFlame.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FireFlame.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FireFlame.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FireFlame.emissions_per_second = nil

---@optional true
---@type Color
FireFlame.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FireFlame.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FireFlame.flags = nil

---@optional true
---@type Color
FireFlame.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FireFlame.hit_visualization_box = nil

---@optional true
---@type Color
FireFlame.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FireFlame.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FireFlame.minable = nil

---@optional true
---@type SoundType
FireFlame.mined_sound = nil

---@optional true
---@type SoundType
FireFlame.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FireFlame.next_upgrade = nil

---@optional true
---@type SoundType
FireFlame.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FireFlame.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FireFlame.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FireFlame.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FireFlame.remove_decoratives = nil

---@optional true
---@type SoundType
FireFlame.rotated_sound = nil

---@default true
---@optional true
---@type bool
FireFlame.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FireFlame.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FireFlame.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FireFlame.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FireFlame.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FireFlame.subgroup = nil

---@optional true
---@type uint32
FireFlame.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FireFlame.tile_width = nil

---@optional true
---@type TriggerTargetMask
FireFlame.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FireFlame.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FireFlame.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FireFlame.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FireFlame.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FireFlame.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FireFlame.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FireFlame.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FireFlame.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FireFlame.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FireFlame.icon_size = nil

---@default 0
---@optional true
---@type uint8
FireFlame.icon_mipmaps = nil

---Used by <a href="/Portable_fusion_reactor" title="Portable fusion reactor">portable fusion reactor</a>. Provides power in equipment grids. Can produce power for free or use a burner energy source.
---@class GeneratorEquipment
local GeneratorEquipment = {}

---The power output of this equipment.
---@optional false
---@type Energy
GeneratorEquipment.power = nil

---Must be a burner energy source. If not defined, this equipment produces power for free.
---@optional true
---@type EnergySource
GeneratorEquipment.burner = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
GeneratorEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
GeneratorEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
GeneratorEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
GeneratorEquipment.sprite = nil

---@optional true
---@type SpriteType
GeneratorEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
GeneratorEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
GeneratorEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
GeneratorEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
GeneratorEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
GeneratorEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
GeneratorEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
GeneratorEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
GeneratorEquipment.order = nil

---An upwards flying text that disappears after a certain time (setting active = false stops the flying and the disappearing.)
---@class FlyingText
local FlyingText = {}

---How fast the text flies up. Seems to be tiles/tick.
---@optional false
---@type float
FlyingText.speed = nil

---Time in ticks this flying-text lasts.
---@optional false
---@type uint32
FlyingText.time_to_live = nil

---@default left
---@optional true
---@type TextAlignment
FlyingText.text_alignment = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FlyingText.additional_pastable_entities = nil

---@optional true
---@type float
FlyingText.alert_icon_scale = nil

---@optional true
---@type vector
FlyingText.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FlyingText.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FlyingText.autoplace = nil

---@default 0
---@optional true
---@type double
FlyingText.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FlyingText.build_sound = nil

---@optional true
---@type SoundType
FlyingText.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FlyingText.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FlyingText.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FlyingText.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FlyingText.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FlyingText.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FlyingText.emissions_per_second = nil

---@optional true
---@type Color
FlyingText.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FlyingText.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FlyingText.flags = nil

---@optional true
---@type Color
FlyingText.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FlyingText.hit_visualization_box = nil

---@optional true
---@type Color
FlyingText.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FlyingText.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FlyingText.minable = nil

---@optional true
---@type SoundType
FlyingText.mined_sound = nil

---@optional true
---@type SoundType
FlyingText.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FlyingText.next_upgrade = nil

---@optional true
---@type SoundType
FlyingText.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FlyingText.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FlyingText.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FlyingText.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FlyingText.remove_decoratives = nil

---@optional true
---@type SoundType
FlyingText.rotated_sound = nil

---@default true
---@optional true
---@type bool
FlyingText.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FlyingText.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FlyingText.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FlyingText.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FlyingText.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FlyingText.subgroup = nil

---@optional true
---@type uint32
FlyingText.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FlyingText.tile_width = nil

---@optional true
---@type TriggerTargetMask
FlyingText.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FlyingText.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FlyingText.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FlyingText.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FlyingText.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FlyingText.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FlyingText.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FlyingText.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FlyingText.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FlyingText.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FlyingText.icon_size = nil

---@default 0
---@optional true
---@type uint8
FlyingText.icon_mipmaps = nil

---Used by <a href="/Exoskeleton" title="Exoskeleton">exoskeleton</a>. Increases max speed of characters or acceleration of vehicles if they have this equipment in their grid.
---@class MovementBonusEquipment
local MovementBonusEquipment = {}

---@optional false
---@type Energy
MovementBonusEquipment.energy_consumption = nil

---Multiplier of the character speed/vehicle acceleration.
---@optional false
---@type double
MovementBonusEquipment.movement_bonus = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
MovementBonusEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
MovementBonusEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
MovementBonusEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
MovementBonusEquipment.sprite = nil

---@optional true
---@type SpriteType
MovementBonusEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
MovementBonusEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
MovementBonusEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
MovementBonusEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
MovementBonusEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
MovementBonusEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
MovementBonusEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
MovementBonusEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
MovementBonusEquipment.order = nil

---Used by <a href="/Energy_shield" title="Energy shield">Energy shield</a>.
---@class EnergyShieldEquipment
local EnergyShieldEquipment = {}

---@optional false
---@type Energy
EnergyShieldEquipment.energy_per_shield = nil

---@optional false
---@type float
EnergyShieldEquipment.max_shield_value = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
EnergyShieldEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
EnergyShieldEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
EnergyShieldEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
EnergyShieldEquipment.sprite = nil

---@optional true
---@type SpriteType
EnergyShieldEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
EnergyShieldEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
EnergyShieldEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
EnergyShieldEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
EnergyShieldEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EnergyShieldEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EnergyShieldEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EnergyShieldEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EnergyShieldEquipment.order = nil

---Possible configuration for all items.
---@class Item
local Item = {}

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
Item.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
Item.burnt_result = nil

---@optional true
---@type SoundType
Item.close_sound = nil

---@optional true
---@type IconData[]
Item.dark_background_icons = nil

---@optional true
---@type FileName
Item.dark_background_icon = nil

---@optional true
---@type ItemCountType
Item.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
Item.flags = nil

---@default 1.0
---@optional true
---@type double
Item.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
Item.fuel_category = nil

---@default 1.0
---@optional true
---@type double
Item.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
Item.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
Item.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
Item.fuel_value = nil

---@optional true
---@type SoundType
Item.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
Item.pictures = nil

---@optional true
---@type PlaceAsTile
Item.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
Item.place_result = nil

---@optional true
---@type string
Item.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
Item.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
Item.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
Item.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
Item.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Item.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Item.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Item.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Item.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Item.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Item.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Item.icon_size = nil

---@default 0
---@optional true
---@type uint8
Item.icon_mipmaps = nil

---Entity used to signify that the tile below it should be deconstructed.
---@class DeconstructibleTileProxy
local DeconstructibleTileProxy = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
DeconstructibleTileProxy.additional_pastable_entities = nil

---@optional true
---@type float
DeconstructibleTileProxy.alert_icon_scale = nil

---@optional true
---@type vector
DeconstructibleTileProxy.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
DeconstructibleTileProxy.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
DeconstructibleTileProxy.autoplace = nil

---@default 0
---@optional true
---@type double
DeconstructibleTileProxy.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
DeconstructibleTileProxy.build_sound = nil

---@optional true
---@type SoundType
DeconstructibleTileProxy.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
DeconstructibleTileProxy.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
DeconstructibleTileProxy.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
DeconstructibleTileProxy.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
DeconstructibleTileProxy.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
DeconstructibleTileProxy.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
DeconstructibleTileProxy.emissions_per_second = nil

---@optional true
---@type Color
DeconstructibleTileProxy.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
DeconstructibleTileProxy.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
DeconstructibleTileProxy.flags = nil

---@optional true
---@type Color
DeconstructibleTileProxy.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
DeconstructibleTileProxy.hit_visualization_box = nil

---@optional true
---@type Color
DeconstructibleTileProxy.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
DeconstructibleTileProxy.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
DeconstructibleTileProxy.minable = nil

---@optional true
---@type SoundType
DeconstructibleTileProxy.mined_sound = nil

---@optional true
---@type SoundType
DeconstructibleTileProxy.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
DeconstructibleTileProxy.next_upgrade = nil

---@optional true
---@type SoundType
DeconstructibleTileProxy.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
DeconstructibleTileProxy.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
DeconstructibleTileProxy.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
DeconstructibleTileProxy.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
DeconstructibleTileProxy.remove_decoratives = nil

---@optional true
---@type SoundType
DeconstructibleTileProxy.rotated_sound = nil

---@default true
---@optional true
---@type bool
DeconstructibleTileProxy.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
DeconstructibleTileProxy.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
DeconstructibleTileProxy.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
DeconstructibleTileProxy.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
DeconstructibleTileProxy.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
DeconstructibleTileProxy.subgroup = nil

---@optional true
---@type uint32
DeconstructibleTileProxy.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
DeconstructibleTileProxy.tile_width = nil

---@optional true
---@type TriggerTargetMask
DeconstructibleTileProxy.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
DeconstructibleTileProxy.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
DeconstructibleTileProxy.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
DeconstructibleTileProxy.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DeconstructibleTileProxy.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DeconstructibleTileProxy.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DeconstructibleTileProxy.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DeconstructibleTileProxy.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DeconstructibleTileProxy.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DeconstructibleTileProxy.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DeconstructibleTileProxy.icon_size = nil

---@default 0
---@optional true
---@type uint8
DeconstructibleTileProxy.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player constructs enough entities with construction robots.
---@class ConstructWithRobotsAchievement
local ConstructWithRobotsAchievement = {}

---If this is false, the player carries over their statistics from this achievement through all their saves.
---@optional false
---@type bool
ConstructWithRobotsAchievement.limited_to_one_game = nil

---This will trigger the achievement, if enough entities were placed using construction robots.
---@default 0
---@optional true
---@type uint32
ConstructWithRobotsAchievement.amount = nil

---@default false
---@optional true
---@type bool
ConstructWithRobotsAchievement.more_than_manually = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
ConstructWithRobotsAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
ConstructWithRobotsAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
ConstructWithRobotsAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ConstructWithRobotsAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ConstructWithRobotsAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ConstructWithRobotsAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ConstructWithRobotsAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ConstructWithRobotsAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ConstructWithRobotsAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ConstructWithRobotsAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
ConstructWithRobotsAchievement.icon_mipmaps = nil

---Deprecated in 0.18. The type "particle" has been obsoleted and cannot be created. See <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a> for particles.
---@class EntityParticle
local EntityParticle = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
EntityParticle.additional_pastable_entities = nil

---@optional true
---@type float
EntityParticle.alert_icon_scale = nil

---@optional true
---@type vector
EntityParticle.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
EntityParticle.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
EntityParticle.autoplace = nil

---@default 0
---@optional true
---@type double
EntityParticle.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
EntityParticle.build_sound = nil

---@optional true
---@type SoundType
EntityParticle.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
EntityParticle.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
EntityParticle.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
EntityParticle.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
EntityParticle.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
EntityParticle.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
EntityParticle.emissions_per_second = nil

---@optional true
---@type Color
EntityParticle.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
EntityParticle.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
EntityParticle.flags = nil

---@optional true
---@type Color
EntityParticle.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
EntityParticle.hit_visualization_box = nil

---@optional true
---@type Color
EntityParticle.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
EntityParticle.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
EntityParticle.minable = nil

---@optional true
---@type SoundType
EntityParticle.mined_sound = nil

---@optional true
---@type SoundType
EntityParticle.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
EntityParticle.next_upgrade = nil

---@optional true
---@type SoundType
EntityParticle.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
EntityParticle.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
EntityParticle.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
EntityParticle.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
EntityParticle.remove_decoratives = nil

---@optional true
---@type SoundType
EntityParticle.rotated_sound = nil

---@default true
---@optional true
---@type bool
EntityParticle.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
EntityParticle.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
EntityParticle.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
EntityParticle.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
EntityParticle.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
EntityParticle.subgroup = nil

---@optional true
---@type uint32
EntityParticle.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
EntityParticle.tile_width = nil

---@optional true
---@type TriggerTargetMask
EntityParticle.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
EntityParticle.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
EntityParticle.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
EntityParticle.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EntityParticle.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EntityParticle.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EntityParticle.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EntityParticle.order = nil

---Path to the icon file.
---@optional true
---@type FileName
EntityParticle.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
EntityParticle.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
EntityParticle.icon_size = nil

---@default 0
---@optional true
---@type uint8
EntityParticle.icon_mipmaps = nil

---A fluid.
---@class Fluid
local Fluid = {}

---Used by bars that show the fluid color, like the flamethrower turret fill bar in the tooltip, or the fill bar for the fluidwagon tooltip; and for the pipe windows and storage tank fill gauges.
---@optional false
---@type Color
Fluid.base_color = nil

---Also the minimum temperature of the fluid. Has to be lower than <code>max_temperature</code>.
---@optional false
---@type double
Fluid.default_temperature = nil

---Used only for pipe windows or storage tank fill gauges.
---@optional false
---@type Color
Fluid.flow_color = nil

---@optional true
---@type double
Fluid.max_temperature = nil

---Scales pollution generated when the fluid is consumed.
---@default 1.0
---@optional true
---@type double
Fluid.emissions_multiplier = nil

---@default 0J
---@optional true
---@type Energy
Fluid.fuel_value = nil

---Above this temperature the <code>gas_flow</code> animation is used to display the fluid inside storage tanks and pipes.
---@optional true
---@type double
Fluid.gas_temperature = nil

---Joule needed to heat 1 Unit by 1 °C.
---@default 1KJ
---@optional true
---@type Energy
Fluid.heat_capacity = nil

---Hides the fluid from the signal selection screen.
---@default false
---@optional true
---@type bool
Fluid.hidden = nil

---The value of this property may not be an empty string. It either has to be nil, or a non-empty string.
---@default fluid
---@optional true
---@type string
Fluid.subgroup = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Fluid.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Fluid.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Fluid.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Fluid.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Fluid.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Fluid.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Fluid.icon_size = nil

---@default 0
---@optional true
---@type uint8
Fluid.icon_mipmaps = nil

---A gun. A weapon to deal damage to entities.
---@class Gun
local Gun = {}

---The information the item needs to know in order to know what ammo it requires, the sounds, and range.
---@optional false
---@type AttackParameters
Gun.attack_parameters = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
Gun.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
Gun.burnt_result = nil

---@optional true
---@type SoundType
Gun.close_sound = nil

---@optional true
---@type IconData[]
Gun.dark_background_icons = nil

---@optional true
---@type FileName
Gun.dark_background_icon = nil

---@optional true
---@type ItemCountType
Gun.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
Gun.flags = nil

---@default 1.0
---@optional true
---@type double
Gun.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
Gun.fuel_category = nil

---@default 1.0
---@optional true
---@type double
Gun.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
Gun.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
Gun.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
Gun.fuel_value = nil

---@optional true
---@type SoundType
Gun.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
Gun.pictures = nil

---@optional true
---@type PlaceAsTile
Gun.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
Gun.place_result = nil

---@optional true
---@type string
Gun.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
Gun.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
Gun.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
Gun.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
Gun.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Gun.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Gun.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Gun.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Gun.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Gun.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Gun.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Gun.icon_size = nil

---@default 0
---@optional true
---@type uint8
Gun.icon_mipmaps = nil

---An <a href="/Artillery_turret" title="Artillery turret">artillery turret</a>.
---@class ArtilleryTurret
local ArtilleryTurret = {}

---Must be > 0.
---@optional false
---@type ItemCountType
ArtilleryTurret.ammo_stack_limit = nil

---@optional false
---@type ItemCountType
ArtilleryTurret.automated_ammo_count = nil

---Name of an item.
---@optional false
---@type string
ArtilleryTurret.gun = nil

---Must be > 0.
---@optional false
---@type ItemStackIndex
ArtilleryTurret.inventory_size = nil

---Must be > 0.
---@optional false
---@type double
ArtilleryTurret.manual_range_modifier = nil

---@optional false
---@type double
ArtilleryTurret.turret_rotation_speed = nil

---@default true
---@optional true
---@type bool
ArtilleryTurret.alert_when_attacking = nil

---@optional true
---@type Animation4Way
ArtilleryTurret.base_picture = nil

---@default lower-object
---@optional true
---@type RenderLayer
ArtilleryTurret.base_picture_render_layer = nil

---@default 0
---@optional true
---@type uint8
ArtilleryTurret.base_picture_secondary_draw_order = nil

---@optional true
---@type vector
ArtilleryTurret.base_shift = nil

---@optional true
---@type Vector3D
ArtilleryTurret.cannon_barrel_light_direction = nil

---@optional true
---@type RotatedSprite
ArtilleryTurret.cannon_barrel_pictures = nil

---@optional true
---@type Vector3D[]
ArtilleryTurret.cannon_barrel_recoil_shiftings = nil

---Only loaded if <code>cannon_barrel_recoil_shiftings</code> is loaded.
---@optional true
---@type Vector3D[]
ArtilleryTurret.cannon_barrel_recoil_shiftings_load_correction_matrix = nil

---@optional true
---@type RotatedSprite
ArtilleryTurret.cannon_base_pictures = nil

---@default 0
---@optional true
---@type uint16
ArtilleryTurret.cannon_parking_frame_count = nil

---@default 1
---@optional true
---@type uint16
ArtilleryTurret.cannon_parking_speed = nil

---@default false
---@optional true
---@type bool
ArtilleryTurret.disable_automatic_firing = nil

---@optional true
---@type InterruptibleSound
ArtilleryTurret.rotating_sound = nil

---@optional true
---@type SoundType
ArtilleryTurret.rotating_stopped_sound = nil

---@default 0
---@optional true
---@type uint16
ArtilleryTurret.turn_after_shooting_cooldown = nil

---@default true
---@optional true
---@type bool
ArtilleryTurret.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ArtilleryTurret.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ArtilleryTurret.corpse = nil

---@default true
---@optional true
---@type bool
ArtilleryTurret.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ArtilleryTurret.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ArtilleryTurret.dying_explosion = nil

---@optional true
---@type TriggerEffect
ArtilleryTurret.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ArtilleryTurret.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ArtilleryTurret.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ArtilleryTurret.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ArtilleryTurret.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ArtilleryTurret.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ArtilleryTurret.max_health = nil

---@default false
---@optional true
---@type bool
ArtilleryTurret.random_corpse_variation = nil

---@optional true
---@type SoundType
ArtilleryTurret.repair_sound = nil

---@default 1
---@optional true
---@type float
ArtilleryTurret.repair_speed_modifier = nil

---@optional true
---@type Resistances
ArtilleryTurret.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ArtilleryTurret.additional_pastable_entities = nil

---@optional true
---@type float
ArtilleryTurret.alert_icon_scale = nil

---@optional true
---@type vector
ArtilleryTurret.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ArtilleryTurret.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ArtilleryTurret.autoplace = nil

---@default 0
---@optional true
---@type double
ArtilleryTurret.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ArtilleryTurret.build_sound = nil

---@optional true
---@type SoundType
ArtilleryTurret.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ArtilleryTurret.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ArtilleryTurret.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ArtilleryTurret.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ArtilleryTurret.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ArtilleryTurret.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ArtilleryTurret.emissions_per_second = nil

---@optional true
---@type Color
ArtilleryTurret.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ArtilleryTurret.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ArtilleryTurret.flags = nil

---@optional true
---@type Color
ArtilleryTurret.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ArtilleryTurret.hit_visualization_box = nil

---@optional true
---@type Color
ArtilleryTurret.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ArtilleryTurret.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ArtilleryTurret.minable = nil

---@optional true
---@type SoundType
ArtilleryTurret.mined_sound = nil

---@optional true
---@type SoundType
ArtilleryTurret.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ArtilleryTurret.next_upgrade = nil

---@optional true
---@type SoundType
ArtilleryTurret.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ArtilleryTurret.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ArtilleryTurret.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ArtilleryTurret.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ArtilleryTurret.remove_decoratives = nil

---@optional true
---@type SoundType
ArtilleryTurret.rotated_sound = nil

---@default true
---@optional true
---@type bool
ArtilleryTurret.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ArtilleryTurret.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ArtilleryTurret.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ArtilleryTurret.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ArtilleryTurret.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ArtilleryTurret.subgroup = nil

---@optional true
---@type uint32
ArtilleryTurret.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ArtilleryTurret.tile_width = nil

---@optional true
---@type TriggerTargetMask
ArtilleryTurret.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ArtilleryTurret.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ArtilleryTurret.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ArtilleryTurret.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ArtilleryTurret.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ArtilleryTurret.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ArtilleryTurret.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ArtilleryTurret.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ArtilleryTurret.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ArtilleryTurret.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ArtilleryTurret.icon_size = nil

---@default 0
---@optional true
---@type uint8
ArtilleryTurret.icon_mipmaps = nil

---Properties of the god controller.
---@class GodController
local GodController = {}

---@optional false
---@type ItemStackIndex
GodController.inventory_size = nil

---@optional false
---@type double
GodController.item_pickup_distance = nil

---@optional false
---@type double
GodController.loot_pickup_distance = nil

---@optional false
---@type double
GodController.mining_speed = nil

---Must be >= 0.34375.
---@optional false
---@type double
GodController.movement_speed = nil

---Name of the god-controller. Must be "default" since only one instances of this prototype can be defined.
---@default default
---@optional false
---@type string
GodController.name = nil

---Names of the crafting categories the player can craft recipes from.
---@optional true
---@type string[]
GodController.crafting_categories = nil

---Names of the crafting categories the player can craft recipes from.
---@optional true
---@type string[]
GodController.mining_categories = nil

---Explosion that can deal damage.
---@class FlameThrowerExplosion
local FlameThrowerExplosion = {}

---@optional false
---@type DamagePrototype
FlameThrowerExplosion.damage = nil

---@optional false
---@type double
FlameThrowerExplosion.slow_down_factor = nil

---@optional false
---@type AnimationVariations
FlameThrowerExplosion.animations = nil

---@default false
---@optional true
---@type bool
FlameThrowerExplosion.beam = nil

---@default false
---@optional true
---@type bool
FlameThrowerExplosion.correct_rotation = nil

---@default 0
---@optional true
---@type uint8
FlameThrowerExplosion.fade_in_duration = nil

---@default 0
---@optional true
---@type uint8
FlameThrowerExplosion.fade_out_duration = nil

---@default 1
---@optional true
---@type float
FlameThrowerExplosion.height = nil

---@optional true
---@type LightDefinition
FlameThrowerExplosion.light = nil

---Silently clamped to be between 0 and 1.
---@default 0.0
---@optional true
---@type float
FlameThrowerExplosion.light_intensity_factor_final = nil

---Silently clamped to be between 0 and 1.
---@default 0.0
---@optional true
---@type float
FlameThrowerExplosion.light_intensity_factor_initial = nil

---@default 0.9
---@optional true
---@type float
FlameThrowerExplosion.light_intensity_peak_end_progress = nil

---@default 0.0
---@optional true
---@type float
FlameThrowerExplosion.light_intensity_peak_start_progress = nil

---Silently clamped to be between 0 and 1.
---@default 0.1
---@optional true
---@type float
FlameThrowerExplosion.light_size_factor_final = nil

---Silently clamped to be between 0 and 1.
---@default 0.05
---@optional true
---@type float
FlameThrowerExplosion.light_size_factor_initial = nil

---@default 0.5
---@optional true
---@type float
FlameThrowerExplosion.light_size_peak_end_progress = nil

---@default 0.1
---@optional true
---@type float
FlameThrowerExplosion.light_size_peak_start_progress = nil

---@default explosion
---@optional true
---@type RenderLayer
FlameThrowerExplosion.render_layer = nil

---@default false
---@optional true
---@type bool
FlameThrowerExplosion.rotate = nil

---@default 1
---@optional true
---@type float
FlameThrowerExplosion.scale = nil

---@default false
---@optional true
---@type bool
FlameThrowerExplosion.scale_animation_speed = nil

---@default 0
---@optional true
---@type float
FlameThrowerExplosion.scale_deviation = nil

---@default 1
---@optional true
---@type float
FlameThrowerExplosion.scale_end = nil

---@default 0
---@optional true
---@type uint8
FlameThrowerExplosion.scale_in_duration = nil

---@default 0
---@optional true
---@type float
FlameThrowerExplosion.scale_increment_per_tick = nil

---@default 1
---@optional true
---@type float
FlameThrowerExplosion.scale_initial = nil

---@default 0
---@optional true
---@type float
FlameThrowerExplosion.scale_initial_deviation = nil

---@default 0
---@optional true
---@type uint8
FlameThrowerExplosion.scale_out_duration = nil

---Name of a trivial-smoke prototype. Mandatory if smoke_count > 0.
---@optional true
---@type string
FlameThrowerExplosion.smoke = nil

---@default 0
---@optional true
---@type uint16
FlameThrowerExplosion.smoke_count = nil

---@default 0
---@optional true
---@type float
FlameThrowerExplosion.smoke_slow_down_factor = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.sound = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FlameThrowerExplosion.additional_pastable_entities = nil

---@optional true
---@type float
FlameThrowerExplosion.alert_icon_scale = nil

---@optional true
---@type vector
FlameThrowerExplosion.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FlameThrowerExplosion.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FlameThrowerExplosion.autoplace = nil

---@default 0
---@optional true
---@type double
FlameThrowerExplosion.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.build_sound = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FlameThrowerExplosion.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FlameThrowerExplosion.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FlameThrowerExplosion.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FlameThrowerExplosion.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FlameThrowerExplosion.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FlameThrowerExplosion.emissions_per_second = nil

---@optional true
---@type Color
FlameThrowerExplosion.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FlameThrowerExplosion.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FlameThrowerExplosion.flags = nil

---@optional true
---@type Color
FlameThrowerExplosion.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FlameThrowerExplosion.hit_visualization_box = nil

---@optional true
---@type Color
FlameThrowerExplosion.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FlameThrowerExplosion.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FlameThrowerExplosion.minable = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.mined_sound = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FlameThrowerExplosion.next_upgrade = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FlameThrowerExplosion.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FlameThrowerExplosion.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FlameThrowerExplosion.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FlameThrowerExplosion.remove_decoratives = nil

---@optional true
---@type SoundType
FlameThrowerExplosion.rotated_sound = nil

---@default true
---@optional true
---@type bool
FlameThrowerExplosion.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FlameThrowerExplosion.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FlameThrowerExplosion.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FlameThrowerExplosion.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FlameThrowerExplosion.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FlameThrowerExplosion.subgroup = nil

---@optional true
---@type uint32
FlameThrowerExplosion.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FlameThrowerExplosion.tile_width = nil

---@optional true
---@type TriggerTargetMask
FlameThrowerExplosion.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FlameThrowerExplosion.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FlameThrowerExplosion.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FlameThrowerExplosion.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FlameThrowerExplosion.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FlameThrowerExplosion.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FlameThrowerExplosion.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FlameThrowerExplosion.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FlameThrowerExplosion.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FlameThrowerExplosion.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FlameThrowerExplosion.icon_size = nil

---@default 0
---@optional true
---@type uint8
FlameThrowerExplosion.icon_mipmaps = nil

---A mineable/gatherable entity.
---@class ResourceEntity
local ResourceEntity = {}

---Number of stages the animation has.
---@optional false
---@type uint32[]
ResourceEntity.stage_counts = nil

---Entity's graphics, using a graphic sheet, with variation and depletion. At least one stage must be defined.
---@optional false
---@type AnimationVariations
ResourceEntity.stages = nil

---The category for the resource. Available categories in vanilla can be found here: <a href="/Data.raw#resource-category" title="Data.raw">Data.raw#resource-category</a>
---@default basic-solid
---@optional true
---@type string
ResourceEntity.category = nil

---How long it takes <code>stages_effect</code> to go from <code>min_effect_alpha</code> to <code>max_effect_alpha</code>.
---@default 0.0
---@optional true
---@type float
ResourceEntity.effect_animation_period = nil

---How much <code>effect_animation_period</code> can deviate from its original value. Used to make the stages effect alpha change look less uniform.
---@default 0.0
---@optional true
---@type float
ResourceEntity.effect_animation_period_deviation = nil

---How much the surface darkness should affect the alpha of <code>stages_effect</code>.
---@default 1.0
---@optional true
---@type float
ResourceEntity.effect_darkness_multiplier = nil

---If the resource should be highlighted when holding a mining drill that can mine it (holding a pumpjack highlights crude-oil in the base game).
---@default false
---@optional true
---@type bool
ResourceEntity.highlight = nil

---If the ore is infinitely minable, or if it will eventually run out of resource.
---@default false
---@optional true
---@type bool
ResourceEntity.infinite = nil

---<i>Every time an infinite-type resource "ticks" lower it's lowered by that amount.</i> -- <a rel="nofollow" class="external text" href="https://forums.factorio.com/viewtopic.php?t=47093&amp;p=271243#p271115">Rseding91</a>
---@default 1
---@optional true
---@type uint32
ResourceEntity.infinite_depletion_amount = nil

---Whether the resource should have a grid pattern on the map instead of a solid map color.
---@default true
---@optional true
---@type bool
ResourceEntity.map_grid = nil

---Maximal alpha value of <code>stages_effect</code>.
---@default 1.0
---@optional true
---@type float
ResourceEntity.max_effect_alpha = nil

---Minimal alpha value of <code>stages_effect</code>.
---@default 0.0
---@optional true
---@type float
ResourceEntity.min_effect_alpha = nil

---Must be not 0 when <code>infinite = true</code>.
---@default 0
---@optional true
---@type uint32
ResourceEntity.minimum = nil

---Defaults to the resources map color if left unset and map color is set, otherwise defaults to white if left unset.
---@optional true
---@type Color
ResourceEntity.mining_visualisation_tint = nil

---Must be not 0 when <code>infinite = true</code>.
---@default 1
---@optional true
---@type uint32
ResourceEntity.normal = nil

---@default true
---@optional true
---@type bool
ResourceEntity.randomize_visual_position = nil

---When hovering over this resource in the map view: How far to search for other resource patches of this type to display as one (summing amount, white outline).
---@default 3
---@optional true
---@type uint32
ResourceEntity.resource_patch_search_radius = nil

---An effect that can be overlayed above the normal ore graphics. Used in the base game to make <a href="/Uranium_ore" title="Uranium ore">uranium ore</a> glow.
---@optional true
---@type AnimationVariations
ResourceEntity.stages_effect = nil

---Must be positive when <code>tree_removal_probability</code> is set.
---@default 0
---@optional true
---@type double
ResourceEntity.tree_removal_max_distance = nil

---Must be positive.
---@default 0
---@optional true
---@type double
ResourceEntity.tree_removal_probability = nil

---Sound played when the player walks over this resource.
---@optional true
---@type SoundType
ResourceEntity.walking_sound = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ResourceEntity.additional_pastable_entities = nil

---@optional true
---@type float
ResourceEntity.alert_icon_scale = nil

---@optional true
---@type vector
ResourceEntity.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ResourceEntity.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ResourceEntity.autoplace = nil

---@default 0
---@optional true
---@type double
ResourceEntity.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ResourceEntity.build_sound = nil

---@optional true
---@type SoundType
ResourceEntity.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ResourceEntity.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ResourceEntity.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ResourceEntity.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ResourceEntity.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ResourceEntity.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ResourceEntity.emissions_per_second = nil

---@optional true
---@type Color
ResourceEntity.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ResourceEntity.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ResourceEntity.flags = nil

---@optional true
---@type Color
ResourceEntity.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ResourceEntity.hit_visualization_box = nil

---@optional true
---@type Color
ResourceEntity.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ResourceEntity.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ResourceEntity.minable = nil

---@optional true
---@type SoundType
ResourceEntity.mined_sound = nil

---@optional true
---@type SoundType
ResourceEntity.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ResourceEntity.next_upgrade = nil

---@optional true
---@type SoundType
ResourceEntity.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ResourceEntity.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ResourceEntity.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ResourceEntity.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ResourceEntity.remove_decoratives = nil

---@optional true
---@type SoundType
ResourceEntity.rotated_sound = nil

---@default true
---@optional true
---@type bool
ResourceEntity.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ResourceEntity.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ResourceEntity.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ResourceEntity.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ResourceEntity.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ResourceEntity.subgroup = nil

---@optional true
---@type uint32
ResourceEntity.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ResourceEntity.tile_width = nil

---@optional true
---@type TriggerTargetMask
ResourceEntity.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ResourceEntity.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ResourceEntity.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ResourceEntity.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ResourceEntity.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ResourceEntity.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ResourceEntity.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ResourceEntity.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ResourceEntity.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ResourceEntity.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ResourceEntity.icon_size = nil

---@default 0
---@optional true
---@type uint8
ResourceEntity.icon_mipmaps = nil

---Used to play an animation and a sound.
---@class Explosion
local Explosion = {}

---@optional false
---@type AnimationVariations
Explosion.animations = nil

---@default false
---@optional true
---@type bool
Explosion.beam = nil

---@default false
---@optional true
---@type bool
Explosion.correct_rotation = nil

---@default 0
---@optional true
---@type uint8
Explosion.fade_in_duration = nil

---@default 0
---@optional true
---@type uint8
Explosion.fade_out_duration = nil

---@default 1
---@optional true
---@type float
Explosion.height = nil

---@optional true
---@type LightDefinition
Explosion.light = nil

---Silently clamped to be between 0 and 1.
---@default 0.0
---@optional true
---@type float
Explosion.light_intensity_factor_final = nil

---Silently clamped to be between 0 and 1.
---@default 0.0
---@optional true
---@type float
Explosion.light_intensity_factor_initial = nil

---@default 0.9
---@optional true
---@type float
Explosion.light_intensity_peak_end_progress = nil

---@default 0.0
---@optional true
---@type float
Explosion.light_intensity_peak_start_progress = nil

---Silently clamped to be between 0 and 1.
---@default 0.1
---@optional true
---@type float
Explosion.light_size_factor_final = nil

---Silently clamped to be between 0 and 1.
---@default 0.05
---@optional true
---@type float
Explosion.light_size_factor_initial = nil

---@default 0.5
---@optional true
---@type float
Explosion.light_size_peak_end_progress = nil

---@default 0.1
---@optional true
---@type float
Explosion.light_size_peak_start_progress = nil

---@default explosion
---@optional true
---@type RenderLayer
Explosion.render_layer = nil

---@default false
---@optional true
---@type bool
Explosion.rotate = nil

---@default 1
---@optional true
---@type float
Explosion.scale = nil

---@default false
---@optional true
---@type bool
Explosion.scale_animation_speed = nil

---@default 0
---@optional true
---@type float
Explosion.scale_deviation = nil

---@default 1
---@optional true
---@type float
Explosion.scale_end = nil

---@default 0
---@optional true
---@type uint8
Explosion.scale_in_duration = nil

---@default 0
---@optional true
---@type float
Explosion.scale_increment_per_tick = nil

---@default 1
---@optional true
---@type float
Explosion.scale_initial = nil

---@default 0
---@optional true
---@type float
Explosion.scale_initial_deviation = nil

---@default 0
---@optional true
---@type uint8
Explosion.scale_out_duration = nil

---Name of a trivial-smoke prototype. Mandatory if smoke_count > 0.
---@optional true
---@type string
Explosion.smoke = nil

---@default 0
---@optional true
---@type uint16
Explosion.smoke_count = nil

---@default 0
---@optional true
---@type float
Explosion.smoke_slow_down_factor = nil

---@optional true
---@type SoundType
Explosion.sound = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Explosion.additional_pastable_entities = nil

---@optional true
---@type float
Explosion.alert_icon_scale = nil

---@optional true
---@type vector
Explosion.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Explosion.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Explosion.autoplace = nil

---@default 0
---@optional true
---@type double
Explosion.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Explosion.build_sound = nil

---@optional true
---@type SoundType
Explosion.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Explosion.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Explosion.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Explosion.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Explosion.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Explosion.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Explosion.emissions_per_second = nil

---@optional true
---@type Color
Explosion.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Explosion.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Explosion.flags = nil

---@optional true
---@type Color
Explosion.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Explosion.hit_visualization_box = nil

---@optional true
---@type Color
Explosion.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Explosion.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Explosion.minable = nil

---@optional true
---@type SoundType
Explosion.mined_sound = nil

---@optional true
---@type SoundType
Explosion.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Explosion.next_upgrade = nil

---@optional true
---@type SoundType
Explosion.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Explosion.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Explosion.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Explosion.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Explosion.remove_decoratives = nil

---@optional true
---@type SoundType
Explosion.rotated_sound = nil

---@default true
---@optional true
---@type bool
Explosion.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Explosion.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Explosion.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Explosion.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Explosion.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Explosion.subgroup = nil

---@optional true
---@type uint32
Explosion.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Explosion.tile_width = nil

---@optional true
---@type TriggerTargetMask
Explosion.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Explosion.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Explosion.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Explosion.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Explosion.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Explosion.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Explosion.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Explosion.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Explosion.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Explosion.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Explosion.icon_size = nil

---@default 0
---@optional true
---@type uint8
Explosion.icon_mipmaps = nil

---The available gui styles. Only 1 instance of this prototype can exist.
---@class GuiStyle
local GuiStyle = {}

---@default medium
---@optional false
---@type SpritePriority
GuiStyle.default_sprite_priority = nil

---@default 1
---@optional false
---@type double
GuiStyle.default_sprite_scale = nil

---@optional false
---@type FileName
GuiStyle.default_tileset = nil

---Name of the gui-style. Must be "default" since only one instance of this prototype can be defined.
---@default default
---@optional false
---@type string
GuiStyle.name = nil

---The shadow of the rocket inside the rocket silo.
---@class RocketSiloRocketShadow
local RocketSiloRocketShadow = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RocketSiloRocketShadow.additional_pastable_entities = nil

---@optional true
---@type float
RocketSiloRocketShadow.alert_icon_scale = nil

---@optional true
---@type vector
RocketSiloRocketShadow.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RocketSiloRocketShadow.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RocketSiloRocketShadow.autoplace = nil

---@default 0
---@optional true
---@type double
RocketSiloRocketShadow.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RocketSiloRocketShadow.build_sound = nil

---@optional true
---@type SoundType
RocketSiloRocketShadow.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RocketSiloRocketShadow.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RocketSiloRocketShadow.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RocketSiloRocketShadow.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RocketSiloRocketShadow.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RocketSiloRocketShadow.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RocketSiloRocketShadow.emissions_per_second = nil

---@optional true
---@type Color
RocketSiloRocketShadow.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RocketSiloRocketShadow.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RocketSiloRocketShadow.flags = nil

---@optional true
---@type Color
RocketSiloRocketShadow.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RocketSiloRocketShadow.hit_visualization_box = nil

---@optional true
---@type Color
RocketSiloRocketShadow.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RocketSiloRocketShadow.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RocketSiloRocketShadow.minable = nil

---@optional true
---@type SoundType
RocketSiloRocketShadow.mined_sound = nil

---@optional true
---@type SoundType
RocketSiloRocketShadow.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RocketSiloRocketShadow.next_upgrade = nil

---@optional true
---@type SoundType
RocketSiloRocketShadow.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RocketSiloRocketShadow.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RocketSiloRocketShadow.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RocketSiloRocketShadow.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RocketSiloRocketShadow.remove_decoratives = nil

---@optional true
---@type SoundType
RocketSiloRocketShadow.rotated_sound = nil

---@default true
---@optional true
---@type bool
RocketSiloRocketShadow.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RocketSiloRocketShadow.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RocketSiloRocketShadow.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RocketSiloRocketShadow.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RocketSiloRocketShadow.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RocketSiloRocketShadow.subgroup = nil

---@optional true
---@type uint32
RocketSiloRocketShadow.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RocketSiloRocketShadow.tile_width = nil

---@optional true
---@type TriggerTargetMask
RocketSiloRocketShadow.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RocketSiloRocketShadow.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RocketSiloRocketShadow.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RocketSiloRocketShadow.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RocketSiloRocketShadow.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RocketSiloRocketShadow.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RocketSiloRocketShadow.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RocketSiloRocketShadow.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RocketSiloRocketShadow.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RocketSiloRocketShadow.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RocketSiloRocketShadow.icon_size = nil

---@default 0
---@optional true
---@type uint8
RocketSiloRocketShadow.icon_mipmaps = nil

---An entity that produces power from fluids, for example a <a href="/Steam_engine" title="Steam engine">steam engine</a>.
---@class Generator
local Generator = {}

---The effectivity of the generator with 0.5 being half as effective as a regular steam-engine generator.
---@optional false
---@type double
Generator.effectivity = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
Generator.energy_source = nil

---@optional false
---@type FluidBox
Generator.fluid_box = nil

---The number of fluid units the generator uses per tick.
---@optional false
---@type double
Generator.fluid_usage_per_tick = nil

---@optional false
---@type AnimationType
Generator.horizontal_animation = nil

---@optional false
---@type double
Generator.maximum_temperature = nil

---@optional false
---@type AnimationType
Generator.vertical_animation = nil

---@default false
---@optional true
---@type bool
Generator.burns_fluid = nil

---@optional true
---@type Energy
Generator.max_power_output = nil

---Animation runs at least this fast. This corresponds to the sound.
---@default 0.25
---@optional true
---@type double
Generator.min_perceived_performance = nil

---@default 0.5
---@optional true
---@type double
Generator.performance_to_sound_speedup = nil

---Scales the generator's fluid usage to its maximum power output.
---@default false
---@optional true
---@type bool
Generator.scale_fluid_usage = nil

---Array of 1 or more smoke sources.
---@optional true
---@type SmokeSource[]
Generator.smoke = nil

---@default true
---@optional true
---@type bool
Generator.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Generator.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Generator.corpse = nil

---@default true
---@optional true
---@type bool
Generator.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Generator.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Generator.dying_explosion = nil

---@optional true
---@type TriggerEffect
Generator.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Generator.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Generator.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Generator.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Generator.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Generator.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Generator.max_health = nil

---@default false
---@optional true
---@type bool
Generator.random_corpse_variation = nil

---@optional true
---@type SoundType
Generator.repair_sound = nil

---@default 1
---@optional true
---@type float
Generator.repair_speed_modifier = nil

---@optional true
---@type Resistances
Generator.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Generator.additional_pastable_entities = nil

---@optional true
---@type float
Generator.alert_icon_scale = nil

---@optional true
---@type vector
Generator.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Generator.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Generator.autoplace = nil

---@default 0
---@optional true
---@type double
Generator.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Generator.build_sound = nil

---@optional true
---@type SoundType
Generator.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Generator.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Generator.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Generator.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Generator.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Generator.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Generator.emissions_per_second = nil

---@optional true
---@type Color
Generator.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Generator.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Generator.flags = nil

---@optional true
---@type Color
Generator.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Generator.hit_visualization_box = nil

---@optional true
---@type Color
Generator.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Generator.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Generator.minable = nil

---@optional true
---@type SoundType
Generator.mined_sound = nil

---@optional true
---@type SoundType
Generator.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Generator.next_upgrade = nil

---@optional true
---@type SoundType
Generator.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Generator.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Generator.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Generator.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Generator.remove_decoratives = nil

---@optional true
---@type SoundType
Generator.rotated_sound = nil

---@default true
---@optional true
---@type bool
Generator.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Generator.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Generator.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Generator.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Generator.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Generator.subgroup = nil

---@optional true
---@type uint32
Generator.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Generator.tile_width = nil

---@optional true
---@type TriggerTargetMask
Generator.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Generator.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Generator.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Generator.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Generator.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Generator.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Generator.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Generator.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Generator.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Generator.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Generator.icon_size = nil

---@default 0
---@optional true
---@type uint8
Generator.icon_mipmaps = nil

---Properties of the spectator controller.
---@class SpectatorController
local SpectatorController = {}

---Must be >= 0.34375.
---@optional false
---@type double
SpectatorController.movement_speed = nil

---Name of the spectator-controller. Must be "default" since only one instances of this prototype can be defined.
---@default default
---@optional false
---@type string
SpectatorController.name = nil

---This prototype definition is used for receiving an achievement when the player has a certain robot follower count.
---@class CombatRobotCountAchievement
local CombatRobotCountAchievement = {}

---This will trigger the achievement, if player's current robot count is over this amount.
---@default 1
---@optional true
---@type uint32
CombatRobotCountAchievement.count = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
CombatRobotCountAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
CombatRobotCountAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
CombatRobotCountAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CombatRobotCountAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CombatRobotCountAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CombatRobotCountAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CombatRobotCountAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CombatRobotCountAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CombatRobotCountAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CombatRobotCountAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
CombatRobotCountAchievement.icon_mipmaps = nil

---A <a href="/Cargo_wagon" title="Cargo wagon">cargo wagon</a>.
---@class CargoWagon
local CargoWagon = {}

---@optional false
---@type ItemStackIndex
CargoWagon.inventory_size = nil

---@optional false
---@type double
CargoWagon.air_resistance = nil

---The distance between the joint of this rolling stock and its connected rolling stocks joint.
---@optional false
---@type double
CargoWagon.connection_distance = nil

---<p>The length between this rolling stocks front and rear joints. Joints are the point where connection_distance is measured from when rolling stock are connected to one another. Wheels sprite are placed based on the joint position.</p><p>Maximum joint distance is 15.</p><p>Note: There needs to be border at least 0.2 between the bounding box edge and joint.</p>
---@optional false
---@type double
CargoWagon.joint_distance = nil

---@optional false
---@type double
CargoWagon.max_speed = nil

---@optional false
---@type RotatedSprite
CargoWagon.pictures = nil

---@optional false
---@type double
CargoWagon.vertical_selection_shift = nil

---@default true
---@optional true
---@type bool
CargoWagon.allow_manual_color = nil

---@default false
---@optional true
---@type bool
CargoWagon.allow_robot_dispatch_in_automatic_mode = nil

---@optional true
---@type LightDefinition
CargoWagon.back_light = nil

---@optional true
---@type Color
CargoWagon.color = nil

---Usually a sound to play when the rolling stock drives over a tie.
---@optional true
---@type TriggerEffect
CargoWagon.drive_over_tie_trigger = nil

---@optional true
---@type AnimationType
CargoWagon.horizontal_doors = nil

---@optional true
---@type LightDefinition
CargoWagon.stand_by_light = nil

---@default 10.0
---@optional true
---@type double
CargoWagon.tie_distance = nil

---@optional true
---@type AnimationType
CargoWagon.vertical_doors = nil

---@optional true
---@type RotatedSprite
CargoWagon.wheels = nil

---@optional true
---@type double
CargoWagon.braking_force = nil

---@optional true
---@type Energy
CargoWagon.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
CargoWagon.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
CargoWagon.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
CargoWagon.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
CargoWagon.weight = nil

---@optional true
---@type TriggerEffect
CargoWagon.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
CargoWagon.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
CargoWagon.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
CargoWagon.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
CargoWagon.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
CargoWagon.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
CargoWagon.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
CargoWagon.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
CargoWagon.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
CargoWagon.alert_when_damaged = nil

---@optional true
---@type AttackReaction
CargoWagon.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
CargoWagon.corpse = nil

---@default true
---@optional true
---@type bool
CargoWagon.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
CargoWagon.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
CargoWagon.dying_explosion = nil

---@optional true
---@type TriggerEffect
CargoWagon.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
CargoWagon.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
CargoWagon.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
CargoWagon.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
CargoWagon.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
CargoWagon.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
CargoWagon.max_health = nil

---@default false
---@optional true
---@type bool
CargoWagon.random_corpse_variation = nil

---@optional true
---@type SoundType
CargoWagon.repair_sound = nil

---@default 1
---@optional true
---@type float
CargoWagon.repair_speed_modifier = nil

---@optional true
---@type Resistances
CargoWagon.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
CargoWagon.additional_pastable_entities = nil

---@optional true
---@type float
CargoWagon.alert_icon_scale = nil

---@optional true
---@type vector
CargoWagon.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
CargoWagon.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
CargoWagon.autoplace = nil

---@default 0
---@optional true
---@type double
CargoWagon.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
CargoWagon.build_sound = nil

---@optional true
---@type SoundType
CargoWagon.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
CargoWagon.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
CargoWagon.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
CargoWagon.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
CargoWagon.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
CargoWagon.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
CargoWagon.emissions_per_second = nil

---@optional true
---@type Color
CargoWagon.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
CargoWagon.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
CargoWagon.flags = nil

---@optional true
---@type Color
CargoWagon.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
CargoWagon.hit_visualization_box = nil

---@optional true
---@type Color
CargoWagon.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
CargoWagon.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
CargoWagon.minable = nil

---@optional true
---@type SoundType
CargoWagon.mined_sound = nil

---@optional true
---@type SoundType
CargoWagon.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
CargoWagon.next_upgrade = nil

---@optional true
---@type SoundType
CargoWagon.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
CargoWagon.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
CargoWagon.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
CargoWagon.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
CargoWagon.remove_decoratives = nil

---@optional true
---@type SoundType
CargoWagon.rotated_sound = nil

---@default true
---@optional true
---@type bool
CargoWagon.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
CargoWagon.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
CargoWagon.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
CargoWagon.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
CargoWagon.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
CargoWagon.subgroup = nil

---@optional true
---@type uint32
CargoWagon.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
CargoWagon.tile_width = nil

---@optional true
---@type TriggerTargetMask
CargoWagon.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
CargoWagon.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
CargoWagon.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
CargoWagon.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
CargoWagon.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
CargoWagon.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
CargoWagon.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
CargoWagon.order = nil

---Path to the icon file.
---@optional true
---@type FileName
CargoWagon.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
CargoWagon.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
CargoWagon.icon_size = nil

---@default 0
---@optional true
---@type uint8
CargoWagon.icon_mipmaps = nil

---A <a href="/Power_switch" title="Power switch">power switch</a>.
---@class PowerSwitch
local PowerSwitch = {}

---@optional false
---@type WireConnectionPoint
PowerSwitch.circuit_wire_connection_point = nil

---@optional false
---@type SpriteType
PowerSwitch.led_off = nil

---@optional false
---@type SpriteType
PowerSwitch.led_on = nil

---@optional false
---@type WireConnectionPoint
PowerSwitch.left_wire_connection_point = nil

---@optional false
---@type AnimationType
PowerSwitch.overlay_loop = nil

---@optional false
---@type AnimationType
PowerSwitch.overlay_start = nil

---@optional false
---@type uint8
PowerSwitch.overlay_start_delay = nil

---@optional false
---@type AnimationType
PowerSwitch.power_on_animation = nil

---@optional false
---@type WireConnectionPoint
PowerSwitch.right_wire_connection_point = nil

---@default true
---@optional true
---@type bool
PowerSwitch.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
PowerSwitch.draw_copper_wires = nil

---@default 0
---@optional true
---@type double
PowerSwitch.wire_max_distance = nil

---@default true
---@optional true
---@type bool
PowerSwitch.alert_when_damaged = nil

---@optional true
---@type AttackReaction
PowerSwitch.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
PowerSwitch.corpse = nil

---@default true
---@optional true
---@type bool
PowerSwitch.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
PowerSwitch.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
PowerSwitch.dying_explosion = nil

---@optional true
---@type TriggerEffect
PowerSwitch.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
PowerSwitch.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
PowerSwitch.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
PowerSwitch.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
PowerSwitch.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
PowerSwitch.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
PowerSwitch.max_health = nil

---@default false
---@optional true
---@type bool
PowerSwitch.random_corpse_variation = nil

---@optional true
---@type SoundType
PowerSwitch.repair_sound = nil

---@default 1
---@optional true
---@type float
PowerSwitch.repair_speed_modifier = nil

---@optional true
---@type Resistances
PowerSwitch.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
PowerSwitch.additional_pastable_entities = nil

---@optional true
---@type float
PowerSwitch.alert_icon_scale = nil

---@optional true
---@type vector
PowerSwitch.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
PowerSwitch.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
PowerSwitch.autoplace = nil

---@default 0
---@optional true
---@type double
PowerSwitch.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
PowerSwitch.build_sound = nil

---@optional true
---@type SoundType
PowerSwitch.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
PowerSwitch.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
PowerSwitch.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
PowerSwitch.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
PowerSwitch.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
PowerSwitch.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
PowerSwitch.emissions_per_second = nil

---@optional true
---@type Color
PowerSwitch.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
PowerSwitch.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
PowerSwitch.flags = nil

---@optional true
---@type Color
PowerSwitch.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
PowerSwitch.hit_visualization_box = nil

---@optional true
---@type Color
PowerSwitch.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
PowerSwitch.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
PowerSwitch.minable = nil

---@optional true
---@type SoundType
PowerSwitch.mined_sound = nil

---@optional true
---@type SoundType
PowerSwitch.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
PowerSwitch.next_upgrade = nil

---@optional true
---@type SoundType
PowerSwitch.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
PowerSwitch.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
PowerSwitch.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
PowerSwitch.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
PowerSwitch.remove_decoratives = nil

---@optional true
---@type SoundType
PowerSwitch.rotated_sound = nil

---@default true
---@optional true
---@type bool
PowerSwitch.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
PowerSwitch.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
PowerSwitch.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
PowerSwitch.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
PowerSwitch.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
PowerSwitch.subgroup = nil

---@optional true
---@type uint32
PowerSwitch.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
PowerSwitch.tile_width = nil

---@optional true
---@type TriggerTargetMask
PowerSwitch.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
PowerSwitch.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
PowerSwitch.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
PowerSwitch.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
PowerSwitch.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
PowerSwitch.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
PowerSwitch.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
PowerSwitch.order = nil

---Path to the icon file.
---@optional true
---@type FileName
PowerSwitch.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
PowerSwitch.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
PowerSwitch.icon_size = nil

---@default 0
---@optional true
---@type uint8
PowerSwitch.icon_mipmaps = nil

---A <a href="/Pipe_to_ground" title="Pipe to ground">pipe to ground</a>.
---@class PipeToGround
local PipeToGround = {}

---@optional false
---@type FluidBox
PipeToGround.fluid_box = nil

---@optional false
---@type PipeToGroundPictures
PipeToGround.pictures = nil

---Causes fluid icon to always be drawn, ignoring the usual pair requirement.
---@default false
---@optional true
---@type bool
PipeToGround.draw_fluid_icon_override = nil

---@default true
---@optional true
---@type bool
PipeToGround.alert_when_damaged = nil

---@optional true
---@type AttackReaction
PipeToGround.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
PipeToGround.corpse = nil

---@default true
---@optional true
---@type bool
PipeToGround.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
PipeToGround.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
PipeToGround.dying_explosion = nil

---@optional true
---@type TriggerEffect
PipeToGround.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
PipeToGround.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
PipeToGround.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
PipeToGround.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
PipeToGround.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
PipeToGround.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
PipeToGround.max_health = nil

---@default false
---@optional true
---@type bool
PipeToGround.random_corpse_variation = nil

---@optional true
---@type SoundType
PipeToGround.repair_sound = nil

---@default 1
---@optional true
---@type float
PipeToGround.repair_speed_modifier = nil

---@optional true
---@type Resistances
PipeToGround.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
PipeToGround.additional_pastable_entities = nil

---@optional true
---@type float
PipeToGround.alert_icon_scale = nil

---@optional true
---@type vector
PipeToGround.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
PipeToGround.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
PipeToGround.autoplace = nil

---@default 0
---@optional true
---@type double
PipeToGround.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
PipeToGround.build_sound = nil

---@optional true
---@type SoundType
PipeToGround.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
PipeToGround.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
PipeToGround.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
PipeToGround.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
PipeToGround.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
PipeToGround.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
PipeToGround.emissions_per_second = nil

---@optional true
---@type Color
PipeToGround.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
PipeToGround.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
PipeToGround.flags = nil

---@optional true
---@type Color
PipeToGround.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
PipeToGround.hit_visualization_box = nil

---@optional true
---@type Color
PipeToGround.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
PipeToGround.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
PipeToGround.minable = nil

---@optional true
---@type SoundType
PipeToGround.mined_sound = nil

---@optional true
---@type SoundType
PipeToGround.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
PipeToGround.next_upgrade = nil

---@optional true
---@type SoundType
PipeToGround.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
PipeToGround.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
PipeToGround.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
PipeToGround.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
PipeToGround.remove_decoratives = nil

---@optional true
---@type SoundType
PipeToGround.rotated_sound = nil

---@default true
---@optional true
---@type bool
PipeToGround.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
PipeToGround.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
PipeToGround.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
PipeToGround.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
PipeToGround.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
PipeToGround.subgroup = nil

---@optional true
---@type uint32
PipeToGround.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
PipeToGround.tile_width = nil

---@optional true
---@type TriggerTargetMask
PipeToGround.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
PipeToGround.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
PipeToGround.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
PipeToGround.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
PipeToGround.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
PipeToGround.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
PipeToGround.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
PipeToGround.order = nil

---Path to the icon file.
---@optional true
---@type FileName
PipeToGround.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
PipeToGround.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
PipeToGround.icon_size = nil

---@default 0
---@optional true
---@type uint8
PipeToGround.icon_mipmaps = nil

---A generic container, such as a chest. Can not be rotated.
---@class Container
local Container = {}

---The number of slots in this container.
---@optional false
---@type uint16
Container.inventory_size = nil

---The picture displayed for this entity.
---@optional false
---@type SpriteType
Container.picture = nil

---The pictures displayed for circuit connections to this container.
---@optional true
---@type CircuitConnectorSprites
Container.circuit_connector_sprites = nil

---Defines how wires visually connect to this container.
---@optional true
---@type WireConnectionPoint
Container.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this container.
---@default 0
---@optional true
---@type double
Container.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
Container.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Container.draw_copper_wires = nil

---If the red inventory limiter bar is enabled.
---@default true
---@optional true
---@type bool
Container.enable_inventory_bar = nil

---If the icons of items shown in alt-mode should be scaled to the containers size.
---@default false
---@optional true
---@type bool
Container.scale_info_icons = nil

---@default true
---@optional true
---@type bool
Container.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Container.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Container.corpse = nil

---@default true
---@optional true
---@type bool
Container.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Container.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Container.dying_explosion = nil

---@optional true
---@type TriggerEffect
Container.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Container.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Container.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Container.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Container.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Container.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Container.max_health = nil

---@default false
---@optional true
---@type bool
Container.random_corpse_variation = nil

---@optional true
---@type SoundType
Container.repair_sound = nil

---@default 1
---@optional true
---@type float
Container.repair_speed_modifier = nil

---@optional true
---@type Resistances
Container.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Container.additional_pastable_entities = nil

---@optional true
---@type float
Container.alert_icon_scale = nil

---@optional true
---@type vector
Container.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Container.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Container.autoplace = nil

---@default 0
---@optional true
---@type double
Container.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Container.build_sound = nil

---@optional true
---@type SoundType
Container.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Container.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Container.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Container.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Container.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Container.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Container.emissions_per_second = nil

---@optional true
---@type Color
Container.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Container.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Container.flags = nil

---@optional true
---@type Color
Container.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Container.hit_visualization_box = nil

---@optional true
---@type Color
Container.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Container.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Container.minable = nil

---@optional true
---@type SoundType
Container.mined_sound = nil

---@optional true
---@type SoundType
Container.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Container.next_upgrade = nil

---@optional true
---@type SoundType
Container.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Container.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Container.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Container.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Container.remove_decoratives = nil

---@optional true
---@type SoundType
Container.rotated_sound = nil

---@default true
---@optional true
---@type bool
Container.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Container.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Container.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Container.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Container.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Container.subgroup = nil

---@optional true
---@type uint32
Container.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Container.tile_width = nil

---@optional true
---@type TriggerTargetMask
Container.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Container.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Container.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Container.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Container.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Container.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Container.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Container.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Container.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Container.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Container.icon_size = nil

---@default 0
---@optional true
---@type uint8
Container.icon_mipmaps = nil

---A <a href="/Solar_panel" title="Solar panel">solar panel</a>.
---@class SolarPanel
local SolarPanel = {}

---Sets how this solar panel connects to the energy network. The most relevant property seems to be the output_priority. Has to be an electric energy source.
---@optional false
---@type EnergySource
SolarPanel.energy_source = nil

---The picture displayed for this solar panel.
---@optional false
---@type SpriteVariations
SolarPanel.picture = nil

---The maximum amount of power this solar panel can produce.
---@optional false
---@type Energy
SolarPanel.production = nil

---Overlay has to be empty or have same number of variations as picture.
---@optional true
---@type SpriteVariations
SolarPanel.overlay = nil

---@default true
---@optional true
---@type bool
SolarPanel.alert_when_damaged = nil

---@optional true
---@type AttackReaction
SolarPanel.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
SolarPanel.corpse = nil

---@default true
---@optional true
---@type bool
SolarPanel.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
SolarPanel.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
SolarPanel.dying_explosion = nil

---@optional true
---@type TriggerEffect
SolarPanel.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
SolarPanel.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
SolarPanel.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
SolarPanel.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
SolarPanel.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
SolarPanel.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
SolarPanel.max_health = nil

---@default false
---@optional true
---@type bool
SolarPanel.random_corpse_variation = nil

---@optional true
---@type SoundType
SolarPanel.repair_sound = nil

---@default 1
---@optional true
---@type float
SolarPanel.repair_speed_modifier = nil

---@optional true
---@type Resistances
SolarPanel.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SolarPanel.additional_pastable_entities = nil

---@optional true
---@type float
SolarPanel.alert_icon_scale = nil

---@optional true
---@type vector
SolarPanel.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SolarPanel.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SolarPanel.autoplace = nil

---@default 0
---@optional true
---@type double
SolarPanel.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SolarPanel.build_sound = nil

---@optional true
---@type SoundType
SolarPanel.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SolarPanel.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SolarPanel.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SolarPanel.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SolarPanel.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SolarPanel.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SolarPanel.emissions_per_second = nil

---@optional true
---@type Color
SolarPanel.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SolarPanel.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SolarPanel.flags = nil

---@optional true
---@type Color
SolarPanel.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SolarPanel.hit_visualization_box = nil

---@optional true
---@type Color
SolarPanel.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SolarPanel.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SolarPanel.minable = nil

---@optional true
---@type SoundType
SolarPanel.mined_sound = nil

---@optional true
---@type SoundType
SolarPanel.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SolarPanel.next_upgrade = nil

---@optional true
---@type SoundType
SolarPanel.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SolarPanel.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SolarPanel.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SolarPanel.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SolarPanel.remove_decoratives = nil

---@optional true
---@type SoundType
SolarPanel.rotated_sound = nil

---@default true
---@optional true
---@type bool
SolarPanel.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SolarPanel.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SolarPanel.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SolarPanel.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SolarPanel.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SolarPanel.subgroup = nil

---@optional true
---@type uint32
SolarPanel.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SolarPanel.tile_width = nil

---@optional true
---@type TriggerTargetMask
SolarPanel.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SolarPanel.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SolarPanel.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SolarPanel.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SolarPanel.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SolarPanel.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SolarPanel.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SolarPanel.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SolarPanel.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SolarPanel.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SolarPanel.icon_size = nil

---@default 0
---@optional true
---@type uint8
SolarPanel.icon_mipmaps = nil

---Used by <a href="/Discharge_defense" title="Discharge defense">discharge defense</a>.
---@class ActiveDefenseEquipment
local ActiveDefenseEquipment = {}

---@optional false
---@type AttackParameters
ActiveDefenseEquipment.attack_parameters = nil

---If false, the equipment must have an <code>ability_icon</code> specified.
---@optional false
---@type bool
ActiveDefenseEquipment.automatic = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
ActiveDefenseEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
ActiveDefenseEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
ActiveDefenseEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
ActiveDefenseEquipment.sprite = nil

---@optional true
---@type SpriteType
ActiveDefenseEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
ActiveDefenseEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
ActiveDefenseEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
ActiveDefenseEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
ActiveDefenseEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ActiveDefenseEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ActiveDefenseEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ActiveDefenseEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ActiveDefenseEquipment.order = nil

---This prototype definition is used for receiving an achievement when the player destroys a certain amount of an entity, with a specific damage type.
---@class KillAchievement
local KillAchievement = {}

---This is the amount of entity of the specified type the player needs to destroy to receive the achievement.
---@default 1
---@optional true
---@type uint32
KillAchievement.amount = nil

---This defines how the player needs to destroy the specific entity.
---@optional true
---@type string
KillAchievement.damage_type = nil

---This defines if the player needs to be in a vehicle.
---@default false
---@optional true
---@type bool
KillAchievement.in_vehicle = nil

---This defines to make sure you are the one driving, for instance, in a tank rather than an automated train.
---@default false
---@optional true
---@type bool
KillAchievement.personally = nil

---This defines which entity (by name) needs to be destroyed in order to receive the achievement.
---@optional true
---@type string
KillAchievement.to_kill = nil

---This defines what entity type needs to be destroyed in order to receive the achievement.
---@optional true
---@type string
KillAchievement.type_to_kill = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
KillAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
KillAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
KillAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
KillAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
KillAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
KillAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
KillAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
KillAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
KillAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
KillAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
KillAchievement.icon_mipmaps = nil

---A <a href="/Lamp" title="Lamp">lamp</a> to provide light, using energy.
---@class Lamp
local Lamp = {}

---Must be an electric or void energy source. The emissions set on the energy source are ignored so lamps cannot produce pollution.
---@optional false
---@type EnergySource
Lamp.energy_source = nil

---The amount of energy the lamp uses. Must be greater than > 0.
---@optional false
---@type Energy
Lamp.energy_usage_per_tick = nil

---The lamps graphics when it's off.
---@optional false
---@type SpriteType
Lamp.picture_off = nil

---The lamps graphics when it's on.
---@optional false
---@type SpriteType
Lamp.picture_on = nil

---Whether the lamp should always be on.
---@default false
---@optional true
---@type bool
Lamp.always_on = nil

---The pictures displayed for circuit connections to this lamp.
---@optional true
---@type CircuitConnectorSprites
Lamp.circuit_connector_sprites = nil

---Defines how wires visually connect to this lamp.
---@optional true
---@type WireConnectionPoint
Lamp.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
Lamp.circuit_wire_max_distance = nil

---darkness_for_all_lamps_on must be > darkness_for_all_lamps_off. Values must be between 0 and 1.
---@default 0.5
---@optional true
---@type float
Lamp.darkness_for_all_lamps_off = nil

---darkness_for_all_lamps_on must be > darkness_for_all_lamps_off. Values must be between 0 and 1.
---@default 0
---@optional true
---@type float
Lamp.darkness_for_all_lamps_on = nil

---@default true
---@optional true
---@type bool
Lamp.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Lamp.draw_copper_wires = nil

---@default 0
---@optional true
---@type float
Lamp.glow_color_intensity = nil

---@default additive
---@optional true
---@type LampGlowRenderMode
Lamp.glow_render_mode = nil

---@default 0
---@optional true
---@type float
Lamp.glow_size = nil

---What color the lamp will be when it is on, and receiving power.
---@optional true
---@type LightDefinition
Lamp.light = nil

---This refers to when the light is in a circuit network, and is lit a certain color based on a Circuit value.
---@optional true
---@type LightDefinition
Lamp.light_when_colored = nil

---@optional true
---@type SignalColorMapping[]
Lamp.signal_to_color_mapping = nil

---@default true
---@optional true
---@type bool
Lamp.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Lamp.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Lamp.corpse = nil

---@default true
---@optional true
---@type bool
Lamp.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Lamp.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Lamp.dying_explosion = nil

---@optional true
---@type TriggerEffect
Lamp.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Lamp.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Lamp.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Lamp.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Lamp.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Lamp.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Lamp.max_health = nil

---@default false
---@optional true
---@type bool
Lamp.random_corpse_variation = nil

---@optional true
---@type SoundType
Lamp.repair_sound = nil

---@default 1
---@optional true
---@type float
Lamp.repair_speed_modifier = nil

---@optional true
---@type Resistances
Lamp.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Lamp.additional_pastable_entities = nil

---@optional true
---@type float
Lamp.alert_icon_scale = nil

---@optional true
---@type vector
Lamp.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Lamp.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Lamp.autoplace = nil

---@default 0
---@optional true
---@type double
Lamp.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Lamp.build_sound = nil

---@optional true
---@type SoundType
Lamp.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Lamp.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Lamp.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Lamp.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Lamp.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Lamp.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Lamp.emissions_per_second = nil

---@optional true
---@type Color
Lamp.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Lamp.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Lamp.flags = nil

---@optional true
---@type Color
Lamp.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Lamp.hit_visualization_box = nil

---@optional true
---@type Color
Lamp.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Lamp.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Lamp.minable = nil

---@optional true
---@type SoundType
Lamp.mined_sound = nil

---@optional true
---@type SoundType
Lamp.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Lamp.next_upgrade = nil

---@optional true
---@type SoundType
Lamp.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Lamp.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Lamp.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Lamp.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Lamp.remove_decoratives = nil

---@optional true
---@type SoundType
Lamp.rotated_sound = nil

---@default true
---@optional true
---@type bool
Lamp.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Lamp.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Lamp.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Lamp.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Lamp.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Lamp.subgroup = nil

---@optional true
---@type uint32
Lamp.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Lamp.tile_width = nil

---@optional true
---@type TriggerTargetMask
Lamp.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Lamp.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Lamp.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Lamp.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Lamp.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Lamp.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Lamp.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Lamp.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Lamp.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Lamp.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Lamp.icon_size = nil

---@default 0
---@optional true
---@type uint8
Lamp.icon_mipmaps = nil

---A <a href="/Boiler" title="Boiler">boiler</a>.
---@class Boiler
local Boiler = {}

---<p>Controls for how long the boiler will show the fire and fire_glow after the energy source runs out of energy.</p><p>Note that fire and fire_glow alpha is set to the light intensity of the energy source, so 0 light intensity means the fire is invisible. For burner energy sources, the light intensity will reach zero rather quickly after the boiler runs out of fuel, effectively capping the time that fire and fire_glow will be shown after the boiler runs out of fuel.</p>
---@optional false
---@type uint32
Boiler.burning_cooldown = nil

---@optional false
---@type Energy
Boiler.energy_consumption = nil

---@optional false
---@type EnergySource
Boiler.energy_source = nil

---This means the table itself is required, but can be empty.
---@optional false
---@type AnimationSidesOptional
Boiler.fire = nil

---This means the table itself is required, but can be empty.
---@optional false
---@type AnimationSidesOptional
Boiler.fire_glow = nil

---@optional false
---@type FluidBox
Boiler.fluid_box = nil

---@optional false
---@type FluidBox
Boiler.output_fluid_box = nil

---@optional false
---@type AnimationSidesMandatory
Boiler.structure = nil

---@optional false
---@type double
Boiler.target_temperature = nil

---@default false
---@optional true
---@type bool
Boiler.fire_flicker_enabled = nil

---@default false
---@optional true
---@type bool
Boiler.fire_glow_flicker_enabled = nil

---@default heat-water-inside
---@optional true
---@type BoilerMode
Boiler.mode = nil

---@optional true
---@type BoilerPatch
Boiler.patch = nil

---@default true
---@optional true
---@type bool
Boiler.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Boiler.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Boiler.corpse = nil

---@default true
---@optional true
---@type bool
Boiler.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Boiler.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Boiler.dying_explosion = nil

---@optional true
---@type TriggerEffect
Boiler.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Boiler.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Boiler.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Boiler.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Boiler.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Boiler.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Boiler.max_health = nil

---@default false
---@optional true
---@type bool
Boiler.random_corpse_variation = nil

---@optional true
---@type SoundType
Boiler.repair_sound = nil

---@default 1
---@optional true
---@type float
Boiler.repair_speed_modifier = nil

---@optional true
---@type Resistances
Boiler.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Boiler.additional_pastable_entities = nil

---@optional true
---@type float
Boiler.alert_icon_scale = nil

---@optional true
---@type vector
Boiler.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Boiler.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Boiler.autoplace = nil

---@default 0
---@optional true
---@type double
Boiler.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Boiler.build_sound = nil

---@optional true
---@type SoundType
Boiler.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Boiler.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Boiler.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Boiler.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Boiler.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Boiler.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Boiler.emissions_per_second = nil

---@optional true
---@type Color
Boiler.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Boiler.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Boiler.flags = nil

---@optional true
---@type Color
Boiler.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Boiler.hit_visualization_box = nil

---@optional true
---@type Color
Boiler.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Boiler.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Boiler.minable = nil

---@optional true
---@type SoundType
Boiler.mined_sound = nil

---@optional true
---@type SoundType
Boiler.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Boiler.next_upgrade = nil

---@optional true
---@type SoundType
Boiler.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Boiler.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Boiler.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Boiler.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Boiler.remove_decoratives = nil

---@optional true
---@type SoundType
Boiler.rotated_sound = nil

---@default true
---@optional true
---@type bool
Boiler.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Boiler.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Boiler.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Boiler.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Boiler.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Boiler.subgroup = nil

---@optional true
---@type uint32
Boiler.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Boiler.tile_width = nil

---@optional true
---@type TriggerTargetMask
Boiler.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Boiler.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Boiler.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Boiler.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Boiler.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Boiler.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Boiler.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Boiler.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Boiler.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Boiler.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Boiler.icon_size = nil

---@default 0
---@optional true
---@type uint8
Boiler.icon_mipmaps = nil

---The common properties of logistic and construction robots represented by an abstract prototype.
---@class RobotWithLogisticInterface
local RobotWithLogisticInterface = {}

---@optional false
---@type vector
RobotWithLogisticInterface.cargo_centered = nil

---@optional false
---@type ItemCountType
RobotWithLogisticInterface.max_payload_size = nil

---@default true
---@optional true
---@type bool
RobotWithLogisticInterface.draw_cargo = nil

---@optional true
---@type RotatedAnimation
RobotWithLogisticInterface.idle = nil

---@optional true
---@type RotatedAnimation
RobotWithLogisticInterface.in_motion = nil

---@optional true
---@type RotatedAnimation
RobotWithLogisticInterface.shadow_idle = nil

---@optional true
---@type RotatedAnimation
RobotWithLogisticInterface.shadow_in_motion = nil

---@optional false
---@type double
RobotWithLogisticInterface.speed = nil

---How much does it cost to move 1 meter.
---@default 0
---@optional true
---@type Energy
RobotWithLogisticInterface.energy_per_move = nil

---@default 0
---@optional true
---@type Energy
RobotWithLogisticInterface.energy_per_tick = nil

---How much energy can be stored in the batteries.
---@default 0
---@optional true
---@type Energy
RobotWithLogisticInterface.max_energy = nil

---The maximum speed of the robot. Useful to limit the impact of <a href="/Worker_robot_speed_(research)" title="Worker robot speed (research)">worker robot speed (research)</a>.
---@optional true
---@type double
RobotWithLogisticInterface.max_speed = nil

---The robot will never go to charge when it has more energy than this.
---@default 0.95
---@optional true
---@type float
RobotWithLogisticInterface.max_to_charge = nil

---The robot will always go to charge when it has less energy than this.
---@default 0.2
---@optional true
---@type float
RobotWithLogisticInterface.min_to_charge = nil

---Some robots simply crash, some slowdown but keep going. 0 means crash.
---@default 0
---@optional true
---@type float
RobotWithLogisticInterface.speed_multiplier_when_out_of_energy = nil

---@default true
---@optional true
---@type bool
RobotWithLogisticInterface.alert_when_damaged = nil

---@optional true
---@type AttackReaction
RobotWithLogisticInterface.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
RobotWithLogisticInterface.corpse = nil

---@default true
---@optional true
---@type bool
RobotWithLogisticInterface.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
RobotWithLogisticInterface.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
RobotWithLogisticInterface.dying_explosion = nil

---@optional true
---@type TriggerEffect
RobotWithLogisticInterface.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
RobotWithLogisticInterface.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
RobotWithLogisticInterface.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
RobotWithLogisticInterface.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
RobotWithLogisticInterface.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
RobotWithLogisticInterface.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
RobotWithLogisticInterface.max_health = nil

---@default false
---@optional true
---@type bool
RobotWithLogisticInterface.random_corpse_variation = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.repair_sound = nil

---@default 1
---@optional true
---@type float
RobotWithLogisticInterface.repair_speed_modifier = nil

---@optional true
---@type Resistances
RobotWithLogisticInterface.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RobotWithLogisticInterface.additional_pastable_entities = nil

---@optional true
---@type float
RobotWithLogisticInterface.alert_icon_scale = nil

---@optional true
---@type vector
RobotWithLogisticInterface.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RobotWithLogisticInterface.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RobotWithLogisticInterface.autoplace = nil

---@default 0
---@optional true
---@type double
RobotWithLogisticInterface.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.build_sound = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RobotWithLogisticInterface.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RobotWithLogisticInterface.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RobotWithLogisticInterface.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RobotWithLogisticInterface.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RobotWithLogisticInterface.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RobotWithLogisticInterface.emissions_per_second = nil

---@optional true
---@type Color
RobotWithLogisticInterface.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RobotWithLogisticInterface.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RobotWithLogisticInterface.flags = nil

---@optional true
---@type Color
RobotWithLogisticInterface.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RobotWithLogisticInterface.hit_visualization_box = nil

---@optional true
---@type Color
RobotWithLogisticInterface.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RobotWithLogisticInterface.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RobotWithLogisticInterface.minable = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.mined_sound = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RobotWithLogisticInterface.next_upgrade = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RobotWithLogisticInterface.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RobotWithLogisticInterface.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RobotWithLogisticInterface.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RobotWithLogisticInterface.remove_decoratives = nil

---@optional true
---@type SoundType
RobotWithLogisticInterface.rotated_sound = nil

---@default true
---@optional true
---@type bool
RobotWithLogisticInterface.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RobotWithLogisticInterface.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RobotWithLogisticInterface.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RobotWithLogisticInterface.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RobotWithLogisticInterface.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RobotWithLogisticInterface.subgroup = nil

---@optional true
---@type uint32
RobotWithLogisticInterface.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RobotWithLogisticInterface.tile_width = nil

---@optional true
---@type TriggerTargetMask
RobotWithLogisticInterface.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RobotWithLogisticInterface.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RobotWithLogisticInterface.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RobotWithLogisticInterface.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RobotWithLogisticInterface.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RobotWithLogisticInterface.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RobotWithLogisticInterface.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RobotWithLogisticInterface.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RobotWithLogisticInterface.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RobotWithLogisticInterface.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RobotWithLogisticInterface.icon_size = nil

---@default 0
---@optional true
---@type uint8
RobotWithLogisticInterface.icon_mipmaps = nil

---A <a href="/Logistic_robot" title="Logistic robot">logistic robot</a>.
---@class LogisticRobot
local LogisticRobot = {}

---@optional true
---@type RotatedAnimation
LogisticRobot.idle_with_cargo = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.in_motion_with_cargo = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.shadow_idle_with_cargo = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.shadow_in_motion_with_cargo = nil

---@optional false
---@type vector
LogisticRobot.cargo_centered = nil

---@optional false
---@type ItemCountType
LogisticRobot.max_payload_size = nil

---@default true
---@optional true
---@type bool
LogisticRobot.draw_cargo = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.idle = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.in_motion = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.shadow_idle = nil

---@optional true
---@type RotatedAnimation
LogisticRobot.shadow_in_motion = nil

---@optional false
---@type double
LogisticRobot.speed = nil

---How much does it cost to move 1 meter.
---@default 0
---@optional true
---@type Energy
LogisticRobot.energy_per_move = nil

---@default 0
---@optional true
---@type Energy
LogisticRobot.energy_per_tick = nil

---How much energy can be stored in the batteries.
---@default 0
---@optional true
---@type Energy
LogisticRobot.max_energy = nil

---The maximum speed of the robot. Useful to limit the impact of <a href="/Worker_robot_speed_(research)" title="Worker robot speed (research)">worker robot speed (research)</a>.
---@optional true
---@type double
LogisticRobot.max_speed = nil

---The robot will never go to charge when it has more energy than this.
---@default 0.95
---@optional true
---@type float
LogisticRobot.max_to_charge = nil

---The robot will always go to charge when it has less energy than this.
---@default 0.2
---@optional true
---@type float
LogisticRobot.min_to_charge = nil

---Some robots simply crash, some slowdown but keep going. 0 means crash.
---@default 0
---@optional true
---@type float
LogisticRobot.speed_multiplier_when_out_of_energy = nil

---@default true
---@optional true
---@type bool
LogisticRobot.alert_when_damaged = nil

---@optional true
---@type AttackReaction
LogisticRobot.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
LogisticRobot.corpse = nil

---@default true
---@optional true
---@type bool
LogisticRobot.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
LogisticRobot.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
LogisticRobot.dying_explosion = nil

---@optional true
---@type TriggerEffect
LogisticRobot.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
LogisticRobot.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
LogisticRobot.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
LogisticRobot.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
LogisticRobot.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
LogisticRobot.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
LogisticRobot.max_health = nil

---@default false
---@optional true
---@type bool
LogisticRobot.random_corpse_variation = nil

---@optional true
---@type SoundType
LogisticRobot.repair_sound = nil

---@default 1
---@optional true
---@type float
LogisticRobot.repair_speed_modifier = nil

---@optional true
---@type Resistances
LogisticRobot.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
LogisticRobot.additional_pastable_entities = nil

---@optional true
---@type float
LogisticRobot.alert_icon_scale = nil

---@optional true
---@type vector
LogisticRobot.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
LogisticRobot.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
LogisticRobot.autoplace = nil

---@default 0
---@optional true
---@type double
LogisticRobot.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
LogisticRobot.build_sound = nil

---@optional true
---@type SoundType
LogisticRobot.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
LogisticRobot.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
LogisticRobot.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
LogisticRobot.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
LogisticRobot.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
LogisticRobot.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
LogisticRobot.emissions_per_second = nil

---@optional true
---@type Color
LogisticRobot.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
LogisticRobot.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
LogisticRobot.flags = nil

---@optional true
---@type Color
LogisticRobot.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
LogisticRobot.hit_visualization_box = nil

---@optional true
---@type Color
LogisticRobot.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
LogisticRobot.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
LogisticRobot.minable = nil

---@optional true
---@type SoundType
LogisticRobot.mined_sound = nil

---@optional true
---@type SoundType
LogisticRobot.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
LogisticRobot.next_upgrade = nil

---@optional true
---@type SoundType
LogisticRobot.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
LogisticRobot.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
LogisticRobot.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
LogisticRobot.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
LogisticRobot.remove_decoratives = nil

---@optional true
---@type SoundType
LogisticRobot.rotated_sound = nil

---@default true
---@optional true
---@type bool
LogisticRobot.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
LogisticRobot.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
LogisticRobot.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
LogisticRobot.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
LogisticRobot.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
LogisticRobot.subgroup = nil

---@optional true
---@type uint32
LogisticRobot.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
LogisticRobot.tile_width = nil

---@optional true
---@type TriggerTargetMask
LogisticRobot.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
LogisticRobot.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
LogisticRobot.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
LogisticRobot.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
LogisticRobot.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
LogisticRobot.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
LogisticRobot.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
LogisticRobot.order = nil

---Path to the icon file.
---@optional true
---@type FileName
LogisticRobot.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
LogisticRobot.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
LogisticRobot.icon_size = nil

---@default 0
---@optional true
---@type uint8
LogisticRobot.icon_mipmaps = nil

---A <a href="/Locomotive" title="Locomotive">locomotive</a>.
---@class Locomotive
local Locomotive = {}

---Must be a burner energy source when using "burner", otherwise it can also be a void energy source.
---@optional true
---@type EnergySource
Locomotive.burner = nil

---Must be a burner energy source when using "burner", otherwise it can also be a void energy source.
---@optional true
---@type EnergySource
Locomotive.energy_source = nil

---@optional false
---@type Energy
Locomotive.max_power = nil

---@optional false
---@type double
Locomotive.reversing_power_modifier = nil

---@optional true
---@type LightDefinition
Locomotive.front_light = nil

---@optional false
---@type double
Locomotive.air_resistance = nil

---The distance between the joint of this rolling stock and its connected rolling stocks joint.
---@optional false
---@type double
Locomotive.connection_distance = nil

---<p>The length between this rolling stocks front and rear joints. Joints are the point where connection_distance is measured from when rolling stock are connected to one another. Wheels sprite are placed based on the joint position.</p><p>Maximum joint distance is 15.</p><p>Note: There needs to be border at least 0.2 between the bounding box edge and joint.</p>
---@optional false
---@type double
Locomotive.joint_distance = nil

---@optional false
---@type double
Locomotive.max_speed = nil

---@optional false
---@type RotatedSprite
Locomotive.pictures = nil

---@optional false
---@type double
Locomotive.vertical_selection_shift = nil

---@default true
---@optional true
---@type bool
Locomotive.allow_manual_color = nil

---@default false
---@optional true
---@type bool
Locomotive.allow_robot_dispatch_in_automatic_mode = nil

---@optional true
---@type LightDefinition
Locomotive.back_light = nil

---@optional true
---@type Color
Locomotive.color = nil

---Usually a sound to play when the rolling stock drives over a tie.
---@optional true
---@type TriggerEffect
Locomotive.drive_over_tie_trigger = nil

---@optional true
---@type AnimationType
Locomotive.horizontal_doors = nil

---@optional true
---@type LightDefinition
Locomotive.stand_by_light = nil

---@default 10.0
---@optional true
---@type double
Locomotive.tie_distance = nil

---@optional true
---@type AnimationType
Locomotive.vertical_doors = nil

---@optional true
---@type RotatedSprite
Locomotive.wheels = nil

---@optional true
---@type double
Locomotive.braking_force = nil

---@optional true
---@type Energy
Locomotive.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
Locomotive.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
Locomotive.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
Locomotive.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
Locomotive.weight = nil

---@optional true
---@type TriggerEffect
Locomotive.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
Locomotive.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
Locomotive.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
Locomotive.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
Locomotive.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
Locomotive.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
Locomotive.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
Locomotive.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
Locomotive.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
Locomotive.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Locomotive.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Locomotive.corpse = nil

---@default true
---@optional true
---@type bool
Locomotive.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Locomotive.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Locomotive.dying_explosion = nil

---@optional true
---@type TriggerEffect
Locomotive.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Locomotive.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Locomotive.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Locomotive.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Locomotive.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Locomotive.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Locomotive.max_health = nil

---@default false
---@optional true
---@type bool
Locomotive.random_corpse_variation = nil

---@optional true
---@type SoundType
Locomotive.repair_sound = nil

---@default 1
---@optional true
---@type float
Locomotive.repair_speed_modifier = nil

---@optional true
---@type Resistances
Locomotive.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Locomotive.additional_pastable_entities = nil

---@optional true
---@type float
Locomotive.alert_icon_scale = nil

---@optional true
---@type vector
Locomotive.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Locomotive.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Locomotive.autoplace = nil

---@default 0
---@optional true
---@type double
Locomotive.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Locomotive.build_sound = nil

---@optional true
---@type SoundType
Locomotive.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Locomotive.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Locomotive.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Locomotive.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Locomotive.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Locomotive.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Locomotive.emissions_per_second = nil

---@optional true
---@type Color
Locomotive.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Locomotive.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Locomotive.flags = nil

---@optional true
---@type Color
Locomotive.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Locomotive.hit_visualization_box = nil

---@optional true
---@type Color
Locomotive.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Locomotive.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Locomotive.minable = nil

---@optional true
---@type SoundType
Locomotive.mined_sound = nil

---@optional true
---@type SoundType
Locomotive.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Locomotive.next_upgrade = nil

---@optional true
---@type SoundType
Locomotive.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Locomotive.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Locomotive.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Locomotive.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Locomotive.remove_decoratives = nil

---@optional true
---@type SoundType
Locomotive.rotated_sound = nil

---@default true
---@optional true
---@type bool
Locomotive.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Locomotive.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Locomotive.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Locomotive.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Locomotive.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Locomotive.subgroup = nil

---@optional true
---@type uint32
Locomotive.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Locomotive.tile_width = nil

---@optional true
---@type TriggerTargetMask
Locomotive.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Locomotive.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Locomotive.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Locomotive.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Locomotive.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Locomotive.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Locomotive.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Locomotive.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Locomotive.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Locomotive.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Locomotive.icon_size = nil

---@default 0
---@optional true
---@type uint8
Locomotive.icon_mipmaps = nil

---A <a href="/Programmable_speaker" title="Programmable speaker">programmable speaker</a>.
---@class ProgrammableSpeaker
local ProgrammableSpeaker = {}

---Must be an electric or void energy source.
---@optional false
---@type EnergySource
ProgrammableSpeaker.energy_source = nil

---@optional false
---@type Energy
ProgrammableSpeaker.energy_usage_per_tick = nil

---@optional false
---@type ProgrammableSpeakerInstrument[]
ProgrammableSpeaker.instruments = nil

---@optional false
---@type uint32
ProgrammableSpeaker.maximum_polyphony = nil

---@optional false
---@type SpriteType
ProgrammableSpeaker.sprite = nil

---@default 1
---@optional true
---@type float
ProgrammableSpeaker.audible_distance_modifier = nil

---@optional true
---@type CircuitConnectorSprites
ProgrammableSpeaker.circuit_connector_sprites = nil

---@optional true
---@type WireConnectionPoint
ProgrammableSpeaker.circuit_wire_connection_point = nil

---@default 0
---@optional true
---@type double
ProgrammableSpeaker.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
ProgrammableSpeaker.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
ProgrammableSpeaker.draw_copper_wires = nil

---@default true
---@optional true
---@type bool
ProgrammableSpeaker.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ProgrammableSpeaker.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ProgrammableSpeaker.corpse = nil

---@default true
---@optional true
---@type bool
ProgrammableSpeaker.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ProgrammableSpeaker.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ProgrammableSpeaker.dying_explosion = nil

---@optional true
---@type TriggerEffect
ProgrammableSpeaker.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ProgrammableSpeaker.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ProgrammableSpeaker.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ProgrammableSpeaker.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ProgrammableSpeaker.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ProgrammableSpeaker.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ProgrammableSpeaker.max_health = nil

---@default false
---@optional true
---@type bool
ProgrammableSpeaker.random_corpse_variation = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.repair_sound = nil

---@default 1
---@optional true
---@type float
ProgrammableSpeaker.repair_speed_modifier = nil

---@optional true
---@type Resistances
ProgrammableSpeaker.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ProgrammableSpeaker.additional_pastable_entities = nil

---@optional true
---@type float
ProgrammableSpeaker.alert_icon_scale = nil

---@optional true
---@type vector
ProgrammableSpeaker.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ProgrammableSpeaker.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ProgrammableSpeaker.autoplace = nil

---@default 0
---@optional true
---@type double
ProgrammableSpeaker.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.build_sound = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ProgrammableSpeaker.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ProgrammableSpeaker.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ProgrammableSpeaker.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ProgrammableSpeaker.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ProgrammableSpeaker.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ProgrammableSpeaker.emissions_per_second = nil

---@optional true
---@type Color
ProgrammableSpeaker.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ProgrammableSpeaker.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ProgrammableSpeaker.flags = nil

---@optional true
---@type Color
ProgrammableSpeaker.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ProgrammableSpeaker.hit_visualization_box = nil

---@optional true
---@type Color
ProgrammableSpeaker.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ProgrammableSpeaker.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ProgrammableSpeaker.minable = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.mined_sound = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ProgrammableSpeaker.next_upgrade = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ProgrammableSpeaker.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ProgrammableSpeaker.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ProgrammableSpeaker.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ProgrammableSpeaker.remove_decoratives = nil

---@optional true
---@type SoundType
ProgrammableSpeaker.rotated_sound = nil

---@default true
---@optional true
---@type bool
ProgrammableSpeaker.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ProgrammableSpeaker.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ProgrammableSpeaker.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ProgrammableSpeaker.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ProgrammableSpeaker.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ProgrammableSpeaker.subgroup = nil

---@optional true
---@type uint32
ProgrammableSpeaker.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ProgrammableSpeaker.tile_width = nil

---@optional true
---@type TriggerTargetMask
ProgrammableSpeaker.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ProgrammableSpeaker.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ProgrammableSpeaker.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ProgrammableSpeaker.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ProgrammableSpeaker.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ProgrammableSpeaker.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ProgrammableSpeaker.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ProgrammableSpeaker.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ProgrammableSpeaker.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ProgrammableSpeaker.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ProgrammableSpeaker.icon_size = nil

---@default 0
---@optional true
---@type uint8
ProgrammableSpeaker.icon_mipmaps = nil

---A <a href="/Blueprint_book" title="Blueprint book">blueprint book</a>.
---@class BlueprintBook
local BlueprintBook = {}

---@default true
---@optional true
---@type bool
BlueprintBook.show_in_library = nil

---The inventory size of the item.
---@optional false
---@type ItemStackIndex
BlueprintBook.inventory_size = nil

---When true, this item-with-inventory will extend the inventory it sits in by default. This is a runtime property on the result item that can be changed through the Lua interface and only determines the initial value.
---@default false
---@optional true
---@type bool
BlueprintBook.extends_inventory_by_default = nil

---The locale key used when the player attempts to put an item that doesn't match the filter rules into the item-with-inventory.
---@default item-limitation.item-not-allowed-in-this-container-item
---@optional true
---@type string
BlueprintBook.filter_message_key = nil

---This determines how filters are applied. If no filters are defined this is automatically set to "none".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
BlueprintBook.filter_mode = nil

---The insertion priority mode for this item. This determines if items are first attempted to be put into this items inventory if the item extends the inventory it sits in when items are put into the parent inventory.
---@default default
---@optional true
---@type ItemWithInventoryInsertionPriorityMode
BlueprintBook.insertion_priority_mode = nil

---A list of explicit item names to be used as filters.
---@optional true
---@type string[]
BlueprintBook.item_filters = nil

---A list of explicit item group names to be used as filters.
---@optional true
---@type string[]
BlueprintBook.item_group_filters = nil

---A list of explicit item subgroup names to be used as filters.
---@optional true
---@type string[]
BlueprintBook.item_subgroup_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
BlueprintBook.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
BlueprintBook.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
BlueprintBook.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
BlueprintBook.burnt_result = nil

---@optional true
---@type SoundType
BlueprintBook.close_sound = nil

---@optional true
---@type IconData[]
BlueprintBook.dark_background_icons = nil

---@optional true
---@type FileName
BlueprintBook.dark_background_icon = nil

---@optional true
---@type ItemCountType
BlueprintBook.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
BlueprintBook.flags = nil

---@default 1.0
---@optional true
---@type double
BlueprintBook.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
BlueprintBook.fuel_category = nil

---@default 1.0
---@optional true
---@type double
BlueprintBook.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
BlueprintBook.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
BlueprintBook.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
BlueprintBook.fuel_value = nil

---@optional true
---@type SoundType
BlueprintBook.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
BlueprintBook.pictures = nil

---@optional true
---@type PlaceAsTile
BlueprintBook.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
BlueprintBook.place_result = nil

---@optional true
---@type string
BlueprintBook.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
BlueprintBook.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
BlueprintBook.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
BlueprintBook.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
BlueprintBook.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
BlueprintBook.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
BlueprintBook.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
BlueprintBook.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
BlueprintBook.order = nil

---Path to the icon file.
---@optional true
---@type FileName
BlueprintBook.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
BlueprintBook.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
BlueprintBook.icon_size = nil

---@default 0
---@optional true
---@type uint8
BlueprintBook.icon_mipmaps = nil

---A furnace. Normal furnaces only process "smelting" category recipes, but you can make furnaces that process other <a href="/Prototype/RecipeCategory" title="Prototype/RecipeCategory">recipe categories</a>. The difference to assembling machines is that furnaces automatically choose their recipe based on input.
---@class Furnace
local Furnace = {}

---The number of output slots.
---@optional false
---@type ItemStackIndex
Furnace.result_inventory_size = nil

---The number of input slots, but not more than 1.
---@optional false
---@type ItemStackIndex
Furnace.source_inventory_size = nil

---A list of recipe categories this crafting machine can use.
---@optional false
---@type strings[]
Furnace.crafting_categories = nil

---<p>How fast this crafting machine can craft. 1 means that for example a 1 second long recipe take 1 second to craft. 0.5 means it takes 2 seconds, and 2 means it takes 0.5 seconds.</p><p>Crafting speed has to be positive.</p>
---@optional false
---@type double
Furnace.crafting_speed = nil

---<p>Defines how the crafting machine is powered.</p><p>When using an electric energy source and <code>drain</code> is not specified, it will be set to <code>energy_usage ÷ 30</code> automatically.</p>
---@optional false
---@type EnergySource
Furnace.energy_source = nil

---Sets how much energy this machine uses while crafting. Energy usage has to be positive.
---@optional false
---@type Energy
Furnace.energy_usage = nil

---Sets the module effects that are allowed to be used on this machine.
---@optional true
---@type EffectTypeLimitation
Furnace.allowed_effects = nil

---Only loaded if <code>idle_animation</code> is present.
---@default false
---@optional true
---@type bool
Furnace.always_draw_idle_animation = nil

---<p>The animation played when crafting. When the crafting machine is idle, the animation will be paused.</p><p>When a crafting machine cannot be rotated, only the north rotation of the animation will be used.</p>
---@optional true
---@type Animation4Way
Furnace.animation = nil

---Productivity bonus that this machine always has.
---@default 0
---@optional true
---@type float
Furnace.base_productivity = nil

---Each key/value pair is optional and defaults to the above value.
---@optional true
---@type TintColors
Furnace.default_recipe_tint = nil

---Whether the "alt-mode icon" should have a black background.
---@default true
---@optional true
---@type bool
Furnace.draw_entity_info_icon_background = nil

---Shift of the "alt-mode icon" relative to the machine's center.
---@optional true
---@type vector
Furnace.entity_info_icon_shift = nil

---<p>Can have off_when_no_fluid_recipe key that has a <a href="/Types/bool" title="Types/bool">bool</a> value. off_when_no_fluid_recipe defaults to false. off_when_no_fluid_recipe is ignored by <a href="/Prototype/Furnace" title="Prototype/Furnace">Prototype/Furnaces</a> and considered to always be false.</p><p>If a crafting machine has fluid boxes and off_when_no_fluid_recipe is true, the crafting machine can only be rotated when a recipe consuming or producing fluid is set, or it has one of the other properties listed at the top of the page.</p>
---@optional true
---@type FluidBox[]
Furnace.fluid_boxes = nil

---<p>Idle animation must have the same frame count as animation. It is used for drawing the machine in idle state, but the is animation frozen on a single frame when the machine is idle.</p><p>This is an animation and not just sprite to make it possible for idle state and working state to match their visuals when the machine switches from one state to another.</p><p>When a crafting machine cannot be rotated, only the north rotation of the idle animation will be used.</p>
---@optional true
---@type Animation4Way
Furnace.idle_animation = nil

---Whether the speed of the animation and working visualization should be based on the machine's speed (boosted or slowed by modules).
---@default false
---@optional true
---@type bool
Furnace.match_animation_speed_to_activity = nil

---The number of module slots in this machine, and their icon positions.
---@optional true
---@type ModuleSpecification
Furnace.module_specification = nil

---Controls whether the ingredients of an in-progress recipe are destroyed when mining the machine/changing the recipe. If set to true, the ingredients do not get destroyed. This affects only the ingredients of the recipe that is currently in progress, so those that visually have already been consumed while their resulting product has not yet been produced.
---@default true
---@optional true
---@type bool
Furnace.return_ingredients_on_change = nil

---Whether the "alt-mode icon" should be scaled to the size of the machine.
---@default false
---@optional true
---@type bool
Furnace.scale_entity_info_icon = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
Furnace.shift_animation_transition_duration = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
Furnace.shift_animation_waypoint_stop_duration = nil

---Only loaded if one of <code>shift_animation_waypoint_stop_duration</code> or <code>shift_animation_transition_duration</code> is not 0.
---@optional true
---@type CraftingMachineShiftAnimationWaypoints
Furnace.shift_animation_waypoints = nil

---Whether the "alt-mode icon" should be drawn at all.
---@default true
---@optional true
---@type bool
Furnace.show_recipe_icon = nil

---@optional true
---@type CraftingMachineStatusColors
Furnace.status_colors = nil

---@optional true
---@type WorkingVisualisation[]
Furnace.working_visualisations = nil

---@default true
---@optional true
---@type bool
Furnace.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Furnace.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Furnace.corpse = nil

---@default true
---@optional true
---@type bool
Furnace.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Furnace.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Furnace.dying_explosion = nil

---@optional true
---@type TriggerEffect
Furnace.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Furnace.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Furnace.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Furnace.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Furnace.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Furnace.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Furnace.max_health = nil

---@default false
---@optional true
---@type bool
Furnace.random_corpse_variation = nil

---@optional true
---@type SoundType
Furnace.repair_sound = nil

---@default 1
---@optional true
---@type float
Furnace.repair_speed_modifier = nil

---@optional true
---@type Resistances
Furnace.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Furnace.additional_pastable_entities = nil

---@optional true
---@type float
Furnace.alert_icon_scale = nil

---@optional true
---@type vector
Furnace.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Furnace.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Furnace.autoplace = nil

---@default 0
---@optional true
---@type double
Furnace.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Furnace.build_sound = nil

---@optional true
---@type SoundType
Furnace.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Furnace.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Furnace.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Furnace.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Furnace.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Furnace.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Furnace.emissions_per_second = nil

---@optional true
---@type Color
Furnace.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Furnace.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Furnace.flags = nil

---@optional true
---@type Color
Furnace.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Furnace.hit_visualization_box = nil

---@optional true
---@type Color
Furnace.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Furnace.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Furnace.minable = nil

---@optional true
---@type SoundType
Furnace.mined_sound = nil

---@optional true
---@type SoundType
Furnace.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Furnace.next_upgrade = nil

---@optional true
---@type SoundType
Furnace.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Furnace.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Furnace.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Furnace.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Furnace.remove_decoratives = nil

---@optional true
---@type SoundType
Furnace.rotated_sound = nil

---@default true
---@optional true
---@type bool
Furnace.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Furnace.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Furnace.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Furnace.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Furnace.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Furnace.subgroup = nil

---@optional true
---@type uint32
Furnace.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Furnace.tile_width = nil

---@optional true
---@type TriggerTargetMask
Furnace.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Furnace.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Furnace.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Furnace.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Furnace.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Furnace.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Furnace.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Furnace.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Furnace.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Furnace.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Furnace.icon_size = nil

---@default 0
---@optional true
---@type uint8
Furnace.icon_mipmaps = nil

---An <a href="/Inserter" title="Inserter">inserter</a>.
---@class Inserter
local Inserter = {}

---Defines how this inserter gets energy. The emissions set on the energy source are ignored so inserters cannot produce pollution.
---@optional false
---@type EnergySource
Inserter.energy_source = nil

---@default nul
---@optional false
---@type double
Inserter.extension_speed = nil

---@optional false
---@type SpriteType
Inserter.hand_base_picture = nil

---@optional false
---@type SpriteType
Inserter.hand_base_shadow = nil

---@optional false
---@type SpriteType
Inserter.hand_closed_picture = nil

---@optional false
---@type SpriteType
Inserter.hand_closed_shadow = nil

---@optional false
---@type SpriteType
Inserter.hand_open_picture = nil

---@optional false
---@type SpriteType
Inserter.hand_open_shadow = nil

---@optional false
---@type vector
Inserter.insert_position = nil

---@optional false
---@type vector
Inserter.pickup_position = nil

---@optional false
---@type Sprite4Way
Inserter.platform_picture = nil

---@optional false
---@type double
Inserter.rotation_speed = nil

---Whether this burner inserter can fuel itself from the fuel inventory of the entity it is picking up items from.
---@default false
---@optional true
---@type bool
Inserter.allow_burner_leech = nil

---Whether pickup and insert position can be set run-time.
---@default false
---@optional true
---@type bool
Inserter.allow_custom_vectors = nil

---Whether the inserter hand should move to the items it picks up from belts, leading to item chasing behaviour. If this is off, the inserter hand will stay in the center of the belt and any items picked up from the edges of the belt "teleport" to the inserter hand.
---@default true
---@optional true
---@type bool
Inserter.chases_belt_items = nil

---@optional true
---@type CircuitConnectorSprites[]
Inserter.circuit_connector_sprites = nil

---@optional true
---@type WireConnectionPoint[]
Inserter.circuit_wire_connection_points = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
Inserter.circuit_wire_max_distance = nil

---@optional true
---@type SignalIDConnector
Inserter.default_stack_control_input_signal = nil

---@default true
---@optional true
---@type bool
Inserter.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Inserter.draw_copper_wires = nil

---Whether the item that the inserter is holding should be drawn.
---@default true
---@optional true
---@type bool
Inserter.draw_held_item = nil

---Whether the yellow arrow that indicates the drop point of the inserter and the line that indicates the pickup position should be drawn.
---@default true
---@optional true
---@type bool
Inserter.draw_inserter_arrow = nil

---@default 0
---@optional true
---@type Energy
Inserter.energy_per_movement = nil

---@default 0
---@optional true
---@type Energy
Inserter.energy_per_rotation = nil

---How many filters this inserter has. Maximum count of filtered items in inserter is 5.
---@default 0
---@optional true
---@type uint8
Inserter.filter_count = nil

---Used to determine how long the arm of the inserter is when drawing it. Does not affect gameplay. The lower the value, the straighter the arm. Increasing the value will give the inserter a bigger bend due to its longer parts.
---@default 0.75
---@optional true
---@type double
Inserter.hand_size = nil

---Whether this inserter is considered a stack inserter. Relevant for determining how <a href="/Inserter_capacity_bonus_(research)" title="Inserter capacity bonus (research)">Inserter capacity bonus (research)</a> applies to the inserter.
---@default false
---@optional true
---@type bool
Inserter.stack = nil

--- Stack size bonus that is inherent to the prototype without having to be researched.
---@default 0
---@optional true
---@type ItemCountType
Inserter.stack_size_bonus = nil

---Whether the inserter should be able to fish <a href="/Raw_fish" title="Raw fish">fish</a>.
---@default true
---@optional true
---@type bool
Inserter.use_easter_egg = nil

---@default true
---@optional true
---@type bool
Inserter.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Inserter.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Inserter.corpse = nil

---@default true
---@optional true
---@type bool
Inserter.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Inserter.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Inserter.dying_explosion = nil

---@optional true
---@type TriggerEffect
Inserter.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Inserter.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Inserter.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Inserter.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Inserter.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Inserter.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Inserter.max_health = nil

---@default false
---@optional true
---@type bool
Inserter.random_corpse_variation = nil

---@optional true
---@type SoundType
Inserter.repair_sound = nil

---@default 1
---@optional true
---@type float
Inserter.repair_speed_modifier = nil

---@optional true
---@type Resistances
Inserter.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Inserter.additional_pastable_entities = nil

---@optional true
---@type float
Inserter.alert_icon_scale = nil

---@optional true
---@type vector
Inserter.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Inserter.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Inserter.autoplace = nil

---@default 0
---@optional true
---@type double
Inserter.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Inserter.build_sound = nil

---@optional true
---@type SoundType
Inserter.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Inserter.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Inserter.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Inserter.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Inserter.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Inserter.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Inserter.emissions_per_second = nil

---@optional true
---@type Color
Inserter.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Inserter.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Inserter.flags = nil

---@optional true
---@type Color
Inserter.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Inserter.hit_visualization_box = nil

---@optional true
---@type Color
Inserter.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Inserter.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Inserter.minable = nil

---@optional true
---@type SoundType
Inserter.mined_sound = nil

---@optional true
---@type SoundType
Inserter.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Inserter.next_upgrade = nil

---@optional true
---@type SoundType
Inserter.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Inserter.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Inserter.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Inserter.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Inserter.remove_decoratives = nil

---@optional true
---@type SoundType
Inserter.rotated_sound = nil

---@default true
---@optional true
---@type bool
Inserter.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Inserter.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Inserter.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Inserter.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Inserter.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Inserter.subgroup = nil

---@optional true
---@type uint32
Inserter.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Inserter.tile_width = nil

---@optional true
---@type TriggerTargetMask
Inserter.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Inserter.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Inserter.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Inserter.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Inserter.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Inserter.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Inserter.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Inserter.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Inserter.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Inserter.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Inserter.icon_size = nil

---@default 0
---@optional true
---@type uint8
Inserter.icon_mipmaps = nil

---A <a href="/Rail_chain_signal" title="Rail chain signal">rail chain signal</a>.
---@class RailChainSignal
local RailChainSignal = {}

---Array of 8 vectors.
---@optional false
---@type vector[]
RailChainSignal.selection_box_offsets = nil

---@optional true
---@type LightDefinition
RailChainSignal.blue_light = nil

---@optional true
---@type SignalIDConnector
RailChainSignal.default_blue_output_signal = nil

---@optional false
---@type RotatedAnimation
RailChainSignal.animation = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
RailChainSignal.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
RailChainSignal.circuit_wire_connection_points = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
RailChainSignal.circuit_wire_max_distance = nil

---@optional true
---@type SignalIDConnector
RailChainSignal.default_green_output_signal = nil

---@optional true
---@type SignalIDConnector
RailChainSignal.default_orange_output_signal = nil

---@optional true
---@type SignalIDConnector
RailChainSignal.default_red_output_signal = nil

---@default true
---@optional true
---@type bool
RailChainSignal.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
RailChainSignal.draw_copper_wires = nil

---@optional true
---@type LightDefinition
RailChainSignal.green_light = nil

---@optional true
---@type LightDefinition
RailChainSignal.orange_light = nil

---@optional true
---@type AnimationType
RailChainSignal.rail_piece = nil

---@optional true
---@type LightDefinition
RailChainSignal.red_light = nil

---@default true
---@optional true
---@type bool
RailChainSignal.alert_when_damaged = nil

---@optional true
---@type AttackReaction
RailChainSignal.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
RailChainSignal.corpse = nil

---@default true
---@optional true
---@type bool
RailChainSignal.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
RailChainSignal.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
RailChainSignal.dying_explosion = nil

---@optional true
---@type TriggerEffect
RailChainSignal.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
RailChainSignal.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
RailChainSignal.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
RailChainSignal.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
RailChainSignal.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
RailChainSignal.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
RailChainSignal.max_health = nil

---@default false
---@optional true
---@type bool
RailChainSignal.random_corpse_variation = nil

---@optional true
---@type SoundType
RailChainSignal.repair_sound = nil

---@default 1
---@optional true
---@type float
RailChainSignal.repair_speed_modifier = nil

---@optional true
---@type Resistances
RailChainSignal.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RailChainSignal.additional_pastable_entities = nil

---@optional true
---@type float
RailChainSignal.alert_icon_scale = nil

---@optional true
---@type vector
RailChainSignal.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RailChainSignal.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RailChainSignal.autoplace = nil

---@default 0
---@optional true
---@type double
RailChainSignal.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RailChainSignal.build_sound = nil

---@optional true
---@type SoundType
RailChainSignal.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RailChainSignal.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RailChainSignal.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RailChainSignal.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RailChainSignal.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RailChainSignal.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RailChainSignal.emissions_per_second = nil

---@optional true
---@type Color
RailChainSignal.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RailChainSignal.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RailChainSignal.flags = nil

---@optional true
---@type Color
RailChainSignal.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RailChainSignal.hit_visualization_box = nil

---@optional true
---@type Color
RailChainSignal.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RailChainSignal.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RailChainSignal.minable = nil

---@optional true
---@type SoundType
RailChainSignal.mined_sound = nil

---@optional true
---@type SoundType
RailChainSignal.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RailChainSignal.next_upgrade = nil

---@optional true
---@type SoundType
RailChainSignal.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RailChainSignal.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RailChainSignal.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RailChainSignal.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RailChainSignal.remove_decoratives = nil

---@optional true
---@type SoundType
RailChainSignal.rotated_sound = nil

---@default true
---@optional true
---@type bool
RailChainSignal.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RailChainSignal.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RailChainSignal.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RailChainSignal.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RailChainSignal.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RailChainSignal.subgroup = nil

---@optional true
---@type uint32
RailChainSignal.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RailChainSignal.tile_width = nil

---@optional true
---@type TriggerTargetMask
RailChainSignal.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RailChainSignal.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RailChainSignal.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RailChainSignal.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RailChainSignal.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RailChainSignal.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RailChainSignal.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RailChainSignal.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RailChainSignal.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RailChainSignal.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RailChainSignal.icon_size = nil

---@default 0
---@optional true
---@type uint8
RailChainSignal.icon_mipmaps = nil

---A turret that consumes ammo items.
---@class AmmoTurret
local AmmoTurret = {}

---@optional false
---@type ItemCountType
AmmoTurret.automated_ammo_count = nil

---@optional false
---@type ItemStackIndex
AmmoTurret.inventory_size = nil

---Shift of the "alt-mode icon" relative to the turret's position.
---@optional true
---@type vector
AmmoTurret.entity_info_icon_shift = nil

---Requires ammo_type in attack_parameters.
---@optional false
---@type AttackParameters
AmmoTurret.attack_parameters = nil

---@optional false
---@type double
AmmoTurret.call_for_help_radius = nil

---@optional false
---@type RotatedAnimation4Way
AmmoTurret.folded_animation = nil

---@default true
---@optional true
---@type bool
AmmoTurret.alert_when_attacking = nil

---@default false
---@optional true
---@type bool
AmmoTurret.allow_turning_when_starting_attack = nil

---@default false
---@optional true
---@type bool
AmmoTurret.attack_from_start_frame = nil

---@optional true
---@type TriggerTargetMask
AmmoTurret.attack_target_mask = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.attacking_animation = nil

---@default 1
---@optional true
---@type float
AmmoTurret.attacking_speed = nil

---@optional true
---@type Animation4Way
AmmoTurret.base_picture = nil

---@default lower-object
---@optional true
---@type RenderLayer
AmmoTurret.base_picture_render_layer = nil

---@default 0
---@optional true
---@type uint8
AmmoTurret.base_picture_secondary_draw_order = nil

---The name of an entity. Note that this overrides how EntityWithHealth loads the corpse, forcing it to be a string instead of an array of strings.
---@optional true
---@type string
AmmoTurret.corpse = nil

---@optional true
---@type SoundType
AmmoTurret.dying_sound = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.ending_attack_animation = nil

---@default 1
---@optional true
---@type float
AmmoTurret.ending_attack_speed = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.energy_glow_animation = nil

---@default 1
---@optional true
---@type float
AmmoTurret.folded_speed = nil

---@default 1
---@optional true
---@type float
AmmoTurret.folded_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.folding_animation = nil

---@optional true
---@type SoundType
AmmoTurret.folding_sound = nil

---@default 1
---@optional true
---@type float
AmmoTurret.folding_speed = nil

---The intensity of light in the form of <code>energy_glow_animation</code> drawn on top of <code>energy_glow_animation</code>.
---@default 0
---@optional true
---@type float
AmmoTurret.glow_light_intensity = nil

---@default object
---@optional true
---@type RenderLayer
AmmoTurret.gun_animation_render_layer = nil

---@default 0
---@optional true
---@type uint8
AmmoTurret.gun_animation_secondary_draw_order = nil

---@optional true
---@type TriggerTargetMask
AmmoTurret.ignore_target_mask = nil

---@optional true
---@type SpriteType
AmmoTurret.integration = nil

---Default: The range defined in the <code>attack_parameters</code>
---@optional true
---@type double
AmmoTurret.prepare_range = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.prepared_alternative_animation = nil

---@default 0
---@optional true
---@type float
AmmoTurret.prepared_alternative_chance = nil

---@optional true
---@type SoundType
AmmoTurret.prepared_alternative_sound = nil

---@default 1
---@optional true
---@type float
AmmoTurret.prepared_alternative_speed = nil

---@default 1
---@optional true
---@type float
AmmoTurret.prepared_alternative_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.prepared_animation = nil

---@optional true
---@type SoundType
AmmoTurret.prepared_sound = nil

---@default 1
---@optional true
---@type float
AmmoTurret.prepared_speed = nil

---@default 1
---@optional true
---@type float
AmmoTurret.prepared_speed_secondary = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.preparing_animation = nil

---@optional true
---@type SoundType
AmmoTurret.preparing_sound = nil

---@default 1
---@optional true
---@type float
AmmoTurret.preparing_speed = nil

---@default false
---@optional true
---@type bool
AmmoTurret.random_animation_offset = nil

---@default 1
---@optional true
---@type float
AmmoTurret.rotation_speed = nil

---@default false
---@optional true
---@type bool
AmmoTurret.secondary_animation = nil

---@default false
---@optional true
---@type bool
AmmoTurret.shoot_in_prepare_state = nil

---@optional true
---@type RotatedAnimation4Way
AmmoTurret.starting_attack_animation = nil

---@optional true
---@type SoundType
AmmoTurret.starting_attack_sound = nil

---@default 1
---@optional true
---@type float
AmmoTurret.starting_attack_speed = nil

---@default false
---@optional true
---@type bool
AmmoTurret.turret_base_has_direction = nil

---@default true
---@optional true
---@type bool
AmmoTurret.alert_when_damaged = nil

---@optional true
---@type AttackReaction
AmmoTurret.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
AmmoTurret.corpse = nil

---@default true
---@optional true
---@type bool
AmmoTurret.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
AmmoTurret.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
AmmoTurret.dying_explosion = nil

---@optional true
---@type TriggerEffect
AmmoTurret.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
AmmoTurret.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
AmmoTurret.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
AmmoTurret.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
AmmoTurret.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
AmmoTurret.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
AmmoTurret.max_health = nil

---@default false
---@optional true
---@type bool
AmmoTurret.random_corpse_variation = nil

---@optional true
---@type SoundType
AmmoTurret.repair_sound = nil

---@default 1
---@optional true
---@type float
AmmoTurret.repair_speed_modifier = nil

---@optional true
---@type Resistances
AmmoTurret.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
AmmoTurret.additional_pastable_entities = nil

---@optional true
---@type float
AmmoTurret.alert_icon_scale = nil

---@optional true
---@type vector
AmmoTurret.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
AmmoTurret.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
AmmoTurret.autoplace = nil

---@default 0
---@optional true
---@type double
AmmoTurret.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
AmmoTurret.build_sound = nil

---@optional true
---@type SoundType
AmmoTurret.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
AmmoTurret.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
AmmoTurret.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
AmmoTurret.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
AmmoTurret.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
AmmoTurret.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
AmmoTurret.emissions_per_second = nil

---@optional true
---@type Color
AmmoTurret.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
AmmoTurret.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
AmmoTurret.flags = nil

---@optional true
---@type Color
AmmoTurret.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
AmmoTurret.hit_visualization_box = nil

---@optional true
---@type Color
AmmoTurret.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
AmmoTurret.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
AmmoTurret.minable = nil

---@optional true
---@type SoundType
AmmoTurret.mined_sound = nil

---@optional true
---@type SoundType
AmmoTurret.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
AmmoTurret.next_upgrade = nil

---@optional true
---@type SoundType
AmmoTurret.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
AmmoTurret.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
AmmoTurret.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
AmmoTurret.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
AmmoTurret.remove_decoratives = nil

---@optional true
---@type SoundType
AmmoTurret.rotated_sound = nil

---@default true
---@optional true
---@type bool
AmmoTurret.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
AmmoTurret.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
AmmoTurret.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
AmmoTurret.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
AmmoTurret.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
AmmoTurret.subgroup = nil

---@optional true
---@type uint32
AmmoTurret.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
AmmoTurret.tile_width = nil

---@optional true
---@type TriggerTargetMask
AmmoTurret.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
AmmoTurret.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
AmmoTurret.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
AmmoTurret.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
AmmoTurret.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
AmmoTurret.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
AmmoTurret.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
AmmoTurret.order = nil

---Path to the icon file.
---@optional true
---@type FileName
AmmoTurret.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
AmmoTurret.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
AmmoTurret.icon_size = nil

---@default 0
---@optional true
---@type uint8
AmmoTurret.icon_mipmaps = nil

---An electric pole - part of the <a href="/Electric_system" title="Electric system">electric system</a>.
---@class ElectricPole
local ElectricPole = {}

---@optional false
---@type WireConnectionPoint[]
ElectricPole.connection_points = nil

---@optional false
---@type RotatedSprite
ElectricPole.pictures = nil

---<p>The "radius" of this pole's supply area. Corresponds to half of the "supply area" in the item tooltip. If this is 3.5, the pole will have a 7X7 supply area.</p><p>Max value is 64.</p>
---@optional false
---@type double
ElectricPole.supply_area_distance = nil

---@optional true
---@type SpriteType
ElectricPole.active_picture = nil

---@default true
---@optional true
---@type bool
ElectricPole.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
ElectricPole.draw_copper_wires = nil

---@optional true
---@type LightDefinition
ElectricPole.light = nil

---<p>The maximum distance between this pole and any other connected pole - if two poles are farther apart than this, they cannot be connected together directly. Corresponds to "wire reach" in the item tooltip.</p><p>Max value is 64.</p>
---@default 0
---@optional true
---@type double
ElectricPole.maximum_wire_distance = nil

---@optional true
---@type SpriteType
ElectricPole.radius_visualisation_picture = nil

---@default false
---@optional true
---@type bool
ElectricPole.track_coverage_during_build_by_moving = nil

---@default true
---@optional true
---@type bool
ElectricPole.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ElectricPole.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ElectricPole.corpse = nil

---@default true
---@optional true
---@type bool
ElectricPole.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ElectricPole.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ElectricPole.dying_explosion = nil

---@optional true
---@type TriggerEffect
ElectricPole.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ElectricPole.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ElectricPole.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ElectricPole.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ElectricPole.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ElectricPole.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ElectricPole.max_health = nil

---@default false
---@optional true
---@type bool
ElectricPole.random_corpse_variation = nil

---@optional true
---@type SoundType
ElectricPole.repair_sound = nil

---@default 1
---@optional true
---@type float
ElectricPole.repair_speed_modifier = nil

---@optional true
---@type Resistances
ElectricPole.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ElectricPole.additional_pastable_entities = nil

---@optional true
---@type float
ElectricPole.alert_icon_scale = nil

---@optional true
---@type vector
ElectricPole.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ElectricPole.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ElectricPole.autoplace = nil

---@default 0
---@optional true
---@type double
ElectricPole.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ElectricPole.build_sound = nil

---@optional true
---@type SoundType
ElectricPole.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ElectricPole.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ElectricPole.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ElectricPole.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ElectricPole.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ElectricPole.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ElectricPole.emissions_per_second = nil

---@optional true
---@type Color
ElectricPole.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ElectricPole.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ElectricPole.flags = nil

---@optional true
---@type Color
ElectricPole.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ElectricPole.hit_visualization_box = nil

---@optional true
---@type Color
ElectricPole.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ElectricPole.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ElectricPole.minable = nil

---@optional true
---@type SoundType
ElectricPole.mined_sound = nil

---@optional true
---@type SoundType
ElectricPole.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ElectricPole.next_upgrade = nil

---@optional true
---@type SoundType
ElectricPole.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ElectricPole.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ElectricPole.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ElectricPole.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ElectricPole.remove_decoratives = nil

---@optional true
---@type SoundType
ElectricPole.rotated_sound = nil

---@default true
---@optional true
---@type bool
ElectricPole.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ElectricPole.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ElectricPole.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ElectricPole.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ElectricPole.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ElectricPole.subgroup = nil

---@optional true
---@type uint32
ElectricPole.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ElectricPole.tile_width = nil

---@optional true
---@type TriggerTargetMask
ElectricPole.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ElectricPole.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ElectricPole.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ElectricPole.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ElectricPole.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ElectricPole.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ElectricPole.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ElectricPole.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ElectricPole.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ElectricPole.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ElectricPole.icon_size = nil

---@default 0
---@optional true
---@type uint8
ElectricPole.icon_mipmaps = nil

---A <a href="/Rail_planner" title="Rail planner">rail planner</a>.
---@class RailPlanner
local RailPlanner = {}

---The name of an entity of the type "curved-rail". The first item to place of the rail must be this rail planner.
---@optional false
---@type string
RailPlanner.curved_rail = nil

---The name of an entity of the type "straight-rail". The first item to place of the rail must be this rail planner.
---@optional false
---@type string
RailPlanner.straight_rail = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
RailPlanner.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
RailPlanner.burnt_result = nil

---@optional true
---@type SoundType
RailPlanner.close_sound = nil

---@optional true
---@type IconData[]
RailPlanner.dark_background_icons = nil

---@optional true
---@type FileName
RailPlanner.dark_background_icon = nil

---@optional true
---@type ItemCountType
RailPlanner.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
RailPlanner.flags = nil

---@default 1.0
---@optional true
---@type double
RailPlanner.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
RailPlanner.fuel_category = nil

---@default 1.0
---@optional true
---@type double
RailPlanner.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
RailPlanner.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
RailPlanner.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
RailPlanner.fuel_value = nil

---@optional true
---@type SoundType
RailPlanner.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
RailPlanner.pictures = nil

---@optional true
---@type PlaceAsTile
RailPlanner.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
RailPlanner.place_result = nil

---@optional true
---@type string
RailPlanner.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
RailPlanner.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
RailPlanner.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
RailPlanner.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
RailPlanner.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RailPlanner.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RailPlanner.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RailPlanner.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RailPlanner.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RailPlanner.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RailPlanner.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RailPlanner.icon_size = nil

---@default 0
---@optional true
---@type uint8
RailPlanner.icon_mipmaps = nil

---Has a force, but unlike Prototype/SimpleEntityWithForce it is only attacked if the biters get stuck on it.
---@class SimpleEntityWithOwner
local SimpleEntityWithOwner = {}

---Must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type AnimationVariations
SimpleEntityWithOwner.animations = nil

---@default all
---@optional true
---@type ForceCondition
SimpleEntityWithOwner.force_visibility = nil

---Must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type Sprite4Way
SimpleEntityWithOwner.picture = nil

---Must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type SpriteVariations
SimpleEntityWithOwner.pictures = nil

---@default false
---@optional true
---@type bool
SimpleEntityWithOwner.random_animation_offset = nil

---Whether a random graphics variation is chosen when placing the entity/creating it via script/creating it via map generation. If this is false, the entity will use the first variation instead of a random one.
---@default true
---@optional true
---@type bool
SimpleEntityWithOwner.random_variation_on_create = nil

---@default object
---@optional true
---@type RenderLayer
SimpleEntityWithOwner.render_layer = nil

---@default 0
---@optional true
---@type int8
SimpleEntityWithOwner.secondary_draw_order = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithOwner.alert_when_damaged = nil

---@optional true
---@type AttackReaction
SimpleEntityWithOwner.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
SimpleEntityWithOwner.corpse = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithOwner.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
SimpleEntityWithOwner.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
SimpleEntityWithOwner.dying_explosion = nil

---@optional true
---@type TriggerEffect
SimpleEntityWithOwner.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
SimpleEntityWithOwner.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
SimpleEntityWithOwner.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
SimpleEntityWithOwner.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
SimpleEntityWithOwner.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
SimpleEntityWithOwner.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
SimpleEntityWithOwner.max_health = nil

---@default false
---@optional true
---@type bool
SimpleEntityWithOwner.random_corpse_variation = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.repair_sound = nil

---@default 1
---@optional true
---@type float
SimpleEntityWithOwner.repair_speed_modifier = nil

---@optional true
---@type Resistances
SimpleEntityWithOwner.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SimpleEntityWithOwner.additional_pastable_entities = nil

---@optional true
---@type float
SimpleEntityWithOwner.alert_icon_scale = nil

---@optional true
---@type vector
SimpleEntityWithOwner.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithOwner.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SimpleEntityWithOwner.autoplace = nil

---@default 0
---@optional true
---@type double
SimpleEntityWithOwner.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.build_sound = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SimpleEntityWithOwner.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SimpleEntityWithOwner.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SimpleEntityWithOwner.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SimpleEntityWithOwner.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SimpleEntityWithOwner.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SimpleEntityWithOwner.emissions_per_second = nil

---@optional true
---@type Color
SimpleEntityWithOwner.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SimpleEntityWithOwner.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SimpleEntityWithOwner.flags = nil

---@optional true
---@type Color
SimpleEntityWithOwner.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SimpleEntityWithOwner.hit_visualization_box = nil

---@optional true
---@type Color
SimpleEntityWithOwner.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SimpleEntityWithOwner.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SimpleEntityWithOwner.minable = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.mined_sound = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SimpleEntityWithOwner.next_upgrade = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SimpleEntityWithOwner.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SimpleEntityWithOwner.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SimpleEntityWithOwner.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SimpleEntityWithOwner.remove_decoratives = nil

---@optional true
---@type SoundType
SimpleEntityWithOwner.rotated_sound = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithOwner.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SimpleEntityWithOwner.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SimpleEntityWithOwner.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SimpleEntityWithOwner.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SimpleEntityWithOwner.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SimpleEntityWithOwner.subgroup = nil

---@optional true
---@type uint32
SimpleEntityWithOwner.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SimpleEntityWithOwner.tile_width = nil

---@optional true
---@type TriggerTargetMask
SimpleEntityWithOwner.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SimpleEntityWithOwner.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SimpleEntityWithOwner.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SimpleEntityWithOwner.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SimpleEntityWithOwner.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SimpleEntityWithOwner.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SimpleEntityWithOwner.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SimpleEntityWithOwner.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SimpleEntityWithOwner.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SimpleEntityWithOwner.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SimpleEntityWithOwner.icon_size = nil

---@default 0
---@optional true
---@type uint8
SimpleEntityWithOwner.icon_mipmaps = nil

---An entity with a limited lifetime that can use trigger effects.
---@class Particle
local Particle = {}

---Can't be 1.
---@optional false
---@type uint16
Particle.life_time = nil

---Picture variation count and individual frame count must be equal to shadow variation count.
---@optional false
---@type AnimationVariations
Particle.pictures = nil

---@default object
---@optional false
---@type RenderLayer
Particle.render_layer = nil

---@default lower-object
---@optional false
---@type RenderLayer
Particle.render_layer_when_on_ground = nil

---@default true
---@optional true
---@type bool
Particle.draw_shadow_when_on_ground = nil

---@optional true
---@type TriggerEffect
Particle.ended_in_water_trigger_effect = nil

---@optional true
---@type TriggerEffect
Particle.ended_on_ground_trigger_effect = nil

---Defaults to <code>life_time</code> / 5, but at most 60. If this is 0, it is silently changed to 1.
---@optional true
---@type uint16
Particle.fade_away_duration = nil

---@default 0
---@optional true
---@type float
Particle.mining_particle_frame_speed = nil

---@default 1
---@optional true
---@type double
Particle.movement_modifier = nil

---@default 0.8
---@optional true
---@type double
Particle.movement_modifier_when_on_ground = nil

---@optional true
---@type TriggerEffect
Particle.regular_trigger_effect = nil

---Can't be 1.
---@default 0
---@optional true
---@type uint32
Particle.regular_trigger_effect_frequency = nil

---Shadow variation variation count and individual frame count must be equal to picture variation count.
---@optional true
---@type AnimationVariations
Particle.shadows = nil

---Has to be >= -0.01 and <= 0.01.
---@default -0.004
---@optional true
---@type float
Particle.vertical_acceleration = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Particle.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Particle.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Particle.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Particle.order = nil

---This prototype definition is used for receiving an achievement when the player produces more than the specified amount of items.
---@class ProduceAchievement
local ProduceAchievement = {}

---This will set the amount of items or fluids needed to craft, for the player to complete the achievement.
---@optional false
---@type MaterialAmountType
ProduceAchievement.amount = nil

---If this is false, the player carries over their statistics from this achievement through all their saves.
---@optional false
---@type bool
ProduceAchievement.limited_to_one_game = nil

---This will tell the achievement what fluid the player needs to craft, to get the achievement.
---@optional true
---@type string
ProduceAchievement.fluid_product = nil

---This will tell the achievement what item the player needs to craft, to get the achievement.
---@optional true
---@type string
ProduceAchievement.item_product = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
ProduceAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
ProduceAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
ProduceAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ProduceAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ProduceAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ProduceAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ProduceAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ProduceAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ProduceAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ProduceAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
ProduceAchievement.icon_mipmaps = nil

---Used for corpses, for example the remnants when destroying buildings.
---@class Corpse
local Corpse = {}

---@optional true
---@type RotatedAnimationVariations
Corpse.animation = nil

---Variation count must be the same as <code>animation</code> variation count. Direction count must be the same as <code>animation</code> direction count. Frame count must be the same as <code>animation</code> frame count.
---@optional true
---@type RotatedAnimationVariations
Corpse.animation_overlay = nil

---@default corpse
---@optional true
---@type RenderLayer
Corpse.animation_overlay_final_render_layer = nil

---@default object
---@optional true
---@type RenderLayer
Corpse.animation_overlay_render_layer = nil

---@default object
---@optional true
---@type RenderLayer
Corpse.animation_render_layer = nil

---An array of arrays of integers. Arrays are called "groups" and must all have the same size.
---@optional true
---@type tables[] of uint16
Corpse.direction_shuffle = nil

---Multiplier for #time_before_shading_off and #time_before_removed. Must be positive.
---@default 1
---@optional true
---@type float
Corpse.dying_speed = nil

---@default corpse
---@optional true
---@type RenderLayer
Corpse.final_render_layer = nil

---@optional true
---@type AnimationVariations
Corpse.ground_patch = nil

---@default 0
---@optional true
---@type float
Corpse.ground_patch_fade_in_delay = nil

---@default 0
---@optional true
---@type float
Corpse.ground_patch_fade_in_speed = nil

---@default 0
---@optional true
---@type float
Corpse.ground_patch_fade_out_duration = nil

---@default 0
---@optional true
---@type float
Corpse.ground_patch_fade_out_start = nil

---@optional true
---@type AnimationVariations
Corpse.ground_patch_higher = nil

---@default ground-patch
---@optional true
---@type RenderLayer
Corpse.ground_patch_render_layer = nil

---@default true
---@optional true
---@type bool
Corpse.remove_on_entity_placement = nil

---@default true
---@optional true
---@type bool
Corpse.remove_on_tile_placement = nil

---@default 1
---@optional true
---@type uint8
Corpse.shuffle_directions_at_frame = nil

---@optional true
---@type AnimationVariations
Corpse.splash = nil

---@default object
---@optional true
---@type RenderLayer
Corpse.splash_render_layer = nil

---@default 1
---@optional true
---@type float
Corpse.splash_speed = nil

---Time in ticks this corpse lasts. May not be 0.
---@default 7200
---@optional true
---@type int32
Corpse.time_before_removed = nil

---Controls how long the corpse takes to fade, as in how long it takes to get from no transparency to full tranparency/removed. This time is not added to #time_before_removed, it is instead substracted from it. So by default, the corpse starts fading about 15 seconds before it gets removed.
---@default 900
---@optional true
---@type int32
Corpse.time_before_shading_off = nil

---@default false
---@optional true
---@type bool
Corpse.use_tile_color_for_ground_patch_tint = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Corpse.additional_pastable_entities = nil

---@optional true
---@type float
Corpse.alert_icon_scale = nil

---@optional true
---@type vector
Corpse.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Corpse.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Corpse.autoplace = nil

---@default 0
---@optional true
---@type double
Corpse.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Corpse.build_sound = nil

---@optional true
---@type SoundType
Corpse.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Corpse.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Corpse.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Corpse.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Corpse.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Corpse.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Corpse.emissions_per_second = nil

---@optional true
---@type Color
Corpse.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Corpse.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Corpse.flags = nil

---@optional true
---@type Color
Corpse.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Corpse.hit_visualization_box = nil

---@optional true
---@type Color
Corpse.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Corpse.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Corpse.minable = nil

---@optional true
---@type SoundType
Corpse.mined_sound = nil

---@optional true
---@type SoundType
Corpse.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Corpse.next_upgrade = nil

---@optional true
---@type SoundType
Corpse.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Corpse.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Corpse.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Corpse.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Corpse.remove_decoratives = nil

---@optional true
---@type SoundType
Corpse.rotated_sound = nil

---@default true
---@optional true
---@type bool
Corpse.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Corpse.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Corpse.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Corpse.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Corpse.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Corpse.subgroup = nil

---@optional true
---@type uint32
Corpse.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Corpse.tile_width = nil

---@optional true
---@type TriggerTargetMask
Corpse.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Corpse.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Corpse.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Corpse.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Corpse.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Corpse.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Corpse.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Corpse.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Corpse.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Corpse.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Corpse.icon_size = nil

---@default 0
---@optional true
---@type uint8
Corpse.icon_mipmaps = nil

---An ammo category. Each weapon has an ammo category, and can use any ammo with the same ammo category. Ammo categories can also be upgraded by technologies.
---@class AmmoCategory
local AmmoCategory = {}

---@optional true
---@type Order
AmmoCategory.bonus_gui_order = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
AmmoCategory.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
AmmoCategory.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
AmmoCategory.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
AmmoCategory.order = nil

---A capsule, for example a <a href="/Combat_robot_capsules" title="Combat robot capsules">combat robot capsule</a> or the <a href="/Raw_fish" title="Raw fish">raw fish</a>.
---@class Capsule
local Capsule = {}

---@optional false
---@type CapsuleAction
Capsule.capsule_action = nil

---Color of the range radius that is shown around the player when they hold the capsule.
---@optional true
---@type Color
Capsule.radius_color = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
Capsule.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
Capsule.burnt_result = nil

---@optional true
---@type SoundType
Capsule.close_sound = nil

---@optional true
---@type IconData[]
Capsule.dark_background_icons = nil

---@optional true
---@type FileName
Capsule.dark_background_icon = nil

---@optional true
---@type ItemCountType
Capsule.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
Capsule.flags = nil

---@default 1.0
---@optional true
---@type double
Capsule.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
Capsule.fuel_category = nil

---@default 1.0
---@optional true
---@type double
Capsule.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
Capsule.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
Capsule.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
Capsule.fuel_value = nil

---@optional true
---@type SoundType
Capsule.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
Capsule.pictures = nil

---@optional true
---@type PlaceAsTile
Capsule.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
Capsule.place_result = nil

---@optional true
---@type string
Capsule.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
Capsule.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
Capsule.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
Capsule.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
Capsule.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Capsule.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Capsule.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Capsule.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Capsule.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Capsule.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Capsule.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Capsule.icon_size = nil

---@default 0
---@optional true
---@type uint8
Capsule.icon_mipmaps = nil

---ItemWithEntityData saves data associated with the entity that it represents, for example the content of the equipment grid of a car.
---@class ItemWithEntityData
local ItemWithEntityData = {}

---@optional true
---@type FileName
ItemWithEntityData.icon_tintable = nil

---@optional true
---@type IconData[]
ItemWithEntityData.icon_tintables = nil

---@optional true
---@type FileName
ItemWithEntityData.icon_size = nil

---@optional true
---@type FileName
ItemWithEntityData.icon_tintable_mask = nil

---@optional true
---@type IconData[]
ItemWithEntityData.icon_tintable_masks = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
ItemWithEntityData.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
ItemWithEntityData.burnt_result = nil

---@optional true
---@type SoundType
ItemWithEntityData.close_sound = nil

---@optional true
---@type IconData[]
ItemWithEntityData.dark_background_icons = nil

---@optional true
---@type FileName
ItemWithEntityData.dark_background_icon = nil

---@optional true
---@type ItemCountType
ItemWithEntityData.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
ItemWithEntityData.flags = nil

---@default 1.0
---@optional true
---@type double
ItemWithEntityData.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
ItemWithEntityData.fuel_category = nil

---@default 1.0
---@optional true
---@type double
ItemWithEntityData.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
ItemWithEntityData.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
ItemWithEntityData.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
ItemWithEntityData.fuel_value = nil

---@optional true
---@type SoundType
ItemWithEntityData.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
ItemWithEntityData.pictures = nil

---@optional true
---@type PlaceAsTile
ItemWithEntityData.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
ItemWithEntityData.place_result = nil

---@optional true
---@type string
ItemWithEntityData.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
ItemWithEntityData.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
ItemWithEntityData.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
ItemWithEntityData.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
ItemWithEntityData.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ItemWithEntityData.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ItemWithEntityData.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ItemWithEntityData.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ItemWithEntityData.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ItemWithEntityData.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ItemWithEntityData.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ItemWithEntityData.icon_size = nil

---@default 0
---@optional true
---@type uint8
ItemWithEntityData.icon_mipmaps = nil

---A <a href="/Construction_robot" title="Construction robot">construction robot</a>.
---@class ConstructionRobot
local ConstructionRobot = {}

---@optional false
---@type vector
ConstructionRobot.construction_vector = nil

---@optional true
---@type AnimationType
ConstructionRobot.smoke = nil

---@optional true
---@type AnimationVariations
ConstructionRobot.sparks = nil

---@optional true
---@type RotatedAnimation
ConstructionRobot.working = nil

---@optional true
---@type LightDefinition
ConstructionRobot.working_light = nil

---@optional false
---@type vector
ConstructionRobot.cargo_centered = nil

---@optional false
---@type ItemCountType
ConstructionRobot.max_payload_size = nil

---@default true
---@optional true
---@type bool
ConstructionRobot.draw_cargo = nil

---@optional true
---@type RotatedAnimation
ConstructionRobot.idle = nil

---@optional true
---@type RotatedAnimation
ConstructionRobot.in_motion = nil

---@optional true
---@type RotatedAnimation
ConstructionRobot.shadow_idle = nil

---@optional true
---@type RotatedAnimation
ConstructionRobot.shadow_in_motion = nil

---@optional false
---@type double
ConstructionRobot.speed = nil

---How much does it cost to move 1 meter.
---@default 0
---@optional true
---@type Energy
ConstructionRobot.energy_per_move = nil

---@default 0
---@optional true
---@type Energy
ConstructionRobot.energy_per_tick = nil

---How much energy can be stored in the batteries.
---@default 0
---@optional true
---@type Energy
ConstructionRobot.max_energy = nil

---The maximum speed of the robot. Useful to limit the impact of <a href="/Worker_robot_speed_(research)" title="Worker robot speed (research)">worker robot speed (research)</a>.
---@optional true
---@type double
ConstructionRobot.max_speed = nil

---The robot will never go to charge when it has more energy than this.
---@default 0.95
---@optional true
---@type float
ConstructionRobot.max_to_charge = nil

---The robot will always go to charge when it has less energy than this.
---@default 0.2
---@optional true
---@type float
ConstructionRobot.min_to_charge = nil

---Some robots simply crash, some slowdown but keep going. 0 means crash.
---@default 0
---@optional true
---@type float
ConstructionRobot.speed_multiplier_when_out_of_energy = nil

---@default true
---@optional true
---@type bool
ConstructionRobot.alert_when_damaged = nil

---@optional true
---@type AttackReaction
ConstructionRobot.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
ConstructionRobot.corpse = nil

---@default true
---@optional true
---@type bool
ConstructionRobot.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
ConstructionRobot.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
ConstructionRobot.dying_explosion = nil

---@optional true
---@type TriggerEffect
ConstructionRobot.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
ConstructionRobot.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
ConstructionRobot.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
ConstructionRobot.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
ConstructionRobot.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
ConstructionRobot.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
ConstructionRobot.max_health = nil

---@default false
---@optional true
---@type bool
ConstructionRobot.random_corpse_variation = nil

---@optional true
---@type SoundType
ConstructionRobot.repair_sound = nil

---@default 1
---@optional true
---@type float
ConstructionRobot.repair_speed_modifier = nil

---@optional true
---@type Resistances
ConstructionRobot.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ConstructionRobot.additional_pastable_entities = nil

---@optional true
---@type float
ConstructionRobot.alert_icon_scale = nil

---@optional true
---@type vector
ConstructionRobot.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ConstructionRobot.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ConstructionRobot.autoplace = nil

---@default 0
---@optional true
---@type double
ConstructionRobot.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ConstructionRobot.build_sound = nil

---@optional true
---@type SoundType
ConstructionRobot.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ConstructionRobot.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ConstructionRobot.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ConstructionRobot.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ConstructionRobot.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ConstructionRobot.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ConstructionRobot.emissions_per_second = nil

---@optional true
---@type Color
ConstructionRobot.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ConstructionRobot.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ConstructionRobot.flags = nil

---@optional true
---@type Color
ConstructionRobot.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ConstructionRobot.hit_visualization_box = nil

---@optional true
---@type Color
ConstructionRobot.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ConstructionRobot.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ConstructionRobot.minable = nil

---@optional true
---@type SoundType
ConstructionRobot.mined_sound = nil

---@optional true
---@type SoundType
ConstructionRobot.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ConstructionRobot.next_upgrade = nil

---@optional true
---@type SoundType
ConstructionRobot.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ConstructionRobot.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ConstructionRobot.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ConstructionRobot.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ConstructionRobot.remove_decoratives = nil

---@optional true
---@type SoundType
ConstructionRobot.rotated_sound = nil

---@default true
---@optional true
---@type bool
ConstructionRobot.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ConstructionRobot.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ConstructionRobot.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ConstructionRobot.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ConstructionRobot.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ConstructionRobot.subgroup = nil

---@optional true
---@type uint32
ConstructionRobot.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ConstructionRobot.tile_width = nil

---@optional true
---@type TriggerTargetMask
ConstructionRobot.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ConstructionRobot.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ConstructionRobot.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ConstructionRobot.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ConstructionRobot.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ConstructionRobot.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ConstructionRobot.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ConstructionRobot.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ConstructionRobot.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ConstructionRobot.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ConstructionRobot.icon_size = nil

---@default 0
---@optional true
---@type uint8
ConstructionRobot.icon_mipmaps = nil

---A noise layer used by the <a href="/Types/AutoplaceSpecification#noise_layer" title="Types/AutoplaceSpecification">autoplace system</a>. For a list of built-in layers, see <a href="/Data.raw#noise-layer" title="Data.raw">Data.raw#noise-layer</a>.
---@class NoiseLayer
local NoiseLayer = {}

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
NoiseLayer.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
NoiseLayer.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
NoiseLayer.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
NoiseLayer.order = nil

---Definition for a shortcut button in the <a href="/Shortcut_bar" title="Shortcut bar">shortcut bar</a>.<br>This is <i>not</i> a custom keybinding (keyboard shortcut), for that see <a href="/Prototype/CustomInput" title="Prototype/CustomInput">Prototype/CustomInput</a>
---@class Shortcut
local Shortcut = {}

---@optional false
---@type ShortcutAction
Shortcut.action = nil

---@optional false
---@type SpriteType
Shortcut.icon = nil

---Name of a custom input or vanilla control. Used to show the keybind in the tooltip of the shortcut.
---@optional true
---@type string
Shortcut.associated_control_input = nil

---@optional true
---@type SpriteType
Shortcut.disabled_icon = nil

---@optional true
---@type SpriteType
Shortcut.disabled_small_icon = nil

---Name of a <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a>. The item to create when clicking on a shortcut with the action set to "spawn-item". The item must have the <a href="/Types/ItemPrototypeFlags#.22spawnable.22" title="Types/ItemPrototypeFlags">"spawnable"</a> flag set.
---@optional true
---@type string
Shortcut.item_to_spawn = nil

---@optional true
---@type SpriteType
Shortcut.small_icon = nil

---One of "default", "blue", "red" and "green".
---@default default
---@optional true
---@type string
Shortcut.style = nil

---Name of a Prototype/Technology. The technology that must be researched before this shortcut can be used.
---@optional true
---@type string
Shortcut.technology_to_unlock = nil

---Must be enabled for the Factorio API to be able to set the toggled state on the shortcut button, see <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/LuaPlayer.html#LuaPlayer.set_shortcut_toggled">LuaPlayer.set_shortcut_toggled</a>.
---@optional true
---@type bool
Shortcut.toggleable = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Shortcut.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Shortcut.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Shortcut.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Shortcut.order = nil

---Abstract entity that has an animation.
---@class Smoke
local Smoke = {}

---@optional false
---@type AnimationType
Smoke.animation = nil

---Smoke always moves randomly unless <code>movement_slow_down_factor</code> is 0. If <code>affected_by_wind</code> is true, the smoke will also be moved by wind.
---@default true
---@optional true
---@type bool
Smoke.affected_by_wind = nil

---@optional true
---@type Color
Smoke.color = nil

---@default false
---@optional true
---@type bool
Smoke.cyclic = nil

---May not be 0 if cyclic is true.
---@default 0
---@optional true
---@type uint32
Smoke.duration = nil

---@default 1.0
---@optional true
---@type double
Smoke.end_scale = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
Smoke.fade_away_duration = nil

---<code>fade_in_duration</code> + <code>fade_away_duration</code> must be &lt;= <code>duration</code>.
---@default 0
---@optional true
---@type uint32
Smoke.fade_in_duration = nil

---@optional true
---@type AnimationType
Smoke.glow_animation = nil

---@optional true
---@type uint32
Smoke.glow_fade_away_duration = nil

---Value between 0 and 1, with 0 being no movement.
---@default 0.995
---@optional true
---@type double
Smoke.movement_slow_down_factor = nil

---@default smoke
---@optional true
---@type RenderLayer
Smoke.render_layer = nil

---@default false
---@optional true
---@type bool
Smoke.show_when_smoke_off = nil

---@default 0
---@optional true
---@type uint32
Smoke.spread_duration = nil

---@default 1.0
---@optional true
---@type double
Smoke.start_scale = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Smoke.additional_pastable_entities = nil

---@optional true
---@type float
Smoke.alert_icon_scale = nil

---@optional true
---@type vector
Smoke.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Smoke.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Smoke.autoplace = nil

---@default 0
---@optional true
---@type double
Smoke.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Smoke.build_sound = nil

---@optional true
---@type SoundType
Smoke.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Smoke.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Smoke.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Smoke.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Smoke.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Smoke.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Smoke.emissions_per_second = nil

---@optional true
---@type Color
Smoke.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Smoke.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Smoke.flags = nil

---@optional true
---@type Color
Smoke.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Smoke.hit_visualization_box = nil

---@optional true
---@type Color
Smoke.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Smoke.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Smoke.minable = nil

---@optional true
---@type SoundType
Smoke.mined_sound = nil

---@optional true
---@type SoundType
Smoke.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Smoke.next_upgrade = nil

---@optional true
---@type SoundType
Smoke.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Smoke.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Smoke.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Smoke.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Smoke.remove_decoratives = nil

---@optional true
---@type SoundType
Smoke.rotated_sound = nil

---@default true
---@optional true
---@type bool
Smoke.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Smoke.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Smoke.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Smoke.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Smoke.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Smoke.subgroup = nil

---@optional true
---@type uint32
Smoke.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Smoke.tile_width = nil

---@optional true
---@type TriggerTargetMask
Smoke.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Smoke.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Smoke.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Smoke.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Smoke.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Smoke.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Smoke.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Smoke.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Smoke.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Smoke.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Smoke.icon_size = nil

---@default 0
---@optional true
---@type uint8
Smoke.icon_mipmaps = nil

---A <a href="/Wall" title="Wall">wall</a>.
---@class Wall
local Wall = {}

---@optional false
---@type WallPictures
Wall.pictures = nil

---@optional true
---@type CircuitConnectorSprites
Wall.circuit_connector_sprites = nil

---@optional true
---@type WireConnectionPoint
Wall.circuit_wire_connection_point = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
Wall.circuit_wire_max_distance = nil

---@optional true
---@type SpriteType
Wall.connected_gate_visualization = nil

---@optional true
---@type SignalIDConnector
Wall.default_output_signal = nil

---@default true
---@optional true
---@type bool
Wall.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
Wall.draw_copper_wires = nil

---Different walls will visually connect to each other if their merge group is the same.
---@default 0
---@optional true
---@type uint32
Wall.visual_merge_group = nil

---@optional true
---@type Sprite4Way
Wall.wall_diode_green = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_green_light_bottom = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_green_light_left = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_green_light_right = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_green_light_top = nil

---@optional true
---@type Sprite4Way
Wall.wall_diode_red = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_red_light_bottom = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_red_light_left = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_red_light_right = nil

---@optional true
---@type LightDefinition
Wall.wall_diode_red_light_top = nil

---@default true
---@optional true
---@type bool
Wall.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Wall.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Wall.corpse = nil

---@default true
---@optional true
---@type bool
Wall.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Wall.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Wall.dying_explosion = nil

---@optional true
---@type TriggerEffect
Wall.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Wall.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Wall.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Wall.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Wall.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Wall.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Wall.max_health = nil

---@default false
---@optional true
---@type bool
Wall.random_corpse_variation = nil

---@optional true
---@type SoundType
Wall.repair_sound = nil

---@default 1
---@optional true
---@type float
Wall.repair_speed_modifier = nil

---@optional true
---@type Resistances
Wall.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Wall.additional_pastable_entities = nil

---@optional true
---@type float
Wall.alert_icon_scale = nil

---@optional true
---@type vector
Wall.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Wall.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Wall.autoplace = nil

---@default 0
---@optional true
---@type double
Wall.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Wall.build_sound = nil

---@optional true
---@type SoundType
Wall.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Wall.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Wall.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Wall.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Wall.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Wall.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Wall.emissions_per_second = nil

---@optional true
---@type Color
Wall.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Wall.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Wall.flags = nil

---@optional true
---@type Color
Wall.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Wall.hit_visualization_box = nil

---@optional true
---@type Color
Wall.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Wall.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Wall.minable = nil

---@optional true
---@type SoundType
Wall.mined_sound = nil

---@optional true
---@type SoundType
Wall.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Wall.next_upgrade = nil

---@optional true
---@type SoundType
Wall.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Wall.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Wall.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Wall.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Wall.remove_decoratives = nil

---@optional true
---@type SoundType
Wall.rotated_sound = nil

---@default true
---@optional true
---@type bool
Wall.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Wall.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Wall.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Wall.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Wall.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Wall.subgroup = nil

---@optional true
---@type uint32
Wall.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Wall.tile_width = nil

---@optional true
---@type TriggerTargetMask
Wall.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Wall.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Wall.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Wall.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Wall.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Wall.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Wall.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Wall.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Wall.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Wall.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Wall.icon_size = nil

---@default 0
---@optional true
---@type uint8
Wall.icon_mipmaps = nil

---A <a href="/Tree" title="Tree">tree</a>.
---@class Tree
local Tree = {}

---Array. Mandatory if <code>variations</code> exists.
---@optional true
---@type Color[]
Tree.colors = nil

---@default 0.5
---@optional true
---@type float
Tree.darkness_of_burnt_tree = nil

---Either this or <code>variations</code> must exist.
---@optional true
---@type SpriteVariations
Tree.pictures = nil

---@optional true
---@type double[]
Tree.variation_weights = nil

---Array. Can't be empty. Either this or <code>pictures</code> must exist.
---@optional true
---@type TreePrototypeVariation[]
Tree.variations = nil

---@default true
---@optional true
---@type bool
Tree.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Tree.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Tree.corpse = nil

---@default true
---@optional true
---@type bool
Tree.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Tree.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Tree.dying_explosion = nil

---@optional true
---@type TriggerEffect
Tree.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Tree.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Tree.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Tree.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Tree.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Tree.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Tree.max_health = nil

---@default false
---@optional true
---@type bool
Tree.random_corpse_variation = nil

---@optional true
---@type SoundType
Tree.repair_sound = nil

---@default 1
---@optional true
---@type float
Tree.repair_speed_modifier = nil

---@optional true
---@type Resistances
Tree.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Tree.additional_pastable_entities = nil

---@optional true
---@type float
Tree.alert_icon_scale = nil

---@optional true
---@type vector
Tree.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Tree.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Tree.autoplace = nil

---@default 0
---@optional true
---@type double
Tree.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Tree.build_sound = nil

---@optional true
---@type SoundType
Tree.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Tree.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Tree.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Tree.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Tree.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Tree.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Tree.emissions_per_second = nil

---@optional true
---@type Color
Tree.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Tree.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Tree.flags = nil

---@optional true
---@type Color
Tree.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Tree.hit_visualization_box = nil

---@optional true
---@type Color
Tree.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Tree.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Tree.minable = nil

---@optional true
---@type SoundType
Tree.mined_sound = nil

---@optional true
---@type SoundType
Tree.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Tree.next_upgrade = nil

---@optional true
---@type SoundType
Tree.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Tree.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Tree.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Tree.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Tree.remove_decoratives = nil

---@optional true
---@type SoundType
Tree.rotated_sound = nil

---@default true
---@optional true
---@type bool
Tree.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Tree.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Tree.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Tree.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Tree.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Tree.subgroup = nil

---@optional true
---@type uint32
Tree.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Tree.tile_width = nil

---@optional true
---@type TriggerTargetMask
Tree.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Tree.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Tree.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Tree.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Tree.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Tree.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Tree.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Tree.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Tree.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Tree.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Tree.icon_size = nil

---@default 0
---@optional true
---@type uint8
Tree.icon_mipmaps = nil

---The abstract base entity for both rail signals.
---@class RailSignalBase
local RailSignalBase = {}

---@optional false
---@type RotatedAnimation
RailSignalBase.animation = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
RailSignalBase.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
RailSignalBase.circuit_wire_connection_points = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
RailSignalBase.circuit_wire_max_distance = nil

---@optional true
---@type SignalIDConnector
RailSignalBase.default_green_output_signal = nil

---@optional true
---@type SignalIDConnector
RailSignalBase.default_orange_output_signal = nil

---@optional true
---@type SignalIDConnector
RailSignalBase.default_red_output_signal = nil

---@default true
---@optional true
---@type bool
RailSignalBase.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
RailSignalBase.draw_copper_wires = nil

---@optional true
---@type LightDefinition
RailSignalBase.green_light = nil

---@optional true
---@type LightDefinition
RailSignalBase.orange_light = nil

---@optional true
---@type AnimationType
RailSignalBase.rail_piece = nil

---@optional true
---@type LightDefinition
RailSignalBase.red_light = nil

---@default true
---@optional true
---@type bool
RailSignalBase.alert_when_damaged = nil

---@optional true
---@type AttackReaction
RailSignalBase.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
RailSignalBase.corpse = nil

---@default true
---@optional true
---@type bool
RailSignalBase.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
RailSignalBase.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
RailSignalBase.dying_explosion = nil

---@optional true
---@type TriggerEffect
RailSignalBase.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
RailSignalBase.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
RailSignalBase.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
RailSignalBase.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
RailSignalBase.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
RailSignalBase.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
RailSignalBase.max_health = nil

---@default false
---@optional true
---@type bool
RailSignalBase.random_corpse_variation = nil

---@optional true
---@type SoundType
RailSignalBase.repair_sound = nil

---@default 1
---@optional true
---@type float
RailSignalBase.repair_speed_modifier = nil

---@optional true
---@type Resistances
RailSignalBase.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
RailSignalBase.additional_pastable_entities = nil

---@optional true
---@type float
RailSignalBase.alert_icon_scale = nil

---@optional true
---@type vector
RailSignalBase.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
RailSignalBase.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
RailSignalBase.autoplace = nil

---@default 0
---@optional true
---@type double
RailSignalBase.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
RailSignalBase.build_sound = nil

---@optional true
---@type SoundType
RailSignalBase.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
RailSignalBase.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
RailSignalBase.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
RailSignalBase.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
RailSignalBase.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
RailSignalBase.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
RailSignalBase.emissions_per_second = nil

---@optional true
---@type Color
RailSignalBase.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
RailSignalBase.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
RailSignalBase.flags = nil

---@optional true
---@type Color
RailSignalBase.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
RailSignalBase.hit_visualization_box = nil

---@optional true
---@type Color
RailSignalBase.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
RailSignalBase.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
RailSignalBase.minable = nil

---@optional true
---@type SoundType
RailSignalBase.mined_sound = nil

---@optional true
---@type SoundType
RailSignalBase.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
RailSignalBase.next_upgrade = nil

---@optional true
---@type SoundType
RailSignalBase.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
RailSignalBase.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
RailSignalBase.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
RailSignalBase.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
RailSignalBase.remove_decoratives = nil

---@optional true
---@type SoundType
RailSignalBase.rotated_sound = nil

---@default true
---@optional true
---@type bool
RailSignalBase.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
RailSignalBase.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
RailSignalBase.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
RailSignalBase.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
RailSignalBase.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
RailSignalBase.subgroup = nil

---@optional true
---@type uint32
RailSignalBase.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
RailSignalBase.tile_width = nil

---@optional true
---@type TriggerTargetMask
RailSignalBase.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
RailSignalBase.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
RailSignalBase.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
RailSignalBase.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
RailSignalBase.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
RailSignalBase.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
RailSignalBase.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
RailSignalBase.order = nil

---Path to the icon file.
---@optional true
---@type FileName
RailSignalBase.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
RailSignalBase.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
RailSignalBase.icon_size = nil

---@default 0
---@optional true
---@type uint8
RailSignalBase.icon_mipmaps = nil

---Abstract class that anything that is a belt or can connect to belts uses
---@class TransportBeltConnectable
local TransportBeltConnectable = {}

---<p>The speed of the belt (since 0.17): <code>speed × 480 = x Items/second</code></p><p>The raw value is expressed as the number of tiles traveled by each item on the belt per tick, relative to the belt's maximum density - e.g. <code>x items/second ÷ (4 items/lane × 2 lanes/belt × 60 ticks/second) = &lt;speed&gt; belts/tick</code> where a "belt" is the size of one tile. See <a href="/Transport_belts/Physics" title="Transport belts/Physics">Transport_belts/Physics</a> for more details.</p>
---@optional false
---@type double
TransportBeltConnectable.speed = nil

---@default 1
---@optional true
---@type double
TransportBeltConnectable.animation_speed_coefficient = nil

---Either this, or all of the properties below this one have to present.
---@optional true
---@type TransportBeltConnectableBeltAnimationSet
TransportBeltConnectable.belt_animation_set = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.belt_horizontal = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.belt_vertical = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.ending_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type Sprite4Way
TransportBeltConnectable.ending_patch = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.ending_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.ending_top = nil

---@default false
---@optional true
---@type bool
TransportBeltConnectable.ends_with_stopper = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.starting_bottom = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.starting_side = nil

---Mandatory if <code>belt_animation_set</code> is not present.
---@optional true
---@type AnimationType
TransportBeltConnectable.starting_top = nil

---@default true
---@optional true
---@type bool
TransportBeltConnectable.alert_when_damaged = nil

---@optional true
---@type AttackReaction
TransportBeltConnectable.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
TransportBeltConnectable.corpse = nil

---@default true
---@optional true
---@type bool
TransportBeltConnectable.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
TransportBeltConnectable.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
TransportBeltConnectable.dying_explosion = nil

---@optional true
---@type TriggerEffect
TransportBeltConnectable.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
TransportBeltConnectable.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
TransportBeltConnectable.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
TransportBeltConnectable.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
TransportBeltConnectable.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
TransportBeltConnectable.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
TransportBeltConnectable.max_health = nil

---@default false
---@optional true
---@type bool
TransportBeltConnectable.random_corpse_variation = nil

---@optional true
---@type SoundType
TransportBeltConnectable.repair_sound = nil

---@default 1
---@optional true
---@type float
TransportBeltConnectable.repair_speed_modifier = nil

---@optional true
---@type Resistances
TransportBeltConnectable.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
TransportBeltConnectable.additional_pastable_entities = nil

---@optional true
---@type float
TransportBeltConnectable.alert_icon_scale = nil

---@optional true
---@type vector
TransportBeltConnectable.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
TransportBeltConnectable.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
TransportBeltConnectable.autoplace = nil

---@default 0
---@optional true
---@type double
TransportBeltConnectable.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
TransportBeltConnectable.build_sound = nil

---@optional true
---@type SoundType
TransportBeltConnectable.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
TransportBeltConnectable.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
TransportBeltConnectable.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
TransportBeltConnectable.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
TransportBeltConnectable.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
TransportBeltConnectable.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
TransportBeltConnectable.emissions_per_second = nil

---@optional true
---@type Color
TransportBeltConnectable.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
TransportBeltConnectable.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
TransportBeltConnectable.flags = nil

---@optional true
---@type Color
TransportBeltConnectable.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
TransportBeltConnectable.hit_visualization_box = nil

---@optional true
---@type Color
TransportBeltConnectable.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
TransportBeltConnectable.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
TransportBeltConnectable.minable = nil

---@optional true
---@type SoundType
TransportBeltConnectable.mined_sound = nil

---@optional true
---@type SoundType
TransportBeltConnectable.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
TransportBeltConnectable.next_upgrade = nil

---@optional true
---@type SoundType
TransportBeltConnectable.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
TransportBeltConnectable.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
TransportBeltConnectable.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
TransportBeltConnectable.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
TransportBeltConnectable.remove_decoratives = nil

---@optional true
---@type SoundType
TransportBeltConnectable.rotated_sound = nil

---@default true
---@optional true
---@type bool
TransportBeltConnectable.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
TransportBeltConnectable.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
TransportBeltConnectable.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
TransportBeltConnectable.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
TransportBeltConnectable.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
TransportBeltConnectable.subgroup = nil

---@optional true
---@type uint32
TransportBeltConnectable.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
TransportBeltConnectable.tile_width = nil

---@optional true
---@type TriggerTargetMask
TransportBeltConnectable.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
TransportBeltConnectable.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
TransportBeltConnectable.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
TransportBeltConnectable.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TransportBeltConnectable.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TransportBeltConnectable.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TransportBeltConnectable.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TransportBeltConnectable.order = nil

---Path to the icon file.
---@optional true
---@type FileName
TransportBeltConnectable.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
TransportBeltConnectable.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
TransportBeltConnectable.icon_size = nil

---@default 0
---@optional true
---@type uint8
TransportBeltConnectable.icon_mipmaps = nil

---Used for example for the handheld flamethrower.
---@class FluidStream
local FluidStream = {}

---Must be larger than 0. particle_horizontal_speed has to be greater than particle_horizontal_speed_deviation.
---@optional false
---@type double
FluidStream.particle_horizontal_speed = nil

---@optional false
---@type double
FluidStream.particle_horizontal_speed_deviation = nil

---@optional false
---@type uint16
FluidStream.particle_spawn_interval = nil

---@optional false
---@type double
FluidStream.particle_vertical_acceleration = nil

---@optional true
---@type Trigger
FluidStream.action = nil

---@optional true
---@type LightDefinition
FluidStream.ground_light = nil

---@optional true
---@type Trigger
FluidStream.initial_action = nil

---@default false
---@optional true
---@type bool
FluidStream.oriented_particle = nil

---@optional true
---@type AnimationType
FluidStream.particle = nil

---@default 1
---@optional true
---@type float
FluidStream.particle_alpha_per_part = nil

---Has to be less than 256.
---@default 20
---@optional true
---@type uint32
FluidStream.particle_buffer_size = nil

---@default 1
---@optional true
---@type float
FluidStream.particle_end_alpha = nil

---Will be set to 1 by the game if less than 1.
---@default 65553
---@optional true
---@type uint16
FluidStream.particle_fade_out_duration = nil

---Value between 0 and 1.
---@default 1
---@optional true
---@type float
FluidStream.particle_fade_out_threshold = nil

---Value between 0 and 1.
---@default 0
---@optional true
---@type float
FluidStream.particle_loop_exit_threshold = nil

---Will be set to 1 by the game if less than 1.
---@default 1
---@optional true
---@type uint16
FluidStream.particle_loop_frame_count = nil

---@default 1
---@optional true
---@type float
FluidStream.particle_scale_per_part = nil

---@optional true
---@type uint16
FluidStream.particle_spawn_timeout = nil

---@default 1
---@optional true
---@type float
FluidStream.particle_start_alpha = nil

---@default 1
---@optional true
---@type float
FluidStream.particle_start_scale = nil

---@default 0.5
---@optional true
---@type float
FluidStream.progress_to_create_smoke = nil

---@optional true
---@type AnimationType
FluidStream.shadow = nil

---@default false
---@optional true
---@type bool
FluidStream.shadow_scale_enabled = nil

---@optional true
---@type SmokeSource[]
FluidStream.smoke_sources = nil

---@optional true
---@type DamagePrototype
FluidStream.special_neutral_target_damage = nil

---@optional true
---@type AnimationType
FluidStream.spine_animation = nil

---@optional true
---@type LightDefinition
FluidStream.stream_light = nil

---@default 0
---@optional true
---@type double
FluidStream.target_position_deviation = nil

---@default 0.5
---@optional true
---@type float
FluidStream.width = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
FluidStream.additional_pastable_entities = nil

---@optional true
---@type float
FluidStream.alert_icon_scale = nil

---@optional true
---@type vector
FluidStream.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
FluidStream.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
FluidStream.autoplace = nil

---@default 0
---@optional true
---@type double
FluidStream.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
FluidStream.build_sound = nil

---@optional true
---@type SoundType
FluidStream.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
FluidStream.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
FluidStream.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
FluidStream.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
FluidStream.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
FluidStream.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
FluidStream.emissions_per_second = nil

---@optional true
---@type Color
FluidStream.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
FluidStream.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
FluidStream.flags = nil

---@optional true
---@type Color
FluidStream.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
FluidStream.hit_visualization_box = nil

---@optional true
---@type Color
FluidStream.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
FluidStream.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
FluidStream.minable = nil

---@optional true
---@type SoundType
FluidStream.mined_sound = nil

---@optional true
---@type SoundType
FluidStream.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
FluidStream.next_upgrade = nil

---@optional true
---@type SoundType
FluidStream.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
FluidStream.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
FluidStream.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
FluidStream.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
FluidStream.remove_decoratives = nil

---@optional true
---@type SoundType
FluidStream.rotated_sound = nil

---@default true
---@optional true
---@type bool
FluidStream.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
FluidStream.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
FluidStream.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
FluidStream.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
FluidStream.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
FluidStream.subgroup = nil

---@optional true
---@type uint32
FluidStream.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
FluidStream.tile_width = nil

---@optional true
---@type TriggerTargetMask
FluidStream.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
FluidStream.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
FluidStream.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
FluidStream.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
FluidStream.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
FluidStream.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
FluidStream.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
FluidStream.order = nil

---Path to the icon file.
---@optional true
---@type FileName
FluidStream.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
FluidStream.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
FluidStream.icon_size = nil

---@default 0
---@optional true
---@type uint8
FluidStream.icon_mipmaps = nil

---Can spawn entities. Used for biter/spitter nests.
---@class EnemySpawner
local EnemySpawner = {}

---@optional false
---@type AnimationVariations
EnemySpawner.animations = nil

---@optional false
---@type double
EnemySpawner.call_for_help_radius = nil

---Count of enemies this spawner can sustain.
---@optional false
---@type uint32
EnemySpawner.max_count_of_owned_units = nil

---How many friendly units are required within the <a href="#spawning_radius">spawning_radius</a> of this spawner for it to stop producing more units.
---@optional false
---@type uint32
EnemySpawner.max_friends_around_to_spawn = nil

---Max richness to determine spawn shift. Spawn shift is linear interpolation between 0 and maxSpawnShift.
---@optional false
---@type double
EnemySpawner.max_richness_for_spawn_shift = nil

---Caps how much richness can be added on top of evolution when spawning units. (See also <a rel="nofollow" class="external autonumber" href="https://www.reddit.com/r/factorio/comments/8pjscm/friday_facts_246_the_gui_update_part_3/e0bttnp/">[1]</a>)
---@optional false
---@type double
EnemySpawner.max_spawn_shift = nil

---@optional false
---@type double
EnemySpawner.pollution_absorption_absolute = nil

---@optional false
---@type double
EnemySpawner.pollution_absorption_proportional = nil

---Array of the <a href="/Prototype/Entity" title="Prototype/Entity">entities</a> that this spawner can spawn and their spawn probabilities. The sum of probabilities is expected to be 1.0. The array must not be empty.
---@optional false
---@type UnitSpawnDefinition[]
EnemySpawner.result_units = nil

---Ticks for cooldown after unit is spawned.
---@optional false
---@type two[] double
EnemySpawner.spawning_cooldown = nil

---How far from the spawner can the units be spawned.
---@optional false
---@type double
EnemySpawner.spawning_radius = nil

---What spaces should be between the spawned units.
---@optional false
---@type double
EnemySpawner.spawning_spacing = nil

---@optional true
---@type SoundType
EnemySpawner.dying_sound = nil

---@optional true
---@type SpriteVariations
EnemySpawner.integration = nil

---@default 1
---@optional true
---@type float
EnemySpawner.max_darkness_to_spawn = nil

---@default 0.0
---@optional true
---@type float
EnemySpawner.min_darkness_to_spawn = nil

---@default true
---@optional true
---@type bool
EnemySpawner.random_animation_offset = nil

---@default true
---@optional true
---@type bool
EnemySpawner.alert_when_damaged = nil

---@optional true
---@type AttackReaction
EnemySpawner.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
EnemySpawner.corpse = nil

---@default true
---@optional true
---@type bool
EnemySpawner.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
EnemySpawner.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
EnemySpawner.dying_explosion = nil

---@optional true
---@type TriggerEffect
EnemySpawner.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
EnemySpawner.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
EnemySpawner.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
EnemySpawner.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
EnemySpawner.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
EnemySpawner.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
EnemySpawner.max_health = nil

---@default false
---@optional true
---@type bool
EnemySpawner.random_corpse_variation = nil

---@optional true
---@type SoundType
EnemySpawner.repair_sound = nil

---@default 1
---@optional true
---@type float
EnemySpawner.repair_speed_modifier = nil

---@optional true
---@type Resistances
EnemySpawner.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
EnemySpawner.additional_pastable_entities = nil

---@optional true
---@type float
EnemySpawner.alert_icon_scale = nil

---@optional true
---@type vector
EnemySpawner.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
EnemySpawner.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
EnemySpawner.autoplace = nil

---@default 0
---@optional true
---@type double
EnemySpawner.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
EnemySpawner.build_sound = nil

---@optional true
---@type SoundType
EnemySpawner.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
EnemySpawner.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
EnemySpawner.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
EnemySpawner.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
EnemySpawner.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
EnemySpawner.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
EnemySpawner.emissions_per_second = nil

---@optional true
---@type Color
EnemySpawner.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
EnemySpawner.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
EnemySpawner.flags = nil

---@optional true
---@type Color
EnemySpawner.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
EnemySpawner.hit_visualization_box = nil

---@optional true
---@type Color
EnemySpawner.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
EnemySpawner.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
EnemySpawner.minable = nil

---@optional true
---@type SoundType
EnemySpawner.mined_sound = nil

---@optional true
---@type SoundType
EnemySpawner.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
EnemySpawner.next_upgrade = nil

---@optional true
---@type SoundType
EnemySpawner.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
EnemySpawner.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
EnemySpawner.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
EnemySpawner.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
EnemySpawner.remove_decoratives = nil

---@optional true
---@type SoundType
EnemySpawner.rotated_sound = nil

---@default true
---@optional true
---@type bool
EnemySpawner.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
EnemySpawner.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
EnemySpawner.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
EnemySpawner.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
EnemySpawner.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
EnemySpawner.subgroup = nil

---@optional true
---@type uint32
EnemySpawner.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
EnemySpawner.tile_width = nil

---@optional true
---@type TriggerTargetMask
EnemySpawner.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
EnemySpawner.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
EnemySpawner.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
EnemySpawner.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EnemySpawner.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EnemySpawner.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EnemySpawner.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EnemySpawner.order = nil

---Path to the icon file.
---@optional true
---@type FileName
EnemySpawner.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
EnemySpawner.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
EnemySpawner.icon_size = nil

---@default 0
---@optional true
---@type uint8
EnemySpawner.icon_mipmaps = nil

---A mining drill.
---@class MiningDrill
local MiningDrill = {}

---The energy source of this mining drill.
---@optional false
---@type EnergySource
MiningDrill.energy_source = nil

---The amount of energy used by the drill while mining. Can't be less than or equal to 0.
---@optional false
---@type Energy
MiningDrill.energy_usage = nil

---The speed of this drill.
---@optional false
---@type double
MiningDrill.mining_speed = nil

---The names of the <a href="/Prototype/ResourceCategory" title="Prototype/ResourceCategory">Prototype/ResourceCategory</a> that can be mined by this drill. For a list on built-in categories, see <a href="/Data.raw#resource-category" title="Data.raw">Data.raw#resource-category</a>.
---@optional false
---@type string[]
MiningDrill.resource_categories = nil

---<p>The distance from the centre of the mining drill to search for resources in.</p><p>This is 2.49 for electric mining drills (a 5x5 area) and 0.99 for burner mining drills (a 2x2 area). The drill searches resource outside its natural boundary box, which is 0.01 (the middle of the entity); making it 2.5 and 1.0 gives it another block radius.</p>
---@optional false
---@type double
MiningDrill.resource_searching_radius = nil

---The position where the (mine) result is placed, when the mining drill is facing south (?).
---@optional false
---@type vector
MiningDrill.vector_to_place_result = nil

---@optional true
---@type EffectTypeLimitation
MiningDrill.allowed_effects = nil

---Loaded only if <code>graphics_set</code> does not exist.
---@optional true
---@type Animation4Way
MiningDrill.animations = nil

---Used by the <a href="/Pumpjack" title="Pumpjack">pumpjack</a> to have a static 4 way sprite.
---@optional true
---@type Sprite4Way
MiningDrill.base_picture = nil

---Productivity bonus that this machine always has.
---@default 0
---@optional true
---@type float
MiningDrill.base_productivity = nil

---@default lower-object
---@optional true
---@type RenderLayer
MiningDrill.base_render_layer = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
MiningDrill.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
MiningDrill.circuit_wire_connection_points = nil

---The maximum circuit wire distance for this entity.
---@default 0
---@optional true
---@type double
MiningDrill.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
MiningDrill.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
MiningDrill.draw_copper_wires = nil

---@optional true
---@type MiningDrillGraphicsSet
MiningDrill.graphics_set = nil

---@optional true
---@type FluidBox
MiningDrill.input_fluid_box = nil

---@optional true
---@type ModuleSpecification
MiningDrill.module_specification = nil

---When this mining drill is connected to the circuit network, the resource that it is reading (either the entire resource patch, or the resource in the mining area of the drill, depending on circuit network setting), is tinted in this color when mousing over the mining drill.
---@optional true
---@type Color
MiningDrill.monitor_visualization_tint = nil

---@optional true
---@type FluidBox
MiningDrill.output_fluid_box = nil

---The sprite used to show the range of the mining drill.
---@optional true
---@type SpriteType
MiningDrill.radius_visualisation_picture = nil

---The output slot(s).
---@default 1
---@optional true
---@type ItemStackIndex
MiningDrill.storage_slots = nil

---@optional true
---@type MiningDrillGraphicsSet
MiningDrill.wet_mining_graphics_set = nil

---@default true
---@optional true
---@type bool
MiningDrill.alert_when_damaged = nil

---@optional true
---@type AttackReaction
MiningDrill.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
MiningDrill.corpse = nil

---@default true
---@optional true
---@type bool
MiningDrill.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
MiningDrill.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
MiningDrill.dying_explosion = nil

---@optional true
---@type TriggerEffect
MiningDrill.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
MiningDrill.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
MiningDrill.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
MiningDrill.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
MiningDrill.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
MiningDrill.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
MiningDrill.max_health = nil

---@default false
---@optional true
---@type bool
MiningDrill.random_corpse_variation = nil

---@optional true
---@type SoundType
MiningDrill.repair_sound = nil

---@default 1
---@optional true
---@type float
MiningDrill.repair_speed_modifier = nil

---@optional true
---@type Resistances
MiningDrill.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
MiningDrill.additional_pastable_entities = nil

---@optional true
---@type float
MiningDrill.alert_icon_scale = nil

---@optional true
---@type vector
MiningDrill.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
MiningDrill.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
MiningDrill.autoplace = nil

---@default 0
---@optional true
---@type double
MiningDrill.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
MiningDrill.build_sound = nil

---@optional true
---@type SoundType
MiningDrill.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
MiningDrill.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
MiningDrill.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
MiningDrill.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
MiningDrill.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
MiningDrill.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
MiningDrill.emissions_per_second = nil

---@optional true
---@type Color
MiningDrill.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
MiningDrill.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
MiningDrill.flags = nil

---@optional true
---@type Color
MiningDrill.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
MiningDrill.hit_visualization_box = nil

---@optional true
---@type Color
MiningDrill.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
MiningDrill.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
MiningDrill.minable = nil

---@optional true
---@type SoundType
MiningDrill.mined_sound = nil

---@optional true
---@type SoundType
MiningDrill.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
MiningDrill.next_upgrade = nil

---@optional true
---@type SoundType
MiningDrill.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
MiningDrill.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
MiningDrill.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
MiningDrill.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
MiningDrill.remove_decoratives = nil

---@optional true
---@type SoundType
MiningDrill.rotated_sound = nil

---@default true
---@optional true
---@type bool
MiningDrill.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
MiningDrill.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
MiningDrill.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
MiningDrill.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
MiningDrill.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
MiningDrill.subgroup = nil

---@optional true
---@type uint32
MiningDrill.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
MiningDrill.tile_width = nil

---@optional true
---@type TriggerTargetMask
MiningDrill.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
MiningDrill.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
MiningDrill.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
MiningDrill.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
MiningDrill.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
MiningDrill.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
MiningDrill.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
MiningDrill.order = nil

---Path to the icon file.
---@optional true
---@type FileName
MiningDrill.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
MiningDrill.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
MiningDrill.icon_size = nil

---@default 0
---@optional true
---@type uint8
MiningDrill.icon_mipmaps = nil

---Items with a "durability". Used for <a href="/Science_pack" title="Science pack">science packs</a>.
---@class Tool
local Tool = {}

---The durability of this tool. Must be positive. Mandatory if <code>infinite</code> is false.
---@optional true
---@type double
Tool.durability = nil

---May not be longer than 200 characters.
---@default description.durability-key
---@optional true
---@type string
Tool.durability_description_key = nil

---May not be longer than 200 characters.
---@default description.durability-value
---@optional true
---@type string
Tool.durability_description_value = nil

---Whether this tool has infinite durability.
---@default true
---@optional true
---@type bool
Tool.infinite = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
Tool.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
Tool.burnt_result = nil

---@optional true
---@type SoundType
Tool.close_sound = nil

---@optional true
---@type IconData[]
Tool.dark_background_icons = nil

---@optional true
---@type FileName
Tool.dark_background_icon = nil

---@optional true
---@type ItemCountType
Tool.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
Tool.flags = nil

---@default 1.0
---@optional true
---@type double
Tool.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
Tool.fuel_category = nil

---@default 1.0
---@optional true
---@type double
Tool.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
Tool.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
Tool.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
Tool.fuel_value = nil

---@optional true
---@type SoundType
Tool.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
Tool.pictures = nil

---@optional true
---@type PlaceAsTile
Tool.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
Tool.place_result = nil

---@optional true
---@type string
Tool.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
Tool.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
Tool.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
Tool.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
Tool.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Tool.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Tool.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Tool.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Tool.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Tool.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Tool.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Tool.icon_size = nil

---@default 0
---@optional true
---@type uint8
Tool.icon_mipmaps = nil

---Used by <a href="/Portable_solar_panel" title="Portable solar panel">portable solar panel</a>.
---@class SolarPanelEquipment
local SolarPanelEquipment = {}

---How much power should be provided.
---@optional false
---@type Energy
SolarPanelEquipment.power = nil

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Sets the categories of the equipment. It can only be inserted into <a href="/Prototype/EquipmentGrid#equipment_categories" title="Prototype/EquipmentGrid">grids</a> with at least one matching category.
---@optional false
---@type string[]
SolarPanelEquipment.categories = nil

---Must be an electric energy source.
---@optional false
---@type EnergySource
SolarPanelEquipment.energy_source = nil

---How big this equipment should be in the grid and whether it should be one solid rectangle or of a custom shape.
---@optional false
---@type EquipmentShape
SolarPanelEquipment.shape = nil

---The graphics to use when this equipment is shown inside an equipment grid.
---@optional false
---@type SpriteType
SolarPanelEquipment.sprite = nil

---@optional true
---@type SpriteType
SolarPanelEquipment.ability_icon = nil

---The color that the border of the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
SolarPanelEquipment.background_border_color = nil

---The color that the background of this equipment should have when shown inside an equipment grid.
---@optional true
---@type Color
SolarPanelEquipment.background_color = nil

---The color that the background of this equipment should have when held in the players hand and hovering over an equipment grid.
---@optional true
---@type Color
SolarPanelEquipment.grabbed_background_color = nil

---Name of the item prototype that should be returned to the player when they remove this equipment from an equipment grid.
---@optional true
---@type string
SolarPanelEquipment.take_result = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SolarPanelEquipment.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SolarPanelEquipment.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SolarPanelEquipment.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SolarPanelEquipment.order = nil

---Abstract base of all entities with health in the game.
---@class EntityWithHealth
local EntityWithHealth = {}

---@default true
---@optional true
---@type bool
EntityWithHealth.alert_when_damaged = nil

---@optional true
---@type AttackReaction
EntityWithHealth.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
EntityWithHealth.corpse = nil

---@default true
---@optional true
---@type bool
EntityWithHealth.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
EntityWithHealth.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
EntityWithHealth.dying_explosion = nil

---@optional true
---@type TriggerEffect
EntityWithHealth.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
EntityWithHealth.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
EntityWithHealth.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
EntityWithHealth.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
EntityWithHealth.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
EntityWithHealth.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
EntityWithHealth.max_health = nil

---@default false
---@optional true
---@type bool
EntityWithHealth.random_corpse_variation = nil

---@optional true
---@type SoundType
EntityWithHealth.repair_sound = nil

---@default 1
---@optional true
---@type float
EntityWithHealth.repair_speed_modifier = nil

---@optional true
---@type Resistances
EntityWithHealth.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
EntityWithHealth.additional_pastable_entities = nil

---@optional true
---@type float
EntityWithHealth.alert_icon_scale = nil

---@optional true
---@type vector
EntityWithHealth.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
EntityWithHealth.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
EntityWithHealth.autoplace = nil

---@default 0
---@optional true
---@type double
EntityWithHealth.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
EntityWithHealth.build_sound = nil

---@optional true
---@type SoundType
EntityWithHealth.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
EntityWithHealth.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
EntityWithHealth.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
EntityWithHealth.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
EntityWithHealth.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
EntityWithHealth.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
EntityWithHealth.emissions_per_second = nil

---@optional true
---@type Color
EntityWithHealth.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
EntityWithHealth.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
EntityWithHealth.flags = nil

---@optional true
---@type Color
EntityWithHealth.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
EntityWithHealth.hit_visualization_box = nil

---@optional true
---@type Color
EntityWithHealth.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
EntityWithHealth.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
EntityWithHealth.minable = nil

---@optional true
---@type SoundType
EntityWithHealth.mined_sound = nil

---@optional true
---@type SoundType
EntityWithHealth.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
EntityWithHealth.next_upgrade = nil

---@optional true
---@type SoundType
EntityWithHealth.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
EntityWithHealth.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
EntityWithHealth.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
EntityWithHealth.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
EntityWithHealth.remove_decoratives = nil

---@optional true
---@type SoundType
EntityWithHealth.rotated_sound = nil

---@default true
---@optional true
---@type bool
EntityWithHealth.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
EntityWithHealth.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
EntityWithHealth.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
EntityWithHealth.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
EntityWithHealth.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
EntityWithHealth.subgroup = nil

---@optional true
---@type uint32
EntityWithHealth.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
EntityWithHealth.tile_width = nil

---@optional true
---@type TriggerTargetMask
EntityWithHealth.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
EntityWithHealth.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
EntityWithHealth.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
EntityWithHealth.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EntityWithHealth.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EntityWithHealth.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EntityWithHealth.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EntityWithHealth.order = nil

---Path to the icon file.
---@optional true
---@type FileName
EntityWithHealth.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
EntityWithHealth.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
EntityWithHealth.icon_size = nil

---@default 0
---@optional true
---@type uint8
EntityWithHealth.icon_mipmaps = nil

---The prototype of an equipment grid, for example the one used in a <a href="/Power_armor" title="Power armor">power armor</a>.
---@class EquipmentGrid
local EquipmentGrid = {}

---An array of <a href="/Prototype/EquipmentCategory" title="Prototype/EquipmentCategory">Prototype/EquipmentCategory</a> names. Only <a href="/Prototype/Equipment" title="Prototype/Equipment">Prototype/Equipment</a> with at least one of these categories can be inserted into the grid.
---@optional false
---@type string[]
EquipmentGrid.equipment_categories = nil

---@optional false
---@type uint32
EquipmentGrid.height = nil

---@optional false
---@type uint32
EquipmentGrid.width = nil

---Whether this locked from user interaction which means that the user cannot put equipment into or take equipment from this equipment grid.
---@default false
---@optional true
---@type bool
EquipmentGrid.locked = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
EquipmentGrid.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
EquipmentGrid.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
EquipmentGrid.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
EquipmentGrid.order = nil

---Deprecated in 0.18. Particles that are exclusively meant for leaves of trees. The type "leaf-particle" has been obsoleted and cannot be created. See <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a> for particles.
---@class LeafParticle
local LeafParticle = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
LeafParticle.additional_pastable_entities = nil

---@optional true
---@type float
LeafParticle.alert_icon_scale = nil

---@optional true
---@type vector
LeafParticle.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
LeafParticle.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
LeafParticle.autoplace = nil

---@default 0
---@optional true
---@type double
LeafParticle.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
LeafParticle.build_sound = nil

---@optional true
---@type SoundType
LeafParticle.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
LeafParticle.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
LeafParticle.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
LeafParticle.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
LeafParticle.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
LeafParticle.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
LeafParticle.emissions_per_second = nil

---@optional true
---@type Color
LeafParticle.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
LeafParticle.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
LeafParticle.flags = nil

---@optional true
---@type Color
LeafParticle.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
LeafParticle.hit_visualization_box = nil

---@optional true
---@type Color
LeafParticle.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
LeafParticle.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
LeafParticle.minable = nil

---@optional true
---@type SoundType
LeafParticle.mined_sound = nil

---@optional true
---@type SoundType
LeafParticle.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
LeafParticle.next_upgrade = nil

---@optional true
---@type SoundType
LeafParticle.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
LeafParticle.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
LeafParticle.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
LeafParticle.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
LeafParticle.remove_decoratives = nil

---@optional true
---@type SoundType
LeafParticle.rotated_sound = nil

---@default true
---@optional true
---@type bool
LeafParticle.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
LeafParticle.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
LeafParticle.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
LeafParticle.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
LeafParticle.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
LeafParticle.subgroup = nil

---@optional true
---@type uint32
LeafParticle.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
LeafParticle.tile_width = nil

---@optional true
---@type TriggerTargetMask
LeafParticle.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
LeafParticle.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
LeafParticle.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
LeafParticle.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
LeafParticle.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
LeafParticle.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
LeafParticle.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
LeafParticle.order = nil

---Path to the icon file.
---@optional true
---@type FileName
LeafParticle.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
LeafParticle.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
LeafParticle.icon_size = nil

---@default 0
---@optional true
---@type uint8
LeafParticle.icon_mipmaps = nil

---A <a href="/Module" title="Module">module</a>.
---@class Module
local Module = {}

---The name of a <a href="/Prototype/ModuleCategory" title="Prototype/ModuleCategory">Prototype/ModuleCategory</a>. Used when upgrading modules: Ctrl + click modules into an entity and it will replace lower tier modules of the same category with higher tier modules.
---@optional false
---@type string
Module.category = nil

---@optional false
---@type Effect
Module.effect = nil

---Tier of the module inside its category. Used when upgrading modules: Ctrl + click modules into an entity and it will replace lower tier modules with higher tier modules if they have the same category.
---@optional false
---@type uint32
Module.tier = nil

---Chooses with what art style the module is shown inside beacons. See <a href="/Types/BeaconModuleVisualizations#art_style" title="Types/BeaconModuleVisualizations">Types/BeaconModuleVisualizations#art_style</a>. Vanilla uses "vanilla" here.
---@optional true
---@type string
Module.art_style = nil

---@optional true
---@type TintColors
Module.beacon_tint = nil

---Array of recipe names this module can be used on. If empty, the module can be used on all recipes.
---@optional true
---@type string[]
Module.limitation = nil

---<p>Array of recipe names this module can <b>not</b> be used on, implicitly allowing its use on all other recipes. This property has no effect if set to an empty table.</p><p>Note that the game converts this into a normal list of limitations internally, so reading <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/LuaItemPrototype.html#LuaItemPrototype.limitations">LuaItemPrototype.limitations</a> at runtime will be the product of both ways of defining limitations.</p>
---@optional true
---@type string[]
Module.limitation_blacklist = nil

---Mandatory when <code>limitation</code> is present. The locale key of the message that is shown when the player attempts to use the module on a recipe it can't be used on. The locale key will be prefixed with <code>item-limitation.</code> (the "category" of the locale) by the game.
---@optional true
---@type string
Module.limitation_message_key = nil

---@default true
---@optional true
---@type bool
Module.requires_beacon_alt_mode = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
Module.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
Module.burnt_result = nil

---@optional true
---@type SoundType
Module.close_sound = nil

---@optional true
---@type IconData[]
Module.dark_background_icons = nil

---@optional true
---@type FileName
Module.dark_background_icon = nil

---@optional true
---@type ItemCountType
Module.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
Module.flags = nil

---@default 1.0
---@optional true
---@type double
Module.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
Module.fuel_category = nil

---@default 1.0
---@optional true
---@type double
Module.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
Module.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
Module.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
Module.fuel_value = nil

---@optional true
---@type SoundType
Module.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
Module.pictures = nil

---@optional true
---@type PlaceAsTile
Module.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
Module.place_result = nil

---@optional true
---@type string
Module.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
Module.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
Module.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
Module.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
Module.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Module.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Module.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Module.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Module.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Module.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Module.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Module.icon_size = nil

---@default 0
---@optional true
---@type uint8
Module.icon_mipmaps = nil

---Abstract base of all vehicles.
---@class Vehicle
local Vehicle = {}

---@optional true
---@type double
Vehicle.braking_force = nil

---@optional true
---@type Energy
Vehicle.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
Vehicle.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
Vehicle.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
Vehicle.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
Vehicle.weight = nil

---@optional true
---@type TriggerEffect
Vehicle.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
Vehicle.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
Vehicle.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
Vehicle.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
Vehicle.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
Vehicle.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
Vehicle.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
Vehicle.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
Vehicle.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
Vehicle.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Vehicle.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Vehicle.corpse = nil

---@default true
---@optional true
---@type bool
Vehicle.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Vehicle.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Vehicle.dying_explosion = nil

---@optional true
---@type TriggerEffect
Vehicle.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Vehicle.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Vehicle.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Vehicle.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Vehicle.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Vehicle.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Vehicle.max_health = nil

---@default false
---@optional true
---@type bool
Vehicle.random_corpse_variation = nil

---@optional true
---@type SoundType
Vehicle.repair_sound = nil

---@default 1
---@optional true
---@type float
Vehicle.repair_speed_modifier = nil

---@optional true
---@type Resistances
Vehicle.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Vehicle.additional_pastable_entities = nil

---@optional true
---@type float
Vehicle.alert_icon_scale = nil

---@optional true
---@type vector
Vehicle.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Vehicle.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Vehicle.autoplace = nil

---@default 0
---@optional true
---@type double
Vehicle.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Vehicle.build_sound = nil

---@optional true
---@type SoundType
Vehicle.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Vehicle.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Vehicle.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Vehicle.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Vehicle.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Vehicle.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Vehicle.emissions_per_second = nil

---@optional true
---@type Color
Vehicle.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Vehicle.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Vehicle.flags = nil

---@optional true
---@type Color
Vehicle.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Vehicle.hit_visualization_box = nil

---@optional true
---@type Color
Vehicle.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Vehicle.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Vehicle.minable = nil

---@optional true
---@type SoundType
Vehicle.mined_sound = nil

---@optional true
---@type SoundType
Vehicle.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Vehicle.next_upgrade = nil

---@optional true
---@type SoundType
Vehicle.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Vehicle.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Vehicle.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Vehicle.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Vehicle.remove_decoratives = nil

---@optional true
---@type SoundType
Vehicle.rotated_sound = nil

---@default true
---@optional true
---@type bool
Vehicle.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Vehicle.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Vehicle.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Vehicle.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Vehicle.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Vehicle.subgroup = nil

---@optional true
---@type uint32
Vehicle.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Vehicle.tile_width = nil

---@optional true
---@type TriggerTargetMask
Vehicle.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Vehicle.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Vehicle.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Vehicle.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Vehicle.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Vehicle.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Vehicle.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Vehicle.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Vehicle.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Vehicle.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Vehicle.icon_size = nil

---@default 0
---@optional true
---@type uint8
Vehicle.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player receives damage.
---@class PlayerDamagedAchievement
local PlayerDamagedAchievement = {}

---This will trigger the achievement, if the amount of damage taken by the dealer, is more than this.
---@optional false
---@type float
PlayerDamagedAchievement.minimum_damage = nil

---This sets the achievement to only trigger, if you survive the minimum amount of damage. If you don't need to survive, false.
---@optional false
---@type bool
PlayerDamagedAchievement.should_survive = nil

---This will trigger the achievement, if the player takes damage from this specific entity type.
---@optional true
---@type string
PlayerDamagedAchievement.type_of_dealer = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
PlayerDamagedAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
PlayerDamagedAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
PlayerDamagedAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
PlayerDamagedAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
PlayerDamagedAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
PlayerDamagedAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
PlayerDamagedAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
PlayerDamagedAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
PlayerDamagedAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
PlayerDamagedAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
PlayerDamagedAchievement.icon_mipmaps = nil

---Simple decorative purpose objects on the map, they have no health and some of them are removed when the player builds over. Usually used for grass patches, roots, small plants etc.
---@class Decorative
local Decorative = {}

---Must contain at least 1 picture.
---@optional false
---@type SpriteVariations
Decorative.pictures = nil

---@optional true
---@type AutoplaceSpecification
Decorative.autoplace = nil

---Must contain the [0,0] point. Max radius of the collision box is 8.
---@optional true
---@type BoundingBox
Decorative.collision_box = nil

---@default doodad-layer
---@optional true
---@type CollisionMask
Decorative.collision_mask = nil

---@default false
---@optional true
---@type bool
Decorative.grows_through_rail_path = nil

---@default decorative
---@optional true
---@type RenderLayer
Decorative.render_layer = nil

---Mandatory if <code>render_layer</code> = "decals". This int16 is converted to a <a href="/Types/RenderLayer" title="Types/RenderLayer">RenderLayer</a> internally.
---@default 0
---@optional true
---@type uint8
Decorative.tile_layer = nil

---Called by <a href="/Types/DestroyDecorativesTriggerEffectItem" title="Types/DestroyDecorativesTriggerEffectItem">DestroyDecorativesTriggerEffectItem</a>.
---@optional true
---@type TriggerEffect
Decorative.trigger_effect = nil

---@optional true
---@type SoundType
Decorative.walking_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Decorative.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Decorative.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Decorative.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Decorative.order = nil

---An entity to transport gas and fluids over a distance, and between machines.
---@class Pipe
local Pipe = {}

---The area of the entity where fluid/gas inputs, and outputs.
---@optional false
---@type FluidBox
Pipe.fluid_box = nil

---@optional false
---@type BoundingBox
Pipe.horizontal_window_bounding_box = nil

---@optional false
---@type PipePictures
Pipe.pictures = nil

---@optional false
---@type BoundingBox
Pipe.vertical_window_bounding_box = nil

---@default true
---@optional true
---@type bool
Pipe.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Pipe.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Pipe.corpse = nil

---@default true
---@optional true
---@type bool
Pipe.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Pipe.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Pipe.dying_explosion = nil

---@optional true
---@type TriggerEffect
Pipe.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Pipe.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Pipe.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Pipe.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Pipe.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Pipe.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Pipe.max_health = nil

---@default false
---@optional true
---@type bool
Pipe.random_corpse_variation = nil

---@optional true
---@type SoundType
Pipe.repair_sound = nil

---@default 1
---@optional true
---@type float
Pipe.repair_speed_modifier = nil

---@optional true
---@type Resistances
Pipe.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Pipe.additional_pastable_entities = nil

---@optional true
---@type float
Pipe.alert_icon_scale = nil

---@optional true
---@type vector
Pipe.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Pipe.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Pipe.autoplace = nil

---@default 0
---@optional true
---@type double
Pipe.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Pipe.build_sound = nil

---@optional true
---@type SoundType
Pipe.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Pipe.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Pipe.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Pipe.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Pipe.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Pipe.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Pipe.emissions_per_second = nil

---@optional true
---@type Color
Pipe.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Pipe.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Pipe.flags = nil

---@optional true
---@type Color
Pipe.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Pipe.hit_visualization_box = nil

---@optional true
---@type Color
Pipe.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Pipe.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Pipe.minable = nil

---@optional true
---@type SoundType
Pipe.mined_sound = nil

---@optional true
---@type SoundType
Pipe.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Pipe.next_upgrade = nil

---@optional true
---@type SoundType
Pipe.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Pipe.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Pipe.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Pipe.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Pipe.remove_decoratives = nil

---@optional true
---@type SoundType
Pipe.rotated_sound = nil

---@default true
---@optional true
---@type bool
Pipe.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Pipe.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Pipe.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Pipe.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Pipe.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Pipe.subgroup = nil

---@optional true
---@type uint32
Pipe.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Pipe.tile_width = nil

---@optional true
---@type TriggerTargetMask
Pipe.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Pipe.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Pipe.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Pipe.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Pipe.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Pipe.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Pipe.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Pipe.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Pipe.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Pipe.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Pipe.icon_size = nil

---@default 0
---@optional true
---@type uint8
Pipe.icon_mipmaps = nil

---Used as a laser beam.
---@class Beam
local Beam = {}

---Body segment of the beam. Must have at least 1 variation.
---@optional false
---@type AnimationVariations
Beam.body = nil

---Damage interval can't be 0. A value of 1 will cause the attack to be applied each tick.
---@optional false
---@type uint32
Beam.damage_interval = nil

---Head segment of the beam.
---@optional false
---@type AnimationType
Beam.head = nil

---Tail segment of the beam.
---@optional false
---@type AnimationType
Beam.tail = nil

---@optional false
---@type double
Beam.width = nil

---@optional true
---@type Trigger
Beam.action = nil

---Whether this beams should trigger its action every damage_interval. If false, the action is instead triggered when its owner triggers shooting.
---@default false
---@optional true
---@type bool
Beam.action_triggered_automatically = nil

---@optional true
---@type AnimationVariations
Beam.body_light = nil

---End point of the beam.
---@optional true
---@type AnimationType
Beam.ending = nil

---@optional true
---@type AnimationType
Beam.ending_light = nil

---@optional true
---@type BeamLightAnimations
Beam.ground_light_animations = nil

---@optional true
---@type AnimationType
Beam.head_light = nil

---Lights are additively accumulated onto lightmap, which is multiplicatively rendered on the game world.<a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/viewtopic.php?p=435042#p435042">[1]</a>
---@optional true
---@type BeamLightAnimations
Beam.light_animations = nil

---@default true
---@optional true
---@type bool
Beam.random_end_animation_rotation = nil

---@default false
---@optional true
---@type bool
Beam.random_target_offset = nil

---Start point of the beam.
---@optional true
---@type AnimationType
Beam.start = nil

---This and the below properties ending in "_light" are considered deprecated. If they are present, then <code>light_animations</code> and <code>ground_light_animations</code> are not loaded.
---@optional true
---@type AnimationType
Beam.start_light = nil

---@optional true
---@type AnimationType
Beam.tail_light = nil

---@optional true
---@type vector
Beam.target_offset = nil

---@default true
---@optional true
---@type bool
Beam.transparent_start_end_animations = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Beam.additional_pastable_entities = nil

---@optional true
---@type float
Beam.alert_icon_scale = nil

---@optional true
---@type vector
Beam.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Beam.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Beam.autoplace = nil

---@default 0
---@optional true
---@type double
Beam.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Beam.build_sound = nil

---@optional true
---@type SoundType
Beam.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Beam.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Beam.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Beam.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Beam.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Beam.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Beam.emissions_per_second = nil

---@optional true
---@type Color
Beam.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Beam.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Beam.flags = nil

---@optional true
---@type Color
Beam.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Beam.hit_visualization_box = nil

---@optional true
---@type Color
Beam.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Beam.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Beam.minable = nil

---@optional true
---@type SoundType
Beam.mined_sound = nil

---@optional true
---@type SoundType
Beam.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Beam.next_upgrade = nil

---@optional true
---@type SoundType
Beam.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Beam.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Beam.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Beam.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Beam.remove_decoratives = nil

---@optional true
---@type SoundType
Beam.rotated_sound = nil

---@default true
---@optional true
---@type bool
Beam.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Beam.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Beam.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Beam.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Beam.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Beam.subgroup = nil

---@optional true
---@type uint32
Beam.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Beam.tile_width = nil

---@optional true
---@type TriggerTargetMask
Beam.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Beam.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Beam.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Beam.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Beam.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Beam.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Beam.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Beam.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Beam.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Beam.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Beam.icon_size = nil

---@default 0
---@optional true
---@type uint8
Beam.icon_mipmaps = nil

---Sounds used by the game that are not specific to certain prototypes.
---@class UtilitySounds
local UtilitySounds = {}

---@optional false
---@type SoundType
UtilitySounds.achievement_unlocked = nil

---@optional false
---@type SoundType
UtilitySounds.alert_destroyed = nil

---@optional false
---@type SoundType
UtilitySounds.armor_insert = nil

---@optional false
---@type SoundType
UtilitySounds.armor_remove = nil

---@optional false
---@type SoundType
UtilitySounds.axe_fighting = nil

---@optional false
---@type SoundType
UtilitySounds.axe_mining_ore = nil

---@optional false
---@type SoundType
UtilitySounds.blueprint_selection_ended = nil

---@optional false
---@type SoundType
UtilitySounds.blueprint_selection_started = nil

---@optional false
---@type SoundType
UtilitySounds.build_blueprint_small = nil

---@optional false
---@type SoundType
UtilitySounds.build_blueprint_medium = nil

---@optional false
---@type SoundType
UtilitySounds.build_blueprint_large = nil

---@optional false
---@type SoundType
UtilitySounds.build_large = nil

---@optional false
---@type SoundType
UtilitySounds.build_medium = nil

---@optional false
---@type SoundType
UtilitySounds.build_small = nil

---@optional false
---@type SoundType
UtilitySounds.cancel_deconstruction_selection_ended = nil

---@optional false
---@type SoundType
UtilitySounds.cancel_deconstruction_selection_started = nil

---@optional false
---@type SoundType
UtilitySounds.cannot_build = nil

---@optional false
---@type SoundType
UtilitySounds.clear_cursor = nil

---@optional false
---@type SoundType
UtilitySounds.confirm = nil

---@optional false
---@type SoundType
UtilitySounds.console_message = nil

---@optional false
---@type SoundType
UtilitySounds.copy_activated = nil

---@optional false
---@type SoundType
UtilitySounds.crafting_finished = nil

---@optional false
---@type SoundType
UtilitySounds.cut_activated = nil

---@optional false
---@type SoundType
UtilitySounds.deconstruct_big = nil

---@optional false
---@type SoundType
UtilitySounds.deconstruct_medium = nil

---@optional false
---@type SoundType
UtilitySounds.deconstruct_robot = nil

---@optional false
---@type SoundType
UtilitySounds.deconstruct_small = nil

---@optional false
---@type SoundType
UtilitySounds.deconstruction_selection_ended = nil

---@optional false
---@type SoundType
UtilitySounds.deconstruction_selection_started = nil

---@optional false
---@type SoundType
UtilitySounds.default_manual_repair = nil

---@optional false
---@type SoundType
UtilitySounds.drop_item = nil

---@optional false
---@type SoundType
UtilitySounds.entity_settings_pasted = nil

---@optional false
---@type SoundType
UtilitySounds.entity_settings_copied = nil

---@optional false
---@type SoundType
UtilitySounds.game_lost = nil

---@optional false
---@type SoundType
UtilitySounds.game_won = nil

---@optional false
---@type SoundType
UtilitySounds.gui_click = nil

---@optional false
---@type SoundType
UtilitySounds.inventory_click = nil

---@optional false
---@type SoundType
UtilitySounds.inventory_move = nil

---@optional false
---@type SoundType
UtilitySounds.item_deleted = nil

---@optional false
---@type SoundType
UtilitySounds.item_spawned = nil

---@optional false
---@type SoundType
UtilitySounds.list_box_click = nil

---@optional false
---@type SoundType
UtilitySounds.metal_walking_sound = nil

---@optional false
---@type SoundType
UtilitySounds.mining_wood = nil

---@optional false
---@type SoundType
UtilitySounds.new_objective = nil

---@optional false
---@type SoundType
UtilitySounds.paste_activated = nil

---@optional false
---@type SoundType
UtilitySounds.picked_up_item = nil

---@optional false
---@type SoundType
UtilitySounds.rail_plan_start = nil

---@optional false
---@type SoundType
UtilitySounds.research_completed = nil

---@optional false
---@type SoundType
UtilitySounds.rotated_big = nil

---@optional false
---@type SoundType
UtilitySounds.rotated_medium = nil

---@optional false
---@type SoundType
UtilitySounds.rotated_small = nil

---@optional false
---@type SoundType
UtilitySounds.scenario_message = nil

---@optional false
---@type SoundType
UtilitySounds.smart_pipette = nil

---@optional false
---@type SoundType
UtilitySounds.switch_gun = nil

---@optional false
---@type SoundType
UtilitySounds.tutorial_notice = nil

---@optional false
---@type SoundType
UtilitySounds.undo = nil

---@optional false
---@type SoundType
UtilitySounds.upgrade_selection_ended = nil

---@optional false
---@type SoundType
UtilitySounds.upgrade_selection_started = nil

---@optional false
---@type SoundType
UtilitySounds.wire_connect_pole = nil

---@optional false
---@type SoundType
UtilitySounds.wire_disconnect = nil

---@optional false
---@type SoundType
UtilitySounds.wire_pickup = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
UtilitySounds.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
UtilitySounds.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
UtilitySounds.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
UtilitySounds.order = nil

---A <a href="/Storage_tank" title="Storage tank">storage tank</a>.
---@class StorageTank
local StorageTank = {}

---<p>Must be positive.</p><p>Used for determining the x position inside the flow_sprite when drawing the storage tank. Does not affect gameplay.</p><p>The x position of the sprite will be <code>((game.tick&nbsp;% flow_length_in_ticks) ÷ flow_length_in_ticks) × (flow_sprite.width - 32)</code>. This means, that over flow_length_in_ticks ticks, the part of the flow_sprite that is drawn in-game is incrementally moved from most-left to most-right inside the actual sprite, that part always has a width of 32px. After flow_length_in_ticks, the part of the flow_sprite that is drawn will start from the left again.</p>
---@optional false
---@type uint32
StorageTank.flow_length_in_ticks = nil

---@optional false
---@type FluidBox
StorageTank.fluid_box = nil

---@optional false
---@type StorageTankPictures
StorageTank.pictures = nil

---The location of the window showing the contents. Note that for window_background the width and height are determined by the sprite and window_bounding_box only determines the drawing location. For fluid_background the width is determined by the sprite and the height and drawing location are determined by window_bounding_box.
---@optional false
---@type BoundingBox
StorageTank.window_bounding_box = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type CircuitConnectorSprites[]
StorageTank.circuit_connector_sprites = nil

---Mandatory if circuit_wire_max_distance > 0.
---@optional true
---@type WireConnectionPoint[]
StorageTank.circuit_wire_connection_points = nil

---@default 0
---@optional true
---@type double
StorageTank.circuit_wire_max_distance = nil

---@default true
---@optional true
---@type bool
StorageTank.draw_circuit_wires = nil

---@default true
---@optional true
---@type bool
StorageTank.draw_copper_wires = nil

---If the icons of fluids shown in alt-mode should be scaled to the storage tank's size.
---@default true
---@optional true
---@type bool
StorageTank.scale_info_icons = nil

---@default false
---@optional true
---@type bool
StorageTank.two_direction_only = nil

---@default true
---@optional true
---@type bool
StorageTank.alert_when_damaged = nil

---@optional true
---@type AttackReaction
StorageTank.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
StorageTank.corpse = nil

---@default true
---@optional true
---@type bool
StorageTank.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
StorageTank.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
StorageTank.dying_explosion = nil

---@optional true
---@type TriggerEffect
StorageTank.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
StorageTank.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
StorageTank.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
StorageTank.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
StorageTank.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
StorageTank.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
StorageTank.max_health = nil

---@default false
---@optional true
---@type bool
StorageTank.random_corpse_variation = nil

---@optional true
---@type SoundType
StorageTank.repair_sound = nil

---@default 1
---@optional true
---@type float
StorageTank.repair_speed_modifier = nil

---@optional true
---@type Resistances
StorageTank.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
StorageTank.additional_pastable_entities = nil

---@optional true
---@type float
StorageTank.alert_icon_scale = nil

---@optional true
---@type vector
StorageTank.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
StorageTank.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
StorageTank.autoplace = nil

---@default 0
---@optional true
---@type double
StorageTank.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
StorageTank.build_sound = nil

---@optional true
---@type SoundType
StorageTank.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
StorageTank.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
StorageTank.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
StorageTank.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
StorageTank.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
StorageTank.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
StorageTank.emissions_per_second = nil

---@optional true
---@type Color
StorageTank.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
StorageTank.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
StorageTank.flags = nil

---@optional true
---@type Color
StorageTank.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
StorageTank.hit_visualization_box = nil

---@optional true
---@type Color
StorageTank.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
StorageTank.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
StorageTank.minable = nil

---@optional true
---@type SoundType
StorageTank.mined_sound = nil

---@optional true
---@type SoundType
StorageTank.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
StorageTank.next_upgrade = nil

---@optional true
---@type SoundType
StorageTank.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
StorageTank.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
StorageTank.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
StorageTank.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
StorageTank.remove_decoratives = nil

---@optional true
---@type SoundType
StorageTank.rotated_sound = nil

---@default true
---@optional true
---@type bool
StorageTank.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
StorageTank.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
StorageTank.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
StorageTank.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
StorageTank.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
StorageTank.subgroup = nil

---@optional true
---@type uint32
StorageTank.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
StorageTank.tile_width = nil

---@optional true
---@type TriggerTargetMask
StorageTank.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
StorageTank.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
StorageTank.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
StorageTank.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
StorageTank.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
StorageTank.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
StorageTank.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
StorageTank.order = nil

---Path to the icon file.
---@optional true
---@type FileName
StorageTank.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
StorageTank.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
StorageTank.icon_size = nil

---@default 0
---@optional true
---@type uint8
StorageTank.icon_mipmaps = nil

---This entity will be a priority target for units/turrets, who will choose to attack it even if it does not block their path.  Use <a href="/Prototype/SimpleEntityWithOwner" title="Prototype/SimpleEntityWithOwner">Prototype/SimpleEntityWithOwner</a> for entities that are only attacked when they block enemies.
---@class SimpleEntityWithForce
local SimpleEntityWithForce = {}

---Must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type AnimationVariations
SimpleEntityWithForce.animations = nil

---Must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type Sprite4Way
SimpleEntityWithForce.picture = nil

---Must have one of 'picture', 'pictures' or 'animations' defined.
---@optional true
---@type SpriteVariations
SimpleEntityWithForce.pictures = nil

---@default false
---@optional true
---@type bool
SimpleEntityWithForce.random_animation_offset = nil

---Whether a random graphics variation is chosen when placing the entity/creating it via script/creating it via map generation. If this is false, the entity will use the first variation instead of a random one.
---@default true
---@optional true
---@type bool
SimpleEntityWithForce.random_variation_on_create = nil

---@default object
---@optional true
---@type RenderLayer
SimpleEntityWithForce.render_layer = nil

---@default 0
---@optional true
---@type int8
SimpleEntityWithForce.secondary_draw_order = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithForce.alert_when_damaged = nil

---@optional true
---@type AttackReaction
SimpleEntityWithForce.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
SimpleEntityWithForce.corpse = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithForce.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
SimpleEntityWithForce.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
SimpleEntityWithForce.dying_explosion = nil

---@optional true
---@type TriggerEffect
SimpleEntityWithForce.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
SimpleEntityWithForce.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
SimpleEntityWithForce.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
SimpleEntityWithForce.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
SimpleEntityWithForce.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
SimpleEntityWithForce.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
SimpleEntityWithForce.max_health = nil

---@default false
---@optional true
---@type bool
SimpleEntityWithForce.random_corpse_variation = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.repair_sound = nil

---@default 1
---@optional true
---@type float
SimpleEntityWithForce.repair_speed_modifier = nil

---@optional true
---@type Resistances
SimpleEntityWithForce.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SimpleEntityWithForce.additional_pastable_entities = nil

---@optional true
---@type float
SimpleEntityWithForce.alert_icon_scale = nil

---@optional true
---@type vector
SimpleEntityWithForce.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithForce.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SimpleEntityWithForce.autoplace = nil

---@default 0
---@optional true
---@type double
SimpleEntityWithForce.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.build_sound = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SimpleEntityWithForce.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SimpleEntityWithForce.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SimpleEntityWithForce.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SimpleEntityWithForce.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SimpleEntityWithForce.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SimpleEntityWithForce.emissions_per_second = nil

---@optional true
---@type Color
SimpleEntityWithForce.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SimpleEntityWithForce.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SimpleEntityWithForce.flags = nil

---@optional true
---@type Color
SimpleEntityWithForce.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SimpleEntityWithForce.hit_visualization_box = nil

---@optional true
---@type Color
SimpleEntityWithForce.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SimpleEntityWithForce.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SimpleEntityWithForce.minable = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.mined_sound = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SimpleEntityWithForce.next_upgrade = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SimpleEntityWithForce.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SimpleEntityWithForce.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SimpleEntityWithForce.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SimpleEntityWithForce.remove_decoratives = nil

---@optional true
---@type SoundType
SimpleEntityWithForce.rotated_sound = nil

---@default true
---@optional true
---@type bool
SimpleEntityWithForce.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SimpleEntityWithForce.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SimpleEntityWithForce.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SimpleEntityWithForce.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SimpleEntityWithForce.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SimpleEntityWithForce.subgroup = nil

---@optional true
---@type uint32
SimpleEntityWithForce.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SimpleEntityWithForce.tile_width = nil

---@optional true
---@type TriggerTargetMask
SimpleEntityWithForce.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SimpleEntityWithForce.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SimpleEntityWithForce.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SimpleEntityWithForce.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SimpleEntityWithForce.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SimpleEntityWithForce.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SimpleEntityWithForce.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SimpleEntityWithForce.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SimpleEntityWithForce.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SimpleEntityWithForce.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SimpleEntityWithForce.icon_size = nil

---@default 0
---@optional true
---@type uint8
SimpleEntityWithForce.icon_mipmaps = nil

---Constants used by the game that are not specific to certain prototypes. See <a rel="nofollow" class="external text" href="https://github.com/wube/factorio-data/blob/master/core/prototypes/utility-constants.lua">utility-constants.lua</a> for the values used by the base game.
---@class UtilityConstants
local UtilityConstants = {}

---@optional false
---@type Color
UtilityConstants.artillery_range_visualization_color = nil

---@optional false
---@type UtilityConstantsBonusGuiOrdering
UtilityConstants.bonus_gui_ordering = nil

---@optional false
---@type Color
UtilityConstants.building_buildable_tint = nil

---@optional false
---@type Color
UtilityConstants.building_buildable_too_far_tint = nil

---@optional false
---@type Color
UtilityConstants.building_ignorable_tint = nil

---@optional false
---@type Color
UtilityConstants.building_no_tint = nil

---@optional false
---@type Color
UtilityConstants.building_not_buildable_tint = nil

---@optional false
---@type Color
UtilityConstants.capsule_range_visualization_color = nil

---@optional false
---@type UtilityConstantsChart
UtilityConstants.chart = nil

---@optional false
---@type Color
UtilityConstants.checkerboard_black = nil

---@optional false
---@type Color
UtilityConstants.checkerboard_white = nil

---@optional false
---@type uint32
UtilityConstants.clipboard_history_size = nil

---@optional false
---@type UtilityConstantsColorFilter[]
UtilityConstants.color_filters = nil

---@optional false
---@type int
UtilityConstants.count_button_size = nil

---@optional false
---@type DaytimeColorLookupTable
UtilityConstants.daytime_color_lookup = nil

---@optional false
---@type Color
UtilityConstants.deconstruct_mark_tint = nil

---@optional false
---@type float
UtilityConstants.default_alert_icon_scale = nil

---@optional false
---@type Color
UtilityConstants.default_enemy_force_color = nil

---@optional false
---@type Color
UtilityConstants.default_other_force_color = nil

---@optional false
---@type Color
UtilityConstants.default_player_force_color = nil

---@optional false
---@type Color
UtilityConstants.default_scorch_mark_color = nil

---@optional false
---@type Color
UtilityConstants.disabled_recipe_slot_background_tint = nil

---@optional false
---@type Color
UtilityConstants.disabled_recipe_slot_tint = nil

---@optional false
---@type Color
UtilityConstants.enabled_recipe_slot_tint = nil

---@optional false
---@type Color
UtilityConstants.entity_button_background_color = nil

---@optional false
---@type table
UtilityConstants.entity_renderer_search_box_limits = nil

---@optional false
---@type Color
UtilityConstants.equipment_default_background_border_color = nil

---@optional false
---@type Color
UtilityConstants.equipment_default_background_color = nil

---@optional false
---@type Color
UtilityConstants.equipment_default_grabbed_background_color = nil

---@optional false
---@type Color
UtilityConstants.filter_outline_color = nil

---@optional false
---@type Color
UtilityConstants.forced_enabled_recipe_slot_background_tint = nil

---@optional false
---@type Color
UtilityConstants.ghost_tint = nil

---@optional false
---@type Color
UtilityConstants.icon_shadow_color = nil

---@optional false
---@type float
UtilityConstants.icon_shadow_inset = nil

---@optional false
---@type float
UtilityConstants.icon_shadow_radius = nil

---@optional false
---@type float
UtilityConstants.icon_shadow_sharpness = nil

---@optional false
---@type Color
UtilityConstants.item_outline_color = nil

---@optional false
---@type float
UtilityConstants.item_outline_inset = nil

---@optional false
---@type float
UtilityConstants.item_outline_radius = nil

---@optional false
---@type float
UtilityConstants.item_outline_sharpness = nil

---Can be set to anything from range 0 to 255, but larger values will be clamped to 160. Setting it to larger values can have performance impact (growing geometrically).
---@optional false
---@type uint8
UtilityConstants.light_renderer_search_distance_limit = nil

---@optional false
---@type FileName
UtilityConstants.main_menu_background_image_location = nil

---@optional false
---@type float
UtilityConstants.main_menu_background_vignette_intensity = nil

---@optional false
---@type float
UtilityConstants.main_menu_background_vignette_sharpness = nil

---The strings represent the names of the simulations.
---@optional false
---@type table<string, SimulationDefinition>
UtilityConstants.main_menu_simulations = nil

---@optional false
---@type double
UtilityConstants.manual_rail_building_reach_modifier = nil

---@optional false
---@type UtilityConstantsMapEditor
UtilityConstants.map_editor = nil

---@optional false
---@type uint8
UtilityConstants.max_terrain_building_size = nil

---@optional false
---@type float
UtilityConstants.medium_area_size = nil

---@optional false
---@type float
UtilityConstants.medium_blueprint_area_size = nil

---@optional false
---@type FileName
UtilityConstants.missing_preview_sprite_location = nil

---The inner tables have the following key/value pairs. The table with name = default must exist and be the first member of the array.
---@optional false
---@type UtilityConstantsPlayerColor[]
UtilityConstants.player_colors = nil

---@optional false
---@type Color
UtilityConstants.rail_planner_count_button_color = nil

---@optional false
---@type Color[]
UtilityConstants.rail_segment_colors = nil

---@optional false
---@type uint32
UtilityConstants.recipe_step_limit = nil

---@optional false
---@type Color
UtilityConstants.script_command_console_chat_color = nil

---@optional false
---@type Color
UtilityConstants.server_command_console_chat_color = nil

---@optional false
---@type float
UtilityConstants.small_area_size = nil

---@optional false
---@type float
UtilityConstants.small_blueprint_area_size = nil

---@optional false
---@type Color
UtilityConstants.tile_ghost_tint = nil

---@optional false
---@type Color
UtilityConstants.train_button_hovered_tint = nil

---@optional false
---@type Color
UtilityConstants.train_destination_full_color = nil

---@optional false
---@type uint32
UtilityConstants.train_inactivity_wait_condition_default = nil

---@optional false
---@type Color
UtilityConstants.train_no_path_color = nil

---@optional false
---@type UtilityConstantsTrainPathFinding
UtilityConstants.train_path_finding = nil

---@optional false
---@type uint32
UtilityConstants.train_temporary_stop_wait_time = nil

---@optional false
---@type uint32
UtilityConstants.train_time_wait_condition_default = nil

---@optional false
---@type vector
UtilityConstants.tree_leaf_distortion_distortion_far = nil

---@optional false
---@type vector
UtilityConstants.tree_leaf_distortion_distortion_near = nil

---@optional false
---@type vector
UtilityConstants.tree_leaf_distortion_speed_far = nil

---@optional false
---@type vector
UtilityConstants.tree_leaf_distortion_speed_near = nil

---@optional false
---@type vector
UtilityConstants.tree_leaf_distortion_strength_far = nil

---@optional false
---@type vector
UtilityConstants.tree_leaf_distortion_strength_near = nil

---@optional false
---@type float
UtilityConstants.tree_shadow_roughness = nil

---@optional false
---@type float
UtilityConstants.tree_shadow_speed = nil

---@optional false
---@type Color
UtilityConstants.turret_range_visualization_color = nil

---@optional false
---@type double
UtilityConstants.unit_group_max_pursue_distance = nil

---@optional false
---@type int8
UtilityConstants.unit_group_pathfind_resolution = nil

---@optional false
---@type bool
UtilityConstants.zoom_to_world_can_use_nightvision = nil

---@optional false
---@type DaytimeColorLookupTable
UtilityConstants.zoom_to_world_daytime_color_lookup = nil

---@optional false
---@type float
UtilityConstants.zoom_to_world_effect_strength = nil

---@optional true
---@type table<string, float>
UtilityConstants.default_alert_icon_scale_by_type = nil

---@optional true
---@type table<string, vector>
UtilityConstants.default_alert_icon_shift_by_type = nil

---The strings are entity types.
---@optional true
---@type table<string, TriggerTargetMask>
UtilityConstants.default_trigger_target_mask_by_type = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
UtilityConstants.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
UtilityConstants.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
UtilityConstants.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
UtilityConstants.order = nil

---The projectile shot by <a href="/Artillery" title="Artillery">artillery</a>.
---@class ArtilleryProjectile
local ArtilleryProjectile = {}

---@optional false
---@type bool
ArtilleryProjectile.reveal_map = nil

---@optional true
---@type Trigger
ArtilleryProjectile.action = nil

---@optional true
---@type SpriteType
ArtilleryProjectile.chart_picture = nil

---@optional true
---@type Trigger
ArtilleryProjectile.final_action = nil

---@default 1
---@optional true
---@type float
ArtilleryProjectile.height_from_ground = nil

---@optional true
---@type SpriteType
ArtilleryProjectile.picture = nil

---Whether the picture of the projectile is rotated to match the direction of travel.
---@default true
---@optional true
---@type bool
ArtilleryProjectile.rotatable = nil

---@optional true
---@type SpriteType
ArtilleryProjectile.shadow = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
ArtilleryProjectile.additional_pastable_entities = nil

---@optional true
---@type float
ArtilleryProjectile.alert_icon_scale = nil

---@optional true
---@type vector
ArtilleryProjectile.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
ArtilleryProjectile.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
ArtilleryProjectile.autoplace = nil

---@default 0
---@optional true
---@type double
ArtilleryProjectile.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
ArtilleryProjectile.build_sound = nil

---@optional true
---@type SoundType
ArtilleryProjectile.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
ArtilleryProjectile.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
ArtilleryProjectile.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
ArtilleryProjectile.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
ArtilleryProjectile.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
ArtilleryProjectile.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
ArtilleryProjectile.emissions_per_second = nil

---@optional true
---@type Color
ArtilleryProjectile.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
ArtilleryProjectile.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
ArtilleryProjectile.flags = nil

---@optional true
---@type Color
ArtilleryProjectile.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
ArtilleryProjectile.hit_visualization_box = nil

---@optional true
---@type Color
ArtilleryProjectile.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
ArtilleryProjectile.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
ArtilleryProjectile.minable = nil

---@optional true
---@type SoundType
ArtilleryProjectile.mined_sound = nil

---@optional true
---@type SoundType
ArtilleryProjectile.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
ArtilleryProjectile.next_upgrade = nil

---@optional true
---@type SoundType
ArtilleryProjectile.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
ArtilleryProjectile.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
ArtilleryProjectile.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
ArtilleryProjectile.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
ArtilleryProjectile.remove_decoratives = nil

---@optional true
---@type SoundType
ArtilleryProjectile.rotated_sound = nil

---@default true
---@optional true
---@type bool
ArtilleryProjectile.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
ArtilleryProjectile.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
ArtilleryProjectile.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
ArtilleryProjectile.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
ArtilleryProjectile.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
ArtilleryProjectile.subgroup = nil

---@optional true
---@type uint32
ArtilleryProjectile.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
ArtilleryProjectile.tile_width = nil

---@optional true
---@type TriggerTargetMask
ArtilleryProjectile.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
ArtilleryProjectile.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
ArtilleryProjectile.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
ArtilleryProjectile.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
ArtilleryProjectile.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
ArtilleryProjectile.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
ArtilleryProjectile.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
ArtilleryProjectile.order = nil

---Path to the icon file.
---@optional true
---@type FileName
ArtilleryProjectile.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
ArtilleryProjectile.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
ArtilleryProjectile.icon_size = nil

---@default 0
---@optional true
---@type uint8
ArtilleryProjectile.icon_mipmaps = nil

---Abstract base of all entities in the game. Entity is basically everything that can be on the map (except tiles). For in game script access to entity, take a look at <a rel="nofollow" class="external text" href="http://lua-api.factorio.com/latest/LuaEntity.html">LuaEntity</a>
---@class Entity
local Entity = {}

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Entity.additional_pastable_entities = nil

---@optional true
---@type float
Entity.alert_icon_scale = nil

---@optional true
---@type vector
Entity.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Entity.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Entity.autoplace = nil

---@default 0
---@optional true
---@type double
Entity.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Entity.build_sound = nil

---@optional true
---@type SoundType
Entity.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Entity.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Entity.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Entity.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Entity.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Entity.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Entity.emissions_per_second = nil

---@optional true
---@type Color
Entity.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Entity.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Entity.flags = nil

---@optional true
---@type Color
Entity.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Entity.hit_visualization_box = nil

---@optional true
---@type Color
Entity.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Entity.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Entity.minable = nil

---@optional true
---@type SoundType
Entity.mined_sound = nil

---@optional true
---@type SoundType
Entity.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Entity.next_upgrade = nil

---@optional true
---@type SoundType
Entity.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Entity.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Entity.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Entity.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Entity.remove_decoratives = nil

---@optional true
---@type SoundType
Entity.rotated_sound = nil

---@default true
---@optional true
---@type bool
Entity.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Entity.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Entity.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Entity.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Entity.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Entity.subgroup = nil

---@optional true
---@type uint32
Entity.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Entity.tile_width = nil

---@optional true
---@type TriggerTargetMask
Entity.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Entity.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Entity.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Entity.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Entity.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Entity.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Entity.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Entity.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Entity.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Entity.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Entity.icon_size = nil

---@default 0
---@optional true
---@type uint8
Entity.icon_mipmaps = nil

---A <a href="/Blueprint" title="Blueprint">blueprint</a>.
---@class BlueprintItem
local BlueprintItem = {}

---The color of the rectangle used when alt-selection is done in-game.
---@optional false
---@type Color
BlueprintItem.alt_selection_color = nil

---The type of cursor box used to render selection of entities/tiles when alt selecting. Possible values are identical to normal selection_cursor_box_type.
---@optional false
---@type string
BlueprintItem.alt_selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool alt-selects things in-game. Possible values are identical to normal selection_mode.
---@optional false
---@type SelectionToolSelectionMode
BlueprintItem.alt_selection_mode = nil

---The color of the rectangle used when standard selection is done in-game.
---@optional false
---@type Color
BlueprintItem.selection_color = nil

---The type of cursor box used to render selection of entities/tiles when standard selecting.
---@optional false
---@type string
BlueprintItem.selection_cursor_box_type = nil

---A list of selection mode flags that define how the selection tool selects things in-game.
---@optional false
---@type SelectionToolSelectionMode
BlueprintItem.selection_mode = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
BlueprintItem.alt_entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
BlueprintItem.alt_entity_filters = nil

---@optional true
---@type string[]
BlueprintItem.alt_entity_type_filters = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
BlueprintItem.alt_tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
BlueprintItem.alt_tile_filters = nil

---If tiles should be included in the selection regardless of entities also being in the selection. This is a visual only setting.
---@default false
---@optional true
---@type bool
BlueprintItem.always_include_tiles = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
BlueprintItem.entity_filter_mode = nil

---Array of <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a> names.
---@optional true
---@type string[]
BlueprintItem.entity_filters = nil

---@optional true
---@type string[]
BlueprintItem.entity_type_filters = nil

---Name of a <a href="/Prototype/MouseCursor" title="Prototype/MouseCursor">Prototype/MouseCursor</a>.
---@default selection-tool-cursor
---@optional true
---@type string
BlueprintItem.mouse_cursor = nil

---Whether this is shown in the blueprint library. Unused as of 0.18.13 as the ability to show any selection tools in the blueprint library was removed.
---@default false
---@optional true
---@type bool
BlueprintItem.show_in_library = nil

---One of "whitelist" and "blacklist".
---@default whitelist
---@optional true
---@type WhitelistBlacklist
BlueprintItem.tile_filter_mode = nil

---Array of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a> names.
---@optional true
---@type string[]
BlueprintItem.tile_filters = nil

---The default label color the item will use.
---@optional true
---@type Color
BlueprintItem.default_label_color = nil

---If the item will draw its label when held in the cursor in place of the item count.
---@default false
---@optional true
---@type bool
BlueprintItem.draw_label_for_cursor_render = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
BlueprintItem.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
BlueprintItem.burnt_result = nil

---@optional true
---@type SoundType
BlueprintItem.close_sound = nil

---@optional true
---@type IconData[]
BlueprintItem.dark_background_icons = nil

---@optional true
---@type FileName
BlueprintItem.dark_background_icon = nil

---@optional true
---@type ItemCountType
BlueprintItem.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
BlueprintItem.flags = nil

---@default 1.0
---@optional true
---@type double
BlueprintItem.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
BlueprintItem.fuel_category = nil

---@default 1.0
---@optional true
---@type double
BlueprintItem.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
BlueprintItem.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
BlueprintItem.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
BlueprintItem.fuel_value = nil

---@optional true
---@type SoundType
BlueprintItem.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
BlueprintItem.pictures = nil

---@optional true
---@type PlaceAsTile
BlueprintItem.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
BlueprintItem.place_result = nil

---@optional true
---@type string
BlueprintItem.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
BlueprintItem.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
BlueprintItem.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
BlueprintItem.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
BlueprintItem.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
BlueprintItem.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
BlueprintItem.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
BlueprintItem.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
BlueprintItem.order = nil

---Path to the icon file.
---@optional true
---@type FileName
BlueprintItem.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
BlueprintItem.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
BlueprintItem.icon_size = nil

---@default 0
---@optional true
---@type uint8
BlueprintItem.icon_mipmaps = nil

---This prototype definition is used for receiving an achievement when the player deconstructs enough entities with construction robots.
---@class DeconstructWithRobotsAchievement
local DeconstructWithRobotsAchievement = {}

---This will trigger the achievement, if enough entities were deconstructed using construction robots.
---@optional false
---@type uint32
DeconstructWithRobotsAchievement.amount = nil

---If this is set to false, it is not possible to complete the achievement on the peaceful difficulty setting or when the enemy base generation settings have been changed.
---@default true
---@optional true
---@type bool
DeconstructWithRobotsAchievement.allowed_without_fight = nil

---@default false
---@optional true
---@type bool
DeconstructWithRobotsAchievement.hidden = nil

---Unusable by mods, as this refers to unlocking the achievement through Steam.
---@optional true
---@type string
DeconstructWithRobotsAchievement.steam_stats_name = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
DeconstructWithRobotsAchievement.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
DeconstructWithRobotsAchievement.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
DeconstructWithRobotsAchievement.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
DeconstructWithRobotsAchievement.order = nil

---Path to the icon file.
---@optional true
---@type FileName
DeconstructWithRobotsAchievement.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
DeconstructWithRobotsAchievement.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
DeconstructWithRobotsAchievement.icon_size = nil

---@default 0
---@optional true
---@type uint8
DeconstructWithRobotsAchievement.icon_mipmaps = nil

---The abstract base of both rail prototypes.
---@class Rail
local Rail = {}

---@optional false
---@type RailRemnantsPictures
Rail.pictures = nil

---Sound played when a character walks over this rail.
---@optional true
---@type SoundType
Rail.walking_sound = nil

---@default true
---@optional true
---@type bool
Rail.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Rail.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Rail.corpse = nil

---@default true
---@optional true
---@type bool
Rail.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Rail.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Rail.dying_explosion = nil

---@optional true
---@type TriggerEffect
Rail.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Rail.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Rail.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Rail.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Rail.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Rail.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Rail.max_health = nil

---@default false
---@optional true
---@type bool
Rail.random_corpse_variation = nil

---@optional true
---@type SoundType
Rail.repair_sound = nil

---@default 1
---@optional true
---@type float
Rail.repair_speed_modifier = nil

---@optional true
---@type Resistances
Rail.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Rail.additional_pastable_entities = nil

---@optional true
---@type float
Rail.alert_icon_scale = nil

---@optional true
---@type vector
Rail.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Rail.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Rail.autoplace = nil

---@default 0
---@optional true
---@type double
Rail.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Rail.build_sound = nil

---@optional true
---@type SoundType
Rail.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Rail.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Rail.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Rail.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Rail.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Rail.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Rail.emissions_per_second = nil

---@optional true
---@type Color
Rail.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Rail.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Rail.flags = nil

---@optional true
---@type Color
Rail.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Rail.hit_visualization_box = nil

---@optional true
---@type Color
Rail.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Rail.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Rail.minable = nil

---@optional true
---@type SoundType
Rail.mined_sound = nil

---@optional true
---@type SoundType
Rail.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Rail.next_upgrade = nil

---@optional true
---@type SoundType
Rail.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Rail.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Rail.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Rail.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Rail.remove_decoratives = nil

---@optional true
---@type SoundType
Rail.rotated_sound = nil

---@default true
---@optional true
---@type bool
Rail.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Rail.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Rail.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Rail.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Rail.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Rail.subgroup = nil

---@optional true
---@type uint32
Rail.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Rail.tile_width = nil

---@optional true
---@type TriggerTargetMask
Rail.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Rail.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Rail.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Rail.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Rail.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Rail.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Rail.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Rail.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Rail.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Rail.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Rail.icon_size = nil

---@default 0
---@optional true
---@type uint8
Rail.icon_mipmaps = nil

---Entity that attacks players.
---@class Unit
local Unit = {}

---Requires animation in attack_parameters. Requires ammo_type in attack_parameters.
---@optional false
---@type AttackParameters
Unit.attack_parameters = nil

---How fast the <code>run_animation</code> frames are advanced. The animations are advanced animation_speed frames per <code>distance_per_frame</code> that the unit moves.
---@optional false
---@type float
Unit.distance_per_frame = nil

---@optional false
---@type uint32
Unit.distraction_cooldown = nil

---Movement speed of the unit in the world, in tiles per tick. Must be equal to or greater than 0.
---@optional false
---@type float
Unit.movement_speed = nil

---The amount of pollution that has to be absorbed by the unit's spawner before the unit will leave the spawner and attack the source of the pollution.
---@optional false
---@type float
Unit.pollution_to_join_attack = nil

---@optional false
---@type RotatedAnimation
Unit.run_animation = nil

---Note: Setting to 50 or above can lead to undocumented behavior of individual units creating groups on their own when attacking or being attacked.
---@optional false
---@type double
Unit.vision_distance = nil

---@default false
---@optional true
---@type bool
Unit.affected_by_tiles = nil

---@optional true
---@type UnitAISettings
Unit.ai_settings = nil

---@optional true
---@type UnitAlternativeAttackingFrameSequence
Unit.alternative_attacking_frame_sequence = nil

---@default false
---@optional true
---@type bool
Unit.can_open_gates = nil

---The sound file to play when entity dies.
---@optional true
---@type SoundType
Unit.dying_sound = nil

---If the unit is immune to movement by belts.
---@default false
---@optional true
---@type bool
Unit.has_belt_immunity = nil

---@optional true
---@type LightDefinition
Unit.light = nil

---@default 50
---@optional true
---@type double
Unit.max_pursue_distance = nil

---@default 600
---@optional true
---@type uint32
Unit.min_pursue_time = nil

---@default false
---@optional true
---@type bool
Unit.move_while_shooting = nil

---@default 0
---@optional true
---@type uint32
Unit.radar_range = nil

---@default object
---@optional true
---@type RenderLayer
Unit.render_layer = nil

---@default 0.025
---@optional true
---@type float
Unit.rotation_speed = nil

---Ignored if <code>walking_sounds</code> is not defined.
---@optional true
---@type float[]
Unit.running_sound_animation_positions = nil

---@default 1
---@optional true
---@type double
Unit.spawning_time_modifier = nil

---@optional true
---@type SoundType
Unit.walking_sound = nil

---@default true
---@optional true
---@type bool
Unit.alert_when_damaged = nil

---@optional true
---@type AttackReaction
Unit.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
Unit.corpse = nil

---@default true
---@optional true
---@type bool
Unit.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
Unit.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
Unit.dying_explosion = nil

---@optional true
---@type TriggerEffect
Unit.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
Unit.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
Unit.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
Unit.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
Unit.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
Unit.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
Unit.max_health = nil

---@default false
---@optional true
---@type bool
Unit.random_corpse_variation = nil

---@optional true
---@type SoundType
Unit.repair_sound = nil

---@default 1
---@optional true
---@type float
Unit.repair_speed_modifier = nil

---@optional true
---@type Resistances
Unit.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
Unit.additional_pastable_entities = nil

---@optional true
---@type float
Unit.alert_icon_scale = nil

---@optional true
---@type vector
Unit.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
Unit.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
Unit.autoplace = nil

---@default 0
---@optional true
---@type double
Unit.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
Unit.build_sound = nil

---@optional true
---@type SoundType
Unit.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
Unit.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
Unit.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
Unit.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
Unit.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
Unit.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
Unit.emissions_per_second = nil

---@optional true
---@type Color
Unit.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
Unit.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
Unit.flags = nil

---@optional true
---@type Color
Unit.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
Unit.hit_visualization_box = nil

---@optional true
---@type Color
Unit.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
Unit.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
Unit.minable = nil

---@optional true
---@type SoundType
Unit.mined_sound = nil

---@optional true
---@type SoundType
Unit.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
Unit.next_upgrade = nil

---@optional true
---@type SoundType
Unit.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
Unit.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
Unit.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
Unit.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
Unit.remove_decoratives = nil

---@optional true
---@type SoundType
Unit.rotated_sound = nil

---@default true
---@optional true
---@type bool
Unit.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
Unit.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
Unit.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
Unit.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
Unit.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
Unit.subgroup = nil

---@optional true
---@type uint32
Unit.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
Unit.tile_width = nil

---@optional true
---@type TriggerTargetMask
Unit.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
Unit.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
Unit.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
Unit.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
Unit.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
Unit.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
Unit.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
Unit.order = nil

---Path to the icon file.
---@optional true
---@type FileName
Unit.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
Unit.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
Unit.icon_size = nil

---@default 0
---@optional true
---@type uint8
Unit.icon_mipmaps = nil

---Ammo used for a gun.
---@class AmmoItem
local AmmoItem = {}

---<p>When using an array of AmmoType, the AmmoType has an extra property:</p><ul><li>source_type - <a href="/Types/AmmoSourceType" title="Types/AmmoSourceType">AmmoSourceType</a> - Mandatory. - Defines for which kind of entity this ammo type applies. Each entity kind can only be used once per array.</li></ul><p>When using a plain <a href="/Types/AmmoType" title="Types/AmmoType">AmmoType</a>, the ammo type applies to everything ("default").</p>
---@optional false
---@type AmmoType[]|AmmoType
AmmoItem.ammo_type = nil

---Number of shots before ammo item is consumed. Must be >= 1.
---@default 1
---@optional true
---@type float
AmmoItem.magazine_size = nil

---Amount of extra time (in ticks) it takes to reload the weapon after depleting the magazine. Must be >= 0.
---@default 0
---@optional true
---@type float
AmmoItem.reload_time = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
AmmoItem.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
AmmoItem.burnt_result = nil

---@optional true
---@type SoundType
AmmoItem.close_sound = nil

---@optional true
---@type IconData[]
AmmoItem.dark_background_icons = nil

---@optional true
---@type FileName
AmmoItem.dark_background_icon = nil

---@optional true
---@type ItemCountType
AmmoItem.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
AmmoItem.flags = nil

---@default 1.0
---@optional true
---@type double
AmmoItem.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
AmmoItem.fuel_category = nil

---@default 1.0
---@optional true
---@type double
AmmoItem.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
AmmoItem.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
AmmoItem.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
AmmoItem.fuel_value = nil

---@optional true
---@type SoundType
AmmoItem.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
AmmoItem.pictures = nil

---@optional true
---@type PlaceAsTile
AmmoItem.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
AmmoItem.place_result = nil

---@optional true
---@type string
AmmoItem.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
AmmoItem.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
AmmoItem.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
AmmoItem.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
AmmoItem.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
AmmoItem.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
AmmoItem.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
AmmoItem.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
AmmoItem.order = nil

---Path to the icon file.
---@optional true
---@type FileName
AmmoItem.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
AmmoItem.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
AmmoItem.icon_size = nil

---@default 0
---@optional true
---@type uint8
AmmoItem.icon_mipmaps = nil

---@alias WhitelistBlacklist string

---null
---@class UtilityConstantsPlayerColor
local UtilityConstantsPlayerColor = {}

---@optional false
---@type string
UtilityConstantsPlayerColor.name = nil

---@optional false
---@type string
UtilityConstantsPlayerColor.player_color = nil

---@optional false
---@type string
UtilityConstantsPlayerColor.chat_color = nil

---null
---@class AnimatedVectorDirectionShift
local AnimatedVectorDirectionShift = {}

---@optional true
---@type vector
AnimatedVectorDirectionShift.north = nil

---@optional true
---@type vector
AnimatedVectorDirectionShift.east = nil

---@optional true
---@type vector
AnimatedVectorDirectionShift.south = nil

---@optional true
---@type vector
AnimatedVectorDirectionShift.west = nil

---null
---@class RecipeData
local RecipeData = {}

---<p>A table containing ingredient names and counts. Can also contain information about fluid temperature and catalyst amounts.</p><p>Maximal ingredient amount is 65535. The catalyst amounts are automatically calculated from the recipe, or can be set manually.<a rel="nofollow" class="external autonumber" href="https://factorio.com/blog/post/fff-256">[1]</a></p>
---@optional false
---@type IngredientPrototype[]
RecipeData.ingredients = nil

---Optional. Whether the recipe can be used as an intermediate recipe in hand-crafting.
---@default true
---@optional true
---@type bool
RecipeData.allow_as_intermediate = nil

---Optional. Whether this recipe is allowed to be broken down for the recipe tooltip "Total raw" calculations.
---@default true
---@optional true
---@type bool
RecipeData.allow_decomposition = nil

---Optional. Whether the recipe is allowed to use intermediate recipes when hand-crafting.
---@default true
---@optional true
---@type bool
RecipeData.allow_intermediates = nil

---Optional. Whether the "Made in: {Machine}" part of the tool-tip should always be present, not only when the recipe can not be hand-crafted.
---@default false
---@optional true
---@type bool
RecipeData.always_show_made_in = nil

---Optional. Whether the products are always shown in the recipe tool-tip.
---@default false
---@optional true
---@type bool
RecipeData.always_show_products = nil

---@default 1.0
---@optional true
---@type double
RecipeData.emissions_multiplier = nil

---<p>Optional. This can be false to disable the recipe at the start of the game, or "true" to leave it enabled.</p><p>If your recipe is unlocked by a technology, you should set this to "false".</p>
---@default true
---@optional true
---@type bool
RecipeData.enabled = nil

---<p>Optional. The amount of time it takes to make this recipe.</p><p>This is the number of seconds it takes to craft at crafting speed 1.</p>
---@default 0.5
---@optional true
---@type double
RecipeData.energy_required = nil

---Optional. Hides the recipe from crafting menus.
---@default false
---@optional true
---@type bool
RecipeData.hidden = nil

---Optional. Hides the recipe from the player's crafting screen. The recipe will still show up for selection in machines.
---@default false
---@optional true
---@type bool
RecipeData.hide_from_player_crafting = nil

---Optional. Hides the recipe from flow stats (item/fluid production statistics).
---@default false
---@optional true
---@type bool
RecipeData.hide_from_stats = nil

---<p>For recipes with more than one product: This defines of which result the icon, subgroup and name is used. If it is not set and the recipe has more than 1 result the recipe will use the recipe-name and recipe-description locale and its own subgroup and icon.</p><p>For recipes with 1 result: The recipe uses the icon, subgroup and name of the result by default. If set this property is set to an empty string, the recipe will use the properties of the recipe instead of the result.</p>
---@optional true
---@type string
RecipeData.main_product = nil

---<p>Used to determine how many extra items are put into an assembling machine before it's considered "full enough". See Inserters#Insertion_limits.</p><p>If set to 0, it instead uses the following formula: 1.166 / (energy_required / the assembler's crafting_speed), rounded up, and clamped between 2 and 100.</p>
---@default 0
---@optional true
---@type uint32
RecipeData.overload_multiplier = nil

---@default 30
---@optional true
---@type uint32
RecipeData.requester_paste_multiplier = nil

---Can be replaced with the results parameter. The item created by this recipe. Must be the name of an item, such as "iron-gear-wheel".
---@optional true
---@type string
RecipeData.result = nil

---Optional. The number of items created by this recipe.
---@default 1
---@optional true
---@type uint32
RecipeData.result_count = nil

---A table containing result names and counts. Can also contain information about fluid temperature and catalyst amounts. The catalyst amounts are automatically calculated from the recipe, or can be set manually.<a rel="nofollow" class="external autonumber" href="https://factorio.com/blog/post/fff-256">[2]</a>
---@optional true
---@type ProductPrototype[]
RecipeData.results = nil

---Optional. Whether the recipe name should have the product amount in front of it, e.g. "2 <a href="/Transport_belt" title="Transport belt">transport belt</a>"
---@default true
---@optional true
---@type bool
RecipeData.show_amount_in_title = nil

---Optional. Whether enabling this recipe unlocks its item products to show in selection lists (item filter, logistic request etc.).
---@default true
---@optional true
---@type bool
RecipeData.unlock_results = nil

---null
---@class InsertItemTriggerEffectItem
local InsertItemTriggerEffectItem = {}

---Name of the <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a> that should be created.
---@optional false
---@type string
InsertItemTriggerEffectItem.item = nil

---@default 1
---@optional true
---@type uint32
InsertItemTriggerEffectItem.count = nil

---@default 1
---@optional true
---@type uint16
InsertItemTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
InsertItemTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
InsertItemTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
InsertItemTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
InsertItemTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
InsertItemTriggerEffectItem.damage_type_filters = nil

---Entity water reflection.
---@class WaterReflectionDefinition
local WaterReflectionDefinition = {}

---@optional true
---@type SpriteVariations
WaterReflectionDefinition.pictures = nil

---@default false
---@optional true
---@type bool
WaterReflectionDefinition.orientation_to_variation = nil

---@default false
---@optional true
---@type bool
WaterReflectionDefinition.rotate = nil

---null
---@class TileBuildSoundValue
local TileBuildSoundValue = {}

---@optional true
---@type SoundType
TileBuildSoundValue.small = nil

---@optional true
---@type SoundType
TileBuildSoundValue.medium = nil

---@optional true
---@type SoundType
TileBuildSoundValue.large = nil

---@alias TileLayerGroup string

---@alias EntityRemoveDecoratives string

---@alias LocalisedString string[]

---null
---@class CameraEffectTriggerEffectItem
local CameraEffectTriggerEffectItem = {}

---Required, read by the game and then immediately discarded. In short: Does nothing.
---@optional false
---@type string
CameraEffectTriggerEffectItem.effect = nil

---@optional false
---@type uint8
CameraEffectTriggerEffectItem.duration = nil

---@default 0
---@optional true
---@type uint8
CameraEffectTriggerEffectItem.ease_in_duration = nil

---@default 0
---@optional true
---@type uint8
CameraEffectTriggerEffectItem.ease_out_duration = nil

---@default 0
---@optional true
---@type uint8
CameraEffectTriggerEffectItem.delay = nil

---@default 0
---@optional true
---@type uint16
CameraEffectTriggerEffectItem.full_strength_max_distance = nil

---@default 0
---@optional true
---@type uint16
CameraEffectTriggerEffectItem.max_distance = nil

---@default 0
---@optional true
---@type float
CameraEffectTriggerEffectItem.strength = nil

---@default 1
---@optional true
---@type uint16
CameraEffectTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CameraEffectTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CameraEffectTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CameraEffectTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CameraEffectTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CameraEffectTriggerEffectItem.damage_type_filters = nil

---@alias DamageTypeFilters DamageTypeFiltersValue|string|string[]

---null
---@class EnergySourceHeat
local EnergySourceHeat = {}

---max_temperature must be >= default_temperature.
---@optional false
---@type double
EnergySourceHeat.max_temperature = nil

---@default 15
---@optional true
---@type double
EnergySourceHeat.default_temperature = nil

---@optional true
---@type Energy
EnergySourceHeat.specific_heat = nil

---@optional true
---@type Energy
EnergySourceHeat.max_transfer = nil

---@default 1
---@optional true
---@type double
EnergySourceHeat.min_temperature_gradient = nil

---min_working_temperature must be >= default_temperature. min_working_temperature must be <= max_temperature.
---@default 15
---@optional true
---@type double
EnergySourceHeat.min_working_temperature = nil

---@default 1
---@optional true
---@type float
EnergySourceHeat.minimum_glow_temperature = nil

---@optional true
---@type Sprite4Way
EnergySourceHeat.pipe_covers = nil

---@optional true
---@type Sprite4Way
EnergySourceHeat.heat_pipe_covers = nil

---@optional true
---@type Sprite4Way
EnergySourceHeat.heat_picture = nil

---@optional true
---@type Sprite4Way
EnergySourceHeat.heat_glow = nil

---The table may only contain up to 32 connections.
---@optional true
---@type HeatConnection[]
EnergySourceHeat.connections = nil

---The pollution an entity emits per minute at full energy consumption. <code>emissions_per_minute</code> is exactly the value that is shown in the entity tooltip.
---@default 0
---@optional true
---@type double
EnergySourceHeat.emissions_per_minute = nil

---Optional. Whether to render the Electricity-icon-red.png icon on the entity if it is low on power. Also applies to Fuel-icon-red.png when using a burner energy source.
---@default true
---@optional true
---@type bool
EnergySourceHeat.render_no_power_icon = nil

---Optional. Whether to render the Electricity-icon-unplugged.png icon on the entity if it is not connected to a electric network.
---@default true
---@optional true
---@type bool
EnergySourceHeat.render_no_network_icon = nil

---null
---@class FlameThrowerExplosionTriggerDelivery
local FlameThrowerExplosionTriggerDelivery = {}

---Name of a <a href="/Prototype/Explosion" title="Prototype/Explosion">Prototype/Explosion</a>.
---@optional false
---@type string
FlameThrowerExplosionTriggerDelivery.explosion = nil

---@optional false
---@type double
FlameThrowerExplosionTriggerDelivery.starting_distance = nil

---@default 0
---@optional true
---@type float
FlameThrowerExplosionTriggerDelivery.direction_deviation = nil

---@default 0
---@optional true
---@type double
FlameThrowerExplosionTriggerDelivery.speed_deviation = nil

---@default 0
---@optional true
---@type double
FlameThrowerExplosionTriggerDelivery.starting_frame_fraciton_deviation = nil

---@default 1
---@optional true
---@type float
FlameThrowerExplosionTriggerDelivery.projectile_starting_speed = nil

---@optional true
---@type TriggerEffect
FlameThrowerExplosionTriggerDelivery.source_effects = nil

---@optional true
---@type TriggerEffect
FlameThrowerExplosionTriggerDelivery.target_effects = nil

---null
---@class PipePictures
local PipePictures = {}

---@optional false
---@type SpriteType
PipePictures.straight_vertical_single = nil

---@optional false
---@type SpriteType
PipePictures.straight_vertical = nil

---@optional false
---@type SpriteType
PipePictures.straight_vertical_window = nil

---@optional false
---@type SpriteType
PipePictures.straight_horizontal = nil

---@optional false
---@type SpriteType
PipePictures.straight_horizontal_window = nil

---@optional false
---@type SpriteType
PipePictures.corner_up_right = nil

---@optional false
---@type SpriteType
PipePictures.corner_up_left = nil

---@optional false
---@type SpriteType
PipePictures.corner_down_right = nil

---@optional false
---@type SpriteType
PipePictures.corner_down_left = nil

---@optional false
---@type SpriteType
PipePictures.t_up = nil

---@optional false
---@type SpriteType
PipePictures.t_down = nil

---@optional false
---@type SpriteType
PipePictures.t_right = nil

---@optional false
---@type SpriteType
PipePictures.t_left = nil

---@optional false
---@type SpriteType
PipePictures.cross = nil

---@optional false
---@type SpriteType
PipePictures.ending_up = nil

---@optional false
---@type SpriteType
PipePictures.ending_down = nil

---@optional false
---@type SpriteType
PipePictures.ending_right = nil

---@optional false
---@type SpriteType
PipePictures.ending_left = nil

---@optional false
---@type SpriteType
PipePictures.horizontal_window_background = nil

---@optional false
---@type SpriteType
PipePictures.vertical_window_background = nil

---@optional false
---@type SpriteType
PipePictures.fluid_background = nil

---@optional false
---@type SpriteType
PipePictures.low_temperature_flow = nil

---@optional false
---@type SpriteType
PipePictures.middle_temperature_flow = nil

---@optional false
---@type SpriteType
PipePictures.high_temperature_flow = nil

---@optional false
---@type AnimationType
PipePictures.gas_flow = nil

---null
---@class InstantTriggerDelivery
local InstantTriggerDelivery = {}

---@optional true
---@type TriggerEffect
InstantTriggerDelivery.source_effects = nil

---@optional true
---@type TriggerEffect
InstantTriggerDelivery.target_effects = nil

---null
---@class TintColors
local TintColors = {}

---@optional true
---@type Color
TintColors.primary = nil

---@optional true
---@type Color
TintColors.secondary = nil

---@optional true
---@type Color
TintColors.tertiary = nil

---@optional true
---@type Color
TintColors.quaternary = nil

---null
---@class FootprintParticle
local FootprintParticle = {}

---Array of names of <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tiles</a>. The tiles this footprint particle is shown on when the player walks over them.
---@optional false
---@type string[]
FootprintParticle.tiles = nil

---Name of a <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a>. The name of the particle that should be created when the character walks on the defined tiles.
---@optional true
---@type string
FootprintParticle.particle_name = nil

---Whether this footprint particle should be the default particle that is used for <a href="#tiles">#tiles</a> that don't have an associated footprint particle.
---@default false
---@optional true
---@type bool
FootprintParticle.use_as_default = nil

---null
---@class FluidBoxSecondaryDrawOrders
local FluidBoxSecondaryDrawOrders = {}

---@optional false
---@type int8
FluidBoxSecondaryDrawOrders.north = nil

---@optional false
---@type int8
FluidBoxSecondaryDrawOrders.east = nil

---@optional false
---@type int8
FluidBoxSecondaryDrawOrders.south = nil

---@optional false
---@type int8
FluidBoxSecondaryDrawOrders.west = nil

---An item product definition for a <a href="/Prototype/Recipe" title="Prototype/Recipe">Prototype/Recipe</a>. Its loading is triggered by the <code>type</code> of a <a href="/Types/ProductPrototype" title="Types/ProductPrototype">Types/ProductPrototype</a> being "item". It can be specified as a table with named or numbered keys, but not a mix of both.
---@class ItemProductPrototype
local ItemProductPrototype = {}

---The name of a <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a>.
---@optional false
---@type string
ItemProductPrototype.name = nil

---Mandatory when using numbered keys (an array).
---@optional true
---@type uint16
ItemProductPrototype.amount = nil

---Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.
---@default 1
---@optional true
---@type double
ItemProductPrototype.probability = nil

---Mandatory if <code>amount</code> is not specified and named keys are being used.
---@optional true
---@type uint16
ItemProductPrototype.amount_min = nil

---<p>Mandatory if <code>amount</code> is not specified and named keys are being used.</p><p>If set to a number that is less than amount_min, the game will use amount_min internally.</p>
---@optional true
---@type uint16
ItemProductPrototype.amount_max = nil

---Amount that should not be affected by productivity modules (not yielded from bonus production) and should not be included in the item production statistics.
---@default 0
---@optional true
---@type uint16
ItemProductPrototype.catalyst_amount = nil

---null
---@class TutorialTrigger
local TutorialTrigger = {}

---@optional false
---@type TutorialTriggerType
TutorialTrigger.type = nil

---<p>Read if type is "research-technology".</p><p>Name of the technology that triggers this tutorial when it is researched.</p>
---@optional true
---@type string
TutorialTrigger.technology = nil

---<p>Read if type is "build-entity".</p><p>Name of the entity that triggers this tutorial when it is built.</p>
---@optional true
---@type string
TutorialTrigger.entity = nil

---<p>Read if type is "craft-item".</p><p>Name of the item that triggers this tutorial when it is crafted.</p>
---@optional true
---@type string
TutorialTrigger.item = nil

---<p>Read if type is "manual-transfer".</p><p>Amount of times manual item transfer has to be done to trigger this tutorial.</p>
---@optional true
---@type uint32
TutorialTrigger.count = nil

---@alias MaterialAmountType double

---null
---@class MapSettingsSteeringDefault
local MapSettingsSteeringDefault = {}

---Not including the radius of the unit
---@optional false
---@type double
MapSettingsSteeringDefault.radius = nil

---@optional false
---@type double
MapSettingsSteeringDefault.separation_factor = nil

---@optional false
---@type double
MapSettingsSteeringDefault.separation_force = nil

---@optional false
---@type bool
MapSettingsSteeringDefault.force_unit_fuzzy_goto_behavior = nil

---Used to set the fluid amount an entity can hold, as well as the connection points for pipes leading into and out of the entity.
---@class FluidBox
local FluidBox = {}

---Max number of members is 255.
---@optional false
---@type PipeConnectionDefinition[]
FluidBox.pipe_connections = nil

---Must be greater than 0.
---@default 1
---@optional true
---@type double
FluidBox.base_area = nil

---@default 0
---@optional true
---@type double
FluidBox.base_level = nil

---Must be greater than 0.
---@default 1
---@optional true
---@type double
FluidBox.height = nil

---Name of a <a href="/Prototype/Fluid" title="Prototype/Fluid">Prototype/Fluid</a>. Can be used to specify which fluid is allowed to enter this fluid box. <a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/viewtopic.php?f=28&amp;t=46302">[1]</a>
---@optional true
---@type string
FluidBox.filter = nil

---@default object
---@optional true
---@type RenderLayer
FluidBox.render_layer = nil

---The pictures to show when another fluid box connects to this one.
---@optional true
---@type Sprite4Way
FluidBox.pipe_covers = nil

---@optional true
---@type Sprite4Way
FluidBox.pipe_picture = nil

---The minimum temperature allowed into the fluidbox. Only applied if a <code>filter</code> is specified <a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/viewtopic.php?p=496738#p496738">[2]</a>.
---@optional true
---@type double
FluidBox.minimum_temperature = nil

---The maximum temperature allowed into the fluidbox. Only applied if a <code>filter</code> is specified <a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/viewtopic.php?p=496738#p496738">[3]</a>.
---@optional true
---@type double
FluidBox.maximum_temperature = nil

---@default None
---@optional true
---@type FluidBoxProductionType
FluidBox.production_type = nil

---Set the secondary draw order for all orientations.
---@default 1
---@optional true
---@type int8
FluidBox.secondary_draw_order = nil

---Set the secondary draw order for each orientation.
---@optional true
---@type FluidBoxSecondaryDrawOrders
FluidBox.secondary_draw_orders = nil

---Definition of the smoke of an entity.
---@class SmokeSource
local SmokeSource = {}

---Name of a <a href="/Prototype/TrivialSmoke" title="Prototype/TrivialSmoke">Prototype/TrivialSmoke</a>
---@optional false
---@type string
SmokeSource.name = nil

---Can't be negative, NaN or infinite.
---@optional false
---@type double
SmokeSource.frequency = nil

---@default 0
---@optional true
---@type double
SmokeSource.offset = nil

---@optional true
---@type vector
SmokeSource.position = nil

---@optional true
---@type vector
SmokeSource.north_position = nil

---@optional true
---@type vector
SmokeSource.east_position = nil

---@optional true
---@type vector
SmokeSource.south_position = nil

---@optional true
---@type vector
SmokeSource.west_position = nil

---@optional true
---@type Position
SmokeSource.deviation = nil

---@default 0
---@optional true
---@type uint16
SmokeSource.starting_frame_speed = nil

---@default 0
---@optional true
---@type double
SmokeSource.starting_frame_speed_deviation = nil

---@default 0
---@optional true
---@type uint16
SmokeSource.starting_frame = nil

---@default 0
---@optional true
---@type double
SmokeSource.starting_frame_deviation = nil

---@default 1
---@optional true
---@type uint8
SmokeSource.slow_down_factor = nil

---@default 0
---@optional true
---@type float
SmokeSource.height = nil

---@default 0
---@optional true
---@type float
SmokeSource.height_deviation = nil

---@default 0
---@optional true
---@type float
SmokeSource.starting_vertical_speed = nil

---@default 0
---@optional true
---@type float
SmokeSource.starting_vertical_speed_deviation = nil

---@default 0.965
---@optional true
---@type float
SmokeSource.vertical_speed_slowdown = nil

---@alias TileBuildSound SoundType|TileBuildSoundValue

---null
---@class BeamLightAnimations
local BeamLightAnimations = {}

---@optional true
---@type AnimationType
BeamLightAnimations.start = nil

---@optional true
---@type AnimationType
BeamLightAnimations.ending = nil

---@optional true
---@type AnimationType
BeamLightAnimations.head = nil

---@optional true
---@type AnimationType
BeamLightAnimations.tail = nil

---@optional true
---@type AnimationVariations
BeamLightAnimations.body = nil

---The abstract base of all attack parameters.
---@class BaseAttackParameters
local BaseAttackParameters = {}

---@optional false
---@type float
BaseAttackParameters.range = nil

---Number of ticks in which it will be possible to shoot again. If < 1, multiple shots can be performed in one tick.
---@optional false
---@type float
BaseAttackParameters.cooldown = nil

---@default 0
---@optional true
---@type float
BaseAttackParameters.min_range = nil

---If this is &lt;= 0, it is set to 1. Arc from 0 to 1, so for example 0.25 is 90°. Used by the <a href="/Flamethrower_turret" title="Flamethrower turret">flamethrower turret</a> in the base game.
---@default 1
---@optional true
---@type float
BaseAttackParameters.turn_range = nil

---Used when searching for the nearest enemy, when this is &gt; 0, enemies that aren't burning are preferred over burning enemies. Definition of "burning" for this: Entity has sticker attached to it, and the sticker has a <a href="/Prototype/Sticker#spread_fire_entity" title="Prototype/Sticker">spread_fire_entity</a> set.
---@default 0
---@optional true
---@type float
BaseAttackParameters.fire_penalty = nil

---A higher penalty will discourage turrets from targeting units that would take longer to turn to face.
---@default 0
---@optional true
---@type float
BaseAttackParameters.rotate_penalty = nil

---A higher penalty will discourage turrets from targeting units with higher health. A negative penalty will encourage turrets to target units with higher health.
---@default 0
---@optional true
---@type float
BaseAttackParameters.health_penalty = nil

---If less than <code>range</code>, the entity will choose a random distance between <code>range</code> and <code>min_attack_distance</code> and attack from that distance.
---@optional true
---@type float
BaseAttackParameters.min_attack_distance = nil

---@default 1
---@optional true
---@type float
BaseAttackParameters.damage_modifier = nil

---Must be greater than or equal to 0.
---@default 1
---@optional true
---@type float
BaseAttackParameters.ammo_consumption_modifier = nil

---Must be between 0 and 1.
---@default 0
---@optional true
---@type float
BaseAttackParameters.cooldown_deviation = nil

---Number of ticks it takes for the weapon to actually shoot after the order for shooting has been made. This also allows to "adjust" the shooting animation to the effect of shooting.
---@default 0
---@optional true
---@type uint32
BaseAttackParameters.warmup = nil

---Presumably this should be set to the projectile speed to make the unit/turret lead their projectiles.
---@default 0
---@optional true
---@type float
BaseAttackParameters.lead_target_for_projectile_speed = nil

---@optional true
---@type float
BaseAttackParameters.movement_slow_down_cooldown = nil

---@default 1
---@optional true
---@type double
BaseAttackParameters.movement_slow_down_factor = nil

---Can be mandatory.
---@optional true
---@type AmmoType
BaseAttackParameters.ammo_type = nil

---@optional true
---@type LayeredSound
BaseAttackParameters.sound = nil

---@optional true
---@type RotatedAnimation
BaseAttackParameters.animation = nil

---@optional true
---@type CyclicSound
BaseAttackParameters.cyclic_sound = nil

---@default false
---@optional true
---@type bool
BaseAttackParameters.use_shooter_direction = nil

---Names of <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategories</a>.
---@optional true
---@type string[]
BaseAttackParameters.ammo_categories = nil

---The name of a <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategory</a>. Mandatory if <code>ammo_type</code> and <code>ammo_category</code> is not given, otherwise ignored.
---@optional true
---@type string
BaseAttackParameters.ammo_category = nil

---@alias int16 number

---@alias Vector3D table

---null
---@class TrainStopLight
local TrainStopLight = {}

---@optional false
---@type Sprite4Way
TrainStopLight.picture = nil

---@optional false
---@type Sprite4Way
TrainStopLight.red_picture = nil

---@optional false
---@type LightDefinition
TrainStopLight.light = nil

---@alias uint32 number

---Used to define the graphics for the (in vanilla) yellow frame that is used when a <a href="/Prototype/TransportBelt" title="Prototype/TransportBelt">Prototype/TransportBelt</a> is connected to the circuit network.
---@class TransportBeltConnectorFrame
local TransportBeltConnectorFrame = {}

---@optional false
---@type AnimationVariations
TransportBeltConnectorFrame.frame_main = nil

---@optional false
---@type AnimationVariations
TransportBeltConnectorFrame.frame_shadow = nil

---@optional false
---@type AnimationType
TransportBeltConnectorFrame.frame_main_scanner = nil

---@optional false
---@type float
TransportBeltConnectorFrame.frame_main_scanner_movement_speed = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_horizontal_start_shift = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_horizontal_end_shift = nil

---@optional false
---@type float
TransportBeltConnectorFrame.frame_main_scanner_horizontal_y_scale = nil

---@optional false
---@type RealOrientation
TransportBeltConnectorFrame.frame_main_scanner_horizontal_rotation = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_vertical_start_shift = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_vertical_end_shift = nil

---@optional false
---@type float
TransportBeltConnectorFrame.frame_main_scanner_vertical_y_scale = nil

---@optional false
---@type RealOrientation
TransportBeltConnectorFrame.frame_main_scanner_vertical_rotation = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_cross_horizontal_start_shift = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_cross_horizontal_end_shift = nil

---@optional false
---@type float
TransportBeltConnectorFrame.frame_main_scanner_cross_horizontal_y_scale = nil

---@optional false
---@type RealOrientation
TransportBeltConnectorFrame.frame_main_scanner_cross_horizontal_rotation = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_cross_vertical_start_shift = nil

---@optional false
---@type vector
TransportBeltConnectorFrame.frame_main_scanner_cross_vertical_end_shift = nil

---@optional false
---@type float
TransportBeltConnectorFrame.frame_main_scanner_cross_vertical_y_scale = nil

---@optional false
---@type RealOrientation
TransportBeltConnectorFrame.frame_main_scanner_cross_vertical_rotation = nil

---@optional false
---@type AnimationType
TransportBeltConnectorFrame.frame_main_scanner_nw_ne = nil

---@optional false
---@type AnimationType
TransportBeltConnectorFrame.frame_main_scanner_sw_se = nil

---@optional true
---@type SpriteVariations
TransportBeltConnectorFrame.frame_back_patch = nil

---@optional true
---@type SpriteVariations
TransportBeltConnectorFrame.frame_front_patch = nil

---null
---@class OffshorePumpGraphicsSet
local OffshorePumpGraphicsSet = {}

---Rendered in "object" layer, with secondary draw order 0.
---@optional false
---@type Animation4Way
OffshorePumpGraphicsSet.animation = nil

---@default ground-patch
---@optional true
---@type RenderLayer
OffshorePumpGraphicsSet.base_render_layer = nil

---@default 1
---@optional true
---@type int8
OffshorePumpGraphicsSet.underwater_layer_offset = nil

---Rendered in "object" layer, with secondary draw order 20.
---@optional true
---@type Animation4Way
OffshorePumpGraphicsSet.fluid_animation = nil

---Rendered in "object" layer, with secondary draw order 40.
---@optional true
---@type Sprite4Way
OffshorePumpGraphicsSet.glass_pictures = nil

---Rendered in layer specified by base_render_layer, with secondary draw order 0.
---@optional true
---@type Sprite4Way
OffshorePumpGraphicsSet.base_pictures = nil

---Drawn by tile renderer when water animation is enabled.
---@optional true
---@type Sprite4Way
OffshorePumpGraphicsSet.underwater_pictures = nil

---null
---@class InterruptibleSound
local InterruptibleSound = {}

---@optional false
---@type SoundType
InterruptibleSound.sound = nil

---@default 0
---@optional true
---@type uint32
InterruptibleSound.fade_ticks = nil

---null
---@class RotatedAnimation
local RotatedAnimation = {}

---@optional false
---@type uint32
RotatedAnimation.direction_count = nil

---<p>If this property is present, all RotatedAnimation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (RotatedAnimation definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type RotatedAnimation[]
RotatedAnimation.layers = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the RotatedAnimation.
---@optional true
---@type RotatedAnimation
RotatedAnimation.hr_version = nil

---Mandatory if <code>stripes</code> and <code>filenames</code> is not specified.
---@optional true
---@type FileName
RotatedAnimation.filename = nil

---Only loaded if <code>stripes</code> is not present.
---@optional true
---@type FileName[]
RotatedAnimation.filenames = nil

---Mandatory if <code>filenames</code> is present.
---@optional true
---@type uint32
RotatedAnimation.slice = nil

---Mandatory if <code>filenames</code> is present.
---@optional true
---@type uint32
RotatedAnimation.lines_per_file = nil

---@default medium
---@optional true
---@type SpritePriority
RotatedAnimation.priority = nil

---@optional true
---@type SpriteFlags
RotatedAnimation.flags = nil

---<p>The width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
RotatedAnimation.size = nil

---Mandatory if <code>size</code> is not given. Width of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
RotatedAnimation.width = nil

---Mandatory if <code>size</code> is not given. Height of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
RotatedAnimation.height = nil

---Horizontal position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
RotatedAnimation.x = nil

---Vertical position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
RotatedAnimation.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
RotatedAnimation.position = nil

---@optional true
---@type vector
RotatedAnimation.shift = nil

---Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
RotatedAnimation.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
RotatedAnimation.mipmap_count = nil

---@default false
---@optional true
---@type bool
RotatedAnimation.apply_runtime_tint = nil

---@optional true
---@type Color
RotatedAnimation.tint = nil

---@default normal
---@optional true
---@type BlendMode
RotatedAnimation.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
RotatedAnimation.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
RotatedAnimation.premul_alpha = nil

---@default false
---@optional true
---@type bool
RotatedAnimation.generate_sdf = nil

---@default forward
---@optional true
---@type AnimationRunMode
RotatedAnimation.run_mode = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint32
RotatedAnimation.frame_count = nil

---Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.
---@default 0
---@optional true
---@type uint32
RotatedAnimation.line_length = nil

---Modifier of the animation playing speed, the default is 1, which means one animation frame per tick (60 fps). The speed of playing can often vary depending on the usage (output of steam engine for example). Has to be greater than 0.
---@default 1
---@optional true
---@type float
RotatedAnimation.animation_speed = nil

---@optional true
---@type float
RotatedAnimation.max_advance = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint8
RotatedAnimation.repeat_count = nil

---@optional true
---@type uint8
RotatedAnimation.dice = nil

---@optional true
---@type uint8
RotatedAnimation.dice_x = nil

---@optional true
---@type uint8
RotatedAnimation.dice_y = nil

---@optional true
---@type AnimationFrameSequence
RotatedAnimation.frame_sequence = nil

---@default 0
---@optional true
---@type uint32
RotatedAnimation.still_frame = nil

---If true, <code>direction_count</code> must be greater than 1.
---@default false
---@optional true
---@type bool
RotatedAnimation.axially_symmetrical = nil

---@default false
---@optional true
---@type bool
RotatedAnimation.counterclockwise = nil

---@default 0.5
---@optional true
---@type RealOrientation
RotatedAnimation.middle_orientation = nil

---Automatically clamped to be between 0 and 1.
---@default 1
---@optional true
---@type float
RotatedAnimation.orientation_range = nil

---@default true
---@optional true
---@type bool
RotatedAnimation.apply_projection = nil

---@optional true
---@type Stripe[]
RotatedAnimation.stripes = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
RotatedAnimation.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
RotatedAnimation.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
RotatedAnimation.draw_as_shadow = nil

---@alias FootstepTriggerEffectList FootstepTriggerEffectListValue[]

---Used to specify heat capacity properties without a <a href="/Types/EnergySource#Heat_energy_source" title="Types/EnergySource">heat energy source</a>.
---@class HeatBuffer
local HeatBuffer = {}

---Must be >= default_temperature.
---@optional false
---@type double
HeatBuffer.max_temperature = nil

---@optional false
---@type Energy
HeatBuffer.specific_heat = nil

---@optional false
---@type Energy
HeatBuffer.max_transfer = nil

---@default 15
---@optional true
---@type double
HeatBuffer.default_temperature = nil

---@default 1
---@optional true
---@type double
HeatBuffer.min_temperature_gradient = nil

---Must be >= default_temperature and <= max_temperature.
---@default 15
---@optional true
---@type double
HeatBuffer.min_working_temperature = nil

---@default 1
---@optional true
---@type float
HeatBuffer.minimum_glow_temperature = nil

---@optional true
---@type Sprite4Way
HeatBuffer.pipe_covers = nil

---@optional true
---@type Sprite4Way
HeatBuffer.heat_pipe_covers = nil

---@optional true
---@type Sprite4Way
HeatBuffer.heat_picture = nil

---@optional true
---@type Sprite4Way
HeatBuffer.heat_glow = nil

---The table may only contain up to 32 connections.
---@optional true
---@type HeatConnection[]
HeatBuffer.connections = nil

---null
---@class ShowExplosionOnChartTriggerEffectItem
local ShowExplosionOnChartTriggerEffectItem = {}

---@optional false
---@type float
ShowExplosionOnChartTriggerEffectItem.scale = nil

---@default 1
---@optional true
---@type uint16
ShowExplosionOnChartTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
ShowExplosionOnChartTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
ShowExplosionOnChartTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
ShowExplosionOnChartTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
ShowExplosionOnChartTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
ShowExplosionOnChartTriggerEffectItem.damage_type_filters = nil

---@alias BoilerMode string

---null
---@class UtilityConstantsChart
local UtilityConstantsChart = {}

---@optional false
---@type Color
UtilityConstantsChart.electric_lines_color = nil

---@optional false
---@type Color
UtilityConstantsChart.electric_lines_color_switch_enabled = nil

---@optional false
---@type Color
UtilityConstantsChart.electric_lines_color_switch_disabled = nil

---@optional false
---@type Color
UtilityConstantsChart.electric_power_pole_color = nil

---@optional false
---@type Color
UtilityConstantsChart.switch_color = nil

---@optional false
---@type double
UtilityConstantsChart.electric_line_width = nil

---@optional false
---@type double
UtilityConstantsChart.electric_line_minimum_absolute_width = nil

---@optional false
---@type Color
UtilityConstantsChart.turret_range_color = nil

---@optional false
---@type Color
UtilityConstantsChart.artillery_range_color = nil

---@optional false
---@type Color
UtilityConstantsChart.default_friendly_color = nil

---@optional false
---@type Color
UtilityConstantsChart.default_enemy_color = nil

---@optional false
---@type Color
UtilityConstantsChart.rail_color = nil

---@optional false
---@type Color
UtilityConstantsChart.entity_ghost_color = nil

---@optional false
---@type Color
UtilityConstantsChart.vehicle_outer_color = nil

---@optional false
---@type Color
UtilityConstantsChart.vehicle_outer_color_selected = nil

---@optional false
---@type Color
UtilityConstantsChart.vehicle_inner_color = nil

---@optional false
---@type Color
UtilityConstantsChart.vehicle_wagon_connection_color = nil

---@optional false
---@type Color
UtilityConstantsChart.resource_outline_selection_color = nil

---@optional false
---@type Color
UtilityConstantsChart.chart_train_stop_text_color = nil

---@optional false
---@type Color
UtilityConstantsChart.chart_train_stop_disabled_text_color = nil

---@optional false
---@type Color
UtilityConstantsChart.chart_train_stop_full_text_color = nil

---@optional false
---@type Color
UtilityConstantsChart.chart_deconstruct_tint = nil

---@optional false
---@type Color
UtilityConstantsChart.red_signal_color = nil

---@optional false
---@type Color
UtilityConstantsChart.green_signal_color = nil

---@optional false
---@type Color
UtilityConstantsChart.blue_signal_color = nil

---@optional false
---@type Color
UtilityConstantsChart.yellow_signal_color = nil

---The strings are entity types.
---@optional true
---@type table<string, Color>
UtilityConstantsChart.default_friendly_color_by_type = nil

---The strings are entity types.
---@optional true
---@type table<string, Color>
UtilityConstantsChart.default_color_by_type = nil

---@optional false
---@type uint32
UtilityConstantsChart.explosion_visualization_duration = nil

---@optional false
---@type Color
UtilityConstantsChart.train_path_color = nil

---@optional false
---@type Color
UtilityConstantsChart.train_preview_path_outline_color = nil

---@optional false
---@type Color
UtilityConstantsChart.train_current_path_outline_color = nil

---@default 0.6
---@optional true
---@type float
UtilityConstantsChart.custom_tag_scale = nil

---null
---@class PlaceAsTile
local PlaceAsTile = {}

---Name of a <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a>.
---@optional false
---@type string
PlaceAsTile.result = nil

---Name of a <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a>.
---@optional false
---@type CollisionMask
PlaceAsTile.condition = nil

---@optional false
---@type int32
PlaceAsTile.condition_size = nil

---@alias Order string

---<p>Autoplace specification is used to determine which entities are placed when generating map. Currently it is used for enemy bases, resources and other entities (trees, fishes, ...).</p><p>Autoplace specification describe conditions for placing tiles, entities, and decoratives during surface generation. Probability (of placement on any given tile) and richness (which has different meaning depending on the thing being placed) can be defined either in terms of a set of peaks, or using explicit expressions.</p>
---@class AutoplaceSpecification
local AutoplaceSpecification = {}

---ID of <a href="/Prototype/AutoplaceControl" title="Prototype/AutoplaceControl">autoplace control</a> that applies to this entity.
---@optional true
---@type string
AutoplaceSpecification.control = nil

---<p>Indicates whether the thing should be placed even if <a rel="nofollow" class="external text" href="http://lua-api.factorio.com/latest/Concepts.html#MapGenSettings">MapGenSettings</a> do not provide frequency/size/richness for it (either for the specific prototype of for the control named by AutoplaceSpecification.control).</p><p>If true, normal frequency/size/richness (value=1) are used in that case.  Otherwise it is treated as if 'none' were selected.</p>
---@default true
---@optional true
---@type bool
AutoplaceSpecification.default_enabled = nil

---Force of the placed entity. One of "enemy", "player", "neutral", or a custom force name. Only matters for EntityWithForce or EntityWithOwner.
---@default neutral
---@optional true
---@type AutoplaceSpecificationForce
AutoplaceSpecification.force = nil

---Order for placing the entity (has no effect when placing tiles). Entities whose order compares less are placed earlier (this influences placing multiple entities which collide with itself), from entities with equal order string only one with the highest probability is placed.
---@optional true
---@type Order
AutoplaceSpecification.order = nil

---For entities and decoratives, how many times to attempt to place on each tile (probability and collisions are taken into account each attempt).
---@default 1
---@optional true
---@type uint32
AutoplaceSpecification.placement_density = nil

---For entities and decoratives, how many times to attempt to place on each tile (probability and collisions are taken into account each attempt).
---@optional true
---@type string[]
AutoplaceSpecification.tile_restriction = nil

---null
---@class MiningDrillGraphicsSet
local MiningDrillGraphicsSet = {}

---@optional true
---@type Animation4Way
MiningDrillGraphicsSet.animation = nil

---Idle animation must have the same frame count as animation.
---@optional true
---@type Animation4Way
MiningDrillGraphicsSet.idle_animation = nil

---Only loaded if <code>idle_animation</code> is present. 
---@default false
---@optional true
---@type bool
MiningDrillGraphicsSet.always_draw_idle_animation = nil

---@optional true
---@type TintColors
MiningDrillGraphicsSet.default_recipe_tint = nil

---@optional true
---@type WorkingVisualisation
MiningDrillGraphicsSet.working_visualisations = nil

---Only loaded if one of <code>shift_animation_waypoint_stop_duration</code> or <code>shift_animation_transition_duration</code> is not 0.
---@optional true
---@type CraftingMachineShiftAnimationWaypoints
MiningDrillGraphicsSet.shift_animation_waypoints = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
MiningDrillGraphicsSet.shift_animation_waypoint_stop_duration = nil

---Only loaded if <code>shift_animation_waypoints</code> is present.
---@default 0
---@optional true
---@type uint16
MiningDrillGraphicsSet.shift_animation_transition_duration = nil

---@optional true
---@type CraftingMachineStatusColors
MiningDrillGraphicsSet.status_colors = nil

---@default 0
---@optional true
---@type uint16
MiningDrillGraphicsSet.drilling_vertical_movement_duration = nil

---@default 1
---@optional true
---@type float
MiningDrillGraphicsSet.animation_progress = nil

---@default 1000
---@optional true
---@type float
MiningDrillGraphicsSet.max_animation_progress = nil

---@default 0
---@optional true
---@type float
MiningDrillGraphicsSet.min_animation_progress = nil

---Renderlayer(s) for all directions of the circuit connectors.
---@default object
---@optional true
---@type RenderLayer|MiningDrillGraphicsSetCircuitConnectorLayer
MiningDrillGraphicsSet.circuit_connector_layer = nil

---Secondary draw order(s) for all directions of the circuit connectors.
---@default 100
---@optional true
---@type int8|MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder
MiningDrillGraphicsSet.circuit_connector_secondary_draw_order = nil

---@alias SoundType SoundValue1|SoundValue2[]

---null
---@class ColorValue
local ColorValue = {}

---red value
---@default 0
---@optional true
---@type float
ColorValue.r = nil

---green value
---@default 0
---@optional true
---@type float
ColorValue.g = nil

---blue value
---@default 0
---@optional true
---@type float
ColorValue.b = nil

---alpha value - transparency
---@default 1
---@optional true
---@type float
ColorValue.a = nil

---@alias SpriteSizeType int16

---null
---@class AnimationVector
local AnimationVector = {}

---@optional false
---@type AnimatedVectorRotation[]
AnimationVector.rotations = nil

---Default render layer for the rotations.
---@optional true
---@type RenderLayer
AnimationVector.render_layer = nil

---@optional true
---@type AnimatedVectorDirectionShift
AnimationVector.direction_shift = nil

---null
---@class TrainStopDrawingBoxes
local TrainStopDrawingBoxes = {}

---@optional false
---@type BoundingBox
TrainStopDrawingBoxes.north = nil

---@optional false
---@type BoundingBox
TrainStopDrawingBoxes.west = nil

---@optional false
---@type BoundingBox
TrainStopDrawingBoxes.south = nil

---@optional false
---@type BoundingBox
TrainStopDrawingBoxes.east = nil

---@alias BoundingBox Position[]

---@alias ForceCondition string

---Defines the connections for a heat energy source in <a href="/Types/EnergySource" title="Types/EnergySource">Types/EnergySource</a>.
---@class HeatConnection
local HeatConnection = {}

---@optional false
---@type Position
HeatConnection.position = nil

---@optional false
---@type Direction
HeatConnection.direction = nil

---@alias RotatedAnimationVariations RotatedAnimation|RotatedAnimation[]

---null
---@class UtilitySpritesCursorBox
local UtilitySpritesCursorBox = {}

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.regular = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.not_allowed = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.copy = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.electricity = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.logistics = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.pair = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.train_visualization = nil

---@optional false
---@type BoxSpecification[]
UtilitySpritesCursorBox.blueprint_snap_rectangle = nil

---@alias ElectricUsagePriority string

---@alias BeaconGraphicsSetApplymoduleTint string

---null
---@class AreaTriggerItem
local AreaTriggerItem = {}

---@optional false
---@type double
AreaTriggerItem.radius = nil

---@default false
---@optional true
---@type bool
AreaTriggerItem.trigger_from_target = nil

---@default true
---@optional true
---@type bool
AreaTriggerItem.target_entities = nil

---@default true
---@optional true
---@type bool
AreaTriggerItem.show_in_tooltip = nil

---@default distance-from-collision-box
---@optional true
---@type AreaTriggerItemCollisionMode
AreaTriggerItem.collision_mode = nil

---Only prototypes with these flags are affected by the trigger item.
---@optional true
---@type EntityPrototypeFlags
AreaTriggerItem.entity_flags = nil

---@default false
---@optional true
---@type bool
AreaTriggerItem.ignore_collision_condition = nil

---@optional true
---@type TriggerTargetMask
AreaTriggerItem.trigger_target_mask = nil

---@default 1
---@optional true
---@type uint32
AreaTriggerItem.repeat_count = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
AreaTriggerItem.probability = nil

---Only prototypes with these collision masks are affected by the trigger item.
---@optional true
---@type CollisionMask
AreaTriggerItem.collision_mask = nil

---@optional true
---@type TriggerEffect
AreaTriggerItem.source_effects = nil

---@optional true
---@type TriggerDelivery|TriggerDelivery[]
AreaTriggerItem.action_delivery = nil

---Only entities meeting the force condition are affected by the trigger item.
---@optional true
---@type ForceCondition
AreaTriggerItem.force = nil

---null
---@class CreateEntityTriggerEffectItem
local CreateEntityTriggerEffectItem = {}

---Name of the entity that should be created.
---@optional false
---@type string
CreateEntityTriggerEffectItem.entity_name = nil

---@optional true
---@type BoundingBox
CreateEntityTriggerEffectItem.offset_deviation = nil

---If this is true, <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity">on_trigger_created_entity</a> is raised when the entity is created.
---@default false
---@optional true
---@type bool
CreateEntityTriggerEffectItem.trigger_created_entity = nil

---@default false
---@optional true
---@type bool
CreateEntityTriggerEffectItem.check_buildability = nil

---@default false
---@optional true
---@type bool
CreateEntityTriggerEffectItem.show_in_tooltip = nil

---@optional true
---@type CollisionMask
CreateEntityTriggerEffectItem.tile_collision_mask = nil

---@optional true
---@type vector[]
CreateEntityTriggerEffectItem.offsets = nil

---@default 1
---@optional true
---@type uint16
CreateEntityTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateEntityTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateEntityTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateEntityTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateEntityTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateEntityTriggerEffectItem.damage_type_filters = nil

---An item ingredient definition for a <a href="/Prototype/Recipe" title="Prototype/Recipe">Prototype/Recipe</a>. Its loading is triggered by the <code>type</code> of a <a href="/Types/IngredientPrototype" title="Types/IngredientPrototype">Types/IngredientPrototype</a> being "item". It can be specified as a table with named or numbered keys, but not a mix of both.
---@class ItemIngredientPrototype
local ItemIngredientPrototype = {}

---The name of a <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a>.
---@optional false
---@type string
ItemIngredientPrototype.name = nil

---@optional false
---@type uint16
ItemIngredientPrototype.amount = nil

---Only loaded if the table is using named keys. Amount of this ingredient that should not be included in the item consumption statistics. Usually used together with an equal catalyst amount on the "product" of the catalyst in the recipe.
---@default 0
---@optional false
---@type uint16
ItemIngredientPrototype.catalyst_amount = nil

---null
---@class BeaconGraphicsSet
local BeaconGraphicsSet = {}

---@default true
---@optional true
---@type bool
BeaconGraphicsSet.draw_animation_when_idle = nil

---@default false
---@optional true
---@type bool
BeaconGraphicsSet.draw_light_when_idle = nil

---@default false
---@optional true
---@type bool
BeaconGraphicsSet.random_animation_offset = nil

---@default false
---@optional true
---@type bool
BeaconGraphicsSet.module_icons_suppressed = nil

---@default object
---@optional true
---@type RenderLayer
BeaconGraphicsSet.base_layer = nil

---@default object
---@optional true
---@type RenderLayer
BeaconGraphicsSet.animation_layer = nil

---@default object
---@optional true
---@type RenderLayer
BeaconGraphicsSet.top_layer = nil

---@default 1
---@optional true
---@type float
BeaconGraphicsSet.animation_progress = nil

---@default 0
---@optional true
---@type float
BeaconGraphicsSet.min_animation_progress = nil

---@default 1000
---@optional true
---@type float
BeaconGraphicsSet.max_animation_progress = nil

---Which tint set in <a href="/Prototype/Module#beacon_tint" title="Prototype/Module">Prototype/Module#beacon_tint</a> should be applied to this, if any.
---@default none
---@optional true
---@type BeaconGraphicsSetApplymoduleTint
BeaconGraphicsSet.apply_module_tint = nil

---Which tint set in <a href="/Prototype/Module#beacon_tint" title="Prototype/Module">Prototype/Module#beacon_tint</a> should be applied to the light, if any.
---@default none
---@optional true
---@type BeaconGraphicsSetApplymoduleTint
BeaconGraphicsSet.apply_module_tint_to_light = nil

---@optional true
---@type Color
BeaconGraphicsSet.no_modules_tint = nil

---@optional true
---@type AnimationElement[]
BeaconGraphicsSet.animation_list = nil

---The visualisations available for displaying the modules in the beacon. The visualisation is chosen based on art style, see <a href="/Types/BeaconModuleVisualizations#art_style" title="Types/BeaconModuleVisualizations">Types/BeaconModuleVisualizations#art_style</a> and <a href="/Prototype/Module#art_style" title="Prototype/Module">Prototype/Module#art_style</a>.
---@optional true
---@type BeaconModuleVisualizations[]
BeaconGraphicsSet.module_visualisations = nil

---One of "single-module" or "mix".
---@default single-module
---@optional true
---@type string
BeaconGraphicsSet.module_tint_mode = nil

---@alias BlendMode string

---Used by <a href="/Types/CapsuleAction" title="Types/CapsuleAction">Types/CapsuleAction</a>.
---@class ActivateEquipmentCapsuleAction
local ActivateEquipmentCapsuleAction = {}

---Name of a <a href="/Prototype/Equipment" title="Prototype/Equipment">Prototype/Equipment</a>.
---@optional false
---@type string
ActivateEquipmentCapsuleAction.equipment = nil

---Specifies series of sprites used to visualise different rotations of the object.
---@class RotatedSprite
local RotatedSprite = {}

---Count of direction (frames) specified.
---@optional false
---@type uint16
RotatedSprite.direction_count = nil

---Either this or <code>"filenames"</code> has to be non-empty.
---@optional true
---@type FileName
RotatedSprite.filename = nil

---Array of filenames. Either this or <code>"filename"</code> has to be non-empty.
---@optional true
---@type FileName[]
RotatedSprite.filenames = nil

---<p>If this property is present, all RotatedSprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (RotatedSprite definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type RotatedSprite[]
RotatedSprite.layers = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the RotatedSprite.
---@optional true
---@type RotatedSprite
RotatedSprite.hr_version = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the RotatedSprite.
---@optional true
---@type RotatedSprite
RotatedSprite.hr_version = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
RotatedSprite.slice = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
RotatedSprite.dice = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
RotatedSprite.slice_x = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
RotatedSprite.dice_x = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
RotatedSprite.slice_y = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
RotatedSprite.dice_y = nil

---@default medium
---@optional true
---@type SpritePriority
RotatedSprite.priority = nil

---@optional true
---@type SpriteFlags
RotatedSprite.flags = nil

---<p>The width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
RotatedSprite.size = nil

---Mandatory if <code>size</code> is not given. Width of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
RotatedSprite.width = nil

---Mandatory if <code>size</code> is not given. Height of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
RotatedSprite.height = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
RotatedSprite.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
RotatedSprite.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
RotatedSprite.position = nil

---In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.
---@optional true
---@type vector
RotatedSprite.shift = nil

---Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
RotatedSprite.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
RotatedSprite.mipmap_count = nil

---@default false
---@optional true
---@type bool
RotatedSprite.apply_runtime_tint = nil

---@optional true
---@type Color
RotatedSprite.tint = nil

---@default normal
---@optional true
---@type BlendMode
RotatedSprite.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
RotatedSprite.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
RotatedSprite.premul_alpha = nil

---@default false
---@optional true
---@type bool
RotatedSprite.generate_sdf = nil

---When set to true, left the same picture is used for left/right direction, just flipped, this can save half of the space required, but is not usable once the picture contains shadows etc.
---@default false
---@optional true
---@type bool
RotatedSprite.axially_symmetrical = nil

---@default false
---@optional true
---@type bool
RotatedSprite.back_equals_front = nil

---Used to fix the inconsistency of direction of the entity in 3d when rendered and direction on the screen (where the 45 degree angle for projection is used).
---@default false
---@optional true
---@type bool
RotatedSprite.apply_projection = nil

---Set to true to indicate sprites in the spritesheet are in counterclockwise order.
---@default false
---@optional true
---@type bool
RotatedSprite.counterclockwise = nil

---Used to specify the individual images in grid. 0 means that all the picture are in one horizontal line.
---@default 0
---@optional true
---@type uint32
RotatedSprite.line_length = nil

---@default false
---@optional true
---@type bool
RotatedSprite.allow_low_quality_rotation = nil

---Mandatory if <code>"filenames"</code> exists.
---@default false
---@optional true
---@type uint64
RotatedSprite.lines_per_file = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
RotatedSprite.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
RotatedSprite.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
RotatedSprite.draw_as_shadow = nil

---@alias WorkingVisualisationApplyTint string

---@alias int32 number

---@alias Loot LootValue[]

---@alias ItemWithInventoryInsertionPriorityMode string

---null
---@class MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder
local MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder = {}

---@default 100
---@optional true
---@type int8
MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder.north = nil

---@default 100
---@optional true
---@type int8
MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder.east = nil

---@default 100
---@optional true
---@type int8
MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder.south = nil

---@default 100
---@optional true
---@type int8
MiningDrillGraphicsSetCircuitConnectorSecondaryDrawOrder.west = nil

---null
---@class CircularParticleCreationSpecification
local CircularParticleCreationSpecification = {}

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional false
---@type string
CircularParticleCreationSpecification.name = nil

---@optional false
---@type float
CircularParticleCreationSpecification.starting_frame_speed = nil

---@default 0.25
---@optional true
---@type float
CircularParticleCreationSpecification.direction = nil

---@default 0
---@optional true
---@type float
CircularParticleCreationSpecification.direction_deviation = nil

---@default 0.1
---@optional true
---@type float
CircularParticleCreationSpecification.speed = nil

---@default 0
---@optional true
---@type float
CircularParticleCreationSpecification.speed_deviation = nil

---@default 0
---@optional true
---@type float
CircularParticleCreationSpecification.starting_frame_speed_deviation = nil

---@default 1
---@optional true
---@type float
CircularParticleCreationSpecification.height = nil

---@default 0
---@optional true
---@type float
CircularParticleCreationSpecification.height_deviation = nil

---@default 0
---@optional true
---@type float
CircularParticleCreationSpecification.vertical_speed = nil

---@default 0
---@optional true
---@type float
CircularParticleCreationSpecification.vertical_speed_deviation = nil

---@optional true
---@type vector
CircularParticleCreationSpecification.center = nil

---@default 0
---@optional true
---@type double
CircularParticleCreationSpecification.creation_distance = nil

---@default 0
---@optional true
---@type double
CircularParticleCreationSpecification.creation_distance_orientation = nil

---@optional true
---@type bool
CircularParticleCreationSpecification.use_source_position = nil

---Type for placeable_by for entities: Item that when placed creates this entity.
---@class LightDefinitionBasic
local LightDefinitionBasic = {}

---Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.
---@optional false
---@type float
LightDefinitionBasic.intensity = nil

---The radius of the light in tiles. Note, that the light gets darker near the edges, so the effective size of the light seems to be smaller.
---@optional false
---@type float
LightDefinitionBasic.size = nil

---@default 0
---@optional true
---@type RealOrientation
LightDefinitionBasic.source_orientation_offset = nil

---@default false
---@optional true
---@type bool
LightDefinitionBasic.add_perspective = nil

---@optional true
---@type vector
LightDefinitionBasic.shift = nil

---Color of the light.
---@optional true
---@type Color
LightDefinitionBasic.color = nil

---@default 0
---@optional true
---@type float
LightDefinitionBasic.minimum_darkness = nil

---null
---@class TileVariantsMain
local TileVariantsMain = {}

---Only powers of 2 from 1 to 128 can be used. Square size of the tile arrangement this animation is used for. Used to calculate the <code>width</code> and <code>height</code> of the animation which cannot be set directly. (width or height) = size * 32 / scale.
---@optional false
---@type uint32
TileVariantsMain.size = nil

---Probability of 1x1 (size = 1) version of tile must be 1.
---@default 1.0
---@optional true
---@type double
TileVariantsMain.probability = nil

---@optional true
---@type double[]
TileVariantsMain.weights = nil

---Frame count.
---@optional false
---@type uint32
TileVariantsMain.count = nil

---@optional false
---@type FileName
TileVariantsMain.picture = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the tile sprite.
---@optional true
---@type TileSprite
TileVariantsMain.hr_version = nil

---@default 1
---@optional true
---@type float
TileVariantsMain.scale = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
TileVariantsMain.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
TileVariantsMain.y = nil

---@optional true
---@type uint32
TileVariantsMain.line_length = nil

---null
---@class UtilityConstantsMapEditor
local UtilityConstantsMapEditor = {}

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_copy_source_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_copy_destination_allowed_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_copy_destination_not_allowed_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_brush_source_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_brush_destination_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_brush_cursor_preview_tint = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.clone_editor_brush_world_preview_tint = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.script_editor_select_area_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.script_editor_drag_area_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.force_editor_select_area_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.cliff_editor_remove_cliffs_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.tile_editor_selection_preview_tint = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.tile_editor_area_selection_color = nil

---@optional false
---@type Color
UtilityConstantsMapEditor.decorative_editor_selection_preview_tint = nil

---@optional false
---@type uint8
UtilityConstantsMapEditor.tile_editor_selection_preview_radius = nil

---@optional false
---@type uint8
UtilityConstantsMapEditor.decorative_editor_selection_preview_radius = nil

---null
---@class AnimationVariationSheet
local AnimationVariationSheet = {}

---@optional false
---@type uint32
AnimationVariationSheet.variation_count = nil

---@default 1
---@optional true
---@type uint32
AnimationVariationSheet.frame_count = nil

---Default is the value of <code>variation_count</code>.
---@optional true
---@type uint32
AnimationVariationSheet.line_length = nil

---<p>If this property is present, all Animation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Animation definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type AnimationType[]
AnimationVariationSheet.layers = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the Animation.
---@optional true
---@type AnimationType
AnimationVariationSheet.hr_version = nil

---Mandatory if <code>"stripes"</code> is not specified. 
---@optional true
---@type FileName
AnimationVariationSheet.filename = nil

---@default medium
---@optional true
---@type SpritePriority
AnimationVariationSheet.priority = nil

---@optional true
---@type SpriteFlags
AnimationVariationSheet.flags = nil

---<p>The width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType[]|SpriteSizeType
AnimationVariationSheet.size = nil

---Mandatory if <code>size</code> is not given. Width of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
AnimationVariationSheet.width = nil

---Mandatory if <code>size</code> is not given. Height of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
AnimationVariationSheet.height = nil

---Horizontal position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
AnimationVariationSheet.x = nil

---Vertical position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
AnimationVariationSheet.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
AnimationVariationSheet.position = nil

---@optional true
---@type vector
AnimationVariationSheet.shift = nil

---Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
AnimationVariationSheet.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
AnimationVariationSheet.mipmap_count = nil

---@default false
---@optional true
---@type bool
AnimationVariationSheet.apply_runtime_tint = nil

---@optional true
---@type Color
AnimationVariationSheet.tint = nil

---@default normal
---@optional true
---@type BlendMode
AnimationVariationSheet.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
AnimationVariationSheet.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
AnimationVariationSheet.premul_alpha = nil

---@default false
---@optional true
---@type bool
AnimationVariationSheet.generate_sdf = nil

---@default forward
---@optional true
---@type AnimationRunMode
AnimationVariationSheet.run_mode = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint32
AnimationVariationSheet.frame_count = nil

---Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.
---@default 0
---@optional true
---@type float
AnimationVariationSheet.animation_speed = nil

---@optional true
---@type float
AnimationVariationSheet.max_advance = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint8
AnimationVariationSheet.repeat_count = nil

---@optional true
---@type uint8
AnimationVariationSheet.dice = nil

---@optional true
---@type uint8
AnimationVariationSheet.dice_x = nil

---@optional true
---@type uint8
AnimationVariationSheet.dice_y = nil

---@optional true
---@type AnimationFrameSequence
AnimationVariationSheet.frame_sequence = nil

---@optional true
---@type Stripe[]
AnimationVariationSheet.stripes = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
AnimationVariationSheet.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
AnimationVariationSheet.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
AnimationVariationSheet.draw_as_shadow = nil

---<p>Definition of a pipe connection. Used in fluidboxes.</p><p>Either <code>position</code> or <code>positions</code> must be specified. (<code>position</code> takes priority)</p>
---@class PipeConnectionDefinition
local PipeConnectionDefinition = {}

---Position of the pipe connection.
---@optional true
---@type vector
PipeConnectionDefinition.position = nil

---Table must have 4 members, which are 4 explicit positions for the pipe connection (corresponding to 4 directions). Positions must correspond to directions going one after another.
---@optional true
---@type vector[]
PipeConnectionDefinition.positions = nil

---0 means not underground.
---@default 0
---@optional true
---@type uint32
PipeConnectionDefinition.max_underground_distance = nil

---@default input-output
---@optional true
---@type PipeConnectionDefinitionType
PipeConnectionDefinition.type = nil

---Used for <a href="/Prototype/Lamp#signal_to_color_mapping" title="Prototype/Lamp">Prototype/Lamp#signal_to_color_mapping</a>
---@class SignalColorMapping
local SignalColorMapping = {}

---Type of the signal that shows this color.
---@optional false
---@type SignalColorMappingType
SignalColorMapping.type = nil

---Name of the signal that shows this color.
---@optional false
---@type string
SignalColorMapping.name = nil

---The color this signal shows.
---@optional false
---@type Color
SignalColorMapping.color = nil

---@alias LayeredSound LayeredSoundValue|SoundType

---null
---@class ProductPrototypeFluid
local ProductPrototypeFluid = {}

---When hovering over a recipe in the crafting menu the recipe tooltip will be shown. An additional item tooltip will be shown for every product, as a separate tooltip, if the item tooltip has a description and/or properties to show and if show_details_in_recipe_tooltip is true.
---@default true
---@optional true
---@type bool
ProductPrototypeFluid.show_details_in_recipe_tooltip = nil

---The name of a <a href="/Prototype/Fluid" title="Prototype/Fluid">Prototype/Fluid</a>.
---@optional false
---@type string
ProductPrototypeFluid.name = nil

---Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.
---@default 1
---@optional true
---@type double
ProductPrototypeFluid.probability = nil

---Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.
---@default 1
---@optional true
---@type double
ProductPrototypeFluid.probability = nil

---Cannot be < 0.
---@optional true
---@type double
ProductPrototypeFluid.amount = nil

---<p>Mandatory if <code>amount</code> is not specified.</p><p>May not be < 0.</p>
---@optional true
---@type MaterialAmountType
ProductPrototypeFluid.amount_min = nil

---<p>Mandatory if <code>amount</code> is not specified.</p><p>If set to a number that is less than <code>amount_min</code>, the game will use <code>amount_min</code> internally.</p>
---@optional true
---@type MaterialAmountType
ProductPrototypeFluid.amount_max = nil

---Sets the temperature of the fluid product.
---@optional true
---@type double
ProductPrototypeFluid.temperature = nil

---Amount that should not be affected by productivity modules (not yielded from bonus production) and should not be included in the fluid production statistics.
---@default 0
---@optional true
---@type double
ProductPrototypeFluid.catalyst_amount = nil

---Used to specify which fluidbox this product should use on the machine. It will only use this one fluidbox.
---@default 0
---@optional true
---@type uint32
ProductPrototypeFluid.fluidbox_index = nil

---@alias SpriteFlags string[]

---Definition of actual parameters used in attack.
---@class AmmoType
local AmmoType = {}

---Name of a Prototype/AmmoCategory. Defines whether the attack will be affected by upgrades.
---@optional false
---@type string
AmmoType.category = nil

---Describes actions taken upon attack happening.
---@optional true
---@type Trigger
AmmoType.action = nil

---When true, the gun will be able to shoot even when the target is out of range. Only applies when target_type is position. The gun will fire at the maximum range in the direction of the target position. Defaults to false.
---@default false
---@optional true
---@type bool
AmmoType.clamp_position = nil

---Energy consumption of a single shot, if applicable.
---@optional true
---@type Energy
AmmoType.energy_consumption = nil

---@default 1
---@optional true
---@type double
AmmoType.range_modifier = nil

---@default 1
---@optional true
---@type double
AmmoType.cooldown_modifier = nil

---@default 1
---@optional true
---@type float
AmmoType.consumption_modifier = nil

---If this is "entity", <code>clamp_position</code> is forced to be false. "entity" fires at an entity, "position" fires directly at a position, "direction" fires in a direction.
---@default entity
---@optional true
---@type AmmoTypeTargetType
AmmoType.target_type = nil

---null
---@class SoundAggregation
local SoundAggregation = {}

---@optional false
---@type uint32
SoundAggregation.max_count = nil

---If count already playing is true, this will determine maximum progress when instance is counted toward playing sounds.
---@default 1.0
---@optional true
---@type float
SoundAggregation.progress_threshold = nil

---@optional false
---@type bool
SoundAggregation.remove = nil

---If true already playing sounds are taken into account when checking maxCount.
---@default false
---@optional true
---@type bool
SoundAggregation.count_already_playing = nil

---null
---@class AnimationVariationValue
local AnimationVariationValue = {}

---<p>An animation. Does not use the <code>layers</code> property. The <code>filename</code> is mandatory.</p><p>The variations are arranged vertically in the file, one row for each variation.</p>
---@optional true
---@type AnimationVariationSheet
AnimationVariationValue.sheet = nil

---Array of Types/Animation. The contained animations do not use the <code>layers</code> property. The <code>filename</code> is mandatory.
---@optional true
---@type AnimationVariationSheet[]
AnimationVariationValue.sheets = nil

---A property type, NOT a prototype. Used to specify what type of damage and how much damage something deals.
---@class DamagePrototype
local DamagePrototype = {}

---@optional false
---@type float
DamagePrototype.amount = nil

---The type of damage. See <a href="/Data.raw#damage-type" title="Data.raw">Data.raw#damage-type</a> for a list of built-in types, and <a href="/Prototype/DamageType" title="Prototype/DamageType">Prototype/DamageType</a> for creating custom types.
---@optional false
---@type string
DamagePrototype.type = nil

---@default 1
---@optional true
---@type uint16
DamagePrototype.repeat_count = nil

---@default 0
---@optional true
---@type uint16
DamagePrototype.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
DamagePrototype.probability = nil

---@default false
---@optional true
---@type bool
DamagePrototype.affects_target = nil

---@default true
---@optional true
---@type bool
DamagePrototype.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
DamagePrototype.damage_type_filters = nil

---This type is used to produce sound from in-game entities when they are working/idle.
---@class WorkingSound
local WorkingSound = {}

---The sound to be played when the entity is working. If sound is not present, the entire WorkingSound is loaded as a <a href="/Types/Sound" title="Types/Sound">Types/Sound</a>.

---@optional false
---@type SoundType
WorkingSound.sound = nil

---@default 1
---@optional true
---@type float
WorkingSound.apparent_volume = nil

---@optional true
---@type uint8
WorkingSound.max_sounds_per_type = nil

---@default false
---@optional true
---@type bool
WorkingSound.match_progress_to_activity = nil

---@default false
---@optional true
---@type bool
WorkingSound.match_volume_to_activity = nil

---@default false
---@optional true
---@type bool
WorkingSound.match_speed_to_activity = nil

---@default false
---@optional true
---@type bool
WorkingSound.persistent = nil

---@default true
---@optional true
---@type bool
WorkingSound.use_doppler_shift = nil

---Modifies how far a sound can be heard. Can only be 1 or lower, has to be a positive number.
---@default 1
---@optional true
---@type double
WorkingSound.audible_distance_modifier = nil

---Modifies how often the sound is played.
---@default 1
---@optional true
---@type double
WorkingSound.probability = nil

---Can't be used when match_progress_to_activity is true.
---@default 0
---@optional true
---@type uint32
WorkingSound.fade_in_ticks = nil

---Can't be used when match_progress_to_activity is true.
---@default 0
---@optional true
---@type uint32
WorkingSound.fade_out_ticks = nil

---The sound to be played when the entity is idle. Might not work with all entities that use working_sound.
---@optional true
---@type SoundType
WorkingSound.idle_sound = nil

---Might not work with all entities that use working_sound.
---@optional true
---@type SoundType
WorkingSound.activate_sound = nil

---Might not work with all entities that use working_sound.
---@optional true
---@type SoundType
WorkingSound.deactivate_sound = nil

---@alias Position number[]|PositionValue

---null
---@class CreateDecorativesTriggerEffectItem
local CreateDecorativesTriggerEffectItem = {}

---Name of a <a href="/Prototype/Decorative" title="Prototype/Decorative">Prototype/Decorative</a>.
---@optional false
---@type string
CreateDecorativesTriggerEffectItem.decorative = nil

---@optional false
---@type uint16
CreateDecorativesTriggerEffectItem.spawn_max = nil

---@optional false
---@type float
CreateDecorativesTriggerEffectItem.spawn_min_radius = nil

---Must be less than 24.
---@optional false
---@type float
CreateDecorativesTriggerEffectItem.spawn_max_radius = nil

---@default 0
---@optional true
---@type uint16
CreateDecorativesTriggerEffectItem.spawn_min = nil

---@default 0.5
---@optional true
---@type float
CreateDecorativesTriggerEffectItem.radius_curve = nil

---@default false
---@optional true
---@type bool
CreateDecorativesTriggerEffectItem.apply_projection = nil

---@default false
---@optional true
---@type bool
CreateDecorativesTriggerEffectItem.spread_evenly = nil

---@default 1
---@optional true
---@type uint16
CreateDecorativesTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateDecorativesTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateDecorativesTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateDecorativesTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateDecorativesTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateDecorativesTriggerEffectItem.damage_type_filters = nil

---@alias double number

---null
---@class MapSettingsPathFinder
local MapSettingsPathFinder = {}

---Defines whether we prefer forward (>1) or backward (<-1) or symmetrical (1) search.
---@optional false
---@type int32
MapSettingsPathFinder.fwd2bwd_ratio = nil

---When comparing nodes in open which one to check next, heuristic value is multiplied by this ratio. The higher the number the more is the search directed directly towards the goal.
---@optional false
---@type double
MapSettingsPathFinder.goal_pressure_ratio = nil

---@optional false
---@type bool
MapSettingsPathFinder.use_path_cache = nil

---When this is exhausted no more requests are allowed, at the moment the first path to exhaust this will be finished (even if it is hundreds of steps).
---@optional false
---@type double
MapSettingsPathFinder.max_steps_worked_per_tick = nil

---@optional false
---@type uint32
MapSettingsPathFinder.max_work_done_per_tick = nil

---Number of elements in the cache.
---@optional false
---@type uint32
MapSettingsPathFinder.short_cache_size = nil

---@optional false
---@type uint32
MapSettingsPathFinder.long_cache_size = nil

---Minimal distance to goal for path to be searched in short path cache.
---@optional false
---@type double
MapSettingsPathFinder.short_cache_min_cacheable_distance = nil

---Minimal number of algorithm steps for path to be inserted into the short path cache.
---@optional false
---@type uint32
MapSettingsPathFinder.short_cache_min_algo_steps_to_cache = nil

---Minimal distance to goal for path to be searched in long path cache.
---@optional false
---@type double
MapSettingsPathFinder.long_cache_min_cacheable_distance = nil

---When searching for connection to path cache path, search at most for this number of steps times the initial estimate.
---@optional false
---@type uint32
MapSettingsPathFinder.cache_max_connect_to_cache_steps_multiplier = nil

---When looking for path from cache make sure it doesn't start too far from requested start in relative distance terms.
---@optional false
---@type double
MapSettingsPathFinder.cache_accept_path_start_distance_ratio = nil

---When looking for path from cache make sure it doesn't end too far from requested end. This is typically higher than accept value for the start because the end target can be moving.
---@optional false
---@type double
MapSettingsPathFinder.cache_accept_path_end_distance_ratio = nil

---Same as cache_accept_path_start_distance_ratio, but used for negative cache queries.
---@optional false
---@type double
MapSettingsPathFinder.negative_cache_accept_path_start_distance_ratio = nil

---Same as cache_accept_path_end_distance_ratio, but used for negative cache queries.
---@optional false
---@type double
MapSettingsPathFinder.negative_cache_accept_path_end_distance_ratio = nil

---When assigning rating to the best path this * start distances is considered.
---@optional false
---@type double
MapSettingsPathFinder.cache_path_start_distance_rating_multiplier = nil

---When assigning rating to the best path this * end distances is considered. This is typically higher than value for the start to achieve better path end quality.
---@optional false
---@type double
MapSettingsPathFinder.cache_path_end_distance_rating_multiplier = nil

---Somewhere along the path is stuck enemy we need to avoid. This is mainly to handle situations when units have arrived and are attacking the target then units further in the back will use this and run around the target.
---@optional false
---@type double
MapSettingsPathFinder.stale_enemy_with_same_destination_collision_penalty = nil

---If there is a moving unit further than this we don't really care.
---@optional false
---@type double
MapSettingsPathFinder.ignore_moving_enemy_collision_distance = nil

---Enemy is not moving/or is too close and has different destination.
---@optional false
---@type double
MapSettingsPathFinder.enemy_with_different_destination_collision_penalty = nil

---Simplification for now; collision with everything else is this.
---@optional false
---@type double
MapSettingsPathFinder.general_entity_collision_penalty = nil

---Collision penalty for successors of positions that require destroy to reach.
---@optional false
---@type double
MapSettingsPathFinder.general_entity_subsequent_collision_penalty = nil

---Collision penalty for collisions in the extended bounding box but outside the entity's actual bounding box.
---@optional false
---@type double
MapSettingsPathFinder.extended_collision_penalty = nil

---Up until this amount any client will be served by the path finder (no estimate on the path length).
---@optional false
---@type uint32
MapSettingsPathFinder.max_clients_to_accept_any_new_request = nil

---From max_clients_to_accept_any_new_request till this one only those that have a short estimate will be served.
---@optional false
---@type uint32
MapSettingsPathFinder.max_clients_to_accept_short_new_request = nil

---This is the "threshold" to decide what is short and what is not.
---@optional false
---@type uint32
MapSettingsPathFinder.direct_distance_to_consider_short_request = nil

---If a short request takes more than this many steps, it will be rescheduled as a long request.
---@optional false
---@type uint32
MapSettingsPathFinder.short_request_max_steps = nil

---How many steps will be allocated to short requests each tick, as a ratio of all available steps per tick.
---@optional false
---@type double
MapSettingsPathFinder.short_request_ratio = nil

---Absolute minimum of steps that will be performed for every path find request no matter what.
---@optional false
---@type uint32
MapSettingsPathFinder.min_steps_to_check_path_find_termination = nil

---If the current actual cost from start is higher than this times estimate of start to goal then path finding is terminated.
---@optional false
---@type double
MapSettingsPathFinder.start_to_goal_cost_multiplier_to_terminate_path_find = nil

---@optional false
---@type uint32[]
MapSettingsPathFinder.overload_levels = nil

---@optional false
---@type double[]
MapSettingsPathFinder.overload_multipliers = nil

---@alias EffectTypeLimitation string[]

---@alias SpriteVariations SpriteType[]|SpriteType|SpriteVariationsValue

---Graphics for the heat pipe.
---@class ConnectableEntityGraphics
local ConnectableEntityGraphics = {}

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.single = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.straight_vertical = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.straight_horizontal = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.corner_right_down = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.corner_left_down = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.corner_right_up = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.corner_left_up = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.t_up = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.t_right = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.t_down = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.t_left = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.ending_up = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.ending_right = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.ending_down = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.ending_left = nil

---@optional false
---@type SpriteVariations
ConnectableEntityGraphics.cross = nil

---@alias TutorialTriggerType string

---@alias CustomInputAction string

---null
---@class DamageTriggerEffectItem
local DamageTriggerEffectItem = {}

---@optional false
---@type DamagePrototype
DamageTriggerEffectItem.damage = nil

---@default true
---@optional true
---@type bool
DamageTriggerEffectItem.apply_damage_to_trees = nil

---@default false
---@optional true
---@type bool
DamageTriggerEffectItem.vaporize = nil

---@optional true
---@type uint16
DamageTriggerEffectItem.lower_distance_threshold = nil

---@optional true
---@type uint16
DamageTriggerEffectItem.upper_distance_threshold = nil

---@default 1
---@optional true
---@type float
DamageTriggerEffectItem.lower_damage_modifier = nil

---@default 1
---@optional true
---@type float
DamageTriggerEffectItem.upper_damage_modifier = nil

---@default 1
---@optional true
---@type uint16
DamageTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
DamageTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
DamageTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
DamageTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
DamageTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
DamageTriggerEffectItem.damage_type_filters = nil

---<p>Specifies one picture that can be used in the game.</p><p>When there is more than one sprite or <a href="/Types/Animation" title="Types/Animation">animation</a> frame with the same source file and dimensions/position in the game, they all share the same memory.</p>
---@class SpriteType
local SpriteType = {}

---Technically optional, but path to sprite cannot be empty.
---@optional false
---@type FileName
SpriteType.filename = nil

---<p>If this property is present, all Sprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Sprite definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type SpriteType[]
SpriteType.layers = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the sprite.
---@optional true
---@type SpriteType
SpriteType.hr_version = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
SpriteType.slice = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
SpriteType.dice = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
SpriteType.slice_x = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
SpriteType.dice_x = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
SpriteType.slice_y = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
SpriteType.dice_y = nil

---@default medium
---@optional true
---@type SpritePriority
SpriteType.priority = nil

---@optional true
---@type SpriteFlags
SpriteType.flags = nil

---<p>The width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
SpriteType.size = nil

---Mandatory if size is not given. Width of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
SpriteType.width = nil

---Mandatory if size is not given. Height of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
SpriteType.height = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
SpriteType.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
SpriteType.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
SpriteType.position = nil

---In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.
---@optional true
---@type vector
SpriteType.shift = nil

---Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
SpriteType.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
SpriteType.mipmap_count = nil

---@default false
---@optional true
---@type bool
SpriteType.apply_runtime_tint = nil

---@optional true
---@type Color
SpriteType.tint = nil

---@default normal
---@optional true
---@type BlendMode
SpriteType.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
SpriteType.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
SpriteType.premul_alpha = nil

---@default false
---@optional true
---@type bool
SpriteType.generate_sdf = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
SpriteType.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
SpriteType.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
SpriteType.draw_as_shadow = nil

---@alias AmmoTypeTargetType string

---Used by <a href="/Types/BeaconGraphicsSet" title="Types/BeaconGraphicsSet">Types/BeaconGraphicsSet</a> (<a href="/Prototype/Beacon" title="Prototype/Beacon">Prototype/Beacon</a>).
---@class BeaconModuleVisualizations
local BeaconModuleVisualizations = {}

---The visualization is chosen based on the <a href="/Prototype/Module#art_style" title="Prototype/Module">Prototype/Module#art_style</a>, meaning if module art style == beacon module visualization art style then this visualization is chosen. Vanilla uses "vanilla" here.
---@optional false
---@type string
BeaconModuleVisualizations.art_style = nil

---@default false
---@optional true
---@type bool
BeaconModuleVisualizations.use_for_empty_slots = nil

---@default 0
---@optional true
---@type int32
BeaconModuleVisualizations.tier_offset = nil

---The outer array contains the different slots, the inner array contains the different layers for those slots (with different tints etc).
---@optional true
---@type BeaconModuleVisualization[][]
BeaconModuleVisualizations.slots = nil

---@alias vector table

---null
---@class MapSettingsSteering
local MapSettingsSteering = {}

---@optional false
---@type MapSettingsSteeringDefault
MapSettingsSteering.default = nil

---@optional false
---@type MapSettingsSteeringMoving
MapSettingsSteering.moving = nil

---null
---@class CraftingMachineShiftAnimationWaypoints
local CraftingMachineShiftAnimationWaypoints = {}

---@optional true
---@type vector[]
CraftingMachineShiftAnimationWaypoints.north = nil

---@optional true
---@type vector[]
CraftingMachineShiftAnimationWaypoints.east = nil

---@optional true
---@type vector[]
CraftingMachineShiftAnimationWaypoints.south = nil

---@optional true
---@type vector[]
CraftingMachineShiftAnimationWaypoints.west = nil

---null
---@class ProjectileTriggerDelivery
local ProjectileTriggerDelivery = {}

---Name of a <a href="/Prototype/Projectile" title="Prototype/Projectile">Prototype/Projectile</a>.
---@optional false
---@type string
ProjectileTriggerDelivery.projectile = nil

---Starting speed in tiles per tick.
---@optional false
---@type float
ProjectileTriggerDelivery.starting_speed = nil

---@default 0
---@optional true
---@type float
ProjectileTriggerDelivery.starting_speed_deviation = nil

---@default 0
---@optional true
---@type float
ProjectileTriggerDelivery.direction_deviation = nil

---@default 0
---@optional true
---@type float
ProjectileTriggerDelivery.range_deviation = nil

---@default 1000
---@optional true
---@type double
ProjectileTriggerDelivery.max_range = nil

---@default 0
---@optional true
---@type double
ProjectileTriggerDelivery.min_range = nil

---@optional true
---@type TriggerEffect
ProjectileTriggerDelivery.source_effects = nil

---@optional true
---@type TriggerEffect
ProjectileTriggerDelivery.target_effects = nil

---null
---@class AnimatedVectorRotation
local AnimatedVectorRotation = {}

---Sizes of all <code>frames</code> arrays must be the same.
---@optional false
---@type vector[]
AnimatedVectorRotation.frames = nil

---@optional true
---@type RenderLayer
AnimatedVectorRotation.render_layer = nil

---Used by <a href="/Prototype/Unit" title="Prototype/Unit">Prototype/Unit</a>.
---@class UnitAISettings
local UnitAISettings = {}

---If enabled, units that repeatedly fail to succeed at commands will be destroyed.
---@default false
---@optional true
---@type bool
UnitAISettings.destroy_when_commands_fail = nil

---If enabled, units that have nothing else to do will attempt to return to a spawner.
---@default false
---@optional true
---@type bool
UnitAISettings.allow_try_return_to_spawner = nil

---If enabled, units will try to separate themselves from nearby friendly units.
---@default true
---@optional true
---@type bool
UnitAISettings.do_separation = nil

---Must be between -8 and 8.
---@default 0
---@optional true
---@type int8
UnitAISettings.path_resolution_modifier = nil

---null
---@class CharacterArmorAnimation
local CharacterArmorAnimation = {}

---@optional false
---@type RotatedAnimation
CharacterArmorAnimation.idle = nil

---@optional false
---@type RotatedAnimation
CharacterArmorAnimation.idle_with_gun = nil

---@optional false
---@type RotatedAnimation
CharacterArmorAnimation.running = nil

---Must contain exactly 18 directions, so all of the combination of gun direction and moving direction can be covered. Some of these variations are used in reverse to save space. You can use the character animation in the base game for reference.
---@optional false
---@type RotatedAnimation
CharacterArmorAnimation.running_with_gun = nil

---@optional false
---@type RotatedAnimation
CharacterArmorAnimation.mining_with_tool = nil

---flipped_shadow_running_with_gun must be nil or contain exactly 18 directions, so all of the combination of gun direction and moving direction can be covered. Some of these variations are used in reverse to save space. You can use the character animation in the base game for reference. flipped_shadow_running_with_gun has to have same frame count as running_with_gun.
---@optional true
---@type RotatedAnimation
CharacterArmorAnimation.flipped_shadow_running_with_gun = nil

---The names of the armors this animation data is used for. Don't define this if you want the animations to be used for the player without armor.
---@optional true
---@type string[]
CharacterArmorAnimation.armors = nil

---Used by <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a>.
---@class TileSprite
local TileSprite = {}

---Frame count.
---@optional false
---@type uint32
TileSprite.count = nil

---@optional false
---@type FileName
TileSprite.picture = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the tile sprite.
---@optional true
---@type TileSprite
TileSprite.hr_version = nil

---@default 1
---@optional true
---@type float
TileSprite.scale = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
TileSprite.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
TileSprite.y = nil

---@optional true
---@type uint32
TileSprite.line_length = nil

---null
---@class DestroyCliffsTriggerEffectItem
local DestroyCliffsTriggerEffectItem = {}

---@optional false
---@type float
DestroyCliffsTriggerEffectItem.radius = nil

---Name of an entity.
---@optional true
---@type string
DestroyCliffsTriggerEffectItem.explosion = nil

---@default 1
---@optional true
---@type uint16
DestroyCliffsTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
DestroyCliffsTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
DestroyCliffsTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
DestroyCliffsTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
DestroyCliffsTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
DestroyCliffsTriggerEffectItem.damage_type_filters = nil

---null
---@class FootstepTriggerEffectListValue
local FootstepTriggerEffectListValue = {}

---Each CreateParticleTriggerEffectItem needs the extra mandatory property tiles, which is a table (array) of string which is the name of a tile.
---@optional false
---@type string[]
FootstepTriggerEffectListValue.tiles = nil

---Alternatively, instead of specifying the CreateParticleTriggerEffectItem directly in the table with the <code>tiles</code> property, a <code>actions</code> property that is an array of CreateParticleTriggerEffectItem can be specified in the table with the <code>tiles</code> property.
---@optional true
---@type CreateParticleTriggerEffectItem[]
FootstepTriggerEffectListValue.actions = nil

---Furthermore, the table with the <code>tiles</code> property can contain a <code>use_as_default</code> property which is a boolean value. <code>use_as_default</code> defaults to false. When it is set to true, the trigger(s) defined in that table are the default triggers for tiles that don't have an associated footstep particle trigger (don't show up in one of the "tiles" lists).
---@default false
---@optional true
---@type bool
FootstepTriggerEffectListValue.use_as_default = nil

---Name of a <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a>.
---@optional false
---@type string
FootstepTriggerEffectListValue.particle_name = nil

---@optional false
---@type float
FootstepTriggerEffectListValue.initial_height = nil

---@optional true
---@type BoundingBox
FootstepTriggerEffectListValue.offset_deviation = nil

---@default false
---@optional true
---@type bool
FootstepTriggerEffectListValue.show_in_tooltip = nil

---@optional true
---@type CollisionMask
FootstepTriggerEffectListValue.tile_collision_mask = nil

---@optional true
---@type vector[]
FootstepTriggerEffectListValue.offsets = nil

---@default 0
---@optional true
---@type float
FootstepTriggerEffectListValue.initial_height_deviation = nil

---@default 0
---@optional true
---@type float
FootstepTriggerEffectListValue.initial_vertical_speed = nil

---@default 0
---@optional true
---@type float
FootstepTriggerEffectListValue.initial_vertical_speed_deviation = nil

---@default 0
---@optional true
---@type float
FootstepTriggerEffectListValue.speed_from_center = nil

---@default 0
---@optional true
---@type float
FootstepTriggerEffectListValue.speed_from_center_deviation = nil

---@default 1
---@optional true
---@type float
FootstepTriggerEffectListValue.frame_speed = nil

---@default 0
---@optional true
---@type float
FootstepTriggerEffectListValue.frame_speed_deviation = nil

---Silently capped to a maximum of 100.
---@default 0
---@optional true
---@type uint8
FootstepTriggerEffectListValue.tail_length = nil

---Silently capped to a maximum of 100.
---@default 0
---@optional true
---@type uint8
FootstepTriggerEffectListValue.tail_length_deviation = nil

---@default 1
---@optional true
---@type float
FootstepTriggerEffectListValue.tail_width = nil

---@default false
---@optional true
---@type bool
FootstepTriggerEffectListValue.rotate_offsets = nil

---@default 1
---@optional true
---@type uint16
FootstepTriggerEffectListValue.repeat_count = nil

---@default 0
---@optional true
---@type uint16
FootstepTriggerEffectListValue.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
FootstepTriggerEffectListValue.probability = nil

---@default false
---@optional true
---@type bool
FootstepTriggerEffectListValue.affects_target = nil

---@default true
---@optional true
---@type bool
FootstepTriggerEffectListValue.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
FootstepTriggerEffectListValue.damage_type_filters = nil

---Used as an alternative way to specify animations.
---@class Stripe
local Stripe = {}

---@optional false
---@type uint32
Stripe.width_in_frames = nil

---Mandatory when <a class="mw-selflink selflink">Types/Stripe</a> is used in <a href="/Types/Animation" title="Types/Animation">Types/Animation</a>, optional when it is used in <a href="/Types/RotatedAnimation" title="Types/RotatedAnimation">Types/RotatedAnimation</a> and then it defaults to <a href="/Types/RotatedAnimation#direction_count" title="Types/RotatedAnimation">Types/RotatedAnimation#direction_count</a>.
---@optional false
---@type uint32
Stripe.height_in_frames = nil

---@optional false
---@type FileName
Stripe.filename = nil

---@default 0
---@optional true
---@type uint32
Stripe.x = nil

---@default 0
---@optional false
---@type uint32
Stripe.y = nil

---@alias AnimationVariations AnimationType[]|AnimationVariationValue

---null
---@class PushBackTriggerEffectItem
local PushBackTriggerEffectItem = {}

---@optional false
---@type float
PushBackTriggerEffectItem.distance = nil

---@default 1
---@optional true
---@type uint16
PushBackTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
PushBackTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
PushBackTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
PushBackTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
PushBackTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
PushBackTriggerEffectItem.damage_type_filters = nil

---null
---@class ProductPrototypeItem
local ProductPrototypeItem = {}

---When hovering over a recipe in the crafting menu the recipe tooltip will be shown. An additional item tooltip will be shown for every product, as a separate tooltip, if the item tooltip has a description and/or properties to show and if show_details_in_recipe_tooltip is true.
---@default true
---@optional true
---@type bool
ProductPrototypeItem.show_details_in_recipe_tooltip = nil

---The name of a <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a>.
---@optional false
---@type string
ProductPrototypeItem.name = nil

---Mandatory when using numbered keys (an array).
---@optional true
---@type uint16
ProductPrototypeItem.amount = nil

---Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.
---@default 1
---@optional true
---@type double
ProductPrototypeItem.probability = nil

---Mandatory if <code>amount</code> is not specified and named keys are being used.
---@optional true
---@type uint16
ProductPrototypeItem.amount_min = nil

---<p>Mandatory if <code>amount</code> is not specified and named keys are being used.</p><p>If set to a number that is less than amount_min, the game will use amount_min internally.</p>
---@optional true
---@type uint16
ProductPrototypeItem.amount_max = nil

---Amount that should not be affected by productivity modules (not yielded from bonus production) and should not be included in the item production statistics.
---@default 0
---@optional true
---@type uint16
ProductPrototypeItem.catalyst_amount = nil

---null
---@class StreamTriggerDelivery
local StreamTriggerDelivery = {}

---Name of a <a href="/Prototype/FluidStream" title="Prototype/FluidStream">Prototype/FluidStream</a>.
---@optional false
---@type string
StreamTriggerDelivery.stream = nil

---@optional true
---@type vector
StreamTriggerDelivery.source_offset = nil

---@optional true
---@type TriggerEffect
StreamTriggerDelivery.source_effects = nil

---@optional true
---@type TriggerEffect
StreamTriggerDelivery.target_effects = nil

---@alias int8 number

---<p>Specifies the icon of an entity/item/technology/recipe etc. The properties are specified directly in the prototype, not in another sub-property.</p><p>Either <code>icons</code> and optionally <code>icon_size</code>, or both <code>icon</code> and <code>icon_size</code> have to be specified. If both <code>icons</code> and <code>icon</code> are defined, <code>icon</code> is ignored.</p>
---@class IconSpecification
local IconSpecification = {}

---Path to the icon file.
---@optional true
---@type FileName
IconSpecification.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
IconSpecification.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
IconSpecification.icon_size = nil

---@default 0
---@optional true
---@type uint8
IconSpecification.icon_mipmaps = nil

---Used by <a href="/Types/AttackReaction" title="Types/AttackReaction">Types/AttackReaction</a>.
---@class AttackReactionItem
local AttackReactionItem = {}

---@optional false
---@type float
AttackReactionItem.range = nil

---@optional true
---@type Trigger
AttackReactionItem.action = nil

---@default 0
---@optional true
---@type float
AttackReactionItem.reaction_modifier = nil

---Name of a <a href="/Prototype/DamageType" title="Prototype/DamageType">Prototype/DamageType</a>.
---@optional true
---@type string
AttackReactionItem.damage_type = nil

---Data of one icon "layer" for the <code>icons</code> property of the <a href="/Types/IconSpecification" title="Types/IconSpecification">Types/IconSpecification</a>.
---@class IconData
local IconData = {}

---Path to the icon file.
---@optional false
---@type FileName
IconData.icon = nil

---Mandatory if <code>icon_size</code> is not specified outside of <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional false
---@type SpriteSizeType
IconData.icon_size = nil

---Tint of the icon.
---@optional true
---@type Color
IconData.tint = nil

---Used to offset the icon "layer" from the overall icon.
---@optional true
---@type vector
IconData.shift = nil

---Values different than 1 specify the scale of the icon on default gui scale. Scale 2 means that the icon will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
IconData.scale = nil

---@default 0
---@optional true
---@type uint8
IconData.icon_mipmaps = nil

---@alias GuiMode string

---@alias AutoplaceSpecificationForce string

---null
---@class TriggerDeliveryBase
local TriggerDeliveryBase = {}

---@optional true
---@type TriggerEffect
TriggerDeliveryBase.source_effects = nil

---@optional true
---@type TriggerEffect
TriggerDeliveryBase.target_effects = nil

---null
---@class FluidProductPrototype
local FluidProductPrototype = {}

---The name of a <a href="/Prototype/Fluid" title="Prototype/Fluid">Prototype/Fluid</a>.
---@optional false
---@type string
FluidProductPrototype.name = nil

---Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.
---@default 1
---@optional true
---@type double
FluidProductPrototype.probability = nil

---Value between 0 and 1, 0 for 0% chance and 1 for 100% chance.
---@default 1
---@optional true
---@type double
FluidProductPrototype.probability = nil

---Cannot be < 0.
---@optional true
---@type double
FluidProductPrototype.amount = nil

---<p>Mandatory if <code>amount</code> is not specified.</p><p>May not be < 0.</p>
---@optional true
---@type MaterialAmountType
FluidProductPrototype.amount_min = nil

---<p>Mandatory if <code>amount</code> is not specified.</p><p>If set to a number that is less than <code>amount_min</code>, the game will use <code>amount_min</code> internally.</p>
---@optional true
---@type MaterialAmountType
FluidProductPrototype.amount_max = nil

---Sets the temperature of the fluid product.
---@optional true
---@type double
FluidProductPrototype.temperature = nil

---Amount that should not be affected by productivity modules (not yielded from bonus production) and should not be included in the fluid production statistics.
---@default 0
---@optional true
---@type double
FluidProductPrototype.catalyst_amount = nil

---Used to specify which fluidbox this product should use on the machine. It will only use this one fluidbox.
---@default 0
---@optional true
---@type uint32
FluidProductPrototype.fluidbox_index = nil

---Used by <a href="/Types/TileTransitions" title="Types/TileTransitions">Types/TileTransitions</a> which is used by <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a>.
---@class TileTransitionSprite
local TileTransitionSprite = {}

---Frame count.
---@optional false
---@type uint32
TileTransitionSprite.count = nil

---@optional false
---@type FileName
TileTransitionSprite.picture = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the tile transition sprite.
---@optional true
---@type TileTransitionSprite
TileTransitionSprite.hr_version = nil

---If this is true, the shift of the tile transition sprite is set to {0, 0.5}.
---@default false
---@optional true
---@type bool
TileTransitionSprite.tall = nil

---@default 1
---@optional true
---@type float
TileTransitionSprite.scale = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
TileTransitionSprite.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
TileTransitionSprite.y = nil

---null
---@class UndergroundBeltStructure
local UndergroundBeltStructure = {}

---@optional false
---@type Sprite4Way
UndergroundBeltStructure.direction_in = nil

---@optional false
---@type Sprite4Way
UndergroundBeltStructure.direction_out = nil

---@optional true
---@type Sprite4Way
UndergroundBeltStructure.back_patch = nil

---@optional true
---@type Sprite4Way
UndergroundBeltStructure.front_patch = nil

---@optional true
---@type Sprite4Way
UndergroundBeltStructure.direction_in_side_loading = nil

---@optional true
---@type Sprite4Way
UndergroundBeltStructure.direction_out_side_loading = nil

---@alias AnimationFrameSequence uint16[]

---@alias PipeConnectionDefinitionType string

---null
---@class TileVariants
local TileVariants = {}

---@optional false
---@type TileVariantsMain
TileVariants.main = nil

---Width and height are given by the game, setting them will not have an effect. Width and height are calculated from the expected size (32) and the scale. So, for HR tiles at a size of 64x64, the scale needs to be 0.5.
---@optional true
---@type TileSprite
TileVariants.material_background = nil

---This or side_mask needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileVariants.side = nil

---This or side needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileVariants.side_mask = nil

---This or inner_corner_mask needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileVariants.inner_corner = nil

---This or inner_corner needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileVariants.inner_corner_mask = nil

---This or outer_corner_mask needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileVariants.outer_corner = nil

---This or outer_corner needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileVariants.outer_corner_mask = nil

---@default false
---@optional true
---@type bool
TileVariants.empty_transitions = nil

---@optional true
---@type TileTransitionSprite
TileVariants.side_background = nil

---@optional true
---@type TileTransitionSprite
TileVariants.side_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileVariants.side_effect_map = nil

---@optional true
---@type float[]
TileVariants.side_weights = nil

---@optional true
---@type TileTransitionSprite
TileVariants.inner_corner_background = nil

---@optional true
---@type TileTransitionSprite
TileVariants.inner_corner_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileVariants.inner_corner_effect_map = nil

---@optional true
---@type float[]
TileVariants.inner_corner_weights = nil

---@optional true
---@type TileTransitionSprite
TileVariants.outer_corner_background = nil

---@optional true
---@type TileTransitionSprite
TileVariants.outer_corner_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileVariants.outer_corner_effect_map = nil

---@optional true
---@type float[]
TileVariants.outer_corner_weights = nil

---@optional true
---@type TileTransitionSprite
TileVariants.u_transition = nil

---@optional true
---@type TileTransitionSprite
TileVariants.u_transition_mask = nil

---@optional true
---@type TileTransitionSprite
TileVariants.u_transition_background = nil

---@optional true
---@type TileTransitionSprite
TileVariants.u_transition_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileVariants.u_transition_effect_map = nil

---@optional true
---@type float[]
TileVariants.u_transition_weights = nil

---@optional true
---@type TileSprite
TileVariants.o_transition = nil

---@optional true
---@type TileSprite
TileVariants.o_transition_mask = nil

---@optional true
---@type TileSprite
TileVariants.o_transition_background = nil

---@optional true
---@type TileSprite
TileVariants.o_transition_background_mask = nil

---@optional true
---@type TileSprite
TileVariants.o_transition_effect_map = nil

---@optional true
---@type SpriteType
TileVariants.water_patch = nil

---@optional true
---@type AnimationType
TileVariants.effect_mask = nil

---@optional true
---@type uint8
TileVariants.layer = nil

---@optional true
---@type TileLayerGroup
TileVariants.overlay_layer_group = nil

---@optional true
---@type TileLayerGroup
TileVariants.background_layer_group = nil

---@optional true
---@type int8
TileVariants.overlay_layer_offset = nil

---@default 0
---@optional true
---@type int8
TileVariants.masked_overlay_layer_offset = nil

---@default 0
---@optional true
---@type int8
TileVariants.background_layer_offset = nil

---@default 0
---@optional true
---@type int8
TileVariants.masked_background_layer_offset = nil

---@default false
---@optional true
---@type bool
TileVariants.apply_effect_color_to_overlay = nil

---@default false
---@optional true
---@type bool
TileVariants.offset_background_layer_by_tile_layer = nil

---null
---@class EnergySourceElectric
local EnergySourceElectric = {}

---Optional. How much power the entity holds.
---@optional true
---@type Energy
EnergySourceElectric.buffer_capacity = nil

---@optional false
---@type ElectricUsagePriority
EnergySourceElectric.usage_priority = nil

---How fast the energy can flow into the entity. 0 means 0.
---@optional true
---@type Energy
EnergySourceElectric.input_flow_limit = nil

---How fast the energy can flow out of the entity. 0 means 0.
---@optional true
---@type Energy
EnergySourceElectric.output_flow_limit = nil

---How much energy the entity will always "drain" from the network, even when not in use.
---@optional true
---@type Energy
EnergySourceElectric.drain = nil

---The pollution an entity emits per minute at full energy consumption. <code>emissions_per_minute</code> is exactly the value that is shown in the entity tooltip.
---@default 0
---@optional true
---@type double
EnergySourceElectric.emissions_per_minute = nil

---Optional. Whether to render the Electricity-icon-red.png icon on the entity if it is low on power. Also applies to Fuel-icon-red.png when using a burner energy source.
---@default true
---@optional true
---@type bool
EnergySourceElectric.render_no_power_icon = nil

---Optional. Whether to render the Electricity-icon-unplugged.png icon on the entity if it is not connected to a electric network.
---@default true
---@optional true
---@type bool
EnergySourceElectric.render_no_network_icon = nil

---null
---@class MapSettingsEnemyExpansion
local MapSettingsEnemyExpansion = {}

---@optional false
---@type bool
MapSettingsEnemyExpansion.enabled = nil

---Distance in chunks from the furthest base around. This prevents expansions from reaching too far into the player's territory.
---@optional false
---@type uint32
MapSettingsEnemyExpansion.max_expansion_distance = nil

---@optional false
---@type uint32
MapSettingsEnemyExpansion.friendly_base_influence_radius = nil

---@optional false
---@type uint32
MapSettingsEnemyExpansion.enemy_building_influence_radius = nil

---@optional false
---@type double
MapSettingsEnemyExpansion.building_coefficient = nil

---@optional false
---@type double
MapSettingsEnemyExpansion.other_base_coefficient = nil

---@optional false
---@type double
MapSettingsEnemyExpansion.neighbouring_chunk_coefficient = nil

---@optional false
---@type double
MapSettingsEnemyExpansion.neighbouring_base_chunk_coefficient = nil

---A chunk has to have at most this much percent unbuildable tiles for it to be considered a candidate. This is to avoid chunks full of water to be marked as candidates.
---@optional false
---@type double
MapSettingsEnemyExpansion.max_colliding_tiles_coefficient = nil

---Size of the group that goes to build new base (the game interpolates between min size and max size based on evolution factor).
---@optional false
---@type uint32
MapSettingsEnemyExpansion.settler_group_min_size = nil

---@optional false
---@type uint32
MapSettingsEnemyExpansion.settler_group_max_size = nil

---Ticks to expand to a single position for a base is used. Cooldown is calculated as follows: <code>cooldown = lerp(max_expansion_cooldown, min_expansion_cooldown, -e^2 + 2 * e)</code> where lerp is the linear interpolation function, and e is the current evolution factor.
---@optional false
---@type uint32
MapSettingsEnemyExpansion.min_expansion_cooldown = nil

---@optional false
---@type uint32
MapSettingsEnemyExpansion.max_expansion_cooldown = nil

---@alias WorkingVisualisationEffect string

---@alias CollisionMask string[]

---@alias uint16 number

---@alias SoundCategory string

---null
---@class BoilerPatch
local BoilerPatch = {}

---@optional true
---@type SpriteType
BoilerPatch.north = nil

---@optional true
---@type SpriteType
BoilerPatch.east = nil

---@optional true
---@type SpriteType
BoilerPatch.south = nil

---@optional true
---@type SpriteType
BoilerPatch.west = nil

---@alias DaytimeColorLookupTable table[]

---@alias Energy string

---@alias EntityPrototypeFlags string[]

---null
---@class NestedTriggerEffectItem
local NestedTriggerEffectItem = {}

---@optional false
---@type Trigger
NestedTriggerEffectItem.action = nil

---@default 1
---@optional true
---@type uint16
NestedTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
NestedTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
NestedTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
NestedTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
NestedTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
NestedTriggerEffectItem.damage_type_filters = nil

---null
---@class UtilityConstantsEntityRendererSearchBoxLimits
local UtilityConstantsEntityRendererSearchBoxLimits = {}

---Min value 6, max value 15 - Min value 6 to compensate for shadows
---@optional false
---@type uint8
UtilityConstantsEntityRendererSearchBoxLimits.left = nil

---Min value 3, max value 15
---@optional false
---@type uint8
UtilityConstantsEntityRendererSearchBoxLimits.top = nil

---Min value 3, max value 15
---@optional false
---@type uint8
UtilityConstantsEntityRendererSearchBoxLimits.right = nil

---Min value 4, max value 15 - Min value 4 to compensate for tall entities like electric poles
---@optional false
---@type uint8
UtilityConstantsEntityRendererSearchBoxLimits.bottom = nil

---null
---@class Sprite4WayValue
local Sprite4WayValue = {}

---Optional. If omitted and neither <a href="#sheets">#sheets</a> or <a href="#sheet">#sheet</a> are present, the game will not look for any other directions and instead try to load the whole definition as one <a href="/Types/Sprite" title="Types/Sprite">Types/Sprite</a> and apply it to all directions.
---@optional true
---@type SpriteType
Sprite4WayValue.north = nil

---@optional true
---@type SpriteType
Sprite4WayValue.east = nil

---@optional true
---@type SpriteType
Sprite4WayValue.south = nil

---@optional true
---@type SpriteType
Sprite4WayValue.west = nil

---Optional. If given, this is used instead of any other properties that may be present.
---@optional true
---@type SpriteNWaySheet[]
Sprite4WayValue.sheets = nil

---Optional. If given, and <a href="#sheets">#sheets</a> isnt present, this is used instead of any other properties that may be present.
---@optional true
---@type SpriteNWaySheet
Sprite4WayValue.sheet = nil

---null
---@class LoaderStructure
local LoaderStructure = {}

---@optional false
---@type Sprite4Way
LoaderStructure.direction_in = nil

---@optional false
---@type Sprite4Way
LoaderStructure.direction_out = nil

---@optional true
---@type Sprite4Way
LoaderStructure.back_patch = nil

---@optional true
---@type Sprite4Way
LoaderStructure.front_patch = nil

---@alias LampGlowRenderMode string

---@alias Color ColorValue|float[]

---null
---@class TransportBeltConnectableBeltAnimationSet
local TransportBeltConnectableBeltAnimationSet = {}

---@optional false
---@type RotatedAnimation
TransportBeltConnectableBeltAnimationSet.animation_set = nil

---@default 1
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.east_index = nil

---@default 2
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.west_index = nil

---@default 3
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.north_index = nil

---@default 4
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.south_index = nil

---@default 13
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.starting_south_index = nil

---@default 14
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.ending_south_index = nil

---@default 15
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.starting_west_index = nil

---@default 16
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.ending_west_index = nil

---@default 17
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.starting_north_index = nil

---@default 18
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.ending_north_index = nil

---@default 19
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.starting_east_index = nil

---@default 20
---@optional true
---@type uint8
TransportBeltConnectableBeltAnimationSet.ending_east_index = nil

---@optional true
---@type Sprite4Way
TransportBeltConnectableBeltAnimationSet.ending_patch = nil

---@default false
---@optional true
---@type Sprite4Way
TransportBeltConnectableBeltAnimationSet.ends_with_stopper = nil

---@alias ItemPrototypeFlags string[]

---null
---@class ProgrammableSpeakerInstrument
local ProgrammableSpeakerInstrument = {}

---@optional false
---@type string
ProgrammableSpeakerInstrument.name = nil

---@optional false
---@type ProgrammableSpeakerInstrumentNote[]
ProgrammableSpeakerInstrument.notes = nil

---null
---@class AnimationSidesMandatory
local AnimationSidesMandatory = {}

---@optional false
---@type AnimationType
AnimationSidesMandatory.north = nil

---@optional false
---@type AnimationType
AnimationSidesMandatory.east = nil

---@optional false
---@type AnimationType
AnimationSidesMandatory.south = nil

---@optional false
---@type AnimationType
AnimationSidesMandatory.west = nil

---@alias FileName string

---@alias SpritePriority string

---Specifies the light flicker. Note that this defaults to "showing a white light" instead of the usually expected "showing nothing".
---@class LightFlickeringDefinition
local LightFlickeringDefinition = {}

---Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.
---@default 0.2
---@optional true
---@type float
LightFlickeringDefinition.minimum_intensity = nil

---Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.
---@default 0.8
---@optional true
---@type float
LightFlickeringDefinition.maximum_intensity = nil

---@default 0.3
---@optional true
---@type float
LightFlickeringDefinition.derivation_change_frequency = nil

---@default 0.06
---@optional true
---@type float
LightFlickeringDefinition.derivation_change_deviation = nil

---@default 0.02
---@optional true
---@type float
LightFlickeringDefinition.border_fix_speed = nil

---The radius of the light in tiles. Note, that the light gets darker near the edges, so the effective size of the light seems to be smaller.
---@default 0.5
---@optional true
---@type float
LightFlickeringDefinition.minimum_light_size = nil

---@default 0.5
---@optional true
---@type float
LightFlickeringDefinition.light_intensity_to_size_coefficient = nil

---Color of the light.
---@optional true
---@type Color
LightFlickeringDefinition.color = nil

---@alias NoiseExpression table

---null
---@class RotatedAnimation4WayValue
local RotatedAnimation4WayValue = {}

---<p>Optional. If omitted, the game will not look for any other directions and instead try to load the whole definition as one <a href="/Types/RotatedAnimation" title="Types/RotatedAnimation">Types/RotatedAnimation</a> and apply it to all directions.</p><p>If north is present, but no other directions are present, the north rotated animation is used for all directions.</p>
---@optional false
---@type RotatedAnimation
RotatedAnimation4WayValue.north = nil

---If east is present, but west is not present, the east rotated animation is used for the west direction.
---@optional false
---@type RotatedAnimation
RotatedAnimation4WayValue.east = nil

---@optional false
---@type RotatedAnimation
RotatedAnimation4WayValue.south = nil

---@optional false
---@type RotatedAnimation
RotatedAnimation4WayValue.west = nil

---null
---@class InvokeTileEffectTriggerEffectItem
local InvokeTileEffectTriggerEffectItem = {}

---@optional true
---@type CollisionMask
InvokeTileEffectTriggerEffectItem.tile_collision_mask = nil

---@default 1
---@optional true
---@type uint16
InvokeTileEffectTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
InvokeTileEffectTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
InvokeTileEffectTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
InvokeTileEffectTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
InvokeTileEffectTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
InvokeTileEffectTriggerEffectItem.damage_type_filters = nil

---Graphics definition for a <a href="/Prototype/Tree" title="Prototype/Tree">Prototype/Tree</a>.
---@class TreePrototypeVariation
local TreePrototypeVariation = {}

---If <code>shadow</code> is not specified, this has to have one more frame than <code>leaves</code>.
---@optional false
---@type AnimationType
TreePrototypeVariation.trunk = nil

---@optional false
---@type AnimationType
TreePrototypeVariation.leaves = nil

---@optional false
---@type CreateParticleTriggerEffectItem
TreePrototypeVariation.leaf_generation = nil

---@optional false
---@type CreateParticleTriggerEffectItem
TreePrototypeVariation.branch_generation = nil

---Shadow must have 1 less frame_count than <code>leaves</code> (shadow.frame_count = leaves.frame_count + 1).
---@optional true
---@type AnimationType
TreePrototypeVariation.shadow = nil

---Only loaded if <code>shadow</code> is present. Defaults to shadow.frame_count - 1.
---@optional true
---@type uint32
TreePrototypeVariation.disable_shadow_distortion_beginning_at_frame = nil

---Normal must have the same frame_count as <code>leaves</code> (normal.frame_count = leaves.frame_count).
---@optional true
---@type AnimationType
TreePrototypeVariation.normal = nil

---@optional true
---@type WaterReflectionDefinition
TreePrototypeVariation.water_reflection = nil

---null
---@class MapSettingsSteeringUnitGroup
local MapSettingsSteeringUnitGroup = {}

---Pollution triggered group waiting time is a random time between min and max gathering time
---@optional false
---@type uint32
MapSettingsSteeringUnitGroup.min_group_gathering_time = nil

---@optional false
---@type uint32
MapSettingsSteeringUnitGroup.max_group_gathering_time = nil

---After the gathering is finished the group can still wait for late members, but it doesn't accept new ones anymore.
---@optional false
---@type uint32
MapSettingsSteeringUnitGroup.max_wait_time_for_late_members = nil

---Limits for group radius (calculated by number of numbers).
---@optional false
---@type double
MapSettingsSteeringUnitGroup.max_group_radius = nil

---@optional false
---@type double
MapSettingsSteeringUnitGroup.min_group_radius = nil

---When a member falls behind the group he can speedup up till this much of his regular speed.
---@optional false
---@type double
MapSettingsSteeringUnitGroup.max_member_speedup_when_behind = nil

---When a member gets ahead of its group, it will slow down to at most this factor of its speed.
---@optional false
---@type double
MapSettingsSteeringUnitGroup.max_member_slowdown_when_ahead = nil

---When members of a group are behind, the entire group will slow down to at most this factor of its max speed.
---@optional false
---@type double
MapSettingsSteeringUnitGroup.max_group_slowdown_factor = nil

---If a member falls behind more than this times the group radius, the group will slow down to max_group_slowdown_factor.
---@optional false
---@type double
MapSettingsSteeringUnitGroup.max_group_member_fallback_factor = nil

---If a member falls behind more than this time the group radius, it will be removed from the group.
---@optional false
---@type double
MapSettingsSteeringUnitGroup.member_disown_distance = nil

---@optional false
---@type uint32
MapSettingsSteeringUnitGroup.tick_tolerance_when_member_arrives = nil

---Maximum number of automatically created unit groups gathering for attack at any time.
---@optional false
---@type uint32
MapSettingsSteeringUnitGroup.max_gathering_unit_groups = nil

---Maximum size of an attack unit group. This only affects automatically-created unit groups; manual groups created through the API are unaffected.
---@optional false
---@type uint32
MapSettingsSteeringUnitGroup.max_unit_group_size = nil

---null
---@class MapSettingsSteeringMoving
local MapSettingsSteeringMoving = {}

---@optional false
---@type double
MapSettingsSteeringMoving.radius = nil

---@optional false
---@type double
MapSettingsSteeringMoving.separation_factor = nil

---@optional false
---@type double
MapSettingsSteeringMoving.separation_force = nil

---Used only for special "to look good" purposes (like in trailer)
---@optional false
---@type bool
MapSettingsSteeringMoving.force_unit_fuzzy_goto_behavior = nil

---null
---@class MapSettingsDifficultySettings
local MapSettingsDifficultySettings = {}

---A <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/defines.html#defines.difficulty_settings">defines.difficulty_settings.recipe_difficulty</a>.
---@optional false
---@type uint8
MapSettingsDifficultySettings.recipe_difficulty = nil

---A <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/defines.html#defines.difficulty_settings">defines.difficulty_settings.technology_difficulty</a>.
---@optional false
---@type uint8
MapSettingsDifficultySettings.technology_difficulty = nil

---Must be >= 0.001 and <= 1000.
---@default 1
---@optional true
---@type double
MapSettingsDifficultySettings.technology_price_multiplier = nil

---@optional true
---@type MapSettingsDifficultySettingsResearchQueueSetting
MapSettingsDifficultySettings.research_queue_setting = nil

---null
---@class BeamAttackParameters
local BeamAttackParameters = {}

---@default 0
---@optional true
---@type uint32
BeamAttackParameters.source_direction_count = nil

---@optional true
---@type vector
BeamAttackParameters.source_offset = nil

---@optional false
---@type float
BeamAttackParameters.range = nil

---Number of ticks in which it will be possible to shoot again. If < 1, multiple shots can be performed in one tick.
---@optional false
---@type float
BeamAttackParameters.cooldown = nil

---@default 0
---@optional true
---@type float
BeamAttackParameters.min_range = nil

---If this is &lt;= 0, it is set to 1. Arc from 0 to 1, so for example 0.25 is 90°. Used by the <a href="/Flamethrower_turret" title="Flamethrower turret">flamethrower turret</a> in the base game.
---@default 1
---@optional true
---@type float
BeamAttackParameters.turn_range = nil

---Used when searching for the nearest enemy, when this is &gt; 0, enemies that aren't burning are preferred over burning enemies. Definition of "burning" for this: Entity has sticker attached to it, and the sticker has a <a href="/Prototype/Sticker#spread_fire_entity" title="Prototype/Sticker">spread_fire_entity</a> set.
---@default 0
---@optional true
---@type float
BeamAttackParameters.fire_penalty = nil

---A higher penalty will discourage turrets from targeting units that would take longer to turn to face.
---@default 0
---@optional true
---@type float
BeamAttackParameters.rotate_penalty = nil

---A higher penalty will discourage turrets from targeting units with higher health. A negative penalty will encourage turrets to target units with higher health.
---@default 0
---@optional true
---@type float
BeamAttackParameters.health_penalty = nil

---If less than <code>range</code>, the entity will choose a random distance between <code>range</code> and <code>min_attack_distance</code> and attack from that distance.
---@optional true
---@type float
BeamAttackParameters.min_attack_distance = nil

---@default 1
---@optional true
---@type float
BeamAttackParameters.damage_modifier = nil

---Must be greater than or equal to 0.
---@default 1
---@optional true
---@type float
BeamAttackParameters.ammo_consumption_modifier = nil

---Must be between 0 and 1.
---@default 0
---@optional true
---@type float
BeamAttackParameters.cooldown_deviation = nil

---Number of ticks it takes for the weapon to actually shoot after the order for shooting has been made. This also allows to "adjust" the shooting animation to the effect of shooting.
---@default 0
---@optional true
---@type uint32
BeamAttackParameters.warmup = nil

---Presumably this should be set to the projectile speed to make the unit/turret lead their projectiles.
---@default 0
---@optional true
---@type float
BeamAttackParameters.lead_target_for_projectile_speed = nil

---@optional true
---@type float
BeamAttackParameters.movement_slow_down_cooldown = nil

---@default 1
---@optional true
---@type double
BeamAttackParameters.movement_slow_down_factor = nil

---Can be mandatory.
---@optional true
---@type AmmoType
BeamAttackParameters.ammo_type = nil

---@optional true
---@type LayeredSound
BeamAttackParameters.sound = nil

---@optional true
---@type RotatedAnimation
BeamAttackParameters.animation = nil

---@optional true
---@type CyclicSound
BeamAttackParameters.cyclic_sound = nil

---@default false
---@optional true
---@type bool
BeamAttackParameters.use_shooter_direction = nil

---Names of <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategories</a>.
---@optional true
---@type string[]
BeamAttackParameters.ammo_categories = nil

---The name of a <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategory</a>. Mandatory if <code>ammo_type</code> and <code>ammo_category</code> is not given, otherwise ignored.
---@optional true
---@type string
BeamAttackParameters.ammo_category = nil

---null
---@class UnitAlternativeAttackingFrameSequence
local UnitAlternativeAttackingFrameSequence = {}

---Indices of frames from the attack parameter animation.
---@optional false
---@type uint16[]
UnitAlternativeAttackingFrameSequence.warmup_frame_sequence = nil

---Indices of frames from the attack parameter animation.
---@optional false
---@type uint16[]
UnitAlternativeAttackingFrameSequence.warmup2_frame_sequence = nil

---Indices of frames from the attack parameter animation.
---@optional false
---@type uint16[]
UnitAlternativeAttackingFrameSequence.attacking_frame_sequence = nil

---Indices of frames from the attack parameter animation.
---@optional false
---@type uint16[]
UnitAlternativeAttackingFrameSequence.cooldown_frame_sequence = nil

---Indices of frames from the attack parameter animation.
---@optional false
---@type uint16[]
UnitAlternativeAttackingFrameSequence.prepared_frame_sequence = nil

---Indices of frames from the attack parameter animation.
---@optional false
---@type uint16[]
UnitAlternativeAttackingFrameSequence.back_to_walk_frame_sequence = nil

---@optional false
---@type float
UnitAlternativeAttackingFrameSequence.warmup_animation_speed = nil

---@optional false
---@type float
UnitAlternativeAttackingFrameSequence.attacking_animation_speed = nil

---@optional false
---@type float
UnitAlternativeAttackingFrameSequence.cooldown_animation_speed = nil

---@optional false
---@type float
UnitAlternativeAttackingFrameSequence.prepared_animation_speed = nil

---@optional false
---@type float
UnitAlternativeAttackingFrameSequence.back_to_walk_animation_speed = nil

---@alias SpawnPoint double[]|SpawnPointValue

---null
---@class DamageTypeFiltersValue
local DamageTypeFiltersValue = {}

---Name or names of <a href="/Prototype/DamageType" title="Prototype/DamageType">Prototype/DamageTypes</a>.
---@optional false
---@type string|string[]
DamageTypeFiltersValue.types = nil

---@default false
---@optional true
---@type bool
DamageTypeFiltersValue.whitelist = nil

---null
---@class EquipmentShapeManual
local EquipmentShapeManual = {}

---Only used when when using <code>type</code> "manual". Each inner array is a "position" inside width×height of the equipment. Each positions that is defined is a filled squares of the equipment shape. {0, 0} is the upper left corner of the equipment.
---@optional false
---@type uint32[][]
EquipmentShapeManual.points = nil

---@optional false
---@type uint32
EquipmentShapeManual.width = nil

---@optional false
---@type uint32
EquipmentShapeManual.height = nil

---null
---@class SoundValue2
local SoundValue2 = {}

---@optional false
---@type FileName
SoundValue2.filename = nil

---@default 1.0
---@optional true
---@type float
SoundValue2.volume = nil

---@optional true
---@type bool
SoundValue2.preload = nil

---Speed must be >= 1 / 64. This sets both min and max speed.
---@default 1.0
---@optional true
---@type float
SoundValue2.speed = nil

---Not loaded if speed is present. Speed must be >= 1 / 64.
---@default 1.0
---@optional true
---@type float
SoundValue2.min_speed = nil

---Mandatory if min_speed is present, otherwise not loaded. Must be >= min_speed.
---@default 1.0
---@optional true
---@type float
SoundValue2.max_speed = nil

---null
---@class SoundValue1
local SoundValue1 = {}

---@optional true
---@type SoundAggregation
SoundValue1.aggregation = nil

---@default false
---@optional true
---@type bool
SoundValue1.allow_random_repeat = nil

---@default 1.0
---@optional true
---@type double
SoundValue1.audible_distance_modifier = nil

---@optional true
---@type SoundValue2[]
SoundValue1.variations = nil

---Mandatory if <code>variations</code> is not given.
---@optional true
---@type FileName
SoundValue1.filename = nil

---Only loaded if <code>variations</code> is not given.
---@optional true
---@type float
SoundValue1.volume = nil

---Only loaded if <code>variations</code> is not given.
---@optional true
---@type bool
SoundValue1.preload = nil

---Only loaded if <code>variations</code> is not given. Speed must be >= 1 / 64. This sets both min and max speed.
---@default 1.0
---@optional true
---@type float
SoundValue1.speed = nil

---Only loaded if <code>variations</code> is not given. Not loaded if speed is present. Speed must be >= 1 / 64.
---@default 1.0
---@optional true
---@type float
SoundValue1.min_speed = nil

---Only loaded if <code>variations</code> is not given. Mandatory if min_speed is present, otherwise not loaded. Must be >= min_speed.
---@default 1.0
---@optional true
---@type float
SoundValue1.max_speed = nil

---null
---@class CreateParticleTriggerEffectItem
local CreateParticleTriggerEffectItem = {}

---Name of a <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a>.
---@optional false
---@type string
CreateParticleTriggerEffectItem.particle_name = nil

---@optional false
---@type float
CreateParticleTriggerEffectItem.initial_height = nil

---@optional true
---@type BoundingBox
CreateParticleTriggerEffectItem.offset_deviation = nil

---@default false
---@optional true
---@type bool
CreateParticleTriggerEffectItem.show_in_tooltip = nil

---@optional true
---@type CollisionMask
CreateParticleTriggerEffectItem.tile_collision_mask = nil

---@optional true
---@type vector[]
CreateParticleTriggerEffectItem.offsets = nil

---@default 0
---@optional true
---@type float
CreateParticleTriggerEffectItem.initial_height_deviation = nil

---@default 0
---@optional true
---@type float
CreateParticleTriggerEffectItem.initial_vertical_speed = nil

---@default 0
---@optional true
---@type float
CreateParticleTriggerEffectItem.initial_vertical_speed_deviation = nil

---@default 0
---@optional true
---@type float
CreateParticleTriggerEffectItem.speed_from_center = nil

---@default 0
---@optional true
---@type float
CreateParticleTriggerEffectItem.speed_from_center_deviation = nil

---@default 1
---@optional true
---@type float
CreateParticleTriggerEffectItem.frame_speed = nil

---@default 0
---@optional true
---@type float
CreateParticleTriggerEffectItem.frame_speed_deviation = nil

---Silently capped to a maximum of 100.
---@default 0
---@optional true
---@type uint8
CreateParticleTriggerEffectItem.tail_length = nil

---Silently capped to a maximum of 100.
---@default 0
---@optional true
---@type uint8
CreateParticleTriggerEffectItem.tail_length_deviation = nil

---@default 1
---@optional true
---@type float
CreateParticleTriggerEffectItem.tail_width = nil

---@default false
---@optional true
---@type bool
CreateParticleTriggerEffectItem.rotate_offsets = nil

---@default 1
---@optional true
---@type uint16
CreateParticleTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateParticleTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateParticleTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateParticleTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateParticleTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateParticleTriggerEffectItem.damage_type_filters = nil

---@alias uint8 number

---null
---@class ThrowCapsuleAction
local ThrowCapsuleAction = {}

---@optional false
---@type AttackParameters
ThrowCapsuleAction.attack_parameters = nil

---Whether using the capsule consumes an item from the stack.
---@default true
---@optional true
---@type bool
ThrowCapsuleAction.uses_stack = nil

---null
---@class BoxSpecification
local BoxSpecification = {}

---@optional false
---@type SpriteType
BoxSpecification.sprite = nil

---Whether this is a complete box or just the top left corner. If this is true, <code>side_length</code> and <code>side_height</code> must be present. Otherwise <code>max_side_length</code> must be present.
---@default false
---@optional true
---@type bool
BoxSpecification.is_whole_box = nil

---Only read if <code>is_whole_box</code> is true.
---@optional true
---@type double
BoxSpecification.side_length = nil

---Only read if <code>is_whole_box</code> is true.
---@optional true
---@type double
BoxSpecification.side_height = nil

---Only read if <code>is_whole_box</code> is false.
---@optional true
---@type double
BoxSpecification.max_side_length = nil

---@alias AreaTriggerItemCollisionMode string

---null
---@class StreamAttackParametersFluid
local StreamAttackParametersFluid = {}

---Name of a <a href="/Prototype/Fluid" title="Prototype/Fluid">Prototype/Fluid</a>.
---@optional false
---@type string
StreamAttackParametersFluid.type = nil

---@default 1
---@optional true
---@type double
StreamAttackParametersFluid.damage_modifier = nil

---@alias ShortcutStyle string

---@alias SignalColorMappingType string

---null
---@class EnergySourceBase
local EnergySourceBase = {}

---The pollution an entity emits per minute at full energy consumption. <code>emissions_per_minute</code> is exactly the value that is shown in the entity tooltip.
---@default 0
---@optional true
---@type double
EnergySourceBase.emissions_per_minute = nil

---Optional. Whether to render the Electricity-icon-red.png icon on the entity if it is low on power. Also applies to Fuel-icon-red.png when using a burner energy source.
---@default true
---@optional true
---@type bool
EnergySourceBase.render_no_power_icon = nil

---Optional. Whether to render the Electricity-icon-unplugged.png icon on the entity if it is not connected to a electric network.
---@default true
---@optional true
---@type bool
EnergySourceBase.render_no_network_icon = nil

---null
---@class PlaySoundTriggerEffectItem
local PlaySoundTriggerEffectItem = {}

---@optional false
---@type SoundType
PlaySoundTriggerEffectItem.sound = nil

---Negative values are silently clamped to 0.
---@default 0
---@optional false
---@type float
PlaySoundTriggerEffectItem.min_distance = nil

---Negative values are silently clamped to 0.
---@optional true
---@type float
PlaySoundTriggerEffectItem.max_distance = nil

---Negative values are silently clamped to 0.
---@default 1
---@optional true
---@type float
PlaySoundTriggerEffectItem.volume_modifier = nil

---Negative values are silently clamped to 0.
---@default 1
---@optional true
---@type float
PlaySoundTriggerEffectItem.audible_distance_modifier = nil

---@default false
---@optional true
---@type bool
PlaySoundTriggerEffectItem.play_on_target_position = nil

---@default 1
---@optional true
---@type uint16
PlaySoundTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
PlaySoundTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
PlaySoundTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
PlaySoundTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
PlaySoundTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
PlaySoundTriggerEffectItem.damage_type_filters = nil

---null
---@class CircuitConnectorSprites
local CircuitConnectorSprites = {}

---@optional false
---@type SpriteType
CircuitConnectorSprites.led_red = nil

---@optional false
---@type SpriteType
CircuitConnectorSprites.led_green = nil

---@optional false
---@type SpriteType
CircuitConnectorSprites.led_blue = nil

---@optional false
---@type LightDefinition
CircuitConnectorSprites.led_light = nil

---@optional true
---@type SpriteType
CircuitConnectorSprites.connector_main = nil

---@optional true
---@type SpriteType
CircuitConnectorSprites.connector_shadow = nil

---@optional true
---@type SpriteType
CircuitConnectorSprites.wire_pins = nil

---@optional true
---@type SpriteType
CircuitConnectorSprites.wire_pins_shadow = nil

---@optional true
---@type SpriteType
CircuitConnectorSprites.led_blue_off = nil

---@optional true
---@type vector
CircuitConnectorSprites.blue_led_light_offset = nil

---@optional true
---@type vector
CircuitConnectorSprites.red_green_led_light_offset = nil

---Used by crafting machines to display different graphics when the machine is running.
---@class WorkingVisualisation
local WorkingVisualisation = {}

---@default object
---@optional true
---@type RenderLayer
WorkingVisualisation.render_layer = nil

---@default false
---@optional true
---@type bool
WorkingVisualisation.fadeout = nil

---@default false
---@optional true
---@type bool
WorkingVisualisation.synced_fadeout = nil

---Whether the animations are always played at the same speed, not adjusted to the machine speed.
---@default false
---@optional true
---@type bool
WorkingVisualisation.constant_speed = nil

---@default false
---@optional true
---@type bool
WorkingVisualisation.always_draw = nil

---@default false
---@optional true
---@type bool
WorkingVisualisation.animated_shift = nil

---@default false
---@optional true
---@type bool
WorkingVisualisation.align_to_waypoint = nil

---@optional true
---@type int8
WorkingVisualisation.secondary_draw_order = nil

---@default true
---@optional true
---@type bool
WorkingVisualisation.draw_as_sprite = nil

---@default false
---@optional true
---@type bool
WorkingVisualisation.draw_as_light = nil

---@optional true
---@type LightDefinition
WorkingVisualisation.light = nil

---@optional true
---@type WorkingVisualisationEffect
WorkingVisualisation.effect = nil

---@optional true
---@type BeaconGraphicsSetApplymoduleTint
WorkingVisualisation.apply_recipe_tint = nil

---Used by <a href="/Prototype/CraftingMachine" title="Prototype/CraftingMachine">Prototype/CraftingMachine</a> ("status" only) and <a href="/Prototype/MiningDrill" title="Prototype/MiningDrill">Prototype/MiningDrill</a>.

---@optional true
---@type WorkingVisualisationApplyTint
WorkingVisualisation.apply_tint = nil

---Either these animations for the directions are loaded, or <code>animation</code> and the positions for the directions are loaded.
---@optional true
---@type AnimationType
WorkingVisualisation.north_animation = nil

---@optional true
---@type AnimationType
WorkingVisualisation.west_animation = nil

---@optional true
---@type AnimationType
WorkingVisualisation.south_animation = nil

---@optional true
---@type AnimationType
WorkingVisualisation.east_animation = nil

---Either this and the below positions are loaded, or the animation properties for each direction are loaded.
---@optional true
---@type AnimationType
WorkingVisualisation.animation = nil

---@optional true
---@type vector
WorkingVisualisation.north_position = nil

---@optional true
---@type vector
WorkingVisualisation.west_position = nil

---@optional true
---@type vector
WorkingVisualisation.south_position = nil

---@optional true
---@type vector
WorkingVisualisation.east_position = nil

---null
---@class LayeredSoundValue
local LayeredSoundValue = {}

---@optional false
---@type SoundType[]
LayeredSoundValue.layers = nil

---Refers to an existing circuit network signal.
---@class SignalIDConnector
local SignalIDConnector = {}

---@optional false
---@type SignalColorMappingType
SignalIDConnector.type = nil

---The name of a circuit network signal, it has to have the type that is specified in this definition. For example <code>name = "iron-plate"</code> would only work with <code>type = "item"</code>, and <code>type = "fluid"</code> would need a fluid signal as the name, for example <code>"crude-oil"</code> or <code>"water"</code>.
---@optional false
---@type string
SignalIDConnector.name = nil

---Type for loot for Prototype/EntityWithHealth: The loot is generated when the entity is killed.
---@class LootValue
local LootValue = {}

---The item to spawn.
---@optional false
---@type string
LootValue.item = nil

---0 is 0% and 1 is 100%. Must be > 0.
---@default 1
---@optional true
---@type double
LootValue.probability = nil

---@default 1
---@optional true
---@type double
LootValue.count_min = nil

---Must be > 0.
---@default 1
---@optional true
---@type double
LootValue.count_max = nil

---null
---@class WallPictures
local WallPictures = {}

---@optional false
---@type SpriteVariations
WallPictures.single = nil

---@optional false
---@type SpriteVariations
WallPictures.straight_vertical = nil

---@optional false
---@type SpriteVariations
WallPictures.straight_horizontal = nil

---@optional false
---@type SpriteVariations
WallPictures.corner_right_down = nil

---@optional false
---@type SpriteVariations
WallPictures.corner_left_down = nil

---@optional false
---@type SpriteVariations
WallPictures.cornt_uper_left_down = nil

---@optional false
---@type SpriteVariations
WallPictures.ending_right = nil

---@optional false
---@type SpriteVariations
WallPictures.ending_left = nil

---@optional true
---@type SpriteVariations
WallPictures.filling = nil

---@optional true
---@type Sprite4Way
WallPictures.water_connection_patch = nil

---@optional true
---@type Sprite4Way
WallPictures.gate_connection_patch = nil

---Type for placeable_by for entities: Item that when placed creates this entity.
---@class LightDefinitionOriented
local LightDefinitionOriented = {}

---@optional false
---@type SpriteType
LightDefinitionOriented.picture = nil

---@optional true
---@type RealOrientation
LightDefinitionOriented.rotation_shift = nil

---Brightness of the light in the range [0, 1] where 0 is no light and 1 is the maximum light.
---@optional false
---@type float
LightDefinitionOriented.intensity = nil

---The radius of the light in tiles. Note, that the light gets darker near the edges, so the effective size of the light seems to be smaller.
---@optional false
---@type float
LightDefinitionOriented.size = nil

---@default 0
---@optional true
---@type RealOrientation
LightDefinitionOriented.source_orientation_offset = nil

---@default false
---@optional true
---@type bool
LightDefinitionOriented.add_perspective = nil

---@optional true
---@type vector
LightDefinitionOriented.shift = nil

---Color of the light.
---@optional true
---@type Color
LightDefinitionOriented.color = nil

---@default 0
---@optional true
---@type float
LightDefinitionOriented.minimum_darkness = nil

---null
---@class SetTileTriggerEffectItem
local SetTileTriggerEffectItem = {}

---Name of a <a href="/Prototype/Tile" title="Prototype/Tile">Prototype/Tile</a>.
---@optional false
---@type string
SetTileTriggerEffectItem.tile_name = nil

---@optional false
---@type float
SetTileTriggerEffectItem.radius = nil

---@default false
---@optional true
---@type bool
SetTileTriggerEffectItem.apply_projection = nil

---@optional true
---@type CollisionMask
SetTileTriggerEffectItem.tile_collision_mask = nil

---@default 1
---@optional true
---@type uint16
SetTileTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
SetTileTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
SetTileTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
SetTileTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
SetTileTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
SetTileTriggerEffectItem.damage_type_filters = nil

---null
---@class FireFlameBurntPatchAlphaVariations
local FireFlameBurntPatchAlphaVariations = {}

---Name of a tile.
---@optional false
---@type string
FireFlameBurntPatchAlphaVariations.tile = nil

---@optional false
---@type float
FireFlameBurntPatchAlphaVariations.alpha = nil

---null
---@class CreateExplosionTriggerEffectItem
local CreateExplosionTriggerEffectItem = {}

---@default -1
---@optional true
---@type float
CreateExplosionTriggerEffectItem.max_movement_distance = nil

---@default 0
---@optional true
---@type float
CreateExplosionTriggerEffectItem.max_movement_distance_deviation = nil

---@default false
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.inherit_movement_distance_from_projectile = nil

---@default false
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.cycle_while_moving = nil

---Name of the entity that should be created.
---@optional false
---@type string
CreateExplosionTriggerEffectItem.entity_name = nil

---@optional true
---@type BoundingBox
CreateExplosionTriggerEffectItem.offset_deviation = nil

---If this is true, <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity">on_trigger_created_entity</a> is raised when the entity is created.
---@default false
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.trigger_created_entity = nil

---@default false
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.check_buildability = nil

---@default false
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.show_in_tooltip = nil

---@optional true
---@type CollisionMask
CreateExplosionTriggerEffectItem.tile_collision_mask = nil

---@optional true
---@type vector[]
CreateExplosionTriggerEffectItem.offsets = nil

---@default 1
---@optional true
---@type uint16
CreateExplosionTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateExplosionTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateExplosionTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateExplosionTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateExplosionTriggerEffectItem.damage_type_filters = nil

---null
---@class EquipmentShapeBase
local EquipmentShapeBase = {}

---@optional false
---@type uint32
EquipmentShapeBase.width = nil

---@optional false
---@type uint32
EquipmentShapeBase.height = nil

---null
---@class Sprite8Way
local Sprite8Way = {}

---@optional true
---@type SpriteType
Sprite8Way.north = nil

---@optional true
---@type SpriteType
Sprite8Way.north_east = nil

---@optional true
---@type SpriteType
Sprite8Way.east = nil

---@optional true
---@type SpriteType
Sprite8Way.south_east = nil

---@optional true
---@type SpriteType
Sprite8Way.south = nil

---@optional true
---@type SpriteType
Sprite8Way.south_west = nil

---@optional true
---@type SpriteType
Sprite8Way.west = nil

---@optional true
---@type SpriteType
Sprite8Way.north_west = nil

---If given, this is used instead of any other properties that may be present.
---@optional true
---@type SpriteNWaySheet[]
Sprite8Way.sheets = nil

---If given, and #sheets isnt present, this is used instead of any other properties that may be present.
---@optional true
---@type SpriteNWaySheet
Sprite8Way.sheet = nil

---null
---@class CliffOrientations
local CliffOrientations = {}

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.west_to_east = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.north_to_south = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.east_to_west = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.south_to_north = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.west_to_north = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.north_to_east = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.east_to_south = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.south_to_west = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.west_to_south = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.north_to_west = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.east_to_north = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.south_to_east = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.west_to_none = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.none_to_east = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.north_to_none = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.none_to_south = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.east_to_none = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.none_to_west = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.south_to_none = nil

---@optional false
---@type OrientedCliffPrototype
CliffOrientations.none_to_north = nil

---null
---@class DirectTriggerItem
local DirectTriggerItem = {}

---@default false
---@optional true
---@type bool
DirectTriggerItem.filter_enabled = nil

---Only prototypes with these flags are affected by the trigger item.
---@optional true
---@type EntityPrototypeFlags
DirectTriggerItem.entity_flags = nil

---@default false
---@optional true
---@type bool
DirectTriggerItem.ignore_collision_condition = nil

---@optional true
---@type TriggerTargetMask
DirectTriggerItem.trigger_target_mask = nil

---@default 1
---@optional true
---@type uint32
DirectTriggerItem.repeat_count = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
DirectTriggerItem.probability = nil

---Only prototypes with these collision masks are affected by the trigger item.
---@optional true
---@type CollisionMask
DirectTriggerItem.collision_mask = nil

---@optional true
---@type TriggerEffect
DirectTriggerItem.source_effects = nil

---@optional true
---@type TriggerDelivery|TriggerDelivery[]
DirectTriggerItem.action_delivery = nil

---Only entities meeting the force condition are affected by the trigger item.
---@optional true
---@type ForceCondition
DirectTriggerItem.force = nil

---null
---@class Effect
local Effect = {}

---@optional true
---@type EffectConsumption
Effect.consumption = nil

---@optional true
---@type EffectConsumption
Effect.speed = nil

---@optional true
---@type EffectConsumption
Effect.productivity = nil

---@optional true
---@type EffectConsumption
Effect.pollution = nil

---null
---@class CreateSmokeTriggerEffectItem
local CreateSmokeTriggerEffectItem = {}

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.initial_height = nil

---@optional true
---@type vector
CreateSmokeTriggerEffectItem.speed = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.speed_multiplier = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.speed_multiplier_deviation = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.starting_frame = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.starting_frame_deviation = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.starting_frame_speed = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.starting_frame_speed_deviation = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.speed_from_center = nil

---@default 0
---@optional true
---@type float
CreateSmokeTriggerEffectItem.speed_from_center_deviation = nil

---Name of the entity that should be created.
---@optional false
---@type string
CreateSmokeTriggerEffectItem.entity_name = nil

---@optional true
---@type BoundingBox
CreateSmokeTriggerEffectItem.offset_deviation = nil

---If this is true, <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity">on_trigger_created_entity</a> is raised when the entity is created.
---@default false
---@optional true
---@type bool
CreateSmokeTriggerEffectItem.trigger_created_entity = nil

---@default false
---@optional true
---@type bool
CreateSmokeTriggerEffectItem.check_buildability = nil

---@default false
---@optional true
---@type bool
CreateSmokeTriggerEffectItem.show_in_tooltip = nil

---@optional true
---@type CollisionMask
CreateSmokeTriggerEffectItem.tile_collision_mask = nil

---@optional true
---@type vector[]
CreateSmokeTriggerEffectItem.offsets = nil

---@default 1
---@optional true
---@type uint16
CreateSmokeTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateSmokeTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateSmokeTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateSmokeTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateSmokeTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateSmokeTriggerEffectItem.damage_type_filters = nil

---Resistances to certain types of attacks from enemy, and physical damage. See <a href="/Damage" title="Damage">Damage</a>.
---@class Resistances
local Resistances = {}

---Specification of the type. Name of a <a href="/Prototype/DamageType" title="Prototype/DamageType">Prototype/DamageType</a>.
---@optional false
---@type string
Resistances.type = nil

---The <a href="/Damage#Decrease.2C_or_.22flat.22_resistance" title="Damage">flat resistance</a> to the given damage type. (Higher is better)
---@default 0
---@optional false
---@type float
Resistances.decrease = nil

---The <a href="/Damage#Percentage_resistance" title="Damage">percentage resistance</a> to the given damage type. (Higher is better)
---@default 0
---@optional false
---@type float
Resistances.percent = nil

---null
---@class TriggerItem
local TriggerItem = {}

---Only prototypes with these flags are affected by the trigger item.
---@optional true
---@type EntityPrototypeFlags
TriggerItem.entity_flags = nil

---@default false
---@optional true
---@type bool
TriggerItem.ignore_collision_condition = nil

---@optional true
---@type TriggerTargetMask
TriggerItem.trigger_target_mask = nil

---@default 1
---@optional true
---@type uint32
TriggerItem.repeat_count = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
TriggerItem.probability = nil

---Only prototypes with these collision masks are affected by the trigger item.
---@optional true
---@type CollisionMask
TriggerItem.collision_mask = nil

---@optional true
---@type TriggerEffect
TriggerItem.source_effects = nil

---@optional true
---@type TriggerDelivery|TriggerDelivery[]
TriggerItem.action_delivery = nil

---Only entities meeting the force condition are affected by the trigger item.
---@optional true
---@type ForceCondition
TriggerItem.force = nil

---@alias AttackReaction AttackReactionItem[]

---Used by <a href="/Types/WireConnectionPoint" title="Types/WireConnectionPoint">Types/WireConnectionPoint</a>.
---@class WirePosition
local WirePosition = {}

---@optional true
---@type vector
WirePosition.copper = nil

---@optional true
---@type vector
WirePosition.red = nil

---@optional true
---@type vector
WirePosition.green = nil

---@alias RotatedAnimation4Way RotatedAnimation4WayValue|RotatedAnimation

---null
---@class StreamAttackParametersGunCenterShift
local StreamAttackParametersGunCenterShift = {}

---@optional false
---@type vector
StreamAttackParametersGunCenterShift.north = nil

---@optional false
---@type vector
StreamAttackParametersGunCenterShift.east = nil

---@optional false
---@type vector
StreamAttackParametersGunCenterShift.south = nil

---@optional false
---@type vector
StreamAttackParametersGunCenterShift.west = nil

---null
---@class StorageTankPictures
local StorageTankPictures = {}

---@optional false
---@type Sprite4Way
StorageTankPictures.picture = nil

---@optional false
---@type SpriteType
StorageTankPictures.window_background = nil

---@optional false
---@type SpriteType
StorageTankPictures.fluid_background = nil

---@optional false
---@type SpriteType
StorageTankPictures.flow_sprite = nil

---@optional false
---@type AnimationType
StorageTankPictures.gas_flow = nil

---The mining properties of objects. For formulas for the mining time, see <a href="/Mining" title="Mining">mining</a>.
---@class MinableProperties
local MinableProperties = {}

---How long it takes to mine this object.
---@optional false
---@type double
MinableProperties.mining_time = nil

---The items that are returned when this object is mined.
---@optional true
---@type ProductPrototype[]
MinableProperties.results = nil

---<p>Only loaded if <code>results</code> was not found. Which item is dropped when this is mined.</p><p>Cannot be empty. If you want the entity to not be minable, don't specify the minable properties, if you want it to be minable with no result item, don't specify the result at all.</p>
---@optional true
---@type string
MinableProperties.result = nil

---The amount of fluid that is used up when this object is mined. If this is > 0, this object cannot be mined by hand.
---@default 0
---@optional true
---@type double
MinableProperties.fluid_amount = nil

---Name of a <a href="/Prototype/Particle" title="Prototype/Particle">Prototype/Particle</a>. Which set of particles to use.
---@optional true
---@type string
MinableProperties.mining_particle = nil

---Name of a <a href="/Prototype/Fluid" title="Prototype/Fluid">Prototype/Fluid</a>. The fluid that is used up when this object is mined.
---@optional true
---@type string
MinableProperties.required_fluid = nil

---Only loaded if results was not found. How many of result are dropped.
---@default 1
---@optional true
---@type uint16
MinableProperties.count = nil

---@optional true
---@type Trigger
MinableProperties.mining_trigger = nil

---null
---@class ArtilleryTriggerDelivery
local ArtilleryTriggerDelivery = {}

---Name of a <a href="/Prototype/ArtilleryProjectile" title="Prototype/ArtilleryProjectile">Prototype/ArtilleryProjectile</a>.
---@optional false
---@type string
ArtilleryTriggerDelivery.projectile = nil

---@optional false
---@type float
ArtilleryTriggerDelivery.starting_speed = nil

---@default 0
---@optional true
---@type float
ArtilleryTriggerDelivery.starting_speed_deviation = nil

---@default 0
---@optional true
---@type float
ArtilleryTriggerDelivery.direction_deviation = nil

---@default 0
---@optional true
---@type float
ArtilleryTriggerDelivery.range_deviation = nil

---@default false
---@optional true
---@type bool
ArtilleryTriggerDelivery.trigger_fired_artillery = nil

---@optional true
---@type TriggerEffect
ArtilleryTriggerDelivery.source_effects = nil

---@optional true
---@type TriggerEffect
ArtilleryTriggerDelivery.target_effects = nil

---@alias ItemStackIndex uint16

---@alias TriggerTargetMask string[]

---@alias ShortcutAction string

---Used by <a href="/Prototype/Cliff" title="Prototype/Cliff">Prototype/Cliff</a>.
---@class OrientedCliffPrototype
local OrientedCliffPrototype = {}

---@optional false
---@type BoundingBox
OrientedCliffPrototype.collision_bounding_box = nil

---@optional false
---@type SpriteVariations
OrientedCliffPrototype.pictures = nil

---@optional false
---@type uint32
OrientedCliffPrototype.fill_volume = nil

---null
---@class CraftingMachineStatusColors
local CraftingMachineStatusColors = {}

---@optional true
---@type Color
CraftingMachineStatusColors.idle = nil

---@optional true
---@type Color
CraftingMachineStatusColors.no_minable_resources = nil

---@optional true
---@type Color
CraftingMachineStatusColors.full_output = nil

---@optional true
---@type Color
CraftingMachineStatusColors.insufficient_input = nil

---@optional true
---@type Color
CraftingMachineStatusColors.disabled = nil

---@optional true
---@type Color
CraftingMachineStatusColors.no_power = nil

---@optional true
---@type Color
CraftingMachineStatusColors.working = nil

---@optional true
---@type Color
CraftingMachineStatusColors.low_power = nil

---null
---@class EnergySourceBurner
local EnergySourceBurner = {}

---@optional false
---@type ItemStackIndex
EnergySourceBurner.fuel_inventory_size = nil

---@default 0
---@optional true
---@type ItemStackIndex
EnergySourceBurner.burnt_inventory_size = nil

---Array of 1 or more smoke sources.
---@optional true
---@type SmokeSource[]
EnergySourceBurner.smoke = nil

---@optional true
---@type LightFlickeringDefinition
EnergySourceBurner.light_flicker = nil

---1 means 100% effectivity. Must be greater than 0. Multiplier of the energy output.
---@default 1
---@optional true
---@type double
EnergySourceBurner.effectivity = nil

---The energy source can be used with fuel from this <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel category</a>. For a list on built-in categories, see <a href="/Data.raw#fuel-category" title="Data.raw">Data.raw#fuel-category</a>.
---@default chemical
---@optional true
---@type string
EnergySourceBurner.fuel_category = nil

---Same as above, only one of them can exist. For a list on built-in categories, see <a href="/Data.raw#fuel-category" title="Data.raw">Data.raw#fuel-category</a>.
---@optional true
---@type string[]
EnergySourceBurner.fuel_categories = nil

---The pollution an entity emits per minute at full energy consumption. <code>emissions_per_minute</code> is exactly the value that is shown in the entity tooltip.
---@default 0
---@optional true
---@type double
EnergySourceBurner.emissions_per_minute = nil

---Optional. Whether to render the Electricity-icon-red.png icon on the entity if it is low on power. Also applies to Fuel-icon-red.png when using a burner energy source.
---@default true
---@optional true
---@type bool
EnergySourceBurner.render_no_power_icon = nil

---Optional. Whether to render the Electricity-icon-unplugged.png icon on the entity if it is not connected to a electric network.
---@default true
---@optional true
---@type bool
EnergySourceBurner.render_no_network_icon = nil

---Used by <a href="/Types/CapsuleAction" title="Types/CapsuleAction">Types/CapsuleAction</a>.
---@class DestroyCliffsCapsuleAction
local DestroyCliffsCapsuleAction = {}

---@optional false
---@type AttackParameters
DestroyCliffsCapsuleAction.attack_parameters = nil

---@optional false
---@type float
DestroyCliffsCapsuleAction.radius = nil

---@default 1200
---@optional true
---@type uint32
DestroyCliffsCapsuleAction.timeout = nil

---@default true
---@optional true
---@type bool
DestroyCliffsCapsuleAction.play_sound_on_failure = nil

---Whether using the capsule consumes an item from the stack.
---@default true
---@optional true
---@type bool
DestroyCliffsCapsuleAction.uses_stack = nil

---@alias CircularProjectileCreationSpecification table[]

---null
---@class EnergySourceFluid
local EnergySourceFluid = {}

---All standard fluid box configurations are acceptable, but the type must be "input" or "input-output" to function correctly. Scale_fluid_usage, fluid_usage_per_tick or a filter on the fluidbox must be set to be able to calculate the fluid usage of the energy source.
---@optional false
---@type FluidBox
EnergySourceFluid.fluid_box = nil

---Array of 1 or more smoke sources.
---@optional true
---@type SmokeSource[]
EnergySourceFluid.smoke = nil

---@optional true
---@type LightFlickeringDefinition
EnergySourceFluid.light_flicker = nil

---1 means 100% effectivity. Must be greater than 0. Multiplier of the energy output.
---@default 1
---@optional true
---@type double
EnergySourceFluid.effectivity = nil

---Optional. If set to true, the energy source will calculate power based on the fluid's fuel_value entry, else it will calculate based on fluid temperature, like <a href="/Prototype/Generator" title="Prototype/Generator">Prototype/Generator</a>.
---@default false
---@optional true
---@type bool
EnergySourceFluid.burns_fluid = nil

---If set to true, the energy source will consume as much fluid as required to produce the desired power, if set to false it will consume as much as it is allowed to, wasting any excess.
---@default false
---@optional true
---@type bool
EnergySourceFluid.scale_fluid_usage = nil

---The number of fluid units the energy source uses per tick. If used with scale_fluid_usage, this specifies the maximum. If this value is not set, scale_energy_usage = false and a fluid box filter is set, the game will attempt to calculate this value from the fluid box filter's fluid's fuel_value or heat_capacity and the entity's energy_usage. If burns_fluid is false, maximum_temperature will also be used.
---@default 0
---@optional true
---@type double
EnergySourceFluid.fluid_usage_per_tick = nil

---If it is specified while scale_fluid_usage = false and fluid_usage_per_tick is not specified, the game will use this value to calculate fluid_usage_per_tick.
---@optional true
---@type double
EnergySourceFluid.maximum_temperature = nil

---The pollution an entity emits per minute at full energy consumption. <code>emissions_per_minute</code> is exactly the value that is shown in the entity tooltip.
---@default 0
---@optional true
---@type double
EnergySourceFluid.emissions_per_minute = nil

---Optional. Whether to render the Electricity-icon-red.png icon on the entity if it is low on power. Also applies to Fuel-icon-red.png when using a burner energy source.
---@default true
---@optional true
---@type bool
EnergySourceFluid.render_no_power_icon = nil

---Optional. Whether to render the Electricity-icon-unplugged.png icon on the entity if it is not connected to a electric network.
---@default true
---@optional true
---@type bool
EnergySourceFluid.render_no_network_icon = nil

---Type for placeable_by for entities: Item that when placed creates this entity.
---@class ItemToPlace
local ItemToPlace = {}

---The item used to place this entity.
---@optional true
---@type string
ItemToPlace.name = nil

---How many items are used to place one of this entity. Can't be larger than the stack size of the item.
---@optional true
---@type uint32
ItemToPlace.count = nil

---Used by <a href="/Types/BeaconGraphicsSet" title="Types/BeaconGraphicsSet">Types/BeaconGraphicsSet</a> (<a href="/Prototype/Beacon" title="Prototype/Beacon">Prototype/Beacon</a>).
---@class AnimationElement
local AnimationElement = {}

---@default object
---@optional true
---@type RenderLayer
AnimationElement.render_layer = nil

---@optional true
---@type int8
AnimationElement.secondary_draw_order = nil

---@default true
---@optional true
---@type bool
AnimationElement.draw_as_sprite = nil

---@default false
---@optional true
---@type bool
AnimationElement.draw_as_light = nil

---@default false
---@optional true
---@type bool
AnimationElement.apply_tint = nil

---@default true
---@optional true
---@type bool
AnimationElement.always_draw = nil

---@optional true
---@type AnimationType
AnimationElement.animation = nil

---@alias RenderLayer string

---null
---@class ScriptTriggerEffectItem
local ScriptTriggerEffectItem = {}

---The effect_id that will be provided in <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_script_trigger_effect">on_script_trigger_effect</a>.
---@optional false
---@type string
ScriptTriggerEffectItem.effect_id = nil

---@default 1
---@optional true
---@type uint16
ScriptTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
ScriptTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
ScriptTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
ScriptTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
ScriptTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
ScriptTriggerEffectItem.damage_type_filters = nil

---@alias TextAlignment string

---null
---@class PumpConnectorGraphicsValue
local PumpConnectorGraphicsValue = {}

---@optional true
---@type AnimationType
PumpConnectorGraphicsValue.standup_base = nil

---@optional true
---@type AnimationType
PumpConnectorGraphicsValue.standup_top = nil

---@optional true
---@type AnimationType
PumpConnectorGraphicsValue.standup_shadow = nil

---@optional true
---@type AnimationType
PumpConnectorGraphicsValue.connector = nil

---@optional true
---@type AnimationType
PumpConnectorGraphicsValue.connector_shadow = nil

---null
---@class SpriteVariationsValue
local SpriteVariationsValue = {}

---@optional true
---@type SpriteVariationsSheet
SpriteVariationsValue.sheet = nil

---@alias ConsumingType string

---null
---@class MiningDrillGraphicsSetCircuitConnectorLayer
local MiningDrillGraphicsSetCircuitConnectorLayer = {}

---@default object
---@optional true
---@type RenderLayer
MiningDrillGraphicsSetCircuitConnectorLayer.north = nil

---@default object
---@optional true
---@type RenderLayer
MiningDrillGraphicsSetCircuitConnectorLayer.east = nil

---@default object
---@optional true
---@type RenderLayer
MiningDrillGraphicsSetCircuitConnectorLayer.south = nil

---@default object
---@optional true
---@type RenderLayer
MiningDrillGraphicsSetCircuitConnectorLayer.west = nil

---null
---@class SpawnPointValue
local SpawnPointValue = {}

---@optional false
---@type double
SpawnPointValue.evolution_factor = nil

---Must be >= 0.
---@optional false
---@type double
SpawnPointValue.spawn_weight = nil

---null
---@class BeamTriggerDelivery
local BeamTriggerDelivery = {}

---Name of a <a href="/Prototype/Beam" title="Prototype/Beam">Prototype/Beam</a>.
---@optional false
---@type string
BeamTriggerDelivery.beam = nil

---@default true
---@optional true
---@type bool
BeamTriggerDelivery.add_to_shooter = nil

---@default 0
---@optional true
---@type uint32
BeamTriggerDelivery.max_length = nil

---@default 0
---@optional true
---@type uint32
BeamTriggerDelivery.duration = nil

---@optional true
---@type vector
BeamTriggerDelivery.source_offset = nil

---@optional true
---@type TriggerEffect
BeamTriggerDelivery.source_effects = nil

---@optional true
---@type TriggerEffect
BeamTriggerDelivery.target_effects = nil

---null
---@class UtilityConstantsTrainPathFinding
local UtilityConstantsTrainPathFinding = {}

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_stop_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.stopped_manually_controlled_train_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.stopped_manually_controlled_train_without_passenger_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.signal_reserved_by_circuit_network_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_in_station_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_in_station_with_no_other_valid_stops_in_schedule = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_arriving_to_station_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_arriving_to_signal_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_waiting_at_signal_penalty = nil

---Must be >= 0.
---@optional false
---@type float
UtilityConstantsTrainPathFinding.train_waiting_at_signal_tick_multiplier_penalty = nil

---@optional false
---@type uint32
UtilityConstantsTrainPathFinding.train_with_no_path_penalty = nil

---Used in <a href="/Types/Sprite4Way" title="Types/Sprite4Way">Types/Sprite4Way</a> and <a href="/Types/Sprite8Way" title="Types/Sprite8Way">Types/Sprite8Way</a>
---@class SpriteNWaySheet
local SpriteNWaySheet = {}

---Technically optional, but path to sprite cannot be empty.
---@optional false
---@type FileName
SpriteNWaySheet.filename = nil

---Specifies how many of the directions of the SpriteNWay are filled up with this sheet.
---@optional true
---@type uint32
SpriteNWaySheet.frames = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the SpriteNWaySheet.
---@optional true
---@type SpriteNWaySheet
SpriteNWaySheet.hr_version = nil

---@default medium
---@optional true
---@type SpritePriority
SpriteNWaySheet.priority = nil

---@optional true
---@type SpriteFlags
SpriteNWaySheet.flags = nil

---<p>The width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
SpriteNWaySheet.size = nil

---Mandatory if <code>size</code> is not given. Width of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
SpriteNWaySheet.width = nil

---Mandatory if <code>size</code> is not given. Height of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
SpriteNWaySheet.height = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
SpriteNWaySheet.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
SpriteNWaySheet.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
SpriteNWaySheet.position = nil

---In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.
---@optional true
---@type vector
SpriteNWaySheet.shift = nil

---Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
SpriteNWaySheet.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
SpriteNWaySheet.mipmap_count = nil

---@default false
---@optional true
---@type bool
SpriteNWaySheet.apply_runtime_tint = nil

---@optional true
---@type Color
SpriteNWaySheet.tint = nil

---@default normal
---@optional true
---@type BlendMode
SpriteNWaySheet.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
SpriteNWaySheet.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
SpriteNWaySheet.premul_alpha = nil

---@default false
---@optional true
---@type bool
SpriteNWaySheet.generate_sdf = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
SpriteNWaySheet.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
SpriteNWaySheet.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
SpriteNWaySheet.draw_as_shadow = nil

---@alias LogisticContainerLogisticMode string

---null
---@class AnimationSidesOptional
local AnimationSidesOptional = {}

---@optional true
---@type AnimationType
AnimationSidesOptional.north = nil

---@optional true
---@type AnimationType
AnimationSidesOptional.east = nil

---@optional true
---@type AnimationType
AnimationSidesOptional.south = nil

---@optional true
---@type AnimationType
AnimationSidesOptional.west = nil

---null
---@class ProgrammableSpeakerInstrumentNote
local ProgrammableSpeakerInstrumentNote = {}

---@optional false
---@type string
ProgrammableSpeakerInstrumentNote.name = nil

---@optional false
---@type SoundType
ProgrammableSpeakerInstrumentNote.sound = nil

---Used for tile graphics.
---@class TileTransitions
local TileTransitions = {}

---This or side_mask needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileTransitions.side = nil

---This or side needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileTransitions.side_mask = nil

---This or inner_corner_mask needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileTransitions.inner_corner = nil

---This or inner_corner needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileTransitions.inner_corner_mask = nil

---This or outer_corner_mask needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileTransitions.outer_corner = nil

---This or outer_corner needs to be specified if <code>empty_transitions</code> is not true.
---@optional true
---@type TileTransitionSprite
TileTransitions.outer_corner_mask = nil

---@default false
---@optional true
---@type bool
TileTransitions.empty_transitions = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.side_background = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.side_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.side_effect_map = nil

---@optional true
---@type float[]
TileTransitions.side_weights = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.inner_corner_background = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.inner_corner_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.inner_corner_effect_map = nil

---@optional true
---@type float[]
TileTransitions.inner_corner_weights = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.outer_corner_background = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.outer_corner_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.outer_corner_effect_map = nil

---@optional true
---@type float[]
TileTransitions.outer_corner_weights = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.u_transition = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.u_transition_mask = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.u_transition_background = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.u_transition_background_mask = nil

---@optional true
---@type TileTransitionSprite
TileTransitions.u_transition_effect_map = nil

---@optional true
---@type float[]
TileTransitions.u_transition_weights = nil

---@optional true
---@type TileSprite
TileTransitions.o_transition = nil

---@optional true
---@type TileSprite
TileTransitions.o_transition_mask = nil

---@optional true
---@type TileSprite
TileTransitions.o_transition_background = nil

---@optional true
---@type TileSprite
TileTransitions.o_transition_background_mask = nil

---@optional true
---@type TileSprite
TileTransitions.o_transition_effect_map = nil

---@optional true
---@type SpriteType
TileTransitions.water_patch = nil

---@optional true
---@type AnimationType
TileTransitions.effect_mask = nil

---@optional true
---@type uint8
TileTransitions.layer = nil

---@optional true
---@type TileLayerGroup
TileTransitions.overlay_layer_group = nil

---@optional true
---@type TileLayerGroup
TileTransitions.background_layer_group = nil

---@optional true
---@type int8
TileTransitions.overlay_layer_offset = nil

---@default 0
---@optional true
---@type int8
TileTransitions.masked_overlay_layer_offset = nil

---@default 0
---@optional true
---@type int8
TileTransitions.background_layer_offset = nil

---@default 0
---@optional true
---@type int8
TileTransitions.masked_background_layer_offset = nil

---@default false
---@optional true
---@type bool
TileTransitions.apply_effect_color_to_overlay = nil

---@default false
---@optional true
---@type bool
TileTransitions.offset_background_layer_by_tile_layer = nil

---Used for graphics by <a href="/Prototype/Rail" title="Prototype/Rail">Prototype/Rails</a> and <a href="/Prototype/RailRemnants" title="Prototype/RailRemnants">Prototype/RailRemnants</a>.
---@class RailPieceLayers
local RailPieceLayers = {}

---Must have between 1 and 4 variations.
---@optional false
---@type SpriteVariations
RailPieceLayers.metals = nil

---Must have same number of variations as <code>metals</code>.
---@optional false
---@type SpriteVariations
RailPieceLayers.backplates = nil

---Must have between 1 and 4 variations.
---@optional false
---@type SpriteVariations
RailPieceLayers.ties = nil

---Must have between 1 and 4 variations.
---@optional false
---@type SpriteVariations
RailPieceLayers.stone_path = nil

---Must have less or equal than 4 variations.
---@optional true
---@type SpriteVariations
RailPieceLayers.stone_path_background = nil

---@optional true
---@type SpriteType
RailPieceLayers.segment_visualisation_middle = nil

---@optional true
---@type SpriteType
RailPieceLayers.segment_visualisation_ending_front = nil

---@optional true
---@type SpriteType
RailPieceLayers.segment_visualisation_ending_back = nil

---@optional true
---@type SpriteType
RailPieceLayers.segment_visualisation_continuing_front = nil

---@optional true
---@type SpriteType
RailPieceLayers.segment_visualisation_continuing_back = nil

---A mapping of arrays of mappings of <a href="/Types/string" title="Types/string">Types/string</a> to <a href="/Types/Animation" title="Types/Animation">Types/Animations</a> to all 4 directions of the pump connection (to a fluid wagon).
---@class PumpConnectorGraphics
local PumpConnectorGraphics = {}

---Size of the table must be 6 or more. Each value of the table is a mapping of <a href="/Types/string" title="Types/string">Types/string</a> to <a href="/Types/Animation" title="Types/Animation">Types/Animation</a>. The following strings are recognized: <code>standup_base</code>, <code>standup_top</code>, <code>standup_shadow</code>, <code>connector</code>, <code>connector_shadow</code>.
---@optional false
---@type PumpConnectorGraphicsValue[]
PumpConnectorGraphics.north = nil

---Size of the table must be 6 or more. Each value of the table is a mapping of <a href="/Types/string" title="Types/string">Types/string</a> to <a href="/Types/Animation" title="Types/Animation">Types/Animation</a>. The following strings are recognized: <code>standup_base</code>, <code>standup_top</code>, <code>standup_shadow</code>, <code>connector</code>, <code>connector_shadow</code>.
---@optional false
---@type PumpConnectorGraphicsValue[]
PumpConnectorGraphics.west = nil

---Size of the table must be 6 or more. Each value of the table is a mapping of <a href="/Types/string" title="Types/string">Types/string</a> to <a href="/Types/Animation" title="Types/Animation">Types/Animation</a>. The following strings are recognized: <code>standup_base</code>, <code>standup_top</code>, <code>standup_shadow</code>, <code>connector</code>, <code>connector_shadow</code>.
---@optional false
---@type PumpConnectorGraphicsValue[]
PumpConnectorGraphics.south = nil

---Size of the table must be 6 or more. Each value of the table is a mapping of <a href="/Types/string" title="Types/string">Types/string</a> to <a href="/Types/Animation" title="Types/Animation">Types/Animation</a>. The following strings are recognized: <code>standup_base</code>, <code>standup_top</code>, <code>standup_shadow</code>, <code>connector</code>, <code>connector_shadow</code>.
---@optional false
---@type PumpConnectorGraphicsValue[]
PumpConnectorGraphics.east = nil

---null
---@class EffectConsumption
local EffectConsumption = {}

---Precision is ignored beyond two decimals - 17.567 results in 17.56 etc.
---@default 0
---@optional true
---@type double
EffectConsumption.bonus = nil

---@alias AmbientSoundTrackType string

---null
---@class TechnologyData
local TechnologyData = {}

---@optional false
---@type TechnologyUnit
TechnologyData.unit = nil

---List of effects of the technology (applied when the technology is researched).
---@optional true
---@type Modifier[]
TechnologyData.effects = nil

---@default true
---@optional true
---@type bool
TechnologyData.enabled = nil

---Hides the technology from the tech screen.
---@default false
---@optional true
---@type bool
TechnologyData.hidden = nil

---"infinite" for infinite technologies, otherwise uint.
---@optional true
---@type uint32|string
TechnologyData.max_level = nil

---List of technologies needed to be researched before this one can be researched.
---@optional true
---@type string[]
TechnologyData.prerequisites = nil

---When set to true, and the technology contains several levels, only the relevant one is displayed in the technology screen.
---@default false
---@optional true
---@type bool
TechnologyData.upgrade = nil

---Controls whether the technology is shown in the tech GUI when it is disabled (enabled = false).
---@default false
---@optional true
---@type bool
TechnologyData.visible_when_disabled = nil

---@alias uint64 number

---null
---@class CreateStickerTriggerEffectItem
local CreateStickerTriggerEffectItem = {}

---Name of the <a href="/Prototype/Sticker" title="Prototype/Sticker">Prototype/Sticker</a> that should be created.
---@optional false
---@type string
CreateStickerTriggerEffectItem.sticker = nil

---@default false
---@optional true
---@type bool
CreateStickerTriggerEffectItem.show_in_tooltip = nil

---If this is true, <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity">on_trigger_created_entity</a> is raised when the entity is created.
---@optional true
---@type bool
CreateStickerTriggerEffectItem.trigger_created_entity = nil

---@default 1
---@optional true
---@type uint16
CreateStickerTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateStickerTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateStickerTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateStickerTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateStickerTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateStickerTriggerEffectItem.damage_type_filters = nil

---null
---@class DestroyDecorativesTriggerEffectItem
local DestroyDecorativesTriggerEffectItem = {}

---@optional false
---@type float
DestroyDecorativesTriggerEffectItem.radius = nil

---@optional true
---@type RenderLayer
DestroyDecorativesTriggerEffectItem.from_render_layer = nil

---@optional true
---@type RenderLayer
DestroyDecorativesTriggerEffectItem.to_render_layer = nil

---Soft decoratives are decoratives with <a href="/Prototype/Decorative#grows_through_rail_path" title="Prototype/Decorative">Prototype/Decorative#grows_through_rail_path</a> = true.
---@default false
---@optional true
---@type bool
DestroyDecorativesTriggerEffectItem.include_soft_decoratives = nil

---@default false
---@optional true
---@type bool
DestroyDecorativesTriggerEffectItem.include_decals = nil

---@default true
---@optional true
---@type bool
DestroyDecorativesTriggerEffectItem.invoke_decorative_trigger = nil

---If true, destroys only decoratives that have a <a href="/Prototype/Decorative#trigger_effect" title="Prototype/Decorative">Prototype/Decorative#trigger_effect</a> set.
---@default false
---@optional true
---@type bool
DestroyDecorativesTriggerEffectItem.decoratives_with_trigger_only = nil

---@default 1
---@optional true
---@type uint16
DestroyDecorativesTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
DestroyDecorativesTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
DestroyDecorativesTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
DestroyDecorativesTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
DestroyDecorativesTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
DestroyDecorativesTriggerEffectItem.damage_type_filters = nil

---null
---@class UtilityConstantsColorFilter
local UtilityConstantsColorFilter = {}

---@optional false
---@type string
UtilityConstantsColorFilter.name = nil

---@optional false
---@type LocalisedString
UtilityConstantsColorFilter.localised_name = nil

---4 arrays of 4-length float arrays, essentially a 4x4 matrix
---@optional false
---@type float[][]
UtilityConstantsColorFilter.matrix = nil

---@alias ItemCountType uint32

---@alias AnimationRunMode string

---@alias RealOrientation number

---null
---@class LineTriggerItem
local LineTriggerItem = {}

---@optional false
---@type double
LineTriggerItem.range = nil

---@optional false
---@type double
LineTriggerItem.width = nil

---Only prototypes with these flags are affected by the trigger item.
---@optional true
---@type EntityPrototypeFlags
LineTriggerItem.entity_flags = nil

---@default false
---@optional true
---@type bool
LineTriggerItem.ignore_collision_condition = nil

---@optional true
---@type TriggerTargetMask
LineTriggerItem.trigger_target_mask = nil

---@default 1
---@optional true
---@type uint32
LineTriggerItem.repeat_count = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
LineTriggerItem.probability = nil

---Only prototypes with these collision masks are affected by the trigger item.
---@optional true
---@type CollisionMask
LineTriggerItem.collision_mask = nil

---@optional true
---@type TriggerEffect
LineTriggerItem.source_effects = nil

---@optional true
---@type TriggerDelivery|TriggerDelivery[]
LineTriggerItem.action_delivery = nil

---Only entities meeting the force condition are affected by the trigger item.
---@optional true
---@type ForceCondition
LineTriggerItem.force = nil

---@alias SelectionToolSelectionMode string[]

---null
---@class SpriteVariationsSheet
local SpriteVariationsSheet = {}

---@default 1
---@optional true
---@type uint32
SpriteVariationsSheet.variation_count = nil

---@default 1
---@optional true
---@type uint32
SpriteVariationsSheet.repeat_count = nil

---Default is the value of <code>variation_count</code>.
---@optional true
---@type uint32
SpriteVariationsSheet.line_length = nil

---Technically optional, but path to sprite cannot be empty.
---@optional false
---@type FileName
SpriteVariationsSheet.filename = nil

---<p>If this property is present, all Sprite definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Sprite definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type SpriteType[]
SpriteVariationsSheet.layers = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the sprite.
---@optional true
---@type SpriteType
SpriteVariationsSheet.hr_version = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.slice = nil

---<p>Number of slices this is sliced into when using the "optimized atlas packing" option. If you are a modder, you can just ignore this property.</p><p>Example: If this is 4, the sprite will be sliced into a 4×4 grid.</p>
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.dice = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.slice_x = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the x axis.
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.dice_x = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.slice_y = nil

---Same as <code>slice</code> or <code>dice</code> above, but this specifies only how many slices there are on the y axis.
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.dice_y = nil

---@default medium
---@optional true
---@type SpritePriority
SpriteVariationsSheet.priority = nil

---@optional true
---@type SpriteFlags
SpriteVariationsSheet.flags = nil

---<p>The width and height of the sprite. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType|SpriteSizeType[]
SpriteVariationsSheet.size = nil

---Mandatory if size is not given. Width of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.width = nil

---Mandatory if size is not given. Height of the picture in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.height = nil

---Horizontal position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.x = nil

---Vertical position of the sprite in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
SpriteVariationsSheet.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
SpriteVariationsSheet.position = nil

---In tiles. util.by_pixel() can be used to divide the shift by 32 which is the usual pixel height/width of 1 tile in normal resolution. Note that 32 pixel tile height/width is not enforced anywhere - any other tile height or width is also possible.
---@optional true
---@type vector
SpriteVariationsSheet.shift = nil

---Values different than 1 specify the scale of the sprite on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
SpriteVariationsSheet.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
SpriteVariationsSheet.mipmap_count = nil

---@default false
---@optional true
---@type bool
SpriteVariationsSheet.apply_runtime_tint = nil

---@optional true
---@type Color
SpriteVariationsSheet.tint = nil

---@default normal
---@optional true
---@type BlendMode
SpriteVariationsSheet.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
SpriteVariationsSheet.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
SpriteVariationsSheet.premul_alpha = nil

---@default false
---@optional true
---@type bool
SpriteVariationsSheet.generate_sdf = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
SpriteVariationsSheet.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
SpriteVariationsSheet.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
SpriteVariationsSheet.draw_as_shadow = nil

---null
---@class UseOnSelfCapsuleAction
local UseOnSelfCapsuleAction = {}

---@optional false
---@type AttackParameters
UseOnSelfCapsuleAction.attack_parameters = nil

---Whether using the capsule consumes an item from the stack.
---@default true
---@optional true
---@type bool
UseOnSelfCapsuleAction.uses_stack = nil

---null
---@class MapSettingsPollution
local MapSettingsPollution = {}

---@optional false
---@type bool
MapSettingsPollution.enabled = nil

---Amount that is diffused to neighboring chunks
---@optional false
---@type double
MapSettingsPollution.diffusion_ratio = nil

---This much pollution units must be on the chunk to start diffusing
---@optional false
---@type double
MapSettingsPollution.min_to_diffuse = nil

---Constant modifier a percentage of 1; the pollution eaten by a chunks tiles
---@optional false
---@type double
MapSettingsPollution.ageing = nil

---Anything bigger than this is visualised as this value
---@optional false
---@type double
MapSettingsPollution.expected_max_per_chunk = nil

---Anything lower than this (but > 0) is visualised as this value
---@optional false
---@type double
MapSettingsPollution.min_to_show_per_chunk = nil

---@optional false
---@type double
MapSettingsPollution.min_pollution_to_damage_trees = nil

---@optional false
---@type double
MapSettingsPollution.pollution_with_max_forest_damage = nil

---@optional false
---@type double
MapSettingsPollution.pollution_restored_per_tree_damage = nil

---@optional false
---@type double
MapSettingsPollution.pollution_per_tree_damage = nil

---@optional false
---@type double
MapSettingsPollution.max_pollution_to_restore_trees = nil

---@optional false
---@type double
MapSettingsPollution.enemy_attack_pollution_consumption_modifier = nil

---@alias RailRemnantsBendingType string

---null
---@class Animation4WayValue
local Animation4WayValue = {}

---Optional. If omitted, the game will not look for any other directions and instead try to load the whole definition as one <a href="/Types/Animation" title="Types/Animation">Types/Animation</a> and apply it to all directions.
---@optional true
---@type AnimationType
Animation4WayValue.north = nil

---@optional true
---@type AnimationType
Animation4WayValue.east = nil

---@optional true
---@type AnimationType
Animation4WayValue.south = nil

---@optional true
---@type AnimationType
Animation4WayValue.west = nil

---Optional. If given, this is used instead of any other properties that may be present.
---@optional true
---@type SpriteNWaySheet[]
Animation4WayValue.sheets = nil

---Optional. If given, and #sheets isnt present, this is used instead of any other properties that may be present.
---@optional true
---@type SpriteNWaySheet
Animation4WayValue.sheet = nil

---The definition of a spawnable unit for a <a href="/Prototype/EnemySpawner" title="Prototype/EnemySpawner">Prototype/EnemySpawner</a>. It can be specified as a table with named or numbered keys, but not a mix of both.
---@class UnitSpawnDefinition
local UnitSpawnDefinition = {}

---The name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional false
---@type string
UnitSpawnDefinition.unit = nil

---Array of evolution and probability info. The evolution_factor must be ascending from entry to entry.
---@optional false
---@type SpawnPoint[]
UnitSpawnDefinition.spawn_points = nil

---@alias ExplosionDefinition string|ExplosionDefinitionValue

---null
---@class TechnologyUnit
local TechnologyUnit = {}

---How many units are needed. Must be positive. May not be specified if count_formula is specified.
---@optional true
---@type double
TechnologyUnit.count = nil

---Formula that specifies how many units are needed per level of the infinite technology. May not be specified if count is specified. The formula is executed following the BODMAS order.
---@optional true
---@type string
TechnologyUnit.count_formula = nil

---How much time is needed per one unit, in lab with crafting speed 1 it is the number of seconds.
---@optional true
---@type double
TechnologyUnit.time = nil

---list of ingredients needed for one unit of research. The item types must all be <a href="/Prototype/Tool" title="Prototype/Tool">tools</a>.
---@optional true
---@type IngredientPrototype[]
TechnologyUnit.ingredients = nil

---The number of module slots in this entity, and their icon positions.
---@class ModuleSpecification
local ModuleSpecification = {}

---The number of module slots in this entity.
---@default 0
---@optional true
---@type ItemStackIndex
ModuleSpecification.module_slots = nil

---Default: width of entity selection box / 0.75
---@optional true
---@type uint8
ModuleSpecification.module_info_max_icons_per_row = nil

---Default: width of entity selection box / 1.5
---@optional true
---@type uint8
ModuleSpecification.module_info_max_icon_rows = nil

---Default: {0, 0.7}
---@optional true
---@type vector
ModuleSpecification.module_info_icon_shift = nil

---@default 0.5
---@optional true
---@type float
ModuleSpecification.module_info_icon_scale = nil

---@default 1.1
---@optional true
---@type float
ModuleSpecification.module_info_separation_multiplier = nil

---@default -0.1
---@optional true
---@type float
ModuleSpecification.module_info_multi_row_initial_height_modifier = nil

---<p>Specifies animation that can be used in the game.</p><p>Note that if any frame of the animation is specified from the same source as any other <a href="/Types/Sprite" title="Types/Sprite">Types/Sprite</a> or frame of other animation, it will be shared.</p>
---@class AnimationType
local AnimationType = {}

---<p>If this property is present, all Animation definitions have to be placed as entries in the array, and they will all be loaded from there. Each item (Animation definition) in the array may also have the <code>layers</code> property.</p><p>If this property is present, all other properties are ignored and the mandatory properties do not have to be defined.</p><p>Layers may not be an empty table.</p>
---@optional true
---@type AnimationType[]
AnimationType.layers = nil

---If this property exists and high resolution sprites are turned on, its contents are used to load the Animation.
---@optional true
---@type AnimationType
AnimationType.hr_version = nil

---Mandatory if <code>"stripes"</code> is not specified. 
---@optional true
---@type FileName
AnimationType.filename = nil

---@default medium
---@optional true
---@type SpritePriority
AnimationType.priority = nil

---@optional true
---@type SpriteFlags
AnimationType.flags = nil

---<p>The width and height of the one frame. If this is an array, the first member of the array is the width and the second is the height. Otherwise the size is both width and height.</p><p>Width and height may only be in the range of 0-8192.</p>
---@optional true
---@type SpriteSizeType[]|SpriteSizeType
AnimationType.size = nil

---Mandatory if <code>size</code> is not given. Width of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
AnimationType.width = nil

---Mandatory if <code>size</code> is not given. Height of one frame in pixels, from 0-8192.
---@optional true
---@type SpriteSizeType
AnimationType.height = nil

---Horizontal position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
AnimationType.x = nil

---Vertical position of the animation in the source file in pixels.
---@default 0
---@optional true
---@type SpriteSizeType
AnimationType.y = nil

---Loaded only when <code>x</code> and <code>y</code> are both 0. The first member of the array is x and the second is y.
---@optional true
---@type SpriteSizeType[]
AnimationType.position = nil

---@optional true
---@type vector
AnimationType.shift = nil

---Values different than 1 specify the scale of the animation on default zoom. Scale 2 means that the picture will be 2 times bigger on screen (and more pixelated).
---@default 1
---@optional true
---@type double
AnimationType.scale = nil

---Only loaded if this is an icon (has flag "group=icon" or "group=gui").
---@default 0
---@optional true
---@type uint8
AnimationType.mipmap_count = nil

---@default false
---@optional true
---@type bool
AnimationType.apply_runtime_tint = nil

---@optional true
---@type Color
AnimationType.tint = nil

---@default normal
---@optional true
---@type BlendMode
AnimationType.blend_mode = nil

---Minimal mode is entered when mod loading fails. You are in it when you see the gray box after (part of) the loading screen that tells you a mod error (<a rel="nofollow" class="external text" href="https://cdn.discordapp.com/attachments/340530709712076801/532315796626472972/unknown.png">Example</a>). If you are a modder, you can just ignore this property.
---@default false
---@optional true
---@type bool
AnimationType.load_in_minimal_mode = nil

---Whether alpha should be premultiplied.
---@default true
---@optional true
---@type bool
AnimationType.premul_alpha = nil

---@default false
---@optional true
---@type bool
AnimationType.generate_sdf = nil

---@default forward
---@optional true
---@type AnimationRunMode
AnimationType.run_mode = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint32
AnimationType.frame_count = nil

---Once the specified number of pictures is loaded, other pictures are loaded on other line. This is to allow having longer animations in matrix, to avoid pictures with too big width. The game engine limits the width of any input picture to 2048px, so it is compatible with most graphics cards.
---@default 0
---@optional true
---@type float
AnimationType.animation_speed = nil

---@optional true
---@type float
AnimationType.max_advance = nil

---Can't be 0.
---@default 1
---@optional true
---@type uint8
AnimationType.repeat_count = nil

---@optional true
---@type uint8
AnimationType.dice = nil

---@optional true
---@type uint8
AnimationType.dice_x = nil

---@optional true
---@type uint8
AnimationType.dice_y = nil

---@optional true
---@type AnimationFrameSequence
AnimationType.frame_sequence = nil

---@optional true
---@type Stripe[]
AnimationType.stripes = nil

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
AnimationType.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
AnimationType.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
AnimationType.draw_as_shadow = nil

---null
---@class PipeToGroundPictures
local PipeToGroundPictures = {}

---@optional false
---@type SpriteType
PipeToGroundPictures.down = nil

---@optional false
---@type SpriteType
PipeToGroundPictures.up = nil

---@optional false
---@type SpriteType
PipeToGroundPictures.left = nil

---@optional false
---@type SpriteType
PipeToGroundPictures.right = nil

---null
---@class TransportBeltBeltAnimationSet
local TransportBeltBeltAnimationSet = {}

---@default 5
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.east_to_north_index = nil

---@default 6
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.north_to_east_index = nil

---@default 7
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.west_to_north_index = nil

---@default 8
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.north_to_west_index = nil

---@default 9
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.south_to_east_index = nil

---@default 10
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.east_to_south_index = nil

---@default 11
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.south_to_west_index = nil

---@default 12
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.west_to_south_index = nil

---@optional false
---@type RotatedAnimation
TransportBeltBeltAnimationSet.animation_set = nil

---@default 1
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.east_index = nil

---@default 2
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.west_index = nil

---@default 3
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.north_index = nil

---@default 4
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.south_index = nil

---@default 13
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.starting_south_index = nil

---@default 14
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.ending_south_index = nil

---@default 15
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.starting_west_index = nil

---@default 16
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.ending_west_index = nil

---@default 17
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.starting_north_index = nil

---@default 18
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.ending_north_index = nil

---@default 19
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.starting_east_index = nil

---@default 20
---@optional true
---@type uint8
TransportBeltBeltAnimationSet.ending_east_index = nil

---@optional true
---@type Sprite4Way
TransportBeltBeltAnimationSet.ending_patch = nil

---@default false
---@optional true
---@type Sprite4Way
TransportBeltBeltAnimationSet.ends_with_stopper = nil

---null
---@class ClusterTriggerItem
local ClusterTriggerItem = {}

---Must be at least 2.
---@optional false
---@type double
ClusterTriggerItem.cluster_count = nil

---@optional false
---@type float
ClusterTriggerItem.distance = nil

---@default 0
---@optional true
---@type float
ClusterTriggerItem.distance_deviation = nil

---Only prototypes with these flags are affected by the trigger item.
---@optional true
---@type EntityPrototypeFlags
ClusterTriggerItem.entity_flags = nil

---@default false
---@optional true
---@type bool
ClusterTriggerItem.ignore_collision_condition = nil

---@optional true
---@type TriggerTargetMask
ClusterTriggerItem.trigger_target_mask = nil

---@default 1
---@optional true
---@type uint32
ClusterTriggerItem.repeat_count = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
ClusterTriggerItem.probability = nil

---Only prototypes with these collision masks are affected by the trigger item.
---@optional true
---@type CollisionMask
ClusterTriggerItem.collision_mask = nil

---@optional true
---@type TriggerEffect
ClusterTriggerItem.source_effects = nil

---@optional true
---@type TriggerDelivery|TriggerDelivery[]
ClusterTriggerItem.action_delivery = nil

---Only entities meeting the force condition are affected by the trigger item.
---@optional true
---@type ForceCondition
ClusterTriggerItem.force = nil

---@alias Sprite4Way SpriteType|Sprite4WayValue[]

---null
---@class CyclicSound
local CyclicSound = {}

---@optional true
---@type SoundType
CyclicSound.begin_sound = nil

---@optional true
---@type SoundType
CyclicSound.middle_sound = nil

---@optional true
---@type SoundType
CyclicSound.end_sound = nil

---null
---@class PositionValue
local PositionValue = {}

---@optional false
---@type float
PositionValue.x = nil

---@optional false
---@type float
PositionValue.y = nil

---null
---@class UtilityConstantsBonusGuiOrdering
local UtilityConstantsBonusGuiOrdering = {}

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.artillery_range = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.worker_robots = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.character = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.follower_robots = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.research_speed = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.inserter = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.stack_inserter = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.turret_attack = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.mining_productivity = nil

---@optional false
---@type Order
UtilityConstantsBonusGuiOrdering.train_braking_force = nil

---@alias MouseCursorSystemCursor string

---@alias float number

---null
---@class MapSettingsEnemyEvolution
local MapSettingsEnemyEvolution = {}

---@optional false
---@type bool
MapSettingsEnemyEvolution.enabled = nil

---Percentual increase in the evolution factor for every second (60 ticks)
---@optional false
---@type double
MapSettingsEnemyEvolution.time_factor = nil

---Percentual increase in the evolution factor for every destroyed spawner
---@optional false
---@type double
MapSettingsEnemyEvolution.destroy_factor = nil

---Percentual increase in the evolution factor for 1 pollution unit
---@optional false
---@type double
MapSettingsEnemyEvolution.pollution_factor = nil

---null
---@class ExplosionDefinitionValue
local ExplosionDefinitionValue = {}

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional false
---@type string
ExplosionDefinitionValue.name = nil

---@optional true
---@type vector
ExplosionDefinitionValue.offset = nil

---null
---@class ProjectileAttackParameters
local ProjectileAttackParameters = {}

---@optional true
---@type vector
ProjectileAttackParameters.projectile_center = nil

---@default 0
---@optional true
---@type float
ProjectileAttackParameters.projectile_creation_distance = nil

---@optional true
---@type CircularParticleCreationSpecification
ProjectileAttackParameters.shell_particle = nil

---@optional true
---@type CircularParticleCreationSpecification
ProjectileAttackParameters.projectile_creation_parameters = nil

---@default 0
---@optional true
---@type float
ProjectileAttackParameters.projectile_orientation_offset = nil

---@optional false
---@type float
ProjectileAttackParameters.range = nil

---Number of ticks in which it will be possible to shoot again. If < 1, multiple shots can be performed in one tick.
---@optional false
---@type float
ProjectileAttackParameters.cooldown = nil

---@default 0
---@optional true
---@type float
ProjectileAttackParameters.min_range = nil

---If this is &lt;= 0, it is set to 1. Arc from 0 to 1, so for example 0.25 is 90°. Used by the <a href="/Flamethrower_turret" title="Flamethrower turret">flamethrower turret</a> in the base game.
---@default 1
---@optional true
---@type float
ProjectileAttackParameters.turn_range = nil

---Used when searching for the nearest enemy, when this is &gt; 0, enemies that aren't burning are preferred over burning enemies. Definition of "burning" for this: Entity has sticker attached to it, and the sticker has a <a href="/Prototype/Sticker#spread_fire_entity" title="Prototype/Sticker">spread_fire_entity</a> set.
---@default 0
---@optional true
---@type float
ProjectileAttackParameters.fire_penalty = nil

---A higher penalty will discourage turrets from targeting units that would take longer to turn to face.
---@default 0
---@optional true
---@type float
ProjectileAttackParameters.rotate_penalty = nil

---A higher penalty will discourage turrets from targeting units with higher health. A negative penalty will encourage turrets to target units with higher health.
---@default 0
---@optional true
---@type float
ProjectileAttackParameters.health_penalty = nil

---If less than <code>range</code>, the entity will choose a random distance between <code>range</code> and <code>min_attack_distance</code> and attack from that distance.
---@optional true
---@type float
ProjectileAttackParameters.min_attack_distance = nil

---@default 1
---@optional true
---@type float
ProjectileAttackParameters.damage_modifier = nil

---Must be greater than or equal to 0.
---@default 1
---@optional true
---@type float
ProjectileAttackParameters.ammo_consumption_modifier = nil

---Must be between 0 and 1.
---@default 0
---@optional true
---@type float
ProjectileAttackParameters.cooldown_deviation = nil

---Number of ticks it takes for the weapon to actually shoot after the order for shooting has been made. This also allows to "adjust" the shooting animation to the effect of shooting.
---@default 0
---@optional true
---@type uint32
ProjectileAttackParameters.warmup = nil

---Presumably this should be set to the projectile speed to make the unit/turret lead their projectiles.
---@default 0
---@optional true
---@type float
ProjectileAttackParameters.lead_target_for_projectile_speed = nil

---@optional true
---@type float
ProjectileAttackParameters.movement_slow_down_cooldown = nil

---@default 1
---@optional true
---@type double
ProjectileAttackParameters.movement_slow_down_factor = nil

---Can be mandatory.
---@optional true
---@type AmmoType
ProjectileAttackParameters.ammo_type = nil

---@optional true
---@type LayeredSound
ProjectileAttackParameters.sound = nil

---@optional true
---@type RotatedAnimation
ProjectileAttackParameters.animation = nil

---@optional true
---@type CyclicSound
ProjectileAttackParameters.cyclic_sound = nil

---@default false
---@optional true
---@type bool
ProjectileAttackParameters.use_shooter_direction = nil

---Names of <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategories</a>.
---@optional true
---@type string[]
ProjectileAttackParameters.ammo_categories = nil

---The name of a <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategory</a>. Mandatory if <code>ammo_type</code> and <code>ammo_category</code> is not given, otherwise ignored.
---@optional true
---@type string
ProjectileAttackParameters.ammo_category = nil

---@alias FluidBoxProductionType string

---Sprite to be shown around the entity when it is selected/held in the cursor.
---@class RadiusVisualisationSpecification
local RadiusVisualisationSpecification = {}

---@optional false
---@type SpriteType
RadiusVisualisationSpecification.sprite = nil

---Must be > 0.
---@default 0
---@optional false
---@type double
RadiusVisualisationSpecification.distance = nil

---@optional false
---@type vector
RadiusVisualisationSpecification.offset = nil

---@default true
---@optional false
---@type bool
RadiusVisualisationSpecification.draw_in_cursor = nil

---@default true
---@optional false
---@type bool
RadiusVisualisationSpecification.draw_on_selection = nil

---@alias AutoplaceControlCategory string

---@alias Animation4Way Animation4WayValue|AnimationType

---null
---@class CreateFireTriggerEffectItem
local CreateFireTriggerEffectItem = {}

---@optional true
---@type uint8
CreateFireTriggerEffectItem.initial_ground_flame_count = nil

---Name of the entity that should be created.
---@optional false
---@type string
CreateFireTriggerEffectItem.entity_name = nil

---@optional true
---@type BoundingBox
CreateFireTriggerEffectItem.offset_deviation = nil

---If this is true, <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_trigger_created_entity">on_trigger_created_entity</a> is raised when the entity is created.
---@default false
---@optional true
---@type bool
CreateFireTriggerEffectItem.trigger_created_entity = nil

---@default false
---@optional true
---@type bool
CreateFireTriggerEffectItem.check_buildability = nil

---@default false
---@optional true
---@type bool
CreateFireTriggerEffectItem.show_in_tooltip = nil

---@optional true
---@type CollisionMask
CreateFireTriggerEffectItem.tile_collision_mask = nil

---@optional true
---@type vector[]
CreateFireTriggerEffectItem.offsets = nil

---@default 1
---@optional true
---@type uint16
CreateFireTriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateFireTriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateFireTriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateFireTriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateFireTriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateFireTriggerEffectItem.damage_type_filters = nil

---null
---@class TriggerEffectItem
local TriggerEffectItem = {}

---@default 1
---@optional true
---@type uint16
TriggerEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
TriggerEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
TriggerEffectItem.probability = nil

---@default false
---@optional true
---@type bool
TriggerEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
TriggerEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
TriggerEffectItem.damage_type_filters = nil

---@alias MapSettingsDifficultySettingsResearchQueueSetting string

---@alias TriggerEffect TriggerEffectValue[]

---Definition of a point where circuit network wires can be connected to an entity.
---@class WireConnectionPoint
local WireConnectionPoint = {}

---@optional true
---@type WirePosition
WireConnectionPoint.wire = nil

---@optional true
---@type WirePosition
WireConnectionPoint.shadow = nil

---null
---@class RailRemnantsPictures
local RailRemnantsPictures = {}

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.straight_rail_horizontal = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.straight_rail_vertical = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.straight_rail_diagonal_left_top = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.straight_rail_diagonal_right_top = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.straight_rail_diagonal_right_bottom = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.straight_rail_diagonal_left_bottom = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_vertical_left_top = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_vertical_right_top = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_vertical_right_bottom = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_vertical_left_bottom = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_horizontal_left_top = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_horizontal_right_top = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_horizontal_right_bottom = nil

---@optional false
---@type RailPieceLayers
RailRemnantsPictures.curved_rail_horizontal_left_bottom = nil

---@optional false
---@type Sprite8Way
RailRemnantsPictures.rail_endings = nil

---Extends <a href="/Types/TriggerEffectItem" title="Types/TriggerEffectItem">Types/TriggerEffectItem</a>.
---@class CreateTrivialSmokeEffectItem
local CreateTrivialSmokeEffectItem = {}

---Name of a <a href="/Prototype/TrivialSmoke" title="Prototype/TrivialSmoke">Prototype/TrivialSmoke</a>.
---@optional false
---@type string
CreateTrivialSmokeEffectItem.smoke_name = nil

---@optional true
---@type BoundingBox
CreateTrivialSmokeEffectItem.offset_deviation = nil

---@optional true
---@type vector[]
CreateTrivialSmokeEffectItem.offsets = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.initial_height = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.max_radius = nil

---@optional true
---@type vector
CreateTrivialSmokeEffectItem.speed = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.speed_multiplier = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.speed_multiplier_deviation = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.starting_frame = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.starting_frame_deviation = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.starting_frame_speed = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.starting_frame_speed_deviation = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.speed_from_center = nil

---@default 0
---@optional true
---@type float
CreateTrivialSmokeEffectItem.speed_from_center_deviation = nil

---@default 1
---@optional true
---@type uint16
CreateTrivialSmokeEffectItem.repeat_count = nil

---@default 0
---@optional true
---@type uint16
CreateTrivialSmokeEffectItem.repeat_count_deviation = nil

---Must be greater than 0 and less than or equal to 1.
---@default 1
---@optional true
---@type float
CreateTrivialSmokeEffectItem.probability = nil

---@default false
---@optional true
---@type bool
CreateTrivialSmokeEffectItem.affects_target = nil

---@default true
---@optional true
---@type bool
CreateTrivialSmokeEffectItem.show_in_tooltip = nil

---Guaranteed to work with <a href="/Prototype/EntityWithHealth#damaged_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#damaged_trigger_effect</a> and <a href="/Prototype/EntityWithHealth#dying_trigger_effect" title="Prototype/EntityWithHealth">Prototype/EntityWithHealth#dying_trigger_effect</a>, unknown if it works with other properties that use <a href="/Types/TriggerEffect" title="Types/TriggerEffect">Types/TriggerEffect</a>.
---@optional true
---@type DamageTypeFilters
CreateTrivialSmokeEffectItem.damage_type_filters = nil

---null
---@class StreamAttackParameters
local StreamAttackParameters = {}

---@default 0.0
---@optional true
---@type float
StreamAttackParameters.fluid_consumption = nil

---@default 0.0
---@optional true
---@type float
StreamAttackParameters.gun_barrel_length = nil

---@optional true
---@type CircularProjectileCreationSpecification
StreamAttackParameters.projectile_creation_parameters = nil

---@optional true
---@type vector|StreamAttackParametersGunCenterShift
StreamAttackParameters.gun_center_shift = nil

---Controls which fluids can fuel this stream attack and their potential damage bonuses.
---@optional true
---@type StreamAttackParametersFluid[]
StreamAttackParameters.fluids = nil

---@optional false
---@type float
StreamAttackParameters.range = nil

---Number of ticks in which it will be possible to shoot again. If < 1, multiple shots can be performed in one tick.
---@optional false
---@type float
StreamAttackParameters.cooldown = nil

---@default 0
---@optional true
---@type float
StreamAttackParameters.min_range = nil

---If this is &lt;= 0, it is set to 1. Arc from 0 to 1, so for example 0.25 is 90°. Used by the <a href="/Flamethrower_turret" title="Flamethrower turret">flamethrower turret</a> in the base game.
---@default 1
---@optional true
---@type float
StreamAttackParameters.turn_range = nil

---Used when searching for the nearest enemy, when this is &gt; 0, enemies that aren't burning are preferred over burning enemies. Definition of "burning" for this: Entity has sticker attached to it, and the sticker has a <a href="/Prototype/Sticker#spread_fire_entity" title="Prototype/Sticker">spread_fire_entity</a> set.
---@default 0
---@optional true
---@type float
StreamAttackParameters.fire_penalty = nil

---A higher penalty will discourage turrets from targeting units that would take longer to turn to face.
---@default 0
---@optional true
---@type float
StreamAttackParameters.rotate_penalty = nil

---A higher penalty will discourage turrets from targeting units with higher health. A negative penalty will encourage turrets to target units with higher health.
---@default 0
---@optional true
---@type float
StreamAttackParameters.health_penalty = nil

---If less than <code>range</code>, the entity will choose a random distance between <code>range</code> and <code>min_attack_distance</code> and attack from that distance.
---@optional true
---@type float
StreamAttackParameters.min_attack_distance = nil

---@default 1
---@optional true
---@type float
StreamAttackParameters.damage_modifier = nil

---Must be greater than or equal to 0.
---@default 1
---@optional true
---@type float
StreamAttackParameters.ammo_consumption_modifier = nil

---Must be between 0 and 1.
---@default 0
---@optional true
---@type float
StreamAttackParameters.cooldown_deviation = nil

---Number of ticks it takes for the weapon to actually shoot after the order for shooting has been made. This also allows to "adjust" the shooting animation to the effect of shooting.
---@default 0
---@optional true
---@type uint32
StreamAttackParameters.warmup = nil

---Presumably this should be set to the projectile speed to make the unit/turret lead their projectiles.
---@default 0
---@optional true
---@type float
StreamAttackParameters.lead_target_for_projectile_speed = nil

---@optional true
---@type float
StreamAttackParameters.movement_slow_down_cooldown = nil

---@default 1
---@optional true
---@type double
StreamAttackParameters.movement_slow_down_factor = nil

---Can be mandatory.
---@optional true
---@type AmmoType
StreamAttackParameters.ammo_type = nil

---@optional true
---@type LayeredSound
StreamAttackParameters.sound = nil

---@optional true
---@type RotatedAnimation
StreamAttackParameters.animation = nil

---@optional true
---@type CyclicSound
StreamAttackParameters.cyclic_sound = nil

---@default false
---@optional true
---@type bool
StreamAttackParameters.use_shooter_direction = nil

---Names of <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategories</a>.
---@optional true
---@type string[]
StreamAttackParameters.ammo_categories = nil

---The name of a <a href="/Prototype/AmmoCategory" title="Prototype/AmmoCategory">Prototype/AmmoCategory</a>. Mandatory if <code>ammo_type</code> and <code>ammo_category</code> is not given, otherwise ignored.
---@optional true
---@type string
StreamAttackParameters.ammo_category = nil

---Used by <a href="/Types/CapsuleAction" title="Types/CapsuleAction">Types/CapsuleAction</a>.
---@class ArtilleryRemoteCapsuleAction
local ArtilleryRemoteCapsuleAction = {}

---Name of <a href="/Prototype/ArtilleryFlare" title="Prototype/ArtilleryFlare">Prototype/ArtilleryFlare</a>.
---@optional false
---@type string
ArtilleryRemoteCapsuleAction.flare = nil

---@default true
---@optional false
---@type bool
ArtilleryRemoteCapsuleAction.play_sound_on_failure = nil

---A container that shares its inventory with containers with the same <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/LuaEntity.html#LuaEntity.link_id">link_id</a>, which can be set via the GUI. The link IDs are per prototype and force, so only containers with the same ID and same prototype name <i>and</i> same force will share inventories.
---@class LinkedContainer
local LinkedContainer = {}

---Must be > 0.
---@optional false
---@type ItemStackIndex
LinkedContainer.inventory_size = nil

---Players that can access the GUI to change the link ID. Possible options: "all", "none", "admins".
---@default all
---@optional true
---@type GuiMode
LinkedContainer.gui_mode = nil

---@optional true
---@type SpriteType
LinkedContainer.picture = nil

---@default false
---@optional true
---@type bool
LinkedContainer.scale_info_icons = nil

---@default true
---@optional true
---@type bool
LinkedContainer.alert_when_damaged = nil

---@optional true
---@type AttackReaction
LinkedContainer.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
LinkedContainer.corpse = nil

---@default true
---@optional true
---@type bool
LinkedContainer.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
LinkedContainer.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
LinkedContainer.dying_explosion = nil

---@optional true
---@type TriggerEffect
LinkedContainer.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
LinkedContainer.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
LinkedContainer.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
LinkedContainer.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
LinkedContainer.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
LinkedContainer.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
LinkedContainer.max_health = nil

---@default false
---@optional true
---@type bool
LinkedContainer.random_corpse_variation = nil

---@optional true
---@type SoundType
LinkedContainer.repair_sound = nil

---@default 1
---@optional true
---@type float
LinkedContainer.repair_speed_modifier = nil

---@optional true
---@type Resistances
LinkedContainer.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
LinkedContainer.additional_pastable_entities = nil

---@optional true
---@type float
LinkedContainer.alert_icon_scale = nil

---@optional true
---@type vector
LinkedContainer.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
LinkedContainer.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
LinkedContainer.autoplace = nil

---@default 0
---@optional true
---@type double
LinkedContainer.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
LinkedContainer.build_sound = nil

---@optional true
---@type SoundType
LinkedContainer.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
LinkedContainer.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
LinkedContainer.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
LinkedContainer.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
LinkedContainer.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
LinkedContainer.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
LinkedContainer.emissions_per_second = nil

---@optional true
---@type Color
LinkedContainer.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
LinkedContainer.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
LinkedContainer.flags = nil

---@optional true
---@type Color
LinkedContainer.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
LinkedContainer.hit_visualization_box = nil

---@optional true
---@type Color
LinkedContainer.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
LinkedContainer.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
LinkedContainer.minable = nil

---@optional true
---@type SoundType
LinkedContainer.mined_sound = nil

---@optional true
---@type SoundType
LinkedContainer.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
LinkedContainer.next_upgrade = nil

---@optional true
---@type SoundType
LinkedContainer.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
LinkedContainer.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
LinkedContainer.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
LinkedContainer.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
LinkedContainer.remove_decoratives = nil

---@optional true
---@type SoundType
LinkedContainer.rotated_sound = nil

---@default true
---@optional true
---@type bool
LinkedContainer.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
LinkedContainer.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
LinkedContainer.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
LinkedContainer.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
LinkedContainer.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
LinkedContainer.subgroup = nil

---@optional true
---@type uint32
LinkedContainer.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
LinkedContainer.tile_width = nil

---@optional true
---@type TriggerTargetMask
LinkedContainer.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
LinkedContainer.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
LinkedContainer.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
LinkedContainer.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
LinkedContainer.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
LinkedContainer.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
LinkedContainer.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
LinkedContainer.order = nil

---Path to the icon file.
---@optional true
---@type FileName
LinkedContainer.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
LinkedContainer.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
LinkedContainer.icon_size = nil

---@default 0
---@optional true
---@type uint8
LinkedContainer.icon_mipmaps = nil

---Used by <a href="/Types/SpiderLegSpecification" title="Types/SpiderLegSpecification">Types/SpiderLegSpecification</a> for <a href="/Prototype/SpiderVehicle" title="Prototype/SpiderVehicle">Prototype/SpiderVehicle</a>, also known as <a href="/Spidertron" title="Spidertron">spidertron</a>.
---@class SpiderLeg
local SpiderLeg = {}

---@optional false
---@type SpiderLegGraphicsSet
SpiderLeg.graphics_set = nil

---@optional false
---@type double
SpiderLeg.initial_movement_speed = nil

---@optional false
---@type double
SpiderLeg.movement_acceleration = nil

---@optional false
---@type double
SpiderLeg.movement_based_position_selection_distance = nil

---@optional false
---@type double
SpiderLeg.part_length = nil

---@default 1
---@optional true
---@type double
SpiderLeg.walking_sound_volume_modifier = nil

---@default true
---@optional true
---@type bool
SpiderLeg.alert_when_damaged = nil

---@optional true
---@type AttackReaction
SpiderLeg.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
SpiderLeg.corpse = nil

---@default true
---@optional true
---@type bool
SpiderLeg.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
SpiderLeg.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
SpiderLeg.dying_explosion = nil

---@optional true
---@type TriggerEffect
SpiderLeg.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
SpiderLeg.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
SpiderLeg.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
SpiderLeg.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
SpiderLeg.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
SpiderLeg.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
SpiderLeg.max_health = nil

---@default false
---@optional true
---@type bool
SpiderLeg.random_corpse_variation = nil

---@optional true
---@type SoundType
SpiderLeg.repair_sound = nil

---@default 1
---@optional true
---@type float
SpiderLeg.repair_speed_modifier = nil

---@optional true
---@type Resistances
SpiderLeg.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SpiderLeg.additional_pastable_entities = nil

---@optional true
---@type float
SpiderLeg.alert_icon_scale = nil

---@optional true
---@type vector
SpiderLeg.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SpiderLeg.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SpiderLeg.autoplace = nil

---@default 0
---@optional true
---@type double
SpiderLeg.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SpiderLeg.build_sound = nil

---@optional true
---@type SoundType
SpiderLeg.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SpiderLeg.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SpiderLeg.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SpiderLeg.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SpiderLeg.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SpiderLeg.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SpiderLeg.emissions_per_second = nil

---@optional true
---@type Color
SpiderLeg.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SpiderLeg.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SpiderLeg.flags = nil

---@optional true
---@type Color
SpiderLeg.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SpiderLeg.hit_visualization_box = nil

---@optional true
---@type Color
SpiderLeg.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SpiderLeg.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SpiderLeg.minable = nil

---@optional true
---@type SoundType
SpiderLeg.mined_sound = nil

---@optional true
---@type SoundType
SpiderLeg.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SpiderLeg.next_upgrade = nil

---@optional true
---@type SoundType
SpiderLeg.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SpiderLeg.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SpiderLeg.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SpiderLeg.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SpiderLeg.remove_decoratives = nil

---@optional true
---@type SoundType
SpiderLeg.rotated_sound = nil

---@default true
---@optional true
---@type bool
SpiderLeg.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SpiderLeg.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SpiderLeg.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SpiderLeg.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SpiderLeg.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SpiderLeg.subgroup = nil

---@optional true
---@type uint32
SpiderLeg.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SpiderLeg.tile_width = nil

---@optional true
---@type TriggerTargetMask
SpiderLeg.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SpiderLeg.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SpiderLeg.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SpiderLeg.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SpiderLeg.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SpiderLeg.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SpiderLeg.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SpiderLeg.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SpiderLeg.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SpiderLeg.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SpiderLeg.icon_size = nil

---@default 0
---@optional true
---@type uint8
SpiderLeg.icon_mipmaps = nil

---The <a href="/Spidertron" title="Spidertron">spidertron</a>.
---@class SpiderVehicle
local SpiderVehicle = {}

---@optional false
---@type bool
SpiderVehicle.automatic_weapon_cycling = nil

---Must be a burner energy source.
---@optional true
---@type EnergySource
SpiderVehicle.burner = nil

---Can also be a void energy source.
---@optional true
---@type EnergySource
SpiderVehicle.energy_source = nil

---This is applied whenever the spider shoots (manual and automatic targeting), <code>automatic_weapon_cycling</code> is true and the next gun in line (which is then selected) has ammo.<br>When all of the above is the case, the chain_shooting_cooldown_modifier is a multiplier on the remaining shooting cooldown: <code>cooldown = (remaining_cooldown × chain_shooting_cooldown_modifier)</code>. chain_shooting_cooldown_modifier is intended to be in the range of 0 to 1. This means that setting chain_shooting_cooldown_modifier to 0 reduces the remaining shooting cooldown to 0 while a chain_shooting_cooldown_modifier of 1 does not affect the remaining shooting cooldown at all.
---@optional true
---@type float
SpiderVehicle.chain_shooting_cooldown_modifier = nil

---@optional false
---@type uint32
SpiderVehicle.chunk_exploration_radius = nil

---@optional false
---@type SpiderVehicleGraphicsSet
SpiderVehicle.graphics_set = nil

---The height of the spider affects the shooting height and the drawing of the graphics and lights.
---@optional false
---@type float
SpiderVehicle.height = nil

---@optional false
---@type ItemStackIndex
SpiderVehicle.inventory_size = nil

---@optional false
---@type Energy
SpiderVehicle.movement_energy_consumption = nil

---@optional false
---@type SpiderEnginePrototype
SpiderVehicle.spider_engine = nil

---The guns this spider vehicle uses.
---@optional true
---@type string[]
SpiderVehicle.guns = nil

---The orientation of the torso of the spider affects the shooting direction and the drawing of the graphics and lights.
---@default 1
---@optional true
---@type float
SpiderVehicle.torso_rotation_speed = nil

---@optional true
---@type double
SpiderVehicle.braking_force = nil

---@optional true
---@type Energy
SpiderVehicle.braking_power = nil

---The (movement) energy used per hit point (1 hit point = 1 health damage) taken and dealt for this vehicle during collisions. The smaller the number, the more damage this vehicle and the rammed entity take during collisions: <code>damage = energy / energy_per_hit_point</code>.
---@optional false
---@type double
SpiderVehicle.energy_per_hit_point = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
SpiderVehicle.friction = nil

---Two different ways to set friction force. At least one must exist. Must be positive.
---@optional true
---@type double
SpiderVehicle.friction_force = nil

---Must be positive. Weight of the entity used for physics calculation when car hits something.
---@optional false
---@type double
SpiderVehicle.weight = nil

---@optional true
---@type TriggerEffect
SpiderVehicle.crash_trigger = nil

---The name of the <a href="/Prototype/EquipmentGrid" title="Prototype/EquipmentGrid">equipment grid</a> this vehicle has.
---@optional true
---@type string
SpiderVehicle.equipment_grid = nil

---The sprite that represents this vehicle on the map/minimap.
---@optional true
---@type SpriteType
SpiderVehicle.minimap_representation = nil

---The sprite that represents this vehicle on the map/minimap when it is selected.
---@optional true
---@type SpriteType
SpiderVehicle.selected_minimap_representation = nil

---Must be positive. Sound is scaled by speed.
---@optional true
---@type double
SpiderVehicle.sound_minimum_speed = nil

---Must be positive. Sound is scaled by speed.
---@default 1.0
---@optional true
---@type double
SpiderVehicle.sound_scaling_ratio = nil

---@optional true
---@type TriggerEffect
SpiderVehicle.stop_trigger = nil

---@default 0.0
---@optional true
---@type double
SpiderVehicle.stop_trigger_speed = nil

---Must be in the [0, 1] interval.
---@default 1
---@optional true
---@type float
SpiderVehicle.terrain_friction_modifier = nil

---@default true
---@optional true
---@type bool
SpiderVehicle.alert_when_damaged = nil

---@optional true
---@type AttackReaction
SpiderVehicle.attack_reaction = nil

---Specifies the name(s) of the <a href="/Prototype/Corpse" title="Prototype/Corpse">Prototype/Corpse</a> entity to be used when this entity dies.
---@optional true
---@type string|strings[]
SpiderVehicle.corpse = nil

---@default true
---@optional true
---@type bool
SpiderVehicle.create_ghost_on_death = nil

---@optional true
---@type TriggerEffect
SpiderVehicle.damaged_trigger_effect = nil

---Either one <a href="/Types/ExplosionDefinition" title="Types/ExplosionDefinition">ExplosionDefinition</a> or an array of them. The entities that are spawned in place of this one when it dies.
---@optional true
---@type ExplosionDefinition|ExplosionDefinition[]
SpiderVehicle.dying_explosion = nil

---@optional true
---@type TriggerEffect
SpiderVehicle.dying_trigger_effect = nil

---The amount of health cured by tick naturally. Works only on active entities. (Todo explain)
---@default 0
---@optional true
---@type float
SpiderVehicle.healing_per_tick = nil

---Whether the resistances of this entity should be hidden in the entity tooltip.
---@default true
---@optional true
---@type bool
SpiderVehicle.hide_resistances = nil

---Sprite drawn on ground under the entity to make it feel more integrated into the ground.
---@optional true
---@type Sprite4Way
SpiderVehicle.integration_patch = nil

---@default lower-object
---@optional true
---@type RenderLayer
SpiderVehicle.integration_patch_render_layer = nil

---The loot is dropped on the ground when the entity is killed.
---@optional true
---@type Loot
SpiderVehicle.loot = nil

---The unit health can never go over the maximum. Default health of units on creation is set to max. Must be greater than 0.
---@default 10
---@optional true
---@type float
SpiderVehicle.max_health = nil

---@default false
---@optional true
---@type bool
SpiderVehicle.random_corpse_variation = nil

---@optional true
---@type SoundType
SpiderVehicle.repair_sound = nil

---@default 1
---@optional true
---@type float
SpiderVehicle.repair_speed_modifier = nil

---@optional true
---@type Resistances
SpiderVehicle.resistances = nil

---Entities this entity prototype can be pasted on to in addition to the standard supported types. This is used to allow copying between types that aren't compatible on the C++ code side, by allowing mods to receive the <a rel="nofollow" class="external text" href="https://lua-api.factorio.com/latest/events.html#on_entity_settings_pasted">on_entity_settings_pasted</a> event for the given entity and do the setting pasting via script.
---@optional true
---@type string[]
SpiderVehicle.additional_pastable_entities = nil

---@optional true
---@type float
SpiderVehicle.alert_icon_scale = nil

---@optional true
---@type vector
SpiderVehicle.alert_icon_shift = nil

---@default true
---@optional true
---@type bool
SpiderVehicle.allow_copy_paste = nil

---Used to specify the rules for placing this entity during map generation.
---@default nil
---@optional true
---@type AutoplaceSpecification
SpiderVehicle.autoplace = nil

---@default 0
---@optional true
---@type double
SpiderVehicle.build_base_evolution_requirement = nil

---@optional true
---@type SoundType
SpiderVehicle.build_sound = nil

---@optional true
---@type SoundType
SpiderVehicle.close_sound = nil

---<p>Specification of the entity collision boundaries.</p><p>Empty collision box is used for smoke, projectiles, particles, explosions etc.</p><p><div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="n">collision_box</span> <span class="o">=</span> <span class="p">{{</span><span class="o">-</span><span class="mf">0.4</span><span class="p">,</span> <span class="o">-</span><span class="mf">0.4</span><span class="p">},</span> <span class="p">{</span><span class="mf">0.4</span><span class="p">,</span> <span class="mf">0.4</span><span class="p">}}</span></pre></div></p><p>The {0,0} coordinate in the collision box will match the entity position.</p><p>It should be near the center of the collision box, to keep correct entity drawing order. It must include the {0,0} coordinate.</p><p>Note, that for buildings, it is customary to leave 0.1 wide border between the edge of the tile and the edge of the building, this lets the player move between the building and electric poles/inserters etc.</p>
---@optional true
---@type BoundingBox
SpiderVehicle.collision_box = nil

---Two entities can collide only if they share a layer from the collision mask.
---@optional true
---@type CollisionMask
SpiderVehicle.collision_mask = nil

---The effect/trigger that happens when the entity is placed.
---@optional true
---@type Trigger
SpiderVehicle.created_effect = nil

---The smoke that is shown when the entity is placed. Default is using the "smoke-building" smoke.
---@default smoke-building
---@optional true
---@type CreateTrivialSmokeEffectItem
SpiderVehicle.created_smoke = nil

---<p>Specification of space needed to see the whole entity.</p><p>This is used to calculate the correct zoom and positioning in the entity info gui.</p>
---@optional true
---@type BoundingBox
SpiderVehicle.drawing_box = nil

---Amount of emissions created (positive number) or cleaned (negative number) every second by the entity. This is passive, and it is independent concept of the emissions of machines, these are created actively depending on the power consumption. Currently used just for trees.
---@default 0
---@optional true
---@type double
SpiderVehicle.emissions_per_second = nil

---@optional true
---@type Color
SpiderVehicle.enemy_map_color = nil

---<p>This allows you to replace an entity that's already placed, with a different one in your inventory. For example, replacing a burner inserter with a fast inserter.</p><p>This is simply a string, so any string can be used here. The entity that should be replaced simply has to use the same string here.</p>
---@optional true
---@type string
SpiderVehicle.fast_replaceable_group = nil

---@optional true
---@type EntityPrototypeFlags
SpiderVehicle.flags = nil

---@optional true
---@type Color
SpiderVehicle.friendly_map_color = nil

---Where beams should hit the entity. Useful if the bounding box only covers part of the entity (e.g. feet of the character) and beams only hitting there would look weird.
---@optional true
---@type BoundingBox
SpiderVehicle.hit_visualization_box = nil

---@optional true
---@type Color
SpiderVehicle.map_color = nil

---Used instead of the collision box during map generation. Allows space entities differently during map generation, for example if the box is bigger, the entities will be placed farther apart.
---@optional true
---@type BoundingBox
SpiderVehicle.map_generator_bounding_box = nil

---@optional true
---@type MinableProperties
SpiderVehicle.minable = nil

---@optional true
---@type SoundType
SpiderVehicle.mined_sound = nil

---@optional true
---@type SoundType
SpiderVehicle.mining_sound = nil

---Name of the entity that will be automatically selected as the upgrade of this entity when using the <a href="/Upgrade_planner" title="Upgrade planner">upgrade planner</a> without configuration.</p><p>This entity may not have 'not-upgradable' flag set and must be minable. This entity mining result must not contain item product with "hidden" flag set. Mining results with no item products are allowed. The entity may not be a <a href="/Prototype/RollingStock" title="Prototype/RollingStock">Prototype/RollingStock</a>.<br>The upgrade target entity needs to have the same bounding box, collision mask, and fast replaceable group as this entity. The upgrade target entity must have least 1 item that builds it that isn't hidden.</p>
---@optional true
---@type string
SpiderVehicle.next_upgrade = nil

---@optional true
---@type SoundType
SpiderVehicle.open_sound = nil

---<p>Item that when placed creates this entity. Determines which item is picked when "Q" (smart pipette) is used on the entity, determines which item is needed in a blueprint of this entity.</p><p>The item count specified here can't be larger than the stack size of that item.</p>
---@optional true
---@type ItemToPlace|ItemToPlace[]
SpiderVehicle.placeable_by = nil

---@optional true
---@type RadiusVisualisationSpecification
SpiderVehicle.radius_visualisation_specification = nil

---The entity that remains when this one is mined, deconstructed or fast-replaced. The entity wont actually be spawned if it would collide with the entity that is in the process of being mined.
---@optional true
---@type string|string[]
SpiderVehicle.remains_when_mined = nil

---Whether this entity should remove decoratives that collide with it when this entity is built.
---@default automatic
---@optional true
---@type EntityRemoveDecoratives
SpiderVehicle.remove_decoratives = nil

---@optional true
---@type SoundType
SpiderVehicle.rotated_sound = nil

---@default true
---@optional true
---@type bool
SpiderVehicle.selectable_in_game = nil

---<p>Specification of the entity selection area. When empty the entity will have no selection area (and thus is not selectable).</p><p>The selection box is usually a little bit bigger than the collision box, for tilable entities (like buildings) it should match the tile size of the building.</p>
---@optional true
---@type BoundingBox
SpiderVehicle.selection_box = nil

---The entity with the higher number is selectable before the entity with the lower number.
---@default 50
---@optional true
---@type uint8
SpiderVehicle.selection_priority = nil

---The cursor size used when shooting at this entity.
---@optional true
---@type double
SpiderVehicle.shooting_cursor_size = nil

---Used to set the area of the entity that can have stickers on it, currently only used for units to specify the area where the green slow down stickers can appear. It is optional and the collision box is used when not specified.
---@optional true
---@type BoundingBox
SpiderVehicle.sticker_box = nil

---The name of the subgroup this entity should be sorted into in the map editor building selection.
---@optional true
---@type string
SpiderVehicle.subgroup = nil

---@optional true
---@type uint32
SpiderVehicle.tile_height = nil

---Used to determine how the center of the entity should be positioned when building (unless the offgrid <a href="/Types/EntityPrototypeFlags" title="Types/EntityPrototypeFlags">flag</a> is specified). When the tile width is odd, the center will be in the center of the tile, when it is even, the center is on the tile transition.
---@optional true
---@type uint32
SpiderVehicle.tile_width = nil

---@optional true
---@type TriggerTargetMask
SpiderVehicle.trigger_target_mask = nil

---When playing this sound, the volume is scaled by the speed of the vehicle when colliding with this entity.
---@optional true
---@type SoundType
SpiderVehicle.vehicle_impact_sound = nil

---May also be defined inside <code>graphics_set</code> instead of directly in the entity prototype. This is useful for entities that use the a <code>graphics_set</code> property to define their graphics, becausen then all graphics can be in defined one place.
---@optional true
---@type WaterReflectionDefinition
SpiderVehicle.water_reflection = nil

---Will also work on entities that don't actually do work.
---@optional true
---@type WorkingSound
SpiderVehicle.working_sound = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SpiderVehicle.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SpiderVehicle.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SpiderVehicle.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SpiderVehicle.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SpiderVehicle.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SpiderVehicle.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SpiderVehicle.icon_size = nil

---@default 0
---@optional true
---@type uint8
SpiderVehicle.icon_mipmaps = nil

---The <a href="/Spidertron_remote" title="Spidertron remote">spidertron remote</a>. This remote can only be connected to entities of type <a href="/Prototype/SpiderVehicle" title="Prototype/SpiderVehicle">Prototype/SpiderVehicle</a>.
---@class SpidertronRemote
local SpidertronRemote = {}

---@optional false
---@type bool
SpidertronRemote.automatic_weapon_cycling = nil

---The property for the file path is <code>icon_color_indicator_masks</code> instead of icon.
---@optional false
---@type IconData[]
SpidertronRemote.icon_color_indicator_masks = nil

---@optional false
---@type IconData
SpidertronRemote.icon_color_indicator_mask = nil

---@optional false
---@type SpriteSizeType
SpidertronRemote.icon_size = nil

---Count of items of the same name that can be stored in one inventory slot. Must be 1 when <code>stackable</code> is false.
---@optional false
---@type ItemCountType
SpidertronRemote.stack_size = nil

---The item that is the result when this item gets burned as fuel.
---@optional true
---@type string
SpidertronRemote.burnt_result = nil

---@optional true
---@type SoundType
SpidertronRemote.close_sound = nil

---@optional true
---@type IconData[]
SpidertronRemote.dark_background_icons = nil

---@optional true
---@type FileName
SpidertronRemote.dark_background_icon = nil

---@optional true
---@type ItemCountType
SpidertronRemote.default_request_amount = nil

---Specifies some properties of the item.
---@optional true
---@type ItemPrototypeFlags
SpidertronRemote.flags = nil

---@default 1.0
---@optional true
---@type double
SpidertronRemote.fuel_acceleration_multiplier = nil

---Must exist when a fuel_value is defined. Name of one of the <a href="/Prototype/FuelCategory" title="Prototype/FuelCategory">fuel categories</a>.
---@optional true
---@type string
SpidertronRemote.fuel_category = nil

---@default 1.0
---@optional true
---@type double
SpidertronRemote.fuel_emissions_multiplier = nil

---Colors the glow of the burner energy source when this fuel is burned.
---@optional true
---@type Color
SpidertronRemote.fuel_glow_color = nil

---@default 1.0
---@optional true
---@type double
SpidertronRemote.fuel_top_speed_multiplier = nil

---Mandatory when fuel_acceleration_multiplier, fuel_top_speed_multiplier, fuel_emissions_multiplier, or fuel_glow_color are used. Amount of energy it gives when used as fuel.
---@default 0J
---@optional true
---@type Energy
SpidertronRemote.fuel_value = nil

---@optional true
---@type SoundType
SpidertronRemote.open_sound = nil

---Used to give the item multiple different icons so that they look less uniform on belts etc. For inventory icons and similar, <code>icon/icons</code> will be used. Maximum number of variations is 16.
---@optional true
---@type SpriteVariations
SpidertronRemote.pictures = nil

---@optional true
---@type PlaceAsTile
SpidertronRemote.place_as_tile = nil

---Name of prototype/Entity that can be built using this item. The localised name of the entity will be used as the in-game item name. This behavior can be overwritten by specifying <code>localised_name</code> on this item, it will be used instead.
---@optional true
---@type string
SpidertronRemote.place_result = nil

---@optional true
---@type string
SpidertronRemote.placed_as_equipment_result = nil

---@optional true
---@type ItemProductPrototype
SpidertronRemote.rocket_launch_product = nil

---@optional true
---@type ItemProductPrototype[]
SpidertronRemote.rocket_launch_products = nil

---Empty text of subgroup is not allowed. (You can ommit the definition to get the default "other").
---@default other
---@optional true
---@type string
SpidertronRemote.subgroup = nil

---The number of items needed to connect 2 entities with this as wire. In the base game, <a href="/Green_wire" title="Green wire">green wire</a>, <a href="/Red_wire" title="Red wire">red wire</a> and <a href="/Copper_cable" title="Copper cable">copper cable</a> have this set to 1.
---@default 0
---@optional true
---@type ItemCountType
SpidertronRemote.wire_count = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
SpidertronRemote.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
SpidertronRemote.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
SpidertronRemote.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
SpidertronRemote.order = nil

---Path to the icon file.
---@optional true
---@type FileName
SpidertronRemote.icon = nil

---The rendering order of the individual icons follows the table (array) order: Later added icons (higher index) get drawn on top of previously added icons (lower index).
---@optional true
---@type IconData[]
SpidertronRemote.icons = nil

---Mandatory if <code>icon_size</code> is not specified inside all instances of <a href="/Types/IconData" title="Types/IconData">Types/IconData</a> inside <code>icons</code>. The size of the square icon, in pixels, e.g. 32 for a 32px by 32px icon.
---@optional true
---@type FileName
SpidertronRemote.icon_size = nil

---@default 0
---@optional true
---@type uint8
SpidertronRemote.icon_mipmaps = nil

---null
---@class DrawAsAddition
local DrawAsAddition = {}

---<p>Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_glow</code> takes precedence over <code>draw_as_light</code>.</p><p>Draws first as a normal sprite, and again as a light layer.<sup><a rel="nofollow" class="external autonumber" href="https://forums.factorio.com/91682">[1]</a></sup></p>
---@default false
---@optional true
---@type bool
DrawAsAddition.draw_as_glow = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true.
---@default false
---@optional true
---@type bool
DrawAsAddition.draw_as_light = nil

---Only one of <code>draw_as_shadow</code>, <code>draw_as_glow</code> and <code>draw_as_light</code> can be true. <code>draw_as_shadow</code> takes precedence over <code>draw_as_glow</code> and <code>draw_as_light</code>.
---@default false
---@optional true
---@type bool
DrawAsAddition.draw_as_shadow = nil

---A tips and tricks entry.
---@class TipsAndTricksItem
local TipsAndTricksItem = {}

---Name of a <a href="/Prototype/TipsAndTricksItemCategory" title="Prototype/TipsAndTricksItemCategory">Prototype/TipsAndTricksItemCategory</a>, used for the sorting of this tips and tricks entry. Tips and trick entries are sorted first by category and then by their <code>order</code> within that category.
---@optional true
---@type string
TipsAndTricksItem.category = nil

---An array of names of other tips and tricks items. This tips and tricks entry is only shown to the player once they have marked all dependencies as read.
---@optional true
---@type string[]
TipsAndTricksItem.dependencies = nil

---@optional true
---@type FileName
TipsAndTricksItem.image = nil

---The tips and tricks entry is indented by <code>indent</code>×6 spaces.
---@default 0
---@optional true
---@type uint8
TipsAndTricksItem.indent = nil

---Whether the tip title on the left in the tips and tricks GUI should use the "title_tip_item" style (semi bold font).
---@default false
---@optional true
---@type bool
TipsAndTricksItem.is_title = nil

---@optional true
---@type SimulationDefinition
TipsAndTricksItem.simulation = nil

---Condition for never showing the tip notification to the player.
---@optional true
---@type TipTrigger
TipsAndTricksItem.skip_trigger = nil

---@default locked
---@optional true
---@type string
TipsAndTricksItem.starting_status = nil

---String to add in front of the tips and trick entries name. Can be anything, the base game tends to use <a href="/Rich_text" title="Rich text">rich text</a> tags for items, e.g. <code>[item=wooden-chest]</code> here.
---@optional true
---@type string
TipsAndTricksItem.tag = nil

---Condition for when the tip notification should be shown to the player.
---@optional true
---@type TipTrigger
TipsAndTricksItem.trigger = nil

---Name of a <a href="/Prototype/Tutorial" title="Prototype/Tutorial">Prototype/Tutorial</a>.
---@optional true
---@type string
TipsAndTricksItem.tutorial = nil

---<p>Unique textual identification of the prototype.</p><p>For a list of all names used in vanilla, see <a href="/Data.raw" title="Data.raw">data.raw</a>.</p><p>May not contain <code>.</code>, may not exceed a length of 200 characters.</p>
---@optional false
---@type string
TipsAndTricksItem.name = nil

---Overwrites the description set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. The description is usually shown in the tooltip of the prototype.
---@optional true
---@type LocalisedString
TipsAndTricksItem.localised_description = nil

---Overwrites the name set in the <a href="/Tutorial:Localisation#Localising_simple_strings" title="Tutorial:Localisation">locale file</a>. Can be used to easily set a procedurally-generated name because the LocalisedString format allows to insert parameters into the name directly from the Lua script.
---@optional true
---@type LocalisedString
TipsAndTricksItem.localised_name = nil

---<p>Used to order items in inventory, recipes and GUI's.</p><p>May not exceed a length of 200 characters.</p>
---@optional true
---@type Order
TipsAndTricksItem.order = nil

---@alias TipsAndTricksItemStartingStatus string

---A <a href="/Prototype/TipsAndTricksItem" title="Prototype/TipsAndTricksItem">Prototype/TipsAndTricksItem</a> category, used for sorting of tips and tricks entries: Tips and trick entries are sorted first by category and then by their order within that category.
---@class TipsAndTricksItemCategory
local TipsAndTricksItemCategory = {}

---@optional false
---@type string
TipsAndTricksItemCategory.name = nil

---Tips and trick categories are sorted by <code>order</code>, and then the tips and tips entries are sorted by their own order within those categories.
---@optional false
---@type Order
TipsAndTricksItemCategory.order = nil

---@alias CursorBoxType string

---Used by <a href="/Prototype/TipsAndTricksItem" title="Prototype/TipsAndTricksItem">Prototype/TipsAndTricksItem</a> and by main menu simulations (<a href="/Prototype/UtilityConstants" title="Prototype/UtilityConstants">Prototype/UtilityConstants</a>).
---@class SimulationDefinition
local SimulationDefinition = {}

---The save file that is used for this simulation. If not given and <code>generate_map</code> is true, a map gets generated by the game. 
---@optional true
---@type FileName
SimulationDefinition.save = nil

---This code is run as a (silent) console command inside the simulation when it is first initialized. Since this is run as a console command, the restrictions of console commands apply, e.g. <code>require</code> is not available<sup><a rel="nofollow" class="external autonumber" href="https://lua-api.factorio.com/latest/Libraries.html">[1]</a></sup>.
---@optional true
---@type FileName
SimulationDefinition.init_file = nil

---<p>Only loaded if <code>init_file</code> is not present.</p><p>This code is run as a (silent) console command inside the simulation when it is first initialized. Since this is run as a console command, the restrictions of console commands apply, e.g. <code>require</code> is not available<sup><a rel="nofollow" class="external autonumber" href="https://lua-api.factorio.com/latest/Libraries.html">[2]</a></sup>.</p>
---@optional true
---@type string
SimulationDefinition.init = nil

---This code is run as a (silent) console command inside the simulation every time the simulation is updated. Since this is run as a console command, the restrictions of console commands apply, e.g. <code>require</code> is not available<sup><a rel="nofollow" class="external autonumber" href="https://lua-api.factorio.com/latest/Libraries.html">[3]</a></sup>.
---@optional true
---@type FileName
SimulationDefinition.update_file = nil

---<p>Only loaded if <code>update_file</code> is not present.</p><p>This code is run as a (silent) console command inside the simulation every time the simulation is updated. Since this is run as a console command, the restrictions of console commands apply, e.g. <code>require</code> is not available<sup><a rel="nofollow" class="external autonumber" href="https://lua-api.factorio.com/latest/Libraries.html">[4]</a></sup>.</p>
---@optional true
---@type string
SimulationDefinition.update = nil

---Amount of ticks that this simulation should run for before the simulation is shown to the player. These updates happen after init/init_file has been run and at the highest possible rate (> 60 UPS).
---@default 0
---@optional true
---@type uint32
SimulationDefinition.init_update_count = nil

---How long this simulation takes. In the main menu simulations, another simulation will start after this simulation ends.
---@default 0
---@optional true
---@type uint32
SimulationDefinition.length = nil

---If <code>save</code> is not given and this is true, a map gets generated by the game for use in the simulation.
---@default false
---@optional true
---@type bool
SimulationDefinition.generate_map = nil

---If this is true, the map of the simulation is set to be a lab-tile checkerboard in the area of {{-20, -15},{20, 15}} when the scenario is first initialized (before init/init_file run).
---@default true
---@optional true
---@type bool
SimulationDefinition.checkboard = nil

---Multiplier for the simulation volume set by the player in the sound settings.
---@optional true
---@type float
SimulationDefinition.volume_modifier = nil

---Used by <a href="/Prototype/SpiderVehicle" title="Prototype/SpiderVehicle">Prototype/SpiderVehicle</a>.
---@class SpiderEnginePrototype
local SpiderEnginePrototype = {}

---The name of the simple entity with force prototype that gets enemies interested in attacking the spider vehicle when nobody is in it.
---@optional false
---@type string
SpiderEnginePrototype.military_target = nil

---@optional false
---@type SpiderLegSpecification|SpiderLegSpecification[]
SpiderEnginePrototype.legs = nil

---Used to specify the graphics for <a href="/Prototype/SpiderLeg" title="Prototype/SpiderLeg">Prototype/SpiderLeg</a>.
---@class SpiderLegGraphicsSet
local SpiderLegGraphicsSet = {}

---@default 0
---@optional true
---@type float
SpiderLegGraphicsSet.joint_turn_offset = nil

---@optional true
---@type SpriteType
SpiderLegGraphicsSet.joint = nil

---@optional true
---@type SpriteType
SpiderLegGraphicsSet.joint_shadow = nil

---@optional true
---@type SpiderLegPart
SpiderLegGraphicsSet.upper_part = nil

---@optional true
---@type SpiderLegPart
SpiderLegGraphicsSet.lower_part = nil

---@optional true
---@type SpiderLegPart
SpiderLegGraphicsSet.upper_part_shadow = nil

---@optional true
---@type SpiderLegPart
SpiderLegGraphicsSet.lower_part_shadow = nil

---@optional true
---@type SpiderLegPart
SpiderLegGraphicsSet.upper_part_water_reflection = nil

---@optional true
---@type SpiderLegPart
SpiderLegGraphicsSet.lower_part_water_reflection = nil

---Used to specify the graphics for <a href="/Prototype/SpiderVehicle" title="Prototype/SpiderVehicle">Prototype/SpiderVehicle</a>.
---@class SpiderVehicleGraphicsSet
local SpiderVehicleGraphicsSet = {}

---@optional true
---@type RotatedAnimation
SpiderVehicleGraphicsSet.base_animation = nil

---@optional true
---@type RotatedAnimation
SpiderVehicleGraphicsSet.shadow_base_animation = nil

---@optional true
---@type RotatedAnimation
SpiderVehicleGraphicsSet.animation = nil

---@optional true
---@type RotatedAnimation
SpiderVehicleGraphicsSet.shadow_animation = nil

---@default higher-object-under
---@optional true
---@type RenderLayer
SpiderVehicleGraphicsSet.base_render_layer = nil

---@default wires-above
---@optional true
---@type RenderLayer
SpiderVehicleGraphicsSet.render_layer = nil

---@default object
---@optional true
---@type RenderLayer
SpiderVehicleGraphicsSet.autopilot_destination_visualisation_render_layer = nil

---@optional true
---@type LightDefinition
SpiderVehicleGraphicsSet.light = nil

---@optional true
---@type LightDefinition
SpiderVehicleGraphicsSet.eye_light = nil

---@optional true
---@type AnimationType
SpiderVehicleGraphicsSet.autopilot_destination_on_map_visualisation = nil

---@optional true
---@type AnimationType
SpiderVehicleGraphicsSet.autopilot_destination_visualisation = nil

---@optional true
---@type vector[][]
SpiderVehicleGraphicsSet.light_positions = nil

---null
---@class OrTipTrigger
local OrTipTrigger = {}

---Array of other tip triggers, if at least one of them is fulfilled, this tip trigger is considered fulfilled.
---@optional false
---@type TipTrigger[]
OrTipTrigger.triggers = nil

---null
---@class AndTipTrigger
local AndTipTrigger = {}

---Array of other tip triggers, if all of them are fulfilled, this tip trigger is considered fulfilled.
---@optional false
---@type TipTrigger[]
AndTipTrigger.triggers = nil

---null
---@class SequenceTipTrigger
local SequenceTipTrigger = {}

---Array of other tip triggers.
---@optional false
---@type TipTrigger[]
SequenceTipTrigger.triggers = nil

---This tip trigger is considered fulfilled when the dependencies of the <a href="/Prototype/TipsAndTricksItem" title="Prototype/TipsAndTricksItem">Prototype/TipsAndTricksItem</a> are fulfilled.
---@class DependenciesMetTipTrigger
local DependenciesMetTipTrigger = {}

---null
---@class TimeElapsedTipTrigger
local TimeElapsedTipTrigger = {}

---@optional false
---@type uint32
TimeElapsedTipTrigger.ticks = nil

---null
---@class ResearchTechnologyTipTrigger
local ResearchTechnologyTipTrigger = {}

---Name of a <a href="/Prototype/Technology" title="Prototype/Technology">Prototype/Technology</a>.
---@optional false
---@type string
ResearchTechnologyTipTrigger.technology = nil

---null
---@class UnlockedRecipeTipTrigger
local UnlockedRecipeTipTrigger = {}

---Name of a <a href="/Prototype/Recipe" title="Prototype/Recipe">Prototype/Recipe</a>.
---@optional false
---@type string
UnlockedRecipeTipTrigger.recipe = nil

---null
---@class CraftItemTipTrigger
local CraftItemTipTrigger = {}

---@default 0
---@optional true
---@type uint32
CraftItemTipTrigger.count = nil

---Name of a <a href="/Prototype/Item" title="Prototype/Item">Prototype/Item</a>.
---@optional true
---@type string
CraftItemTipTrigger.item = nil

---Can only be used with <code>event_type</code> "crafting-finished". 
---@default false
---@optional true
---@type bool
CraftItemTipTrigger.consecutive = nil

---@optional false
---@type CraftItemTipTriggerEventType
CraftItemTipTrigger.event_type = nil

---@alias CraftItemTipTriggerEventType string

---null
---@class BuildEntityTipTrigger
local BuildEntityTipTrigger = {}

---@default 1
---@optional true
---@type uint32
BuildEntityTipTrigger.count = nil

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional true
---@type string
BuildEntityTipTrigger.entity = nil

---@default false
---@optional true
---@type bool
BuildEntityTipTrigger.match_type_only = nil

---@default false
---@optional true
---@type bool
BuildEntityTipTrigger.build_by_dragging = nil

---null
---@class ManualTransferTipTrigger
local ManualTransferTipTrigger = {}

---@default 0
---@optional true
---@type uint32
ManualTransferTipTrigger.count = nil

---null
---@class StackTransferTipTrigger
local StackTransferTipTrigger = {}

---@default 0
---@optional true
---@type uint32
StackTransferTipTrigger.count = nil

---@optional true
---@type StackTransferTipTriggerTransfer
StackTransferTipTrigger.transfer = nil

---@alias StackTransferTipTriggerTransfer string

---null
---@class EntityTransferTipTrigger
local EntityTransferTipTrigger = {}

---@default 0
---@optional true
---@type uint32
EntityTransferTipTrigger.count = nil

---@optional true
---@type EntityTransferTipTriggerTransfer
EntityTransferTipTrigger.transfer = nil

---@alias EntityTransferTipTriggerTransfer string

---null
---@class SetRecipeTipTrigger
local SetRecipeTipTrigger = {}

---@default 0
---@optional true
---@type uint32
SetRecipeTipTrigger.count = nil

---Name of a <a href="/Prototype/Recipe" title="Prototype/Recipe">Prototype/Recipe</a>.
---@optional true
---@type string
SetRecipeTipTrigger.recipe = nil

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional true
---@type string
SetRecipeTipTrigger.machine = nil

---@default false
---@optional true
---@type bool
SetRecipeTipTrigger.consecutive = nil

---Default: any (= it does not matter)
---@optional true
---@type bool
SetRecipeTipTrigger.uses_fluid = nil

---null
---@class LimitChestTipTrigger
local LimitChestTipTrigger = {}

---@default 0
---@optional true
---@type uint32
LimitChestTipTrigger.count = nil

---null
---@class UsePipetteTipTrigger
local UsePipetteTipTrigger = {}

---@default 0
---@optional true
---@type uint32
UsePipetteTipTrigger.count = nil

---null
---@class SetLogisticRequestTipTrigger
local SetLogisticRequestTipTrigger = {}

---@default 0
---@optional true
---@type uint32
SetLogisticRequestTipTrigger.count = nil

---@default false
---@optional true
---@type bool
SetLogisticRequestTipTrigger.logistic_chest_only = nil

---null
---@class UseConfirmTipTrigger
local UseConfirmTipTrigger = {}

---@default 0
---@optional true
---@type uint32
UseConfirmTipTrigger.count = nil

---null
---@class LowPowerTipTrigger
local LowPowerTipTrigger = {}

---@default 0
---@optional true
---@type uint32
LowPowerTipTrigger.count = nil

---null
---@class PasteEntitySettingsTipTrigger
local PasteEntitySettingsTipTrigger = {}

---@default 0
---@optional true
---@type uint32
PasteEntitySettingsTipTrigger.count = nil

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional true
---@type string
PasteEntitySettingsTipTrigger.source = nil

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional true
---@type string
PasteEntitySettingsTipTrigger.target = nil

---@default false
---@optional true
---@type bool
PasteEntitySettingsTipTrigger.match_type_only = nil

---null
---@class FastReplaceTipTrigger
local FastReplaceTipTrigger = {}

---@default 0
---@optional true
---@type uint32
FastReplaceTipTrigger.count = nil

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional true
---@type string
FastReplaceTipTrigger.source = nil

---Name of a <a href="/Prototype/Entity" title="Prototype/Entity">Prototype/Entity</a>.
---@optional true
---@type string
FastReplaceTipTrigger.target = nil

---@default false
---@optional true
---@type bool
FastReplaceTipTrigger.match_type_only = nil

---null
---@class GroupAttackTipTrigger
local GroupAttackTipTrigger = {}

---@default 0
---@optional true
---@type uint32
GroupAttackTipTrigger.count = nil

---Used by <a href="/Types/SpiderEnginePrototype" title="Types/SpiderEnginePrototype">Types/SpiderEnginePrototype</a> for <a href="/Prototype/SpiderVehicle" title="Prototype/SpiderVehicle">Prototype/SpiderVehicle</a>.
---@class SpiderLegSpecification
local SpiderLegSpecification = {}

---Name of a <a href="/Prototype/SpiderLeg" title="Prototype/SpiderLeg">Prototype/SpiderLeg</a>.

---@optional false
---@type string
SpiderLegSpecification.leg = nil

---@optional false
---@type vector
SpiderLegSpecification.mount_position = nil

---@optional false
---@type vector
SpiderLegSpecification.ground_position = nil

---The 1-based indices of the legs that should block this leg's movement.
---@optional false
---@type uint32[]
SpiderLegSpecification.blocking_legs = nil

---@optional true
---@type TriggerEffect
SpiderLegSpecification.leg_hit_the_ground_trigger = nil

---Used by <a href="/Types/SpiderLegGraphicsSet" title="Types/SpiderLegGraphicsSet">Types/SpiderLegGraphicsSet</a> for <a href="/Prototype/SpiderLeg" title="Prototype/SpiderLeg">Prototype/SpiderLeg</a>.
---@class SpiderLegPart
local SpiderLegPart = {}

---@optional true
---@type SpriteType
SpiderLegPart.top_end = nil

---@optional true
---@type SpriteType
SpiderLegPart.middle = nil

---@optional true
---@type SpriteType
SpiderLegPart.bottom_end = nil

---@default 0
---@optional true
---@type float
SpiderLegPart.middle_offset_from_top = nil

---@default 0
---@optional true
---@type float
SpiderLegPart.middle_offset_from_bottom = nil

---@default 0
---@optional true
---@type float
SpiderLegPart.top_end_length = nil

---@default 0
---@optional true
---@type float
SpiderLegPart.bottom_end_length = nil

